DECS unixcomplink CONTEXT VOID USE putstrings, osinterface, basics,
                                   messageproc :

configinfo A68CONFIG "$Id: unixcomplink.a68,v 1.3 2002-06-06 13:55:55 sian Exp $";


COMMENT 
    ************************************************************************
    This Program is the property of the Secretary of State for Defence
    (United Kingdom) acting through the Defence Research Agency (DRA). Use,
    reproduction, production of amended versions and/or transfer of this
    Program is permitted provided that:

  (a)  this legend be preserved on any such reproduction and amended version,
  (b)  any amended version of this Program be clearly marked to show the
       nature of the amendment and of the name of the amending organisation,
  and
  (c)  any recipient  of such reproduction or amended version accept the
       conditions set out in this legend.

                         Crown Copyright, (c)   1984

                             All rights reserved.

    The Secretary of State for Defence (United Kingdom) acting through his
    Defence Research Agency (DRA) gives no warranty that any element of the
    Software is suitable for any purpose and he shall not be liable for any
    loss or damage including loss or damage resulting in injury or death
    howsoever caused which results from the use of the Software, or any
    developments adaptions modifications translations and enhancements
    thereof.

    The original authors may be contacted via email on ella@dra.hmg.gb or by
    writing to ELLA Office, DRA, St Andrews Road, Malvern, Worcs WR14 3PS, UK.
    ************************************************************************

31:08:94  33.001  ELLA  NewConFig Entered in new config system previous version
                                  number 32.1 
02:09:94  33.001  DJS    
08:09:94  33.002  DJS   MMCR001   
29:03:95  34.003  ELLA  Modcprght Change copyright header
15:01:00  34.004  SL    Phoenix Engineering: chgd prompts for Linux
COMMENT

*4 {  UNIX version
PROC obey_osaction = (REF VECTOR[ ]CHAR command,
                      MESSAGEPROC msg )BOOL:
BEGIN
INT status = execute_os_command( command, msg );

    status = 0
END;
*4 }
*5 {  VMS version
PROC obey_osaction = (REF VECTOR[ ]CHAR command,
                      MESSAGEPROC msg )BOOL:
BEGIN
#Phoenix Engineering (SL) changed the string
    put( screen, ( "Obey UNIX command :- ", command, newline ));#
    put( screen, ( "Obey Linux command :- ", command, newline ));
    TRUE
END;
*5 }

PROC (VECTOR[ ]CHAR )VOID insert_oscommand_item;
PROC (MESSAGEPROC )BOOL obey_oscommand;
#Phoenix Engineering (SL) changed the string
VECTOR[ 4 ]CHAR unix := "UNIX";#
VECTOR[ 5 ]CHAR unix := "Linux";
VECTOR[ 3 ]CHAR std_star_chars := "259";
VECTOR[ 4 ]CHAR std_edit_command := "show";
VECTOR[ 6 ]CHAR std_exe_dir := "./bin/";
VECTOR[ 7 ]CHAR std_heap_size := "2000000";
PROC initialise_complink =
                  (PROC (VECTOR[ ]CHAR )VOID insert_oscommand_item_proc,
                   PROC (MESSAGEPROC )BOOL obey_oscommand_proc,
                   MESSAGEPROC msg )STRUCT( REF VECTOR[ ]CHAR operating_system,
                                                              star_chars,
                                                              edit_command,
                                                              exe_dir,
                                                              heap_size,
                                            BOOL case_sensitive ):
BEGIN
    insert_oscommand_item := insert_oscommand_item_proc;
    obey_oscommand := obey_oscommand_proc;
    ( unix, std_star_chars, std_edit_command, std_exe_dir, std_heap_size, TRUE )
END;

PROC translate_filename = (VECTOR[ ]CHAR name,
                           REF INT mm_log_count,
                           BOOL diagnose,
                           MESSAGEPROC msg )REF VECTOR[ ]CHAR: MAKERVC name;

PROC os_submit = (VECTOR[ ]CHAR dbname,
                                node,
                  MESSAGEPROC msg )BOOL:
BEGIN
    put( screen, ( "Offline jobs not yet implemented.", newline ));
    FALSE
END;

PROC os_save_file = (REF VECTOR[ ]CHAR name,
                                       save_name,
                     MESSAGEPROC msg )VOID:
BEGIN
    insert_oscommand_item( "cp " );
    insert_oscommand_item( name );
    insert_oscommand_item( " " );
    insert_oscommand_item( save_name );
    obey_oscommand( msg )
END;

    SKIP

KEEP os_submit, os_save_file, translate_filename, obey_osaction,
     initialise_complink
FINISH
