DECS  iolib  CONTEXT VOID  USE osif, messageproc, putstrings, getstrings:

configinfo A68CONFIG "$Id: iolib.a68,v 1.1.1.1 2001-05-07 10:16:11 sian Exp $";


COMMENT 
    ************************************************************************
    This Program is the property of the Secretary of State for Defence
    (United Kingdom) acting through the Defence Research Agency (DRA). Use,
    reproduction, production of amended versions and/or transfer of this
    Program is permitted provided that:

  (a)  this legend be preserved on any such reproduction and amended version,
  (b)  any amended version of this Program be clearly marked to show the
       nature of the amendment and of the name of the amending organisation,
  and
  (c)  any recipient  of such reproduction or amended version accept the
       conditions set out in this legend.

                         Crown Copyright, (c)   1984

                             All rights reserved.

    The Secretary of State for Defence (United Kingdom) acting through his
    Defence Research Agency (DRA) gives no warranty that any element of the
    Software is suitable for any purpose and he shall not be liable for any
    loss or damage including loss or damage resulting in injury or death
    howsoever caused which results from the use of the Software, or any
    developments adaptions modifications translations and enhancements
    thereof.

    The original authors may be contacted via email on ella@dra.hmg.gb or by
    writing to ELLA Office, DRA, St Andrews Road, Malvern, Worcs WR14 3PS, UK.
    ************************************************************************

05:12:94  33.001  ELLA   CmplxNos   Standard file input / output procedures. 
29:03:95  34.002  ELLA  Modcprght Change copyright header
??:??:??   ?.???  ????
COMMENT


RCH  stdoutchan, stderrchan, stdinchan;
STRUCT 1024 CHAR  outbuff, errbuff, inbuff;

PROC  print = (VECTOR [] OUTMODE  line) VOID:  put( stdoutchan, line );
PROC  printerr = (VECTOR [] OUTMODE  line) VOID:  put( stderrchan, line );
PROC  read = (VECTOR [] INMODE in) BOOL: get( stdinchan, in );

PROC put_stdout_line = (STR s) VOID: write_buffer( stdout, s, global_msg );
PROC put_stderr_line = (STR s) VOID: write_buffer( stderr, s, global_msg );
PROC get_stdin_line = (RVC s, REF INT length )IOSTATUS:
                                     read_line( stdin, s, length, global_msg);
PROC  init_oslib = VOID:
BEGIN
   stdoutchan:= make_channel( outbuff, put_stdout_line );
   stderrchan:= make_channel( errbuff, put_stderr_line );
   stdinchan:=  make_channel( inbuff, get_stdin_line );
   SKIP
END;

A68INIT  init_oslib

KEEP  stdoutchan,  stderrchan,  stdinchan,
      print,  printerr,  read
FINISH
