Monitor log
===========

(l.8,c.2) get tok: CONTROL(1)
(l.33,c.2) get tok: CONTROL(<)
(l.34,c.6) get tok: INT(STRING[156])
(l.34,c.16) get tok: REF TAG(cvstang)
(l.34,c.17) get tok: STRING(=)
(l.34,c.70) get tok: STRING("$Id: tang.w68,v 1.10 2005/01/21 15:34:16 sian Exp $")
(l.34,c.71) get tok: STRING(;)
(l.36,c.2) get tok: CONTROL( )
(l.39,c.2) get tok: CONTROL(a)
(l.40,c.2) get tok: CONTROL(<)
(l.41,c.5) get tok: INT(BEGIN[227])
(l.42,c.2) get tok: CONTROL(<)
(l.42,c.30) get tok: CONTROL(;)
(l.43,c.2) get tok: CONTROL(<)
(l.43,c.21) get tok: CONTROL(;)
(l.44,c.2) get tok: CONTROL(<)
(l.44,c.37) get tok: CONTROL(;)
(l.45,c.2) get tok: CONTROL(<)
(l.45,c.30) get tok: CONTROL(;)
(l.46,c.2) get tok: CONTROL(<)
(l.46,c.20) get tok: CONTROL(;)
(l.47,c.2) get tok: CONTROL(<)
(l.47,c.29) get tok: CONTROL(;)
(l.48,c.2) get tok: CONTROL(<)
(l.48,c.34) get tok: CONTROL(;)
(l.49,c.2) get tok: CONTROL(<)
(l.49,c.35) get tok: CONTROL(;)
(l.50,c.2) get tok: CONTROL(<)
(l.52,c.2) get tok: CONTROL( )
(l.57,c.2) get tok: CONTROL(<)
(l.58,c.7) get tok: INT(PROGRAM[174])
(l.58,c.13) get tok: REF TAG(tang)
(l.58,c.20) get tok: REF TAG(CONTEXT)
(l.58,c.25) get tok: INT(VOID[181])
(l.59,c.3) get tok: INT(USE[70])
(l.59,c.6) get tok: CONTROL(<)
(l.61,c.0) get tok: REF TAG(standard)
(l.61,c.2) get tok: CONTROL( )
(l.63,c.2) get tok: CONTROL(<)
(l.64,c.6) get tok: INT(FINISH[105])
(l.66,c.2) get tok: CONTROL( )
(l.69,c.2) get tok: CONTROL(<)
(l.70,c.6) get tok: REF TAG(params)
(l.70,c.7) get tok: STRING(,)
(l.72,c.2) get tok: CONTROL(1)
(l.76,c.2) get tok: CONTROL(i)
(l.1,c.2) get tok: CONTROL(2)
(l.66,c.2) get tok: CONTROL(m)
(l.66,c.18) get tok: REF TAG(cvssysprelude)
(l.66,c.19) get tok: STRING(=)
(l.68,c.0) get tok: STRING("$Id: sysprelude.w,v 1.12 2005/12/04 11:21:47 sian Exp $")
(l.68,c.2) get tok: CONTROL(i)
(l.1,c.2) get tok: CONTROL(2)
(l.7,c.2) get tok: CONTROL(m)
(l.7,c.16) get tok: REF TAG(errorbanner)
(l.7,c.17) get tok: STRING(=)
(l.9,c.0) get tok: STRING("$Id: syserr.w,v 1.4 2003/05/10 11:00:45 sian Exp $")
(l.9,c.2) get tok: CONTROL( )
(l.12,c.2) get tok: CONTROL(d)
(l.12,c.19) get tok: REF TAG(macroerrdummy)
(l.12,c.20) get tok: STRING(=)
(l.12,c.24) get tok: INT(INT[195])
(l.12,c.35) get tok: REF TAG(errdummy)
(l.12,c.36) get tok: STRING(=)
(l.12,c.42) get tok: INT(ALIEN[245])
(l.12,c.53) get tok: STRING("ERRDUMMY")
(l.12,c.74) get tok: STRING("#include <errno.h>")
(l.14,c.0) get tok: STRING("/**/")
(l.14,c.2) get tok: CONTROL( )
(l.17,c.2) get tok: CONTROL(d)
(l.17,c.15) get tok: REF TAG(macroe2big)
(l.17,c.16) get tok: STRING(=)
(l.18,c.15) get tok: REF TAG(macroerrdummy)
(l.18,c.16) get tok: STRING(;)
(l.19,c.3) get tok: INT(INT[195])
(l.19,c.10) get tok: REF TAG(e2big)
(l.19,c.11) get tok: STRING(=)
(l.19,c.17) get tok: INT(ALIEN[245])
(l.19,c.25) get tok: STRING("E2BIG")
(l.19,c.32) get tok: STRING("/**/")
(l.20,c.2) get tok: CONTROL(d)
(l.20,c.16) get tok: REF TAG(macroeacces)
(l.20,c.17) get tok: STRING(=)
(l.21,c.15) get tok: REF TAG(macroerrdummy)
(l.21,c.16) get tok: STRING(;)
(l.22,c.3) get tok: INT(INT[195])
(l.22,c.11) get tok: REF TAG(eacces)
(l.22,c.12) get tok: STRING(=)
(l.22,c.18) get tok: INT(ALIEN[245])
(l.22,c.27) get tok: STRING("EACCES")
(l.22,c.34) get tok: STRING("/**/")
(l.23,c.2) get tok: CONTROL(d)
(l.23,c.20) get tok: REF TAG(macroeaddrinuse)
(l.23,c.21) get tok: STRING(=)
(l.24,c.15) get tok: REF TAG(macroerrdummy)
(l.24,c.16) get tok: STRING(;)
(l.25,c.3) get tok: INT(INT[195])
(l.25,c.15) get tok: REF TAG(eaddrinuse)
(l.25,c.16) get tok: STRING(=)
(l.25,c.22) get tok: INT(ALIEN[245])
(l.25,c.35) get tok: STRING("EADDRINUSE")
(l.25,c.42) get tok: STRING("/**/")
(l.26,c.2) get tok: CONTROL(d)
(l.26,c.23) get tok: REF TAG(macroeaddrnotavail)
(l.26,c.24) get tok: STRING(=)
(l.27,c.15) get tok: REF TAG(macroerrdummy)
(l.27,c.16) get tok: STRING(;)
(l.28,c.3) get tok: INT(INT[195])
(l.28,c.18) get tok: REF TAG(eaddrnotavail)
(l.28,c.19) get tok: STRING(=)
(l.28,c.25) get tok: INT(ALIEN[245])
(l.28,c.41) get tok: STRING("EADDRNOTAVAIL")
(l.28,c.48) get tok: STRING("/**/")
(l.29,c.2) get tok: CONTROL(d)
(l.29,c.14) get tok: REF TAG(macroeadv)
(l.29,c.15) get tok: STRING(=)
(l.30,c.15) get tok: REF TAG(macroerrdummy)
(l.30,c.16) get tok: STRING(;)
(l.31,c.3) get tok: INT(INT[195])
(l.31,c.9) get tok: REF TAG(eadv)
(l.31,c.10) get tok: STRING(=)
(l.31,c.16) get tok: INT(ALIEN[245])
(l.31,c.23) get tok: STRING("EADV")
(l.31,c.30) get tok: STRING("/**/")
(l.32,c.2) get tok: CONTROL(d)
(l.32,c.22) get tok: REF TAG(macroeafnosupport)
(l.32,c.23) get tok: STRING(=)
(l.33,c.15) get tok: REF TAG(macroerrdummy)
(l.33,c.16) get tok: STRING(;)
(l.34,c.3) get tok: INT(INT[195])
(l.34,c.17) get tok: REF TAG(eafnosupport)
(l.34,c.18) get tok: STRING(=)
(l.34,c.24) get tok: INT(ALIEN[245])
(l.34,c.39) get tok: STRING("EAFNOSUPPORT")
(l.34,c.46) get tok: STRING("/**/")
(l.35,c.2) get tok: CONTROL(d)
(l.35,c.16) get tok: REF TAG(macroeagain)
(l.35,c.17) get tok: STRING(=)
(l.36,c.15) get tok: REF TAG(macroerrdummy)
(l.36,c.16) get tok: STRING(;)
(l.37,c.3) get tok: INT(INT[195])
(l.37,c.11) get tok: REF TAG(eagain)
(l.37,c.12) get tok: STRING(=)
(l.37,c.18) get tok: INT(ALIEN[245])
(l.37,c.27) get tok: STRING("EAGAIN")
(l.37,c.34) get tok: STRING("/**/")
(l.38,c.2) get tok: CONTROL(d)
(l.38,c.18) get tok: REF TAG(macroealready)
(l.38,c.19) get tok: STRING(=)
(l.39,c.15) get tok: REF TAG(macroerrdummy)
(l.39,c.16) get tok: STRING(;)
(l.40,c.3) get tok: INT(INT[195])
(l.40,c.13) get tok: REF TAG(ealready)
(l.40,c.14) get tok: STRING(=)
(l.40,c.20) get tok: INT(ALIEN[245])
(l.40,c.31) get tok: STRING("EALREADY")
(l.40,c.38) get tok: STRING("/**/")
(l.41,c.2) get tok: CONTROL(d)
(l.41,c.15) get tok: REF TAG(macroebade)
(l.41,c.16) get tok: STRING(=)
(l.42,c.15) get tok: REF TAG(macroerrdummy)
(l.42,c.16) get tok: STRING(;)
(l.43,c.3) get tok: INT(INT[195])
(l.43,c.10) get tok: REF TAG(ebade)
(l.43,c.11) get tok: STRING(=)
(l.43,c.17) get tok: INT(ALIEN[245])
(l.43,c.25) get tok: STRING("EBADE")
(l.43,c.32) get tok: STRING("/**/")
(l.44,c.2) get tok: CONTROL(d)
(l.44,c.15) get tok: REF TAG(macroebadf)
(l.44,c.16) get tok: STRING(=)
(l.45,c.15) get tok: REF TAG(macroerrdummy)
(l.45,c.16) get tok: STRING(;)
(l.46,c.3) get tok: INT(INT[195])
(l.46,c.10) get tok: REF TAG(ebadf)
(l.46,c.11) get tok: STRING(=)
(l.46,c.17) get tok: INT(ALIEN[245])
(l.46,c.25) get tok: STRING("EBADF")
(l.46,c.32) get tok: STRING("/**/")
(l.47,c.2) get tok: CONTROL(d)
(l.47,c.16) get tok: REF TAG(macroebadfd)
(l.47,c.17) get tok: STRING(=)
(l.48,c.15) get tok: REF TAG(macroerrdummy)
(l.48,c.16) get tok: STRING(;)
(l.49,c.3) get tok: INT(INT[195])
(l.49,c.11) get tok: REF TAG(ebadfd)
(l.49,c.12) get tok: STRING(=)
(l.49,c.18) get tok: INT(ALIEN[245])
(l.49,c.27) get tok: STRING("EBADFD")
(l.49,c.34) get tok: STRING("/**/")
(l.50,c.2) get tok: CONTROL(d)
(l.50,c.17) get tok: REF TAG(macroebadmsg)
(l.50,c.18) get tok: STRING(=)
(l.51,c.15) get tok: REF TAG(macroerrdummy)
(l.51,c.16) get tok: STRING(;)
(l.52,c.3) get tok: INT(INT[195])
(l.52,c.12) get tok: REF TAG(ebadmsg)
(l.52,c.13) get tok: STRING(=)
(l.52,c.19) get tok: INT(ALIEN[245])
(l.52,c.29) get tok: STRING("EBADMSG")
(l.52,c.36) get tok: STRING("/**/")
(l.53,c.2) get tok: CONTROL(d)
(l.53,c.15) get tok: REF TAG(macroebadr)
(l.53,c.16) get tok: STRING(=)
(l.54,c.15) get tok: REF TAG(macroerrdummy)
(l.54,c.16) get tok: STRING(;)
(l.55,c.3) get tok: INT(INT[195])
(l.55,c.10) get tok: REF TAG(ebadr)
(l.55,c.11) get tok: STRING(=)
(l.55,c.17) get tok: INT(ALIEN[245])
(l.55,c.25) get tok: STRING("EBADR")
(l.55,c.32) get tok: STRING("/**/")
(l.56,c.2) get tok: CONTROL(d)
(l.56,c.17) get tok: REF TAG(macroebadrqc)
(l.56,c.18) get tok: STRING(=)
(l.57,c.15) get tok: REF TAG(macroerrdummy)
(l.57,c.16) get tok: STRING(;)
(l.58,c.3) get tok: INT(INT[195])
(l.58,c.12) get tok: REF TAG(ebadrqc)
(l.58,c.13) get tok: STRING(=)
(l.58,c.19) get tok: INT(ALIEN[245])
(l.58,c.29) get tok: STRING("EBADRQC")
(l.58,c.36) get tok: STRING("/**/")
(l.59,c.2) get tok: CONTROL(d)
(l.59,c.17) get tok: REF TAG(macroebadslt)
(l.59,c.18) get tok: STRING(=)
(l.60,c.15) get tok: REF TAG(macroerrdummy)
(l.60,c.16) get tok: STRING(;)
(l.61,c.3) get tok: INT(INT[195])
(l.61,c.12) get tok: REF TAG(ebadslt)
(l.61,c.13) get tok: STRING(=)
(l.61,c.19) get tok: INT(ALIEN[245])
(l.61,c.29) get tok: STRING("EBADSLT")
(l.61,c.36) get tok: STRING("/**/")
(l.62,c.2) get tok: CONTROL(d)
(l.62,c.16) get tok: REF TAG(macroebfont)
(l.62,c.17) get tok: STRING(=)
(l.63,c.15) get tok: REF TAG(macroerrdummy)
(l.63,c.16) get tok: STRING(;)
(l.64,c.3) get tok: INT(INT[195])
(l.64,c.11) get tok: REF TAG(ebfont)
(l.64,c.12) get tok: STRING(=)
(l.64,c.18) get tok: INT(ALIEN[245])
(l.64,c.27) get tok: STRING("EBFONT")
(l.64,c.34) get tok: STRING("/**/")
(l.65,c.2) get tok: CONTROL(d)
(l.65,c.15) get tok: REF TAG(macroebusy)
(l.65,c.16) get tok: STRING(=)
(l.66,c.15) get tok: REF TAG(macroerrdummy)
(l.66,c.16) get tok: STRING(;)
(l.67,c.3) get tok: INT(INT[195])
(l.67,c.10) get tok: REF TAG(ebusy)
(l.67,c.11) get tok: STRING(=)
(l.67,c.17) get tok: INT(ALIEN[245])
(l.67,c.25) get tok: STRING("EBUSY")
(l.67,c.32) get tok: STRING("/**/")
(l.68,c.2) get tok: CONTROL(d)
(l.68,c.16) get tok: REF TAG(macroechild)
(l.68,c.17) get tok: STRING(=)
(l.69,c.15) get tok: REF TAG(macroerrdummy)
(l.69,c.16) get tok: STRING(;)
(l.70,c.3) get tok: INT(INT[195])
(l.70,c.11) get tok: REF TAG(echild)
(l.70,c.12) get tok: STRING(=)
(l.70,c.18) get tok: INT(ALIEN[245])
(l.70,c.27) get tok: STRING("ECHILD")
(l.70,c.34) get tok: STRING("/**/")
(l.71,c.2) get tok: CONTROL(d)
(l.71,c.16) get tok: REF TAG(macroechrng)
(l.71,c.17) get tok: STRING(=)
(l.72,c.15) get tok: REF TAG(macroerrdummy)
(l.72,c.16) get tok: STRING(;)
(l.73,c.3) get tok: INT(INT[195])
(l.73,c.11) get tok: REF TAG(echrng)
(l.73,c.12) get tok: STRING(=)
(l.73,c.18) get tok: INT(ALIEN[245])
(l.73,c.27) get tok: STRING("ECHRNG")
(l.73,c.34) get tok: STRING("/**/")
(l.74,c.2) get tok: CONTROL(d)
(l.74,c.15) get tok: REF TAG(macroecomm)
(l.74,c.16) get tok: STRING(=)
(l.75,c.15) get tok: REF TAG(macroerrdummy)
(l.75,c.16) get tok: STRING(;)
(l.76,c.3) get tok: INT(INT[195])
(l.76,c.10) get tok: REF TAG(ecomm)
(l.76,c.11) get tok: STRING(=)
(l.76,c.17) get tok: INT(ALIEN[245])
(l.76,c.25) get tok: STRING("ECOMM")
(l.76,c.32) get tok: STRING("/**/")
(l.77,c.2) get tok: CONTROL(d)
(l.77,c.22) get tok: REF TAG(macroeconnaborted)
(l.77,c.23) get tok: STRING(=)
(l.78,c.15) get tok: REF TAG(macroerrdummy)
(l.78,c.16) get tok: STRING(;)
(l.79,c.3) get tok: INT(INT[195])
(l.79,c.17) get tok: REF TAG(econnaborted)
(l.79,c.18) get tok: STRING(=)
(l.79,c.24) get tok: INT(ALIEN[245])
(l.79,c.39) get tok: STRING("ECONNABORTED")
(l.79,c.46) get tok: STRING("/**/")
(l.80,c.2) get tok: CONTROL(d)
(l.80,c.22) get tok: REF TAG(macroeconnrefused)
(l.80,c.23) get tok: STRING(=)
(l.81,c.15) get tok: REF TAG(macroerrdummy)
(l.81,c.16) get tok: STRING(;)
(l.82,c.3) get tok: INT(INT[195])
(l.82,c.17) get tok: REF TAG(econnrefused)
(l.82,c.18) get tok: STRING(=)
(l.82,c.24) get tok: INT(ALIEN[245])
(l.82,c.39) get tok: STRING("ECONNREFUSED")
(l.82,c.46) get tok: STRING("/**/")
(l.83,c.2) get tok: CONTROL(d)
(l.83,c.20) get tok: REF TAG(macroeconnreset)
(l.83,c.21) get tok: STRING(=)
(l.84,c.15) get tok: REF TAG(macroerrdummy)
(l.84,c.16) get tok: STRING(;)
(l.85,c.3) get tok: INT(INT[195])
(l.85,c.15) get tok: REF TAG(econnreset)
(l.85,c.16) get tok: STRING(=)
(l.85,c.22) get tok: INT(ALIEN[245])
(l.85,c.35) get tok: STRING("ECONNRESET")
(l.85,c.42) get tok: STRING("/**/")
(l.86,c.2) get tok: CONTROL(d)
(l.86,c.17) get tok: REF TAG(macroedeadlk)
(l.86,c.18) get tok: STRING(=)
(l.87,c.15) get tok: REF TAG(macroerrdummy)
(l.87,c.16) get tok: STRING(;)
(l.88,c.3) get tok: INT(INT[195])
(l.88,c.12) get tok: REF TAG(edeadlk)
(l.88,c.13) get tok: STRING(=)
(l.88,c.19) get tok: INT(ALIEN[245])
(l.88,c.29) get tok: STRING("EDEADLK")
(l.88,c.36) get tok: STRING("/**/")
(l.89,c.2) get tok: CONTROL(d)
(l.89,c.19) get tok: REF TAG(macroedeadlock)
(l.89,c.20) get tok: STRING(=)
(l.90,c.13) get tok: REF TAG(macroedeadlk)
(l.90,c.14) get tok: STRING(;)
(l.91,c.3) get tok: INT(INT[195])
(l.91,c.14) get tok: REF TAG(edeadlock)
(l.91,c.15) get tok: STRING(=)
(l.92,c.0) get tok: REF TAG(edeadlk)
(l.92,c.2) get tok: CONTROL(d)
(l.92,c.22) get tok: REF TAG(macroedestaddrreq)
(l.92,c.23) get tok: STRING(=)
(l.93,c.15) get tok: REF TAG(macroerrdummy)
(l.93,c.16) get tok: STRING(;)
(l.94,c.3) get tok: INT(INT[195])
(l.94,c.17) get tok: REF TAG(edestaddrreq)
(l.94,c.18) get tok: STRING(=)
(l.94,c.24) get tok: INT(ALIEN[245])
(l.94,c.39) get tok: STRING("EDESTADDRREQ")
(l.94,c.46) get tok: STRING("/**/")
(l.95,c.2) get tok: CONTROL(d)
(l.95,c.14) get tok: REF TAG(macroedom)
(l.95,c.15) get tok: STRING(=)
(l.96,c.15) get tok: REF TAG(macroerrdummy)
(l.96,c.16) get tok: STRING(;)
(l.97,c.3) get tok: INT(INT[195])
(l.97,c.9) get tok: REF TAG(edom)
(l.97,c.10) get tok: STRING(=)
(l.97,c.16) get tok: INT(ALIEN[245])
(l.97,c.23) get tok: STRING("EDOM")
(l.97,c.30) get tok: STRING("/**/")
(l.98,c.2) get tok: CONTROL(d)
(l.98,c.17) get tok: REF TAG(macroedotdot)
(l.98,c.18) get tok: STRING(=)
(l.99,c.15) get tok: REF TAG(macroerrdummy)
(l.99,c.16) get tok: STRING(;)
(l.100,c.3) get tok: INT(INT[195])
(l.100,c.12) get tok: REF TAG(edotdot)
(l.100,c.13) get tok: STRING(=)
(l.100,c.19) get tok: INT(ALIEN[245])
(l.100,c.29) get tok: STRING("EDOTDOT")
(l.100,c.36) get tok: STRING("/**/")
(l.101,c.2) get tok: CONTROL(d)
(l.101,c.16) get tok: REF TAG(macroedquot)
(l.101,c.17) get tok: STRING(=)
(l.102,c.15) get tok: REF TAG(macroerrdummy)
(l.102,c.16) get tok: STRING(;)
(l.103,c.3) get tok: INT(INT[195])
(l.103,c.11) get tok: REF TAG(edquot)
(l.103,c.12) get tok: STRING(=)
(l.103,c.18) get tok: INT(ALIEN[245])
(l.103,c.27) get tok: STRING("EDQUOT")
(l.103,c.34) get tok: STRING("/**/")
(l.104,c.2) get tok: CONTROL(d)
(l.104,c.16) get tok: REF TAG(macroeexist)
(l.104,c.17) get tok: STRING(=)
(l.105,c.15) get tok: REF TAG(macroerrdummy)
(l.105,c.16) get tok: STRING(;)
(l.106,c.3) get tok: INT(INT[195])
(l.106,c.11) get tok: REF TAG(eexist)
(l.106,c.12) get tok: STRING(=)
(l.106,c.18) get tok: INT(ALIEN[245])
(l.106,c.27) get tok: STRING("EEXIST")
(l.106,c.34) get tok: STRING("/**/")
(l.107,c.2) get tok: CONTROL(d)
(l.107,c.16) get tok: REF TAG(macroefault)
(l.107,c.17) get tok: STRING(=)
(l.108,c.15) get tok: REF TAG(macroerrdummy)
(l.108,c.16) get tok: STRING(;)
(l.109,c.3) get tok: INT(INT[195])
(l.109,c.11) get tok: REF TAG(efault)
(l.109,c.12) get tok: STRING(=)
(l.109,c.18) get tok: INT(ALIEN[245])
(l.109,c.27) get tok: STRING("EFAULT")
(l.109,c.34) get tok: STRING("/**/")
(l.110,c.2) get tok: CONTROL(d)
(l.110,c.15) get tok: REF TAG(macroefbig)
(l.110,c.16) get tok: STRING(=)
(l.111,c.15) get tok: REF TAG(macroerrdummy)
(l.111,c.16) get tok: STRING(;)
(l.112,c.3) get tok: INT(INT[195])
(l.112,c.10) get tok: REF TAG(efbig)
(l.112,c.11) get tok: STRING(=)
(l.112,c.17) get tok: INT(ALIEN[245])
(l.112,c.25) get tok: STRING("EFBIG")
(l.112,c.32) get tok: STRING("/**/")
(l.113,c.2) get tok: CONTROL(d)
(l.113,c.19) get tok: REF TAG(macroehostdown)
(l.113,c.20) get tok: STRING(=)
(l.114,c.15) get tok: REF TAG(macroerrdummy)
(l.114,c.16) get tok: STRING(;)
(l.115,c.3) get tok: INT(INT[195])
(l.115,c.14) get tok: REF TAG(ehostdown)
(l.115,c.15) get tok: STRING(=)
(l.115,c.21) get tok: INT(ALIEN[245])
(l.115,c.33) get tok: STRING("EHOSTDOWN")
(l.115,c.40) get tok: STRING("/**/")
(l.116,c.2) get tok: CONTROL(d)
(l.116,c.22) get tok: REF TAG(macroehostunreach)
(l.116,c.23) get tok: STRING(=)
(l.117,c.15) get tok: REF TAG(macroerrdummy)
(l.117,c.16) get tok: STRING(;)
(l.118,c.3) get tok: INT(INT[195])
(l.118,c.17) get tok: REF TAG(ehostunreach)
(l.118,c.18) get tok: STRING(=)
(l.118,c.24) get tok: INT(ALIEN[245])
(l.118,c.39) get tok: STRING("EHOSTUNREACH")
(l.118,c.46) get tok: STRING("/**/")
(l.119,c.2) get tok: CONTROL(d)
(l.119,c.15) get tok: REF TAG(macroeidrm)
(l.119,c.16) get tok: STRING(=)
(l.120,c.15) get tok: REF TAG(macroerrdummy)
(l.120,c.16) get tok: STRING(;)
(l.121,c.3) get tok: INT(INT[195])
(l.121,c.10) get tok: REF TAG(eidrm)
(l.121,c.11) get tok: STRING(=)
(l.121,c.17) get tok: INT(ALIEN[245])
(l.121,c.25) get tok: STRING("EIDRM")
(l.121,c.32) get tok: STRING("/**/")
(l.122,c.2) get tok: CONTROL(d)
(l.122,c.16) get tok: REF TAG(macroeilseq)
(l.122,c.17) get tok: STRING(=)
(l.123,c.15) get tok: REF TAG(macroerrdummy)
(l.123,c.16) get tok: STRING(;)
(l.124,c.3) get tok: INT(INT[195])
(l.124,c.11) get tok: REF TAG(eilseq)
(l.124,c.12) get tok: STRING(=)
(l.124,c.18) get tok: INT(ALIEN[245])
(l.124,c.27) get tok: STRING("EILSEQ")
(l.124,c.34) get tok: STRING("/**/")
(l.125,c.2) get tok: CONTROL(d)
(l.125,c.21) get tok: REF TAG(macroeinprogress)
(l.125,c.22) get tok: STRING(=)
(l.126,c.15) get tok: REF TAG(macroerrdummy)
(l.126,c.16) get tok: STRING(;)
(l.127,c.3) get tok: INT(INT[195])
(l.127,c.16) get tok: REF TAG(einprogress)
(l.127,c.17) get tok: STRING(=)
(l.127,c.23) get tok: INT(ALIEN[245])
(l.127,c.37) get tok: STRING("EINPROGRESS")
(l.127,c.44) get tok: STRING("/**/")
(l.128,c.2) get tok: CONTROL(d)
(l.128,c.15) get tok: REF TAG(macroeintr)
(l.128,c.16) get tok: STRING(=)
(l.129,c.15) get tok: REF TAG(macroerrdummy)
(l.129,c.16) get tok: STRING(;)
(l.130,c.3) get tok: INT(INT[195])
(l.130,c.10) get tok: REF TAG(eintr)
(l.130,c.11) get tok: STRING(=)
(l.130,c.17) get tok: INT(ALIEN[245])
(l.130,c.25) get tok: STRING("EINTR")
(l.130,c.32) get tok: STRING("/**/")
(l.131,c.2) get tok: CONTROL(d)
(l.131,c.16) get tok: REF TAG(macroeinval)
(l.131,c.17) get tok: STRING(=)
(l.132,c.15) get tok: REF TAG(macroerrdummy)
(l.132,c.16) get tok: STRING(;)
(l.133,c.3) get tok: INT(INT[195])
(l.133,c.11) get tok: REF TAG(einval)
(l.133,c.12) get tok: STRING(=)
(l.133,c.18) get tok: INT(ALIEN[245])
(l.133,c.27) get tok: STRING("EINVAL")
(l.133,c.34) get tok: STRING("/**/")
(l.134,c.2) get tok: CONTROL(d)
(l.134,c.13) get tok: REF TAG(macroeio)
(l.134,c.14) get tok: STRING(=)
(l.135,c.15) get tok: REF TAG(macroerrdummy)
(l.135,c.16) get tok: STRING(;)
(l.136,c.3) get tok: INT(INT[195])
(l.136,c.8) get tok: REF TAG(eio)
(l.136,c.9) get tok: STRING(=)
(l.136,c.15) get tok: INT(ALIEN[245])
(l.136,c.21) get tok: STRING("EIO")
(l.136,c.28) get tok: STRING("/**/")
(l.137,c.2) get tok: CONTROL(d)
(l.137,c.17) get tok: REF TAG(macroeisconn)
(l.137,c.18) get tok: STRING(=)
(l.138,c.15) get tok: REF TAG(macroerrdummy)
(l.138,c.16) get tok: STRING(;)
(l.139,c.3) get tok: INT(INT[195])
(l.139,c.12) get tok: REF TAG(eisconn)
(l.139,c.13) get tok: STRING(=)
(l.139,c.19) get tok: INT(ALIEN[245])
(l.139,c.29) get tok: STRING("EISCONN")
(l.139,c.36) get tok: STRING("/**/")
(l.140,c.2) get tok: CONTROL(d)
(l.140,c.16) get tok: REF TAG(macroeisdir)
(l.140,c.17) get tok: STRING(=)
(l.141,c.15) get tok: REF TAG(macroerrdummy)
(l.141,c.16) get tok: STRING(;)
(l.142,c.3) get tok: INT(INT[195])
(l.142,c.11) get tok: REF TAG(eisdir)
(l.142,c.12) get tok: STRING(=)
(l.142,c.18) get tok: INT(ALIEN[245])
(l.142,c.27) get tok: STRING("EISDIR")
(l.142,c.34) get tok: STRING("/**/")
(l.143,c.2) get tok: CONTROL(d)
(l.143,c.16) get tok: REF TAG(macroeisnam)
(l.143,c.17) get tok: STRING(=)
(l.144,c.15) get tok: REF TAG(macroerrdummy)
(l.144,c.16) get tok: STRING(;)
(l.145,c.3) get tok: INT(INT[195])
(l.145,c.11) get tok: REF TAG(eisnam)
(l.145,c.12) get tok: STRING(=)
(l.145,c.18) get tok: INT(ALIEN[245])
(l.145,c.27) get tok: STRING("EISNAM")
(l.145,c.34) get tok: STRING("/**/")
(l.146,c.2) get tok: CONTROL(d)
(l.146,c.16) get tok: REF TAG(macroel2hlt)
(l.146,c.17) get tok: STRING(=)
(l.147,c.15) get tok: REF TAG(macroerrdummy)
(l.147,c.16) get tok: STRING(;)
(l.148,c.3) get tok: INT(INT[195])
(l.148,c.11) get tok: REF TAG(el2hlt)
(l.148,c.12) get tok: STRING(=)
(l.148,c.18) get tok: INT(ALIEN[245])
(l.148,c.27) get tok: STRING("EL2HLT")
(l.148,c.34) get tok: STRING("/**/")
(l.149,c.2) get tok: CONTROL(d)
(l.149,c.18) get tok: REF TAG(macroel2nsync)
(l.149,c.19) get tok: STRING(=)
(l.150,c.15) get tok: REF TAG(macroerrdummy)
(l.150,c.16) get tok: STRING(;)
(l.151,c.3) get tok: INT(INT[195])
(l.151,c.13) get tok: REF TAG(el2nsync)
(l.151,c.14) get tok: STRING(=)
(l.151,c.20) get tok: INT(ALIEN[245])
(l.151,c.31) get tok: STRING("EL2NSYNC")
(l.151,c.38) get tok: STRING("/**/")
(l.152,c.2) get tok: CONTROL(d)
(l.152,c.16) get tok: REF TAG(macroel3hlt)
(l.152,c.17) get tok: STRING(=)
(l.153,c.15) get tok: REF TAG(macroerrdummy)
(l.153,c.16) get tok: STRING(;)
(l.154,c.3) get tok: INT(INT[195])
(l.154,c.11) get tok: REF TAG(el3hlt)
(l.154,c.12) get tok: STRING(=)
(l.154,c.18) get tok: INT(ALIEN[245])
(l.154,c.27) get tok: STRING("EL3HLT")
(l.154,c.34) get tok: STRING("/**/")
(l.155,c.2) get tok: CONTROL(d)
(l.155,c.16) get tok: REF TAG(macroel3rst)
(l.155,c.17) get tok: STRING(=)
(l.156,c.15) get tok: REF TAG(macroerrdummy)
(l.156,c.16) get tok: STRING(;)
(l.157,c.3) get tok: INT(INT[195])
(l.157,c.11) get tok: REF TAG(el3rst)
(l.157,c.12) get tok: STRING(=)
(l.157,c.18) get tok: INT(ALIEN[245])
(l.157,c.27) get tok: STRING("EL3RST")
(l.157,c.34) get tok: STRING("/**/")
(l.158,c.2) get tok: CONTROL(d)
(l.158,c.17) get tok: REF TAG(macroelibacc)
(l.158,c.18) get tok: STRING(=)
(l.159,c.15) get tok: REF TAG(macroerrdummy)
(l.159,c.16) get tok: STRING(;)
(l.160,c.3) get tok: INT(INT[195])
(l.160,c.12) get tok: REF TAG(elibacc)
(l.160,c.13) get tok: STRING(=)
(l.160,c.19) get tok: INT(ALIEN[245])
(l.160,c.29) get tok: STRING("ELIBACC")
(l.160,c.36) get tok: STRING("/**/")
(l.161,c.2) get tok: CONTROL(d)
(l.161,c.17) get tok: REF TAG(macroelibbad)
(l.161,c.18) get tok: STRING(=)
(l.162,c.15) get tok: REF TAG(macroerrdummy)
(l.162,c.16) get tok: STRING(;)
(l.163,c.3) get tok: INT(INT[195])
(l.163,c.12) get tok: REF TAG(elibbad)
(l.163,c.13) get tok: STRING(=)
(l.163,c.19) get tok: INT(ALIEN[245])
(l.163,c.29) get tok: STRING("ELIBBAD")
(l.163,c.36) get tok: STRING("/**/")
(l.164,c.2) get tok: CONTROL(d)
(l.164,c.18) get tok: REF TAG(macroelibexec)
(l.164,c.19) get tok: STRING(=)
(l.165,c.15) get tok: REF TAG(macroerrdummy)
(l.165,c.16) get tok: STRING(;)
(l.166,c.3) get tok: INT(INT[195])
(l.166,c.13) get tok: REF TAG(elibexec)
(l.166,c.14) get tok: STRING(=)
(l.166,c.20) get tok: INT(ALIEN[245])
(l.166,c.31) get tok: STRING("ELIBEXEC")
(l.166,c.38) get tok: STRING("/**/")
(l.167,c.2) get tok: CONTROL(d)
(l.167,c.17) get tok: REF TAG(macroelibmax)
(l.167,c.18) get tok: STRING(=)
(l.168,c.15) get tok: REF TAG(macroerrdummy)
(l.168,c.16) get tok: STRING(;)
(l.169,c.3) get tok: INT(INT[195])
(l.169,c.12) get tok: REF TAG(elibmax)
(l.169,c.13) get tok: STRING(=)
(l.169,c.19) get tok: INT(ALIEN[245])
(l.169,c.29) get tok: STRING("ELIBMAX")
(l.169,c.36) get tok: STRING("/**/")
(l.170,c.2) get tok: CONTROL(d)
(l.170,c.17) get tok: REF TAG(macroelibscn)
(l.170,c.18) get tok: STRING(=)
(l.171,c.15) get tok: REF TAG(macroerrdummy)
(l.171,c.16) get tok: STRING(;)
(l.172,c.3) get tok: INT(INT[195])
(l.172,c.12) get tok: REF TAG(elibscn)
(l.172,c.13) get tok: STRING(=)
(l.172,c.19) get tok: INT(ALIEN[245])
(l.172,c.29) get tok: STRING("ELIBSCN")
(l.172,c.36) get tok: STRING("/**/")
(l.173,c.2) get tok: CONTROL(d)
(l.173,c.16) get tok: REF TAG(macroelnrng)
(l.173,c.17) get tok: STRING(=)
(l.174,c.15) get tok: REF TAG(macroerrdummy)
(l.174,c.16) get tok: STRING(;)
(l.175,c.3) get tok: INT(INT[195])
(l.175,c.11) get tok: REF TAG(elnrng)
(l.175,c.12) get tok: STRING(=)
(l.175,c.18) get tok: INT(ALIEN[245])
(l.175,c.27) get tok: STRING("ELNRNG")
(l.175,c.34) get tok: STRING("/**/")
(l.176,c.2) get tok: CONTROL(d)
(l.176,c.15) get tok: REF TAG(macroeloop)
(l.176,c.16) get tok: STRING(=)
(l.177,c.15) get tok: REF TAG(macroerrdummy)
(l.177,c.16) get tok: STRING(;)
(l.178,c.3) get tok: INT(INT[195])
(l.178,c.10) get tok: REF TAG(eloop)
(l.178,c.11) get tok: STRING(=)
(l.178,c.17) get tok: INT(ALIEN[245])
(l.178,c.25) get tok: STRING("ELOOP")
(l.178,c.32) get tok: STRING("/**/")
(l.179,c.2) get tok: CONTROL(d)
(l.179,c.21) get tok: REF TAG(macroemediumtype)
(l.179,c.22) get tok: STRING(=)
(l.180,c.15) get tok: REF TAG(macroerrdummy)
(l.180,c.16) get tok: STRING(;)
(l.181,c.3) get tok: INT(INT[195])
(l.181,c.16) get tok: REF TAG(emediumtype)
(l.181,c.17) get tok: STRING(=)
(l.181,c.23) get tok: INT(ALIEN[245])
(l.181,c.37) get tok: STRING("EMEDIUMTYPE")
(l.181,c.44) get tok: STRING("/**/")
(l.182,c.2) get tok: CONTROL(d)
(l.182,c.16) get tok: REF TAG(macroemfile)
(l.182,c.17) get tok: STRING(=)
(l.183,c.15) get tok: REF TAG(macroerrdummy)
(l.183,c.16) get tok: STRING(;)
(l.184,c.3) get tok: INT(INT[195])
(l.184,c.11) get tok: REF TAG(emfile)
(l.184,c.12) get tok: STRING(=)
(l.184,c.18) get tok: INT(ALIEN[245])
(l.184,c.27) get tok: STRING("EMFILE")
(l.184,c.34) get tok: STRING("/**/")
(l.185,c.2) get tok: CONTROL(d)
(l.185,c.16) get tok: REF TAG(macroemlink)
(l.185,c.17) get tok: STRING(=)
(l.186,c.15) get tok: REF TAG(macroerrdummy)
(l.186,c.16) get tok: STRING(;)
(l.187,c.3) get tok: INT(INT[195])
(l.187,c.11) get tok: REF TAG(emlink)
(l.187,c.12) get tok: STRING(=)
(l.187,c.18) get tok: INT(ALIEN[245])
(l.187,c.27) get tok: STRING("EMLINK")
(l.187,c.34) get tok: STRING("/**/")
(l.188,c.2) get tok: CONTROL(d)
(l.188,c.18) get tok: REF TAG(macroemsgsize)
(l.188,c.19) get tok: STRING(=)
(l.189,c.15) get tok: REF TAG(macroerrdummy)
(l.189,c.16) get tok: STRING(;)
(l.190,c.3) get tok: INT(INT[195])
(l.190,c.13) get tok: REF TAG(emsgsize)
(l.190,c.14) get tok: STRING(=)
(l.190,c.20) get tok: INT(ALIEN[245])
(l.190,c.31) get tok: STRING("EMSGSIZE")
(l.190,c.38) get tok: STRING("/**/")
(l.191,c.2) get tok: CONTROL(d)
(l.191,c.19) get tok: REF TAG(macroemultihop)
(l.191,c.20) get tok: STRING(=)
(l.192,c.15) get tok: REF TAG(macroerrdummy)
(l.192,c.16) get tok: STRING(;)
(l.193,c.3) get tok: INT(INT[195])
(l.193,c.14) get tok: REF TAG(emultihop)
(l.193,c.15) get tok: STRING(=)
(l.193,c.21) get tok: INT(ALIEN[245])
(l.193,c.33) get tok: STRING("EMULTIHOP")
(l.193,c.40) get tok: STRING("/**/")
(l.194,c.2) get tok: CONTROL(d)
(l.194,c.22) get tok: REF TAG(macroenametoolong)
(l.194,c.23) get tok: STRING(=)
(l.195,c.15) get tok: REF TAG(macroerrdummy)
(l.195,c.16) get tok: STRING(;)
(l.196,c.3) get tok: INT(INT[195])
(l.196,c.17) get tok: REF TAG(enametoolong)
(l.196,c.18) get tok: STRING(=)
(l.196,c.24) get tok: INT(ALIEN[245])
(l.196,c.39) get tok: STRING("ENAMETOOLONG")
(l.196,c.46) get tok: STRING("/**/")
(l.197,c.2) get tok: CONTROL(d)
(l.197,c.17) get tok: REF TAG(macroenavail)
(l.197,c.18) get tok: STRING(=)
(l.198,c.15) get tok: REF TAG(macroerrdummy)
(l.198,c.16) get tok: STRING(;)
(l.199,c.3) get tok: INT(INT[195])
(l.199,c.12) get tok: REF TAG(enavail)
(l.199,c.13) get tok: STRING(=)
(l.199,c.19) get tok: INT(ALIEN[245])
(l.199,c.29) get tok: STRING("ENAVAIL")
(l.199,c.36) get tok: STRING("/**/")
(l.200,c.2) get tok: CONTROL(d)
(l.200,c.18) get tok: REF TAG(macroenetdown)
(l.200,c.19) get tok: STRING(=)
(l.201,c.15) get tok: REF TAG(macroerrdummy)
(l.201,c.16) get tok: STRING(;)
(l.202,c.3) get tok: INT(INT[195])
(l.202,c.13) get tok: REF TAG(enetdown)
(l.202,c.14) get tok: STRING(=)
(l.202,c.20) get tok: INT(ALIEN[245])
(l.202,c.31) get tok: STRING("ENETDOWN")
(l.202,c.38) get tok: STRING("/**/")
(l.203,c.2) get tok: CONTROL(d)
(l.203,c.19) get tok: REF TAG(macroenetreset)
(l.203,c.20) get tok: STRING(=)
(l.204,c.15) get tok: REF TAG(macroerrdummy)
(l.204,c.16) get tok: STRING(;)
(l.205,c.3) get tok: INT(INT[195])
(l.205,c.14) get tok: REF TAG(enetreset)
(l.205,c.15) get tok: STRING(=)
(l.205,c.21) get tok: INT(ALIEN[245])
(l.205,c.33) get tok: STRING("ENETRESET")
(l.205,c.40) get tok: STRING("/**/")
(l.206,c.2) get tok: CONTROL(d)
(l.206,c.21) get tok: REF TAG(macroenetunreach)
(l.206,c.22) get tok: STRING(=)
(l.207,c.15) get tok: REF TAG(macroerrdummy)
(l.207,c.16) get tok: STRING(;)
(l.208,c.3) get tok: INT(INT[195])
(l.208,c.16) get tok: REF TAG(enetunreach)
(l.208,c.17) get tok: STRING(=)
(l.208,c.23) get tok: INT(ALIEN[245])
(l.208,c.37) get tok: STRING("ENETUNREACH")
(l.208,c.44) get tok: STRING("/**/")
(l.209,c.2) get tok: CONTROL(d)
(l.209,c.16) get tok: REF TAG(macroenfile)
(l.209,c.17) get tok: STRING(=)
(l.210,c.15) get tok: REF TAG(macroerrdummy)
(l.210,c.16) get tok: STRING(;)
(l.211,c.3) get tok: INT(INT[195])
(l.211,c.11) get tok: REF TAG(enfile)
(l.211,c.12) get tok: STRING(=)
(l.211,c.18) get tok: INT(ALIEN[245])
(l.211,c.27) get tok: STRING("ENFILE")
(l.211,c.34) get tok: STRING("/**/")
(l.212,c.2) get tok: CONTROL(d)
(l.212,c.16) get tok: REF TAG(macroenoano)
(l.212,c.17) get tok: STRING(=)
(l.213,c.15) get tok: REF TAG(macroerrdummy)
(l.213,c.16) get tok: STRING(;)
(l.214,c.3) get tok: INT(INT[195])
(l.214,c.11) get tok: REF TAG(enoano)
(l.214,c.12) get tok: STRING(=)
(l.214,c.18) get tok: INT(ALIEN[245])
(l.214,c.27) get tok: STRING("ENOANO")
(l.214,c.34) get tok: STRING("/**/")
(l.215,c.2) get tok: CONTROL(d)
(l.215,c.17) get tok: REF TAG(macroenobufs)
(l.215,c.18) get tok: STRING(=)
(l.216,c.15) get tok: REF TAG(macroerrdummy)
(l.216,c.16) get tok: STRING(;)
(l.217,c.3) get tok: INT(INT[195])
(l.217,c.12) get tok: REF TAG(enobufs)
(l.217,c.13) get tok: STRING(=)
(l.217,c.19) get tok: INT(ALIEN[245])
(l.217,c.29) get tok: STRING("ENOBUFS")
(l.217,c.36) get tok: STRING("/**/")
(l.218,c.2) get tok: CONTROL(d)
(l.218,c.16) get tok: REF TAG(macroenocsi)
(l.218,c.17) get tok: STRING(=)
(l.219,c.15) get tok: REF TAG(macroerrdummy)
(l.219,c.16) get tok: STRING(;)
(l.220,c.3) get tok: INT(INT[195])
(l.220,c.11) get tok: REF TAG(enocsi)
(l.220,c.12) get tok: STRING(=)
(l.220,c.18) get tok: INT(ALIEN[245])
(l.220,c.27) get tok: STRING("ENOCSI")
(l.220,c.34) get tok: STRING("/**/")
(l.221,c.2) get tok: CONTROL(d)
(l.221,c.17) get tok: REF TAG(macroenodata)
(l.221,c.18) get tok: STRING(=)
(l.222,c.15) get tok: REF TAG(macroerrdummy)
(l.222,c.16) get tok: STRING(;)
(l.223,c.3) get tok: INT(INT[195])
(l.223,c.12) get tok: REF TAG(enodata)
(l.223,c.13) get tok: STRING(=)
(l.223,c.19) get tok: INT(ALIEN[245])
(l.223,c.29) get tok: STRING("ENODATA")
(l.223,c.36) get tok: STRING("/**/")
(l.224,c.2) get tok: CONTROL(d)
(l.224,c.16) get tok: REF TAG(macroenodev)
(l.224,c.17) get tok: STRING(=)
(l.225,c.15) get tok: REF TAG(macroerrdummy)
(l.225,c.16) get tok: STRING(;)
(l.226,c.3) get tok: INT(INT[195])
(l.226,c.11) get tok: REF TAG(enodev)
(l.226,c.12) get tok: STRING(=)
(l.226,c.18) get tok: INT(ALIEN[245])
(l.226,c.27) get tok: STRING("ENODEV")
(l.226,c.34) get tok: STRING("/**/")
(l.227,c.2) get tok: CONTROL(d)
(l.227,c.16) get tok: REF TAG(macroenoent)
(l.227,c.17) get tok: STRING(=)
(l.228,c.15) get tok: REF TAG(macroerrdummy)
(l.228,c.16) get tok: STRING(;)
(l.229,c.3) get tok: INT(INT[195])
(l.229,c.11) get tok: REF TAG(enoent)
(l.229,c.12) get tok: STRING(=)
(l.229,c.18) get tok: INT(ALIEN[245])
(l.229,c.27) get tok: STRING("ENOENT")
(l.229,c.34) get tok: STRING("/**/")
(l.230,c.2) get tok: CONTROL(d)
(l.230,c.17) get tok: REF TAG(macroenoexec)
(l.230,c.18) get tok: STRING(=)
(l.231,c.15) get tok: REF TAG(macroerrdummy)
(l.231,c.16) get tok: STRING(;)
(l.232,c.3) get tok: INT(INT[195])
(l.232,c.12) get tok: REF TAG(enoexec)
(l.232,c.13) get tok: STRING(=)
(l.232,c.19) get tok: INT(ALIEN[245])
(l.232,c.29) get tok: STRING("ENOEXEC")
(l.232,c.36) get tok: STRING("/**/")
(l.233,c.2) get tok: CONTROL(d)
(l.233,c.16) get tok: REF TAG(macroenolck)
(l.233,c.17) get tok: STRING(=)
(l.234,c.15) get tok: REF TAG(macroerrdummy)
(l.234,c.16) get tok: STRING(;)
(l.235,c.3) get tok: INT(INT[195])
(l.235,c.11) get tok: REF TAG(enolck)
(l.235,c.12) get tok: STRING(=)
(l.235,c.18) get tok: INT(ALIEN[245])
(l.235,c.27) get tok: STRING("ENOLCK")
(l.235,c.34) get tok: STRING("/**/")
(l.236,c.2) get tok: CONTROL(d)
(l.236,c.17) get tok: REF TAG(macroenolink)
(l.236,c.18) get tok: STRING(=)
(l.237,c.15) get tok: REF TAG(macroerrdummy)
(l.237,c.16) get tok: STRING(;)
(l.238,c.3) get tok: INT(INT[195])
(l.238,c.12) get tok: REF TAG(enolink)
(l.238,c.13) get tok: STRING(=)
(l.238,c.19) get tok: INT(ALIEN[245])
(l.238,c.29) get tok: STRING("ENOLINK")
(l.238,c.36) get tok: STRING("/**/")
(l.239,c.2) get tok: CONTROL(d)
(l.239,c.19) get tok: REF TAG(macroenomedium)
(l.239,c.20) get tok: STRING(=)
(l.240,c.15) get tok: REF TAG(macroerrdummy)
(l.240,c.16) get tok: STRING(;)
(l.241,c.3) get tok: INT(INT[195])
(l.241,c.14) get tok: REF TAG(enomedium)
(l.241,c.15) get tok: STRING(=)
(l.241,c.21) get tok: INT(ALIEN[245])
(l.241,c.33) get tok: STRING("ENOMEDIUM")
(l.241,c.40) get tok: STRING("/**/")
(l.242,c.2) get tok: CONTROL(d)
(l.242,c.16) get tok: REF TAG(macroenomem)
(l.242,c.17) get tok: STRING(=)
(l.243,c.15) get tok: REF TAG(macroerrdummy)
(l.243,c.16) get tok: STRING(;)
(l.244,c.3) get tok: INT(INT[195])
(l.244,c.11) get tok: REF TAG(enomem)
(l.244,c.12) get tok: STRING(=)
(l.244,c.18) get tok: INT(ALIEN[245])
(l.244,c.27) get tok: STRING("ENOMEM")
(l.244,c.34) get tok: STRING("/**/")
(l.245,c.2) get tok: CONTROL(d)
(l.245,c.16) get tok: REF TAG(macroenomsg)
(l.245,c.17) get tok: STRING(=)
(l.246,c.15) get tok: REF TAG(macroerrdummy)
(l.246,c.16) get tok: STRING(;)
(l.247,c.3) get tok: INT(INT[195])
(l.247,c.11) get tok: REF TAG(enomsg)
(l.247,c.12) get tok: STRING(=)
(l.247,c.18) get tok: INT(ALIEN[245])
(l.247,c.27) get tok: STRING("ENOMSG")
(l.247,c.34) get tok: STRING("/**/")
(l.248,c.2) get tok: CONTROL(d)
(l.248,c.16) get tok: REF TAG(macroenonet)
(l.248,c.17) get tok: STRING(=)
(l.249,c.15) get tok: REF TAG(macroerrdummy)
(l.249,c.16) get tok: STRING(;)
(l.250,c.3) get tok: INT(INT[195])
(l.250,c.11) get tok: REF TAG(enonet)
(l.250,c.12) get tok: STRING(=)
(l.250,c.18) get tok: INT(ALIEN[245])
(l.250,c.27) get tok: STRING("ENONET")
(l.250,c.34) get tok: STRING("/**/")
(l.251,c.2) get tok: CONTROL(d)
(l.251,c.16) get tok: REF TAG(macroenopkg)
(l.251,c.17) get tok: STRING(=)
(l.252,c.15) get tok: REF TAG(macroerrdummy)
(l.252,c.16) get tok: STRING(;)
(l.253,c.3) get tok: INT(INT[195])
(l.253,c.11) get tok: REF TAG(enopkg)
(l.253,c.12) get tok: STRING(=)
(l.253,c.18) get tok: INT(ALIEN[245])
(l.253,c.27) get tok: STRING("ENOPKG")
(l.253,c.34) get tok: STRING("/**/")
(l.254,c.2) get tok: CONTROL(d)
(l.254,c.21) get tok: REF TAG(macroenoprotoopt)
(l.254,c.22) get tok: STRING(=)
(l.255,c.15) get tok: REF TAG(macroerrdummy)
(l.255,c.16) get tok: STRING(;)
(l.256,c.3) get tok: INT(INT[195])
(l.256,c.16) get tok: REF TAG(enoprotoopt)
(l.256,c.17) get tok: STRING(=)
(l.256,c.23) get tok: INT(ALIEN[245])
(l.256,c.37) get tok: STRING("ENOPROTOOPT")
(l.256,c.44) get tok: STRING("/**/")
(l.257,c.2) get tok: CONTROL(d)
(l.257,c.16) get tok: REF TAG(macroenospc)
(l.257,c.17) get tok: STRING(=)
(l.258,c.15) get tok: REF TAG(macroerrdummy)
(l.258,c.16) get tok: STRING(;)
(l.259,c.3) get tok: INT(INT[195])
(l.259,c.11) get tok: REF TAG(enospc)
(l.259,c.12) get tok: STRING(=)
(l.259,c.18) get tok: INT(ALIEN[245])
(l.259,c.27) get tok: STRING("ENOSPC")
(l.259,c.34) get tok: STRING("/**/")
(l.260,c.2) get tok: CONTROL(d)
(l.260,c.15) get tok: REF TAG(macroenosr)
(l.260,c.16) get tok: STRING(=)
(l.261,c.15) get tok: REF TAG(macroerrdummy)
(l.261,c.16) get tok: STRING(;)
(l.262,c.3) get tok: INT(INT[195])
(l.262,c.10) get tok: REF TAG(enosr)
(l.262,c.11) get tok: STRING(=)
(l.262,c.17) get tok: INT(ALIEN[245])
(l.262,c.25) get tok: STRING("ENOSR")
(l.262,c.32) get tok: STRING("/**/")
(l.263,c.2) get tok: CONTROL(d)
(l.263,c.16) get tok: REF TAG(macroenostr)
(l.263,c.17) get tok: STRING(=)
(l.264,c.15) get tok: REF TAG(macroerrdummy)
(l.264,c.16) get tok: STRING(;)
(l.265,c.3) get tok: INT(INT[195])
(l.265,c.11) get tok: REF TAG(enostr)
(l.265,c.12) get tok: STRING(=)
(l.265,c.18) get tok: INT(ALIEN[245])
(l.265,c.27) get tok: STRING("ENOSTR")
(l.265,c.34) get tok: STRING("/**/")
(l.266,c.2) get tok: CONTROL(d)
(l.266,c.16) get tok: REF TAG(macroenosys)
(l.266,c.17) get tok: STRING(=)
(l.267,c.15) get tok: REF TAG(macroerrdummy)
(l.267,c.16) get tok: STRING(;)
(l.268,c.3) get tok: INT(INT[195])
(l.268,c.11) get tok: REF TAG(enosys)
(l.268,c.12) get tok: STRING(=)
(l.268,c.18) get tok: INT(ALIEN[245])
(l.268,c.27) get tok: STRING("ENOSYS")
(l.268,c.34) get tok: STRING("/**/")
(l.269,c.2) get tok: CONTROL(d)
(l.269,c.17) get tok: REF TAG(macroenotblk)
(l.269,c.18) get tok: STRING(=)
(l.270,c.15) get tok: REF TAG(macroerrdummy)
(l.270,c.16) get tok: STRING(;)
(l.271,c.3) get tok: INT(INT[195])
(l.271,c.12) get tok: REF TAG(enotblk)
(l.271,c.13) get tok: STRING(=)
(l.271,c.19) get tok: INT(ALIEN[245])
(l.271,c.29) get tok: STRING("ENOTBLK")
(l.271,c.36) get tok: STRING("/**/")
(l.272,c.2) get tok: CONTROL(d)
(l.272,c.18) get tok: REF TAG(macroenotconn)
(l.272,c.19) get tok: STRING(=)
(l.273,c.15) get tok: REF TAG(macroerrdummy)
(l.273,c.16) get tok: STRING(;)
(l.274,c.3) get tok: INT(INT[195])
(l.274,c.13) get tok: REF TAG(enotconn)
(l.274,c.14) get tok: STRING(=)
(l.274,c.20) get tok: INT(ALIEN[245])
(l.274,c.31) get tok: STRING("ENOTCONN")
(l.274,c.38) get tok: STRING("/**/")
(l.275,c.2) get tok: CONTROL(d)
(l.275,c.17) get tok: REF TAG(macroenotdir)
(l.275,c.18) get tok: STRING(=)
(l.276,c.15) get tok: REF TAG(macroerrdummy)
(l.276,c.16) get tok: STRING(;)
(l.277,c.3) get tok: INT(INT[195])
(l.277,c.12) get tok: REF TAG(enotdir)
(l.277,c.13) get tok: STRING(=)
(l.277,c.19) get tok: INT(ALIEN[245])
(l.277,c.29) get tok: STRING("ENOTDIR")
(l.277,c.36) get tok: STRING("/**/")
(l.278,c.2) get tok: CONTROL(d)
(l.278,c.19) get tok: REF TAG(macroenotempty)
(l.278,c.20) get tok: STRING(=)
(l.279,c.15) get tok: REF TAG(macroerrdummy)
(l.279,c.16) get tok: STRING(;)
(l.280,c.3) get tok: INT(INT[195])
(l.280,c.14) get tok: REF TAG(enotempty)
(l.280,c.15) get tok: STRING(=)
(l.280,c.21) get tok: INT(ALIEN[245])
(l.280,c.33) get tok: STRING("ENOTEMPTY")
(l.280,c.40) get tok: STRING("/**/")
(l.281,c.2) get tok: CONTROL(d)
(l.281,c.17) get tok: REF TAG(macroenotnam)
(l.281,c.18) get tok: STRING(=)
(l.282,c.15) get tok: REF TAG(macroerrdummy)
(l.282,c.16) get tok: STRING(;)
(l.283,c.3) get tok: INT(INT[195])
(l.283,c.12) get tok: REF TAG(enotnam)
(l.283,c.13) get tok: STRING(=)
(l.283,c.19) get tok: INT(ALIEN[245])
(l.283,c.29) get tok: STRING("ENOTNAM")
(l.283,c.36) get tok: STRING("/**/")
(l.284,c.2) get tok: CONTROL(d)
(l.284,c.18) get tok: REF TAG(macroenotsock)
(l.284,c.19) get tok: STRING(=)
(l.285,c.15) get tok: REF TAG(macroerrdummy)
(l.285,c.16) get tok: STRING(;)
(l.286,c.3) get tok: INT(INT[195])
(l.286,c.13) get tok: REF TAG(enotsock)
(l.286,c.14) get tok: STRING(=)
(l.286,c.20) get tok: INT(ALIEN[245])
(l.286,c.31) get tok: STRING("ENOTSOCK")
(l.286,c.38) get tok: STRING("/**/")
(l.287,c.2) get tok: CONTROL(d)
(l.287,c.16) get tok: REF TAG(macroenotty)
(l.287,c.17) get tok: STRING(=)
(l.288,c.15) get tok: REF TAG(macroerrdummy)
(l.288,c.16) get tok: STRING(;)
(l.289,c.3) get tok: INT(INT[195])
(l.289,c.11) get tok: REF TAG(enotty)
(l.289,c.12) get tok: STRING(=)
(l.289,c.18) get tok: INT(ALIEN[245])
(l.289,c.27) get tok: STRING("ENOTTY")
(l.289,c.34) get tok: STRING("/**/")
(l.290,c.2) get tok: CONTROL(d)
(l.290,c.18) get tok: REF TAG(macroenotuniq)
(l.290,c.19) get tok: STRING(=)
(l.291,c.15) get tok: REF TAG(macroerrdummy)
(l.291,c.16) get tok: STRING(;)
(l.292,c.3) get tok: INT(INT[195])
(l.292,c.13) get tok: REF TAG(enotuniq)
(l.292,c.14) get tok: STRING(=)
(l.292,c.20) get tok: INT(ALIEN[245])
(l.292,c.31) get tok: STRING("ENOTUNIQ")
(l.292,c.38) get tok: STRING("/**/")
(l.293,c.2) get tok: CONTROL(d)
(l.293,c.15) get tok: REF TAG(macroenxio)
(l.293,c.16) get tok: STRING(=)
(l.294,c.15) get tok: REF TAG(macroerrdummy)
(l.294,c.16) get tok: STRING(;)
(l.295,c.3) get tok: INT(INT[195])
(l.295,c.10) get tok: REF TAG(enxio)
(l.295,c.11) get tok: STRING(=)
(l.295,c.17) get tok: INT(ALIEN[245])
(l.295,c.25) get tok: STRING("ENXIO")
(l.295,c.32) get tok: STRING("/**/")
(l.296,c.2) get tok: CONTROL(d)
(l.296,c.20) get tok: REF TAG(macroeopnotsupp)
(l.296,c.21) get tok: STRING(=)
(l.297,c.15) get tok: REF TAG(macroerrdummy)
(l.297,c.16) get tok: STRING(;)
(l.298,c.3) get tok: INT(INT[195])
(l.298,c.15) get tok: REF TAG(eopnotsupp)
(l.298,c.16) get tok: STRING(=)
(l.298,c.22) get tok: INT(ALIEN[245])
(l.298,c.35) get tok: STRING("EOPNOTSUPP")
(l.298,c.42) get tok: STRING("/**/")
(l.299,c.2) get tok: CONTROL(d)
(l.299,c.19) get tok: REF TAG(macroeoverflow)
(l.299,c.20) get tok: STRING(=)
(l.300,c.15) get tok: REF TAG(macroerrdummy)
(l.300,c.16) get tok: STRING(;)
(l.301,c.3) get tok: INT(INT[195])
(l.301,c.14) get tok: REF TAG(eoverflow)
(l.301,c.15) get tok: STRING(=)
(l.301,c.21) get tok: INT(ALIEN[245])
(l.301,c.33) get tok: STRING("EOVERFLOW")
(l.301,c.40) get tok: STRING("/**/")
(l.302,c.2) get tok: CONTROL(d)
(l.302,c.15) get tok: REF TAG(macroeperm)
(l.302,c.16) get tok: STRING(=)
(l.303,c.15) get tok: REF TAG(macroerrdummy)
(l.303,c.16) get tok: STRING(;)
(l.304,c.3) get tok: INT(INT[195])
(l.304,c.10) get tok: REF TAG(eperm)
(l.304,c.11) get tok: STRING(=)
(l.304,c.17) get tok: INT(ALIEN[245])
(l.304,c.25) get tok: STRING("EPERM")
(l.304,c.32) get tok: STRING("/**/")
(l.305,c.2) get tok: CONTROL(d)
(l.305,c.22) get tok: REF TAG(macroepfnosupport)
(l.305,c.23) get tok: STRING(=)
(l.306,c.15) get tok: REF TAG(macroerrdummy)
(l.306,c.16) get tok: STRING(;)
(l.307,c.3) get tok: INT(INT[195])
(l.307,c.17) get tok: REF TAG(epfnosupport)
(l.307,c.18) get tok: STRING(=)
(l.307,c.24) get tok: INT(ALIEN[245])
(l.307,c.39) get tok: STRING("EPFNOSUPPORT")
(l.307,c.46) get tok: STRING("/**/")
(l.308,c.2) get tok: CONTROL(d)
(l.308,c.15) get tok: REF TAG(macroepipe)
(l.308,c.16) get tok: STRING(=)
(l.309,c.15) get tok: REF TAG(macroerrdummy)
(l.309,c.16) get tok: STRING(;)
(l.310,c.3) get tok: INT(INT[195])
(l.310,c.10) get tok: REF TAG(epipe)
(l.310,c.11) get tok: STRING(=)
(l.310,c.17) get tok: INT(ALIEN[245])
(l.310,c.25) get tok: STRING("EPIPE")
(l.310,c.32) get tok: STRING("/**/")
(l.311,c.2) get tok: CONTROL(d)
(l.311,c.16) get tok: REF TAG(macroeproto)
(l.311,c.17) get tok: STRING(=)
(l.312,c.15) get tok: REF TAG(macroerrdummy)
(l.312,c.16) get tok: STRING(;)
(l.313,c.3) get tok: INT(INT[195])
(l.313,c.11) get tok: REF TAG(eproto)
(l.313,c.12) get tok: STRING(=)
(l.313,c.18) get tok: INT(ALIEN[245])
(l.313,c.27) get tok: STRING("EPROTO")
(l.313,c.34) get tok: STRING("/**/")
(l.314,c.2) get tok: CONTROL(d)
(l.314,c.25) get tok: REF TAG(macroeprotonosupport)
(l.314,c.26) get tok: STRING(=)
(l.315,c.15) get tok: REF TAG(macroerrdummy)
(l.315,c.16) get tok: STRING(;)
(l.316,c.3) get tok: INT(INT[195])
(l.316,c.20) get tok: REF TAG(eprotonosupport)
(l.316,c.21) get tok: STRING(=)
(l.316,c.27) get tok: INT(ALIEN[245])
(l.316,c.45) get tok: STRING("EPROTONOSUPPORT")
(l.316,c.52) get tok: STRING("/**/")
(l.317,c.2) get tok: CONTROL(d)
(l.317,c.20) get tok: REF TAG(macroeprototype)
(l.317,c.21) get tok: STRING(=)
(l.318,c.15) get tok: REF TAG(macroerrdummy)
(l.318,c.16) get tok: STRING(;)
(l.319,c.3) get tok: INT(INT[195])
(l.319,c.15) get tok: REF TAG(eprototype)
(l.319,c.16) get tok: STRING(=)
(l.319,c.22) get tok: INT(ALIEN[245])
(l.319,c.35) get tok: STRING("EPROTOTYPE")
(l.319,c.42) get tok: STRING("/**/")
(l.320,c.2) get tok: CONTROL(d)
(l.320,c.16) get tok: REF TAG(macroerange)
(l.320,c.17) get tok: STRING(=)
(l.321,c.15) get tok: REF TAG(macroerrdummy)
(l.321,c.16) get tok: STRING(;)
(l.322,c.3) get tok: INT(INT[195])
(l.322,c.11) get tok: REF TAG(erange)
(l.322,c.12) get tok: STRING(=)
(l.322,c.18) get tok: INT(ALIEN[245])
(l.322,c.27) get tok: STRING("ERANGE")
(l.322,c.34) get tok: STRING("/**/")
(l.323,c.2) get tok: CONTROL(d)
(l.323,c.17) get tok: REF TAG(macroeremchg)
(l.323,c.18) get tok: STRING(=)
(l.324,c.15) get tok: REF TAG(macroerrdummy)
(l.324,c.16) get tok: STRING(;)
(l.325,c.3) get tok: INT(INT[195])
(l.325,c.12) get tok: REF TAG(eremchg)
(l.325,c.13) get tok: STRING(=)
(l.325,c.19) get tok: INT(ALIEN[245])
(l.325,c.29) get tok: STRING("EREMCHG")
(l.325,c.36) get tok: STRING("/**/")
(l.326,c.2) get tok: CONTROL(d)
(l.326,c.17) get tok: REF TAG(macroeremote)
(l.326,c.18) get tok: STRING(=)
(l.327,c.15) get tok: REF TAG(macroerrdummy)
(l.327,c.16) get tok: STRING(;)
(l.328,c.3) get tok: INT(INT[195])
(l.328,c.12) get tok: REF TAG(eremote)
(l.328,c.13) get tok: STRING(=)
(l.328,c.19) get tok: INT(ALIEN[245])
(l.328,c.29) get tok: STRING("EREMOTE")
(l.328,c.36) get tok: STRING("/**/")
(l.329,c.2) get tok: CONTROL(d)
(l.329,c.19) get tok: REF TAG(macroeremoteio)
(l.329,c.20) get tok: STRING(=)
(l.330,c.15) get tok: REF TAG(macroerrdummy)
(l.330,c.16) get tok: STRING(;)
(l.331,c.3) get tok: INT(INT[195])
(l.331,c.14) get tok: REF TAG(eremoteio)
(l.331,c.15) get tok: STRING(=)
(l.331,c.21) get tok: INT(ALIEN[245])
(l.331,c.33) get tok: STRING("EREMOTEIO")
(l.331,c.40) get tok: STRING("/**/")
(l.332,c.2) get tok: CONTROL(d)
(l.332,c.18) get tok: REF TAG(macroerestart)
(l.332,c.19) get tok: STRING(=)
(l.333,c.15) get tok: REF TAG(macroerrdummy)
(l.333,c.16) get tok: STRING(;)
(l.334,c.3) get tok: INT(INT[195])
(l.334,c.13) get tok: REF TAG(erestart)
(l.334,c.14) get tok: STRING(=)
(l.334,c.20) get tok: INT(ALIEN[245])
(l.334,c.31) get tok: STRING("ERESTART")
(l.334,c.38) get tok: STRING("/**/")
(l.335,c.2) get tok: CONTROL(d)
(l.335,c.15) get tok: REF TAG(macroerofs)
(l.335,c.16) get tok: STRING(=)
(l.336,c.15) get tok: REF TAG(macroerrdummy)
(l.336,c.16) get tok: STRING(;)
(l.337,c.3) get tok: INT(INT[195])
(l.337,c.10) get tok: REF TAG(erofs)
(l.337,c.11) get tok: STRING(=)
(l.337,c.17) get tok: INT(ALIEN[245])
(l.337,c.25) get tok: STRING("EROFS")
(l.337,c.32) get tok: STRING("/**/")
(l.338,c.2) get tok: CONTROL(d)
(l.338,c.19) get tok: REF TAG(macroeshutdown)
(l.338,c.20) get tok: STRING(=)
(l.339,c.15) get tok: REF TAG(macroerrdummy)
(l.339,c.16) get tok: STRING(;)
(l.340,c.3) get tok: INT(INT[195])
(l.340,c.14) get tok: REF TAG(eshutdown)
(l.340,c.15) get tok: STRING(=)
(l.340,c.21) get tok: INT(ALIEN[245])
(l.340,c.33) get tok: STRING("ESHUTDOWN")
(l.340,c.40) get tok: STRING("/**/")
(l.341,c.2) get tok: CONTROL(d)
(l.341,c.25) get tok: REF TAG(macroesocktnosupport)
(l.341,c.26) get tok: STRING(=)
(l.342,c.15) get tok: REF TAG(macroerrdummy)
(l.342,c.16) get tok: STRING(;)
(l.343,c.3) get tok: INT(INT[195])
(l.343,c.20) get tok: REF TAG(esocktnosupport)
(l.343,c.21) get tok: STRING(=)
(l.343,c.27) get tok: INT(ALIEN[245])
(l.343,c.45) get tok: STRING("ESOCKTNOSUPPORT")
(l.343,c.52) get tok: STRING("/**/")
(l.344,c.2) get tok: CONTROL(d)
(l.344,c.16) get tok: REF TAG(macroespipe)
(l.344,c.17) get tok: STRING(=)
(l.345,c.15) get tok: REF TAG(macroerrdummy)
(l.345,c.16) get tok: STRING(;)
(l.346,c.3) get tok: INT(INT[195])
(l.346,c.11) get tok: REF TAG(espipe)
(l.346,c.12) get tok: STRING(=)
(l.346,c.18) get tok: INT(ALIEN[245])
(l.346,c.27) get tok: STRING("ESPIPE")
(l.346,c.34) get tok: STRING("/**/")
(l.347,c.2) get tok: CONTROL(d)
(l.347,c.15) get tok: REF TAG(macroesrch)
(l.347,c.16) get tok: STRING(=)
(l.348,c.15) get tok: REF TAG(macroerrdummy)
(l.348,c.16) get tok: STRING(;)
(l.349,c.3) get tok: INT(INT[195])
(l.349,c.10) get tok: REF TAG(esrch)
(l.349,c.11) get tok: STRING(=)
(l.349,c.17) get tok: INT(ALIEN[245])
(l.349,c.25) get tok: STRING("ESRCH")
(l.349,c.32) get tok: STRING("/**/")
(l.350,c.2) get tok: CONTROL(d)
(l.350,c.16) get tok: REF TAG(macroesrmnt)
(l.350,c.17) get tok: STRING(=)
(l.351,c.15) get tok: REF TAG(macroerrdummy)
(l.351,c.16) get tok: STRING(;)
(l.352,c.3) get tok: INT(INT[195])
(l.352,c.11) get tok: REF TAG(esrmnt)
(l.352,c.12) get tok: STRING(=)
(l.352,c.18) get tok: INT(ALIEN[245])
(l.352,c.27) get tok: STRING("ESRMNT")
(l.352,c.34) get tok: STRING("/**/")
(l.353,c.2) get tok: CONTROL(d)
(l.353,c.16) get tok: REF TAG(macroestale)
(l.353,c.17) get tok: STRING(=)
(l.354,c.15) get tok: REF TAG(macroerrdummy)
(l.354,c.16) get tok: STRING(;)
(l.355,c.3) get tok: INT(INT[195])
(l.355,c.11) get tok: REF TAG(estale)
(l.355,c.12) get tok: STRING(=)
(l.355,c.18) get tok: INT(ALIEN[245])
(l.355,c.27) get tok: STRING("ESTALE")
(l.355,c.34) get tok: STRING("/**/")
(l.356,c.2) get tok: CONTROL(d)
(l.356,c.18) get tok: REF TAG(macroestrpipe)
(l.356,c.19) get tok: STRING(=)
(l.357,c.15) get tok: REF TAG(macroerrdummy)
(l.357,c.16) get tok: STRING(;)
(l.358,c.3) get tok: INT(INT[195])
(l.358,c.13) get tok: REF TAG(estrpipe)
(l.358,c.14) get tok: STRING(=)
(l.358,c.20) get tok: INT(ALIEN[245])
(l.358,c.31) get tok: STRING("ESTRPIPE")
(l.358,c.38) get tok: STRING("/**/")
(l.359,c.2) get tok: CONTROL(d)
(l.359,c.15) get tok: REF TAG(macroetime)
(l.359,c.16) get tok: STRING(=)
(l.360,c.15) get tok: REF TAG(macroerrdummy)
(l.360,c.16) get tok: STRING(;)
(l.361,c.3) get tok: INT(INT[195])
(l.361,c.10) get tok: REF TAG(etime)
(l.361,c.11) get tok: STRING(=)
(l.361,c.17) get tok: INT(ALIEN[245])
(l.361,c.25) get tok: STRING("ETIME")
(l.361,c.32) get tok: STRING("/**/")
(l.362,c.2) get tok: CONTROL(d)
(l.362,c.19) get tok: REF TAG(macroetimedout)
(l.362,c.20) get tok: STRING(=)
(l.363,c.15) get tok: REF TAG(macroerrdummy)
(l.363,c.16) get tok: STRING(;)
(l.364,c.3) get tok: INT(INT[195])
(l.364,c.14) get tok: REF TAG(etimedout)
(l.364,c.15) get tok: STRING(=)
(l.364,c.21) get tok: INT(ALIEN[245])
(l.364,c.33) get tok: STRING("ETIMEDOUT")
(l.364,c.40) get tok: STRING("/**/")
(l.365,c.2) get tok: CONTROL(d)
(l.365,c.22) get tok: REF TAG(macroetoomanyrefs)
(l.365,c.23) get tok: STRING(=)
(l.366,c.15) get tok: REF TAG(macroerrdummy)
(l.366,c.16) get tok: STRING(;)
(l.367,c.3) get tok: INT(INT[195])
(l.367,c.17) get tok: REF TAG(etoomanyrefs)
(l.367,c.18) get tok: STRING(=)
(l.367,c.24) get tok: INT(ALIEN[245])
(l.367,c.39) get tok: STRING("ETOOMANYREFS")
(l.367,c.46) get tok: STRING("/**/")
(l.368,c.2) get tok: CONTROL(d)
(l.368,c.17) get tok: REF TAG(macroetxtbsy)
(l.368,c.18) get tok: STRING(=)
(l.369,c.15) get tok: REF TAG(macroerrdummy)
(l.369,c.16) get tok: STRING(;)
(l.370,c.3) get tok: INT(INT[195])
(l.370,c.12) get tok: REF TAG(etxtbsy)
(l.370,c.13) get tok: STRING(=)
(l.370,c.19) get tok: INT(ALIEN[245])
(l.370,c.29) get tok: STRING("ETXTBSY")
(l.370,c.36) get tok: STRING("/**/")
(l.371,c.2) get tok: CONTROL(d)
(l.371,c.17) get tok: REF TAG(macroeuclean)
(l.371,c.18) get tok: STRING(=)
(l.372,c.15) get tok: REF TAG(macroerrdummy)
(l.372,c.16) get tok: STRING(;)
(l.373,c.3) get tok: INT(INT[195])
(l.373,c.12) get tok: REF TAG(euclean)
(l.373,c.13) get tok: STRING(=)
(l.373,c.19) get tok: INT(ALIEN[245])
(l.373,c.29) get tok: STRING("EUCLEAN")
(l.373,c.36) get tok: STRING("/**/")
(l.374,c.2) get tok: CONTROL(d)
(l.374,c.17) get tok: REF TAG(macroeunatch)
(l.374,c.18) get tok: STRING(=)
(l.375,c.15) get tok: REF TAG(macroerrdummy)
(l.375,c.16) get tok: STRING(;)
(l.376,c.3) get tok: INT(INT[195])
(l.376,c.12) get tok: REF TAG(eunatch)
(l.376,c.13) get tok: STRING(=)
(l.376,c.19) get tok: INT(ALIEN[245])
(l.376,c.29) get tok: STRING("EUNATCH")
(l.376,c.36) get tok: STRING("/**/")
(l.377,c.2) get tok: CONTROL(d)
(l.377,c.16) get tok: REF TAG(macroeusers)
(l.377,c.17) get tok: STRING(=)
(l.378,c.15) get tok: REF TAG(macroerrdummy)
(l.378,c.16) get tok: STRING(;)
(l.379,c.3) get tok: INT(INT[195])
(l.379,c.11) get tok: REF TAG(eusers)
(l.379,c.12) get tok: STRING(=)
(l.379,c.18) get tok: INT(ALIEN[245])
(l.379,c.27) get tok: STRING("EUSERS")
(l.379,c.34) get tok: STRING("/**/")
(l.380,c.2) get tok: CONTROL(d)
(l.380,c.21) get tok: REF TAG(macroewouldblock)
(l.380,c.22) get tok: STRING(=)
(l.381,c.15) get tok: REF TAG(macroerrdummy)
(l.381,c.16) get tok: STRING(;)
(l.382,c.3) get tok: INT(INT[195])
(l.382,c.16) get tok: REF TAG(ewouldblock)
(l.382,c.17) get tok: STRING(=)
(l.382,c.23) get tok: INT(ALIEN[245])
(l.382,c.32) get tok: STRING("EAGAIN")
(l.382,c.39) get tok: STRING("/**/")
(l.383,c.2) get tok: CONTROL(d)
(l.383,c.15) get tok: REF TAG(macroexdev)
(l.383,c.16) get tok: STRING(=)
(l.384,c.15) get tok: REF TAG(macroerrdummy)
(l.384,c.16) get tok: STRING(;)
(l.385,c.3) get tok: INT(INT[195])
(l.385,c.10) get tok: REF TAG(exdev)
(l.385,c.11) get tok: STRING(=)
(l.385,c.17) get tok: INT(ALIEN[245])
(l.385,c.25) get tok: STRING("EXDEV")
(l.385,c.32) get tok: STRING("/**/")
(l.386,c.2) get tok: CONTROL(d)
(l.386,c.16) get tok: REF TAG(macroexfull)
(l.386,c.17) get tok: STRING(=)
(l.387,c.15) get tok: REF TAG(macroerrdummy)
(l.387,c.16) get tok: STRING(;)
(l.388,c.3) get tok: INT(INT[195])
(l.388,c.11) get tok: REF TAG(exfull)
(l.388,c.12) get tok: STRING(=)
(l.388,c.18) get tok: INT(ALIEN[245])
(l.388,c.27) get tok: STRING("EXFULL")
(l.388,c.34) get tok: STRING("/**/")
(l.390,c.2) get tok: CONTROL( )
(l.69,c.2) get tok: CONTROL(i)
(l.2,c.2) get tok: CONTROL(2)
(l.27,c.2) get tok: CONTROL(m)
(l.27,c.16) get tok: REF TAG(cvsgprelude)
(l.27,c.17) get tok: STRING(=)
(l.29,c.0) get tok: STRING("$Id: gprelude.w,v 1.4 2004/09/30 13:15:53 sian Exp $")
(l.29,c.2) get tok: CONTROL( )
(l.32,c.2) get tok: CONTROL(2)
(l.46,c.2) get tok: CONTROL(3)
(l.49,c.2) get tok: CONTROL(d)
(l.49,c.23) get tok: REF TAG(macrogpopucchar)
(l.49,c.24) get tok: STRING(=)
(l.50,c.2) get tok: INT(OP[87])
(l.50,c.5) get tok: REF TAG(UC)
(l.50,c.7) get tok: STRING(=)
(l.50,c.9) get tok: STRING(()
(l.50,c.13) get tok: INT(CHAR[113])
(l.50,c.15) get tok: REF TAG(c)
(l.50,c.16) get tok: STRING())
(l.50,c.20) get tok: INT(CHAR[113])
(l.50,c.21) get tok: STRING(:)
(l.50,c.23) get tok: STRING(()
(l.50,c.24) get tok: REF TAG(c)
(l.50,c.26) get tok: STRING(>=)
(l.50,c.29) get tok: STRING("a")
(l.50,c.31) get tok: STRING(&)
(l.50,c.33) get tok: REF TAG(c)
(l.50,c.35) get tok: STRING(<=)
(l.50,c.38) get tok: STRING("z")
(l.50,c.39) get tok: STRING(|)
(l.50,c.43) get tok: INT(REPR[94])
(l.50,c.44) get tok: STRING(()
(l.50,c.47) get tok: INT(ABS[226])
(l.50,c.49) get tok: REF TAG(c)
(l.50,c.50) get tok: STRING(-)
(l.50,c.52) get tok: STRING(32)
(l.50,c.53) get tok: STRING())
(l.50,c.54) get tok: STRING(|)
(l.50,c.55) get tok: REF TAG(c)
(l.50,c.56) get tok: STRING())
(l.52,c.2) get tok: CONTROL(d)
(l.52,c.27) get tok: REF TAG(macrogpopucrowchar)
(l.52,c.28) get tok: STRING(=)
(l.53,c.19) get tok: REF TAG(macrogpopucchar)
(l.53,c.20) get tok: STRING(;)
(l.54,c.2) get tok: INT(OP[87])
(l.54,c.5) get tok: REF TAG(UC)
(l.54,c.7) get tok: STRING(=)
(l.54,c.9) get tok: STRING(()
(l.54,c.10) get tok: STRING([)
(l.54,c.11) get tok: STRING(])
(l.54,c.15) get tok: INT(CHAR[113])
(l.54,c.17) get tok: REF TAG(s)
(l.54,c.18) get tok: STRING())
(l.54,c.19) get tok: STRING([)
(l.54,c.20) get tok: STRING(])
(l.54,c.24) get tok: INT(CHAR[113])
(l.55,c.0) get tok: STRING(:)
(l.55,c.1) get tok: STRING(()
(l.56,c.1) get tok: STRING([)
(l.56,c.4) get tok: INT(LWB[148])
(l.56,c.6) get tok: REF TAG(s)
(l.56,c.7) get tok: STRING(:)
(l.56,c.10) get tok: INT(UPB[150])
(l.56,c.12) get tok: REF TAG(s)
(l.56,c.13) get tok: STRING(])
(l.56,c.17) get tok: INT(CHAR[113])
(l.56,c.20) get tok: REF TAG(ss)
(l.56,c.21) get tok: STRING(;)
(l.57,c.3) get tok: INT(FOR[138])
(l.57,c.6) get tok: REF TAG(i)
(l.57,c.10) get tok: INT(FROM[176])
(l.57,c.14) get tok: INT(LWB[148])
(l.57,c.18) get tok: REF TAG(ss)
(l.57,c.20) get tok: INT(TO[187])
(l.57,c.24) get tok: INT(UPB[150])
(l.58,c.0) get tok: REF TAG(ss)
(l.58,c.2) get tok: INT(DO[244])
(l.59,c.2) get tok: REF TAG(ss)
(l.59,c.3) get tok: STRING([)
(l.59,c.4) get tok: REF TAG(i)
(l.59,c.5) get tok: STRING(])
(l.59,c.7) get tok: STRING(:=)
(l.59,c.9) get tok: REF TAG(UC)
(l.59,c.11) get tok: REF TAG(s)
(l.59,c.12) get tok: STRING([)
(l.59,c.13) get tok: REF TAG(i)
(l.59,c.14) get tok: STRING(])
(l.60,c.2) get tok: INT(OD[231])
(l.60,c.3) get tok: STRING(;)
(l.62,c.0) get tok: REF TAG(ss)
(l.62,c.1) get tok: STRING())
(l.64,c.2) get tok: CONTROL( )
(l.66,c.2) get tok: CONTROL(d)
(l.66,c.23) get tok: REF TAG(macrogpoplcchar)
(l.66,c.24) get tok: STRING(=)
(l.66,c.27) get tok: INT(OP[87])
(l.66,c.30) get tok: REF TAG(LC)
(l.66,c.32) get tok: STRING(=)
(l.66,c.34) get tok: STRING(()
(l.66,c.38) get tok: INT(CHAR[113])
(l.66,c.40) get tok: REF TAG(c)
(l.66,c.41) get tok: STRING())
(l.66,c.45) get tok: INT(CHAR[113])
(l.66,c.46) get tok: STRING(:)
(l.66,c.48) get tok: STRING(()
(l.66,c.49) get tok: REF TAG(c)
(l.66,c.51) get tok: STRING(>=)
(l.66,c.54) get tok: STRING("A")
(l.66,c.56) get tok: STRING(&)
(l.66,c.58) get tok: REF TAG(c)
(l.66,c.60) get tok: STRING(<=)
(l.66,c.63) get tok: STRING("Z")
(l.66,c.64) get tok: STRING(|)
(l.66,c.68) get tok: INT(REPR[94])
(l.66,c.69) get tok: STRING(()
(l.66,c.72) get tok: INT(ABS[226])
(l.66,c.74) get tok: REF TAG(c)
(l.66,c.75) get tok: STRING(+)
(l.66,c.77) get tok: STRING(32)
(l.66,c.78) get tok: STRING())
(l.66,c.79) get tok: STRING(|)
(l.66,c.80) get tok: REF TAG(c)
(l.66,c.81) get tok: STRING())
(l.68,c.2) get tok: CONTROL( )
(l.68,c.4) get tok: CONTROL(d)
(l.68,c.29) get tok: REF TAG(macrogpoplcrowchar)
(l.68,c.30) get tok: STRING(=)
(l.69,c.19) get tok: REF TAG(macrogpoplcchar)
(l.69,c.20) get tok: STRING(;)
(l.70,c.2) get tok: INT(OP[87])
(l.70,c.5) get tok: REF TAG(LC)
(l.70,c.7) get tok: STRING(=)
(l.70,c.9) get tok: STRING(()
(l.70,c.10) get tok: STRING([)
(l.70,c.11) get tok: STRING(])
(l.70,c.15) get tok: INT(CHAR[113])
(l.70,c.17) get tok: REF TAG(s)
(l.70,c.18) get tok: STRING())
(l.70,c.19) get tok: STRING([)
(l.70,c.20) get tok: STRING(])
(l.70,c.24) get tok: INT(CHAR[113])
(l.71,c.0) get tok: STRING(:)
(l.71,c.1) get tok: STRING(()
(l.72,c.1) get tok: STRING([)
(l.72,c.4) get tok: INT(LWB[148])
(l.72,c.6) get tok: REF TAG(s)
(l.72,c.7) get tok: STRING(:)
(l.72,c.10) get tok: INT(UPB[150])
(l.72,c.12) get tok: REF TAG(s)
(l.72,c.13) get tok: STRING(])
(l.72,c.17) get tok: INT(CHAR[113])
(l.72,c.20) get tok: REF TAG(ss)
(l.72,c.21) get tok: STRING(;)
(l.73,c.3) get tok: INT(FOR[138])
(l.73,c.6) get tok: REF TAG(i)
(l.73,c.10) get tok: INT(FROM[176])
(l.73,c.14) get tok: INT(LWB[148])
(l.73,c.18) get tok: REF TAG(ss)
(l.73,c.20) get tok: INT(TO[187])
(l.73,c.24) get tok: INT(UPB[150])
(l.74,c.0) get tok: REF TAG(ss)
(l.74,c.2) get tok: INT(DO[244])
(l.75,c.2) get tok: REF TAG(ss)
(l.75,c.3) get tok: STRING([)
(l.75,c.4) get tok: REF TAG(i)
(l.75,c.5) get tok: STRING(])
(l.75,c.7) get tok: STRING(:=)
(l.75,c.9) get tok: REF TAG(LC)
(l.75,c.11) get tok: REF TAG(s)
(l.75,c.12) get tok: STRING([)
(l.75,c.13) get tok: REF TAG(i)
(l.75,c.14) get tok: STRING(])
(l.76,c.2) get tok: INT(OD[231])
(l.76,c.3) get tok: STRING(;)
(l.78,c.0) get tok: REF TAG(ss)
(l.78,c.1) get tok: STRING())
(l.80,c.2) get tok: CONTROL(3)
(l.89,c.2) get tok: CONTROL(d)
(l.89,c.20) get tok: REF TAG(macroprioafter)
(l.89,c.21) get tok: STRING(=)
(l.89,c.26) get tok: INT(PRIO[134])
(l.89,c.29) get tok: CONTROL(!)
(l.89,c.34) get tok: INT(AFTER[168])
(l.89,c.36) get tok: STRING(=)
(l.90,c.0) get tok: STRING(6)
(l.90,c.2) get tok: CONTROL(d)
(l.90,c.19) get tok: REF TAG(macroprioupto)
(l.90,c.20) get tok: STRING(=)
(l.90,c.25) get tok: INT(PRIO[134])
(l.90,c.28) get tok: CONTROL(!)
(l.90,c.32) get tok: REF TAG(UPTO)
(l.90,c.34) get tok: STRING(=)
(l.91,c.0) get tok: STRING(5)
(l.91,c.2) get tok: CONTROL(d)
(l.91,c.21) get tok: REF TAG(macropriodownto)
(l.91,c.22) get tok: STRING(=)
(l.91,c.27) get tok: INT(PRIO[134])
(l.91,c.30) get tok: CONTROL(!)
(l.91,c.36) get tok: REF TAG(DOWNTO)
(l.91,c.38) get tok: STRING(=)
(l.93,c.0) get tok: STRING(5)
(l.93,c.2) get tok: CONTROL( )
(l.96,c.2) get tok: CONTROL(d)
(l.96,c.20) get tok: REF TAG(macrogpopupto)
(l.96,c.21) get tok: STRING(=)
(l.97,c.15) get tok: REF TAG(macroprioupto)
(l.97,c.16) get tok: STRING(;)
(l.98,c.2) get tok: INT(OP[87])
(l.98,c.7) get tok: REF TAG(UPTO)
(l.98,c.9) get tok: STRING(=)
(l.98,c.11) get tok: STRING(()
(l.98,c.12) get tok: STRING([)
(l.98,c.13) get tok: STRING(])
(l.98,c.17) get tok: INT(CHAR[113])
(l.98,c.19) get tok: REF TAG(s)
(l.98,c.20) get tok: STRING(,)
(l.98,c.25) get tok: INT(CHAR[113])
(l.98,c.27) get tok: REF TAG(t)
(l.98,c.28) get tok: STRING())
(l.98,c.29) get tok: STRING([)
(l.98,c.30) get tok: STRING(])
(l.98,c.34) get tok: INT(CHAR[113])
(l.98,c.35) get tok: STRING(:)
(l.99,c.2) get tok: INT(IF[62])
(l.99,c.6) get tok: INT(INT[195])
(l.99,c.12) get tok: REF TAG(toix)
(l.99,c.13) get tok: STRING(;)
(l.99,c.28) get tok: REF TAG(charinstring)
(l.99,c.29) get tok: STRING(()
(l.99,c.30) get tok: REF TAG(t)
(l.99,c.31) get tok: STRING(,)
(l.99,c.36) get tok: REF TAG(toix)
(l.99,c.37) get tok: STRING(,)
(l.99,c.38) get tok: REF TAG(s)
(l.99,c.39) get tok: STRING())
(l.100,c.4) get tok: INT(THEN[190])
(l.100,c.7) get tok: REF TAG(s)
(l.100,c.8) get tok: STRING([)
(l.100,c.10) get tok: STRING(:)
(l.100,c.16) get tok: REF TAG(toix)
(l.100,c.17) get tok: STRING(-)
(l.100,c.18) get tok: STRING(1)
(l.100,c.20) get tok: CONTROL(@)
(l.100,c.23) get tok: INT(LWB[148])
(l.100,c.25) get tok: REF TAG(s)
(l.100,c.26) get tok: STRING(])
(l.101,c.4) get tok: INT(ELSE[4])
(l.102,c.0) get tok: REF TAG(s)
(l.102,c.2) get tok: INT(FI[107])
(l.104,c.2) get tok: CONTROL(d)
(l.104,c.22) get tok: REF TAG(macrogpopdownto)
(l.104,c.23) get tok: STRING(=)
(l.105,c.17) get tok: REF TAG(macropriodownto)
(l.105,c.18) get tok: STRING(;)
(l.106,c.2) get tok: INT(OP[87])
(l.106,c.9) get tok: REF TAG(DOWNTO)
(l.106,c.11) get tok: STRING(=)
(l.106,c.13) get tok: STRING(()
(l.106,c.14) get tok: STRING([)
(l.106,c.15) get tok: STRING(])
(l.106,c.19) get tok: INT(CHAR[113])
(l.106,c.21) get tok: REF TAG(s)
(l.106,c.22) get tok: STRING(,)
(l.106,c.27) get tok: INT(CHAR[113])
(l.106,c.29) get tok: REF TAG(t)
(l.106,c.30) get tok: STRING())
(l.106,c.31) get tok: STRING([)
(l.106,c.32) get tok: STRING(])
(l.106,c.36) get tok: INT(CHAR[113])
(l.106,c.37) get tok: STRING(:)
(l.107,c.2) get tok: INT(IF[62])
(l.107,c.6) get tok: INT(INT[195])
(l.107,c.12) get tok: REF TAG(toix)
(l.107,c.14) get tok: STRING(:=)
(l.107,c.17) get tok: INT(UPB[150])
(l.107,c.19) get tok: REF TAG(s)
(l.107,c.20) get tok: STRING(+)
(l.107,c.21) get tok: STRING(1)
(l.107,c.22) get tok: STRING(;)
(l.108,c.3) get tok: INT(FOR[138])
(l.108,c.6) get tok: REF TAG(i)
(l.108,c.10) get tok: INT(FROM[176])
(l.108,c.14) get tok: INT(UPB[150])
(l.108,c.17) get tok: REF TAG(s)
(l.108,c.19) get tok: INT(BY[237])
(l.108,c.23) get tok: STRING(---)
(l.108,c.25) get tok: STRING(1)
(l.108,c.27) get tok: INT(TO[187])
(l.108,c.31) get tok: INT(LWB[148])
(l.108,c.34) get tok: REF TAG(s)
(l.108,c.39) get tok: INT(WHILE[99])
(l.108,c.41) get tok: REF TAG(s)
(l.108,c.42) get tok: STRING([)
(l.108,c.43) get tok: REF TAG(i)
(l.108,c.44) get tok: STRING(])
(l.108,c.46) get tok: STRING(/=)
(l.109,c.0) get tok: REF TAG(t)
(l.109,c.2) get tok: INT(DO[244])
(l.110,c.5) get tok: REF TAG(toix)
(l.110,c.7) get tok: STRING(:=)
(l.111,c.0) get tok: REF TAG(i)
(l.111,c.2) get tok: INT(OD[231])
(l.111,c.3) get tok: STRING(;)
(l.112,c.5) get tok: REF TAG(toix)
(l.112,c.6) get tok: STRING(>)
(l.112,c.9) get tok: INT(UPB[150])
(l.113,c.0) get tok: REF TAG(s)
(l.113,c.4) get tok: INT(THEN[190])
(l.114,c.0) get tok: REF TAG(s)
(l.114,c.4) get tok: INT(ELSE[4])
(l.114,c.6) get tok: REF TAG(s)
(l.114,c.7) get tok: STRING([)
(l.114,c.13) get tok: REF TAG(toix)
(l.114,c.14) get tok: STRING(:)
(l.114,c.17) get tok: CONTROL(@)
(l.114,c.22) get tok: REF TAG(toix)
(l.114,c.23) get tok: STRING(])
(l.115,c.2) get tok: INT(FI[107])
(l.117,c.2) get tok: CONTROL(d)
(l.117,c.21) get tok: REF TAG(macrogpopafter)
(l.117,c.22) get tok: STRING(=)
(l.118,c.16) get tok: REF TAG(macroprioafter)
(l.118,c.17) get tok: STRING(;)
(l.119,c.2) get tok: INT(OP[87])
(l.119,c.8) get tok: INT(AFTER[168])
(l.119,c.10) get tok: STRING(=)
(l.119,c.12) get tok: STRING(()
(l.119,c.13) get tok: STRING([)
(l.119,c.14) get tok: STRING(])
(l.119,c.18) get tok: INT(CHAR[113])
(l.119,c.20) get tok: REF TAG(s)
(l.119,c.21) get tok: STRING(,)
(l.119,c.26) get tok: INT(CHAR[113])
(l.119,c.28) get tok: REF TAG(t)
(l.119,c.29) get tok: STRING())
(l.119,c.31) get tok: STRING([)
(l.119,c.32) get tok: STRING(])
(l.119,c.36) get tok: INT(CHAR[113])
(l.120,c.0) get tok: STRING(:)
(l.120,c.2) get tok: INT(IF[62])
(l.120,c.6) get tok: INT(INT[195])
(l.120,c.12) get tok: REF TAG(toix)
(l.120,c.13) get tok: STRING(;)
(l.120,c.28) get tok: REF TAG(charinstring)
(l.120,c.29) get tok: STRING(()
(l.120,c.30) get tok: REF TAG(t)
(l.120,c.31) get tok: STRING(,)
(l.120,c.36) get tok: REF TAG(toix)
(l.120,c.37) get tok: STRING(,)
(l.120,c.38) get tok: REF TAG(s)
(l.120,c.39) get tok: STRING())
(l.121,c.4) get tok: INT(THEN[190])
(l.121,c.7) get tok: REF TAG(s)
(l.121,c.8) get tok: STRING([)
(l.121,c.13) get tok: REF TAG(toix)
(l.121,c.14) get tok: STRING(+)
(l.121,c.15) get tok: STRING(1)
(l.121,c.16) get tok: STRING(:)
(l.121,c.18) get tok: CONTROL(@)
(l.121,c.23) get tok: REF TAG(toix)
(l.121,c.24) get tok: STRING(+)
(l.121,c.25) get tok: STRING(1)
(l.121,c.26) get tok: STRING(])
(l.122,c.4) get tok: INT(ELSE[4])
(l.123,c.0) get tok: STRING("")
(l.123,c.2) get tok: INT(FI[107])
(l.125,c.2) get tok: CONTROL( )
(l.128,c.2) get tok: CONTROL(d)
(l.128,c.26) get tok: REF TAG(macrogpopminuschar)
(l.128,c.27) get tok: STRING(=)
(l.129,c.2) get tok: INT(OP[87])
(l.129,c.4) get tok: STRING(-)
(l.129,c.6) get tok: STRING(=)
(l.129,c.8) get tok: STRING(()
(l.129,c.12) get tok: INT(CHAR[113])
(l.129,c.14) get tok: REF TAG(a)
(l.129,c.15) get tok: STRING(,)
(l.129,c.16) get tok: REF TAG(b)
(l.129,c.17) get tok: STRING())
(l.129,c.18) get tok: STRING([)
(l.129,c.19) get tok: STRING(])
(l.129,c.23) get tok: INT(CHAR[113])
(l.130,c.0) get tok: STRING(:)
(l.130,c.2) get tok: INT(IF[62])
(l.130,c.6) get tok: INT(ABS[226])
(l.130,c.9) get tok: REF TAG(a)
(l.130,c.11) get tok: STRING(<=)
(l.130,c.15) get tok: INT(ABS[226])
(l.131,c.0) get tok: REF TAG(b)
(l.131,c.4) get tok: INT(THEN[190])
(l.132,c.1) get tok: STRING([)
(l.132,c.4) get tok: INT(ABS[226])
(l.132,c.6) get tok: REF TAG(a)
(l.132,c.7) get tok: STRING(:)
(l.132,c.10) get tok: INT(ABS[226])
(l.132,c.12) get tok: REF TAG(b)
(l.132,c.13) get tok: STRING(])
(l.132,c.17) get tok: INT(CHAR[113])
(l.132,c.19) get tok: REF TAG(s)
(l.132,c.20) get tok: STRING(;)
(l.133,c.3) get tok: INT(FOR[138])
(l.133,c.6) get tok: REF TAG(i)
(l.133,c.10) get tok: INT(FROM[176])
(l.133,c.14) get tok: INT(LWB[148])
(l.133,c.17) get tok: REF TAG(s)
(l.133,c.19) get tok: INT(TO[187])
(l.133,c.23) get tok: INT(UPB[150])
(l.133,c.26) get tok: REF TAG(s)
(l.133,c.28) get tok: INT(DO[244])
(l.133,c.30) get tok: REF TAG(s)
(l.133,c.31) get tok: STRING([)
(l.133,c.32) get tok: REF TAG(i)
(l.133,c.33) get tok: STRING(])
(l.133,c.35) get tok: STRING(:=)
(l.133,c.39) get tok: INT(REPR[94])
(l.133,c.42) get tok: REF TAG(i)
(l.133,c.44) get tok: INT(OD[231])
(l.133,c.45) get tok: STRING(;)
(l.135,c.0) get tok: REF TAG(s)
(l.135,c.4) get tok: INT(ELSE[4])
(l.136,c.1) get tok: STRING([)
(l.136,c.4) get tok: INT(ABS[226])
(l.136,c.6) get tok: REF TAG(b)
(l.136,c.7) get tok: STRING(:)
(l.136,c.10) get tok: INT(ABS[226])
(l.136,c.12) get tok: REF TAG(a)
(l.136,c.13) get tok: STRING(])
(l.136,c.17) get tok: INT(CHAR[113])
(l.136,c.19) get tok: REF TAG(s)
(l.136,c.20) get tok: STRING(;)
(l.137,c.3) get tok: INT(FOR[138])
(l.137,c.6) get tok: REF TAG(i)
(l.137,c.10) get tok: INT(FROM[176])
(l.137,c.14) get tok: INT(LWB[148])
(l.137,c.17) get tok: REF TAG(s)
(l.137,c.19) get tok: INT(TO[187])
(l.137,c.23) get tok: INT(UPB[150])
(l.137,c.26) get tok: REF TAG(s)
(l.137,c.28) get tok: INT(DO[244])
(l.137,c.30) get tok: REF TAG(s)
(l.137,c.31) get tok: STRING([)
(l.137,c.32) get tok: REF TAG(i)
(l.137,c.33) get tok: STRING(])
(l.137,c.35) get tok: STRING(:=)
(l.137,c.39) get tok: INT(REPR[94])
(l.137,c.42) get tok: REF TAG(i)
(l.137,c.44) get tok: INT(OD[231])
(l.137,c.45) get tok: STRING(;)
(l.139,c.0) get tok: REF TAG(s)
(l.139,c.2) get tok: INT(FI[107])
(l.141,c.2) get tok: CONTROL( )
(l.144,c.2) get tok: CONTROL(d)
(l.144,c.20) get tok: REF TAG(macrogpoptrim)
(l.144,c.21) get tok: STRING(=)
(l.145,c.2) get tok: INT(OP[87])
(l.145,c.7) get tok: REF TAG(TRIM)
(l.145,c.9) get tok: STRING(=)
(l.145,c.11) get tok: STRING(()
(l.145,c.12) get tok: STRING([)
(l.145,c.13) get tok: STRING(])
(l.145,c.18) get tok: INT(CHAR[113])
(l.145,c.20) get tok: REF TAG(s)
(l.145,c.21) get tok: STRING())
(l.145,c.22) get tok: STRING([)
(l.145,c.23) get tok: STRING(])
(l.145,c.28) get tok: INT(CHAR[113])
(l.146,c.0) get tok: STRING(:)
(l.146,c.1) get tok: STRING(()
(l.147,c.3) get tok: INT(INT[195])
(l.147,c.6) get tok: REF TAG(l)
(l.147,c.8) get tok: STRING(:=)
(l.147,c.12) get tok: INT(LWB[148])
(l.147,c.14) get tok: REF TAG(s)
(l.147,c.15) get tok: STRING(;)
(l.148,c.4) get tok: INT(FROM[176])
(l.148,c.8) get tok: INT(LWB[148])
(l.148,c.11) get tok: REF TAG(s)
(l.148,c.13) get tok: INT(TO[187])
(l.148,c.17) get tok: INT(UPB[150])
(l.148,c.22) get tok: REF TAG(s)
(l.148,c.27) get tok: INT(WHILE[99])
(l.148,c.30) get tok: REF TAG(s)
(l.148,c.31) get tok: STRING([)
(l.148,c.32) get tok: REF TAG(l)
(l.148,c.33) get tok: STRING(])
(l.148,c.36) get tok: STRING(<=)
(l.148,c.40) get tok: STRING(" ")
(l.148,c.43) get tok: INT(DO[244])
(l.148,c.46) get tok: REF TAG(l)
(l.148,c.49) get tok: STRING(+:=)
(l.148,c.52) get tok: STRING(1)
(l.148,c.54) get tok: INT(OD[231])
(l.148,c.55) get tok: STRING(;)
(l.150,c.3) get tok: INT(INT[195])
(l.150,c.6) get tok: REF TAG(u)
(l.150,c.8) get tok: STRING(:=)
(l.150,c.12) get tok: INT(UPB[150])
(l.150,c.14) get tok: REF TAG(s)
(l.150,c.15) get tok: STRING(;)
(l.151,c.4) get tok: INT(FROM[176])
(l.151,c.8) get tok: INT(UPB[150])
(l.151,c.11) get tok: REF TAG(s)
(l.151,c.13) get tok: INT(BY[237])
(l.151,c.17) get tok: STRING(---)
(l.151,c.19) get tok: STRING(1)
(l.151,c.21) get tok: INT(TO[187])
(l.151,c.24) get tok: REF TAG(l)
(l.151,c.29) get tok: INT(WHILE[99])
(l.151,c.32) get tok: REF TAG(s)
(l.151,c.33) get tok: STRING([)
(l.151,c.34) get tok: REF TAG(u)
(l.151,c.35) get tok: STRING(])
(l.151,c.38) get tok: STRING(<=)
(l.151,c.42) get tok: STRING(" ")
(l.151,c.45) get tok: INT(DO[244])
(l.151,c.48) get tok: REF TAG(u)
(l.151,c.51) get tok: STRING(-:=)
(l.151,c.54) get tok: STRING(1)
(l.151,c.56) get tok: INT(OD[231])
(l.151,c.57) get tok: STRING(;)
(l.153,c.1) get tok: STRING(()
(l.153,c.3) get tok: REF TAG(l)
(l.153,c.4) get tok: STRING(>)
(l.153,c.7) get tok: REF TAG(u)
(l.153,c.8) get tok: STRING(|)
(l.153,c.11) get tok: REF TAG(s)
(l.153,c.12) get tok: STRING([)
(l.153,c.15) get tok: INT(LWB[148])
(l.153,c.18) get tok: REF TAG(s)
(l.153,c.19) get tok: STRING(:)
(l.153,c.23) get tok: INT(LWB[148])
(l.153,c.26) get tok: REF TAG(s)
(l.153,c.27) get tok: STRING(-)
(l.153,c.28) get tok: STRING(1)
(l.153,c.30) get tok: CONTROL(@)
(l.153,c.33) get tok: INT(LWB[148])
(l.153,c.36) get tok: REF TAG(s)
(l.153,c.37) get tok: STRING(-)
(l.153,c.38) get tok: STRING(1)
(l.153,c.39) get tok: STRING(])
(l.153,c.41) get tok: STRING(|)
(l.153,c.44) get tok: REF TAG(s)
(l.153,c.45) get tok: STRING([)
(l.153,c.46) get tok: REF TAG(l)
(l.153,c.47) get tok: STRING(:)
(l.153,c.48) get tok: REF TAG(u)
(l.153,c.50) get tok: CONTROL(@)
(l.153,c.51) get tok: REF TAG(l)
(l.153,c.52) get tok: STRING(])
(l.153,c.53) get tok: STRING())
(l.154,c.1) get tok: STRING())
(l.157,c.2) get tok: CONTROL( )
(l.160,c.2) get tok: CONTROL(d)
(l.160,c.21) get tok: REF TAG(macropriobegins)
(l.160,c.22) get tok: STRING(=)
(l.160,c.27) get tok: INT(PRIO[134])
(l.160,c.30) get tok: CONTROL(!)
(l.160,c.36) get tok: REF TAG(BEGINS)
(l.160,c.38) get tok: STRING(=)
(l.161,c.0) get tok: STRING(4)
(l.161,c.2) get tok: CONTROL(d)
(l.161,c.19) get tok: REF TAG(macroprioends)
(l.161,c.20) get tok: STRING(=)
(l.161,c.25) get tok: INT(PRIO[134])
(l.161,c.28) get tok: CONTROL(!)
(l.161,c.32) get tok: REF TAG(ENDS)
(l.161,c.34) get tok: STRING(=)
(l.163,c.0) get tok: STRING(4)
(l.163,c.2) get tok: CONTROL(d)
(l.163,c.22) get tok: REF TAG(macrogpopbegins)
(l.163,c.23) get tok: STRING(=)
(l.164,c.17) get tok: REF TAG(macropriobegins)
(l.164,c.18) get tok: STRING(;)
(l.165,c.2) get tok: INT(OP[87])
(l.165,c.9) get tok: REF TAG(BEGINS)
(l.165,c.11) get tok: STRING(=)
(l.165,c.13) get tok: STRING(()
(l.165,c.14) get tok: STRING([)
(l.165,c.15) get tok: STRING(])
(l.165,c.19) get tok: INT(CHAR[113])
(l.165,c.21) get tok: REF TAG(s)
(l.165,c.22) get tok: STRING(,)
(l.165,c.26) get tok: INT(CHAR[113])
(l.165,c.28) get tok: REF TAG(c)
(l.165,c.29) get tok: STRING())
(l.165,c.33) get tok: INT(BOOL[184])
(l.165,c.34) get tok: STRING(:)
(l.165,c.36) get tok: REF TAG(s)
(l.165,c.37) get tok: STRING([)
(l.165,c.40) get tok: INT(LWB[148])
(l.165,c.42) get tok: REF TAG(s)
(l.165,c.43) get tok: STRING(])
(l.165,c.44) get tok: STRING(=)
(l.166,c.0) get tok: REF TAG(c)
(l.166,c.2) get tok: CONTROL(d)
(l.166,c.20) get tok: REF TAG(macrogpopends)
(l.166,c.21) get tok: STRING(=)
(l.167,c.15) get tok: REF TAG(macroprioends)
(l.167,c.16) get tok: STRING(;)
(l.168,c.2) get tok: INT(OP[87])
(l.168,c.7) get tok: REF TAG(ENDS)
(l.168,c.9) get tok: STRING(=)
(l.168,c.11) get tok: STRING(()
(l.168,c.12) get tok: STRING([)
(l.168,c.13) get tok: STRING(])
(l.168,c.17) get tok: INT(CHAR[113])
(l.168,c.19) get tok: REF TAG(s)
(l.168,c.20) get tok: STRING(,)
(l.168,c.24) get tok: INT(CHAR[113])
(l.168,c.26) get tok: REF TAG(c)
(l.168,c.27) get tok: STRING())
(l.168,c.31) get tok: INT(BOOL[184])
(l.168,c.32) get tok: STRING(:)
(l.168,c.34) get tok: REF TAG(s)
(l.168,c.35) get tok: STRING([)
(l.168,c.38) get tok: INT(UPB[150])
(l.168,c.40) get tok: REF TAG(s)
(l.168,c.41) get tok: STRING(])
(l.168,c.42) get tok: STRING(=)
(l.170,c.0) get tok: REF TAG(c)
(l.170,c.2) get tok: CONTROL(3)
(l.173,c.2) get tok: CONTROL(d)
(l.173,c.19) get tok: REF TAG(macropriofind)
(l.173,c.20) get tok: STRING(=)
(l.173,c.25) get tok: INT(PRIO[134])
(l.173,c.28) get tok: CONTROL(!)
(l.173,c.32) get tok: INT(FIND[131])
(l.173,c.34) get tok: STRING(=)
(l.175,c.0) get tok: STRING(6)
(l.175,c.2) get tok: CONTROL( )
(l.189,c.2) get tok: CONTROL(d)
(l.189,c.34) get tok: REF TAG(macrogpopfindcharrowchar)
(l.189,c.35) get tok: STRING(=)
(l.190,c.15) get tok: REF TAG(macropriofind)
(l.190,c.16) get tok: STRING(;)
(l.191,c.2) get tok: INT(OP[87])
(l.191,c.7) get tok: INT(FIND[131])
(l.191,c.9) get tok: STRING(=)
(l.191,c.11) get tok: STRING(()
(l.191,c.15) get tok: INT(CHAR[113])
(l.191,c.17) get tok: REF TAG(c)
(l.191,c.18) get tok: STRING(,)
(l.191,c.20) get tok: STRING([)
(l.191,c.21) get tok: STRING(])
(l.191,c.26) get tok: INT(CHAR[113])
(l.191,c.28) get tok: REF TAG(s)
(l.191,c.29) get tok: STRING())
(l.191,c.32) get tok: INT(INT[195])
(l.192,c.0) get tok: STRING(:)
(l.192,c.1) get tok: STRING(()
(l.192,c.4) get tok: INT(INT[195])
(l.192,c.6) get tok: REF TAG(p)
(l.192,c.7) get tok: STRING(;)
(l.192,c.22) get tok: REF TAG(charinstring)
(l.192,c.23) get tok: STRING(()
(l.192,c.24) get tok: REF TAG(c)
(l.192,c.25) get tok: STRING(,)
(l.192,c.26) get tok: REF TAG(p)
(l.192,c.27) get tok: STRING(,)
(l.192,c.28) get tok: REF TAG(s)
(l.192,c.29) get tok: STRING())
(l.192,c.30) get tok: STRING(|)
(l.192,c.31) get tok: REF TAG(p)
(l.192,c.32) get tok: STRING(|)
(l.192,c.35) get tok: INT(LWB[148])
(l.192,c.37) get tok: REF TAG(s)
(l.192,c.38) get tok: STRING(-)
(l.192,c.39) get tok: STRING(1)
(l.192,c.40) get tok: STRING())
(l.194,c.2) get tok: CONTROL(d)
(l.194,c.38) get tok: REF TAG(macrogpopfindrowcharrowchar)
(l.194,c.39) get tok: STRING(=)
(l.195,c.30) get tok: REF TAG(macrogpopfindcharrowchar)
(l.195,c.31) get tok: STRING(;)
(l.196,c.2) get tok: INT(OP[87])
(l.196,c.7) get tok: INT(FIND[131])
(l.196,c.9) get tok: STRING(=)
(l.196,c.11) get tok: STRING(()
(l.196,c.12) get tok: STRING([)
(l.196,c.13) get tok: STRING(])
(l.196,c.17) get tok: INT(CHAR[113])
(l.196,c.19) get tok: REF TAG(a)
(l.196,c.20) get tok: STRING(,)
(l.196,c.21) get tok: REF TAG(b)
(l.196,c.22) get tok: STRING())
(l.196,c.25) get tok: INT(INT[195])
(l.197,c.0) get tok: STRING(:)
(l.197,c.2) get tok: INT(IF[62])
(l.197,c.5) get tok: REF TAG(a)
(l.197,c.6) get tok: STRING(=)
(l.197,c.9) get tok: STRING("")
(l.197,c.11) get tok: CONTROL(+)
(l.197,c.50) get tok: INT(THEN[190])
(l.197,c.54) get tok: INT(LWB[148])
(l.198,c.0) get tok: REF TAG(b)
(l.198,c.4) get tok: INT(ELIF[9])
(l.198,c.7) get tok: REF TAG(b)
(l.198,c.8) get tok: STRING(=)
(l.198,c.11) get tok: STRING("")
(l.198,c.13) get tok: CONTROL(+)
(l.198,c.50) get tok: INT(THEN[190])
(l.198,c.54) get tok: INT(LWB[148])
(l.198,c.56) get tok: REF TAG(b)
(l.198,c.57) get tok: STRING(-)
(l.199,c.0) get tok: STRING(1)
(l.199,c.4) get tok: INT(ELIF[9])
(l.199,c.8) get tok: INT(INT[195])
(l.199,c.13) get tok: REF TAG(st1)
(l.199,c.14) get tok: STRING(=)
(l.199,c.16) get tok: REF TAG(a)
(l.199,c.17) get tok: STRING([)
(l.199,c.20) get tok: INT(LWB[148])
(l.199,c.22) get tok: REF TAG(a)
(l.199,c.23) get tok: STRING(])
(l.199,c.28) get tok: INT(FIND[131])
(l.199,c.30) get tok: REF TAG(b)
(l.199,c.31) get tok: STRING(;)
(l.199,c.36) get tok: REF TAG(st1)
(l.199,c.37) get tok: STRING(<)
(l.199,c.41) get tok: INT(LWB[148])
(l.199,c.43) get tok: REF TAG(b)
(l.199,c.45) get tok: CONTROL(+)
(l.199,c.50) get tok: INT(THEN[190])
(l.200,c.0) get tok: REF TAG(st1)
(l.200,c.4) get tok: INT(ELIF[9])
(l.200,c.8) get tok: REF TAG(st1)
(l.200,c.9) get tok: STRING(+)
(l.200,c.12) get tok: INT(UPB[150])
(l.200,c.14) get tok: REF TAG(a)
(l.200,c.15) get tok: STRING(-)
(l.200,c.18) get tok: INT(LWB[148])
(l.200,c.21) get tok: REF TAG(a)
(l.200,c.23) get tok: STRING(<=)
(l.200,c.27) get tok: INT(UPB[150])
(l.201,c.0) get tok: REF TAG(b)
(l.201,c.4) get tok: INT(THEN[190])
(l.202,c.2) get tok: INT(IF[62])
(l.202,c.5) get tok: REF TAG(a)
(l.202,c.6) get tok: STRING(=)
(l.202,c.8) get tok: REF TAG(b)
(l.202,c.9) get tok: STRING([)
(l.202,c.12) get tok: REF TAG(st1)
(l.202,c.13) get tok: STRING(:)
(l.202,c.16) get tok: REF TAG(st1)
(l.202,c.17) get tok: STRING(+)
(l.202,c.20) get tok: INT(UPB[150])
(l.202,c.22) get tok: REF TAG(a)
(l.202,c.23) get tok: STRING(-)
(l.202,c.26) get tok: INT(LWB[148])
(l.202,c.28) get tok: REF TAG(a)
(l.202,c.29) get tok: STRING(])
(l.203,c.4) get tok: INT(THEN[190])
(l.204,c.0) get tok: REF TAG(st1)
(l.204,c.4) get tok: INT(ELIF[9])
(l.204,c.8) get tok: INT(INT[195])
(l.204,c.13) get tok: REF TAG(st2)
(l.204,c.14) get tok: STRING(=)
(l.204,c.17) get tok: REF TAG(a)
(l.204,c.21) get tok: INT(FIND[131])
(l.204,c.23) get tok: REF TAG(b)
(l.204,c.24) get tok: STRING([)
(l.204,c.27) get tok: REF TAG(st1)
(l.204,c.28) get tok: STRING(+)
(l.204,c.29) get tok: STRING(1)
(l.204,c.30) get tok: STRING(:)
(l.204,c.32) get tok: CONTROL(@)
(l.204,c.35) get tok: REF TAG(st1)
(l.204,c.36) get tok: STRING(+)
(l.204,c.37) get tok: STRING(1)
(l.204,c.38) get tok: STRING(])
(l.204,c.39) get tok: STRING(;)
(l.204,c.44) get tok: REF TAG(st2)
(l.204,c.45) get tok: STRING(=)
(l.205,c.0) get tok: REF TAG(st1)
(l.205,c.4) get tok: INT(THEN[190])
(l.205,c.8) get tok: INT(LWB[148])
(l.205,c.10) get tok: REF TAG(b)
(l.205,c.11) get tok: STRING(-)
(l.206,c.0) get tok: STRING(1)
(l.206,c.4) get tok: INT(ELSE[4])
(l.207,c.0) get tok: REF TAG(st2)
(l.207,c.2) get tok: INT(FI[107])
(l.208,c.4) get tok: INT(ELSE[4])
(l.208,c.8) get tok: INT(LWB[148])
(l.208,c.10) get tok: REF TAG(b)
(l.208,c.11) get tok: STRING(-)
(l.209,c.0) get tok: STRING(1)
(l.209,c.2) get tok: INT(FI[107])
(l.211,c.2) get tok: CONTROL(d)
(l.211,c.42) get tok: REF TAG(macrogpopfindrowcharrowrowchar)
(l.211,c.43) get tok: STRING(=)
(l.212,c.15) get tok: REF TAG(macropriofind)
(l.212,c.16) get tok: STRING(;)
(l.213,c.2) get tok: INT(OP[87])
(l.213,c.7) get tok: INT(FIND[131])
(l.213,c.9) get tok: STRING(=)
(l.213,c.11) get tok: STRING(()
(l.213,c.12) get tok: STRING([)
(l.213,c.13) get tok: STRING(])
(l.213,c.17) get tok: INT(CHAR[113])
(l.213,c.19) get tok: REF TAG(s)
(l.213,c.20) get tok: STRING(,)
(l.213,c.22) get tok: STRING([)
(l.213,c.23) get tok: STRING(])
(l.213,c.24) get tok: STRING([)
(l.213,c.25) get tok: STRING(])
(l.213,c.29) get tok: INT(CHAR[113])
(l.213,c.33) get tok: REF TAG(set)
(l.213,c.34) get tok: STRING())
(l.213,c.38) get tok: INT(INT[195])
(l.214,c.0) get tok: STRING(:)
(l.214,c.1) get tok: STRING(()
(l.215,c.3) get tok: INT(INT[195])
(l.215,c.6) get tok: REF TAG(p)
(l.215,c.8) get tok: STRING(:=)
(l.215,c.12) get tok: INT(LWB[148])
(l.215,c.17) get tok: REF TAG(set)
(l.215,c.18) get tok: STRING(-)
(l.215,c.20) get tok: STRING(1)
(l.215,c.21) get tok: STRING(;)
(l.216,c.3) get tok: INT(FOR[138])
(l.216,c.6) get tok: REF TAG(n)
(l.216,c.10) get tok: INT(FROM[176])
(l.216,c.14) get tok: INT(LWB[148])
(l.216,c.19) get tok: REF TAG(set)
(l.216,c.21) get tok: INT(TO[187])
(l.216,c.25) get tok: INT(UPB[150])
(l.217,c.0) get tok: REF TAG(set)
(l.217,c.5) get tok: INT(WHILE[99])
(l.217,c.9) get tok: INT(NOT[230])
(l.217,c.10) get tok: STRING(()
(l.217,c.12) get tok: REF TAG(s)
(l.217,c.13) get tok: STRING(=)
(l.217,c.18) get tok: REF TAG(set)
(l.217,c.19) get tok: STRING([)
(l.217,c.20) get tok: REF TAG(n)
(l.217,c.21) get tok: STRING(])
(l.217,c.23) get tok: STRING(|)
(l.217,c.26) get tok: REF TAG(p)
(l.217,c.28) get tok: STRING(:=)
(l.217,c.30) get tok: REF TAG(n)
(l.217,c.31) get tok: STRING(;)
(l.217,c.36) get tok: INT(TRUE[64])
(l.217,c.38) get tok: STRING(|)
(l.217,c.44) get tok: INT(FALSE[123])
(l.217,c.45) get tok: STRING())
(l.217,c.48) get tok: INT(DO[244])
(l.217,c.53) get tok: INT(SKIP[44])
(l.217,c.56) get tok: INT(OD[231])
(l.217,c.57) get tok: STRING(;)
(l.219,c.0) get tok: REF TAG(p)
(l.219,c.1) get tok: STRING())
(l.221,c.2) get tok: CONTROL(3)
(l.225,c.2) get tok: CONTROL(d)
(l.225,c.20) get tok: REF TAG(macrogpreplace)
(l.225,c.21) get tok: STRING(=)
(l.226,c.4) get tok: INT(PROC[69])
(l.226,c.13) get tok: REF TAG(replace)
(l.226,c.14) get tok: STRING(=)
(l.226,c.16) get tok: STRING(()
(l.226,c.17) get tok: STRING([)
(l.226,c.18) get tok: STRING(])
(l.226,c.23) get tok: INT(CHAR[113])
(l.226,c.25) get tok: REF TAG(s)
(l.226,c.26) get tok: STRING(,)
(l.226,c.28) get tok: REF TAG(x)
(l.226,c.29) get tok: STRING(,)
(l.226,c.31) get tok: REF TAG(y)
(l.226,c.32) get tok: STRING())
(l.226,c.33) get tok: STRING([)
(l.226,c.34) get tok: STRING(])
(l.226,c.39) get tok: INT(CHAR[113])
(l.227,c.0) get tok: STRING(:)
(l.227,c.1) get tok: STRING(()
(l.228,c.1) get tok: STRING([)
(l.228,c.4) get tok: INT(LWB[148])
(l.228,c.7) get tok: REF TAG(s)
(l.228,c.8) get tok: STRING(:)
(l.228,c.12) get tok: INT(UPB[150])
(l.228,c.14) get tok: REF TAG(s)
(l.228,c.15) get tok: STRING(])
(l.228,c.20) get tok: INT(CHAR[113])
(l.228,c.23) get tok: REF TAG(ss)
(l.228,c.24) get tok: STRING(;)
(l.230,c.3) get tok: INT(FOR[138])
(l.230,c.6) get tok: REF TAG(n)
(l.230,c.10) get tok: INT(FROM[176])
(l.230,c.14) get tok: INT(LWB[148])
(l.230,c.17) get tok: REF TAG(s)
(l.230,c.19) get tok: INT(TO[187])
(l.230,c.23) get tok: INT(UPB[150])
(l.231,c.0) get tok: REF TAG(s)
(l.231,c.2) get tok: INT(DO[244])
(l.232,c.3) get tok: REF TAG(ss)
(l.232,c.4) get tok: STRING([)
(l.232,c.5) get tok: REF TAG(n)
(l.232,c.6) get tok: STRING(])
(l.233,c.0) get tok: STRING(:=)
(l.233,c.1) get tok: STRING(()
(l.233,c.4) get tok: INT(INT[195])
(l.233,c.7) get tok: REF TAG(ix)
(l.233,c.9) get tok: STRING(:=)
(l.233,c.12) get tok: INT(LWB[148])
(l.233,c.14) get tok: REF TAG(s)
(l.233,c.15) get tok: STRING(-)
(l.233,c.16) get tok: STRING(1)
(l.233,c.17) get tok: STRING(;)
(l.233,c.32) get tok: REF TAG(charinstring)
(l.233,c.33) get tok: STRING(()
(l.233,c.34) get tok: REF TAG(s)
(l.233,c.35) get tok: STRING([)
(l.233,c.36) get tok: REF TAG(n)
(l.233,c.37) get tok: STRING(])
(l.233,c.38) get tok: STRING(,)
(l.233,c.40) get tok: REF TAG(ix)
(l.233,c.41) get tok: STRING(,)
(l.233,c.42) get tok: REF TAG(x)
(l.233,c.43) get tok: STRING())
(l.233,c.44) get tok: STRING(|)
(l.233,c.47) get tok: REF TAG(y)
(l.233,c.48) get tok: STRING([)
(l.233,c.50) get tok: REF TAG(ix)
(l.233,c.51) get tok: STRING(])
(l.233,c.53) get tok: STRING(|)
(l.233,c.56) get tok: REF TAG(s)
(l.233,c.57) get tok: STRING([)
(l.233,c.58) get tok: REF TAG(n)
(l.233,c.59) get tok: STRING(])
(l.233,c.60) get tok: STRING())
(l.234,c.2) get tok: INT(OD[231])
(l.234,c.3) get tok: STRING(;)
(l.237,c.0) get tok: REF TAG(ss)
(l.237,c.1) get tok: STRING())
(l.239,c.2) get tok: CONTROL( )
(l.241,c.2) get tok: CONTROL(d)
(l.241,c.23) get tok: REF TAG(macrogpopreverse)
(l.241,c.24) get tok: STRING(=)
(l.242,c.2) get tok: INT(OP[87])
(l.242,c.10) get tok: REF TAG(REVERSE)
(l.242,c.12) get tok: STRING(=)
(l.242,c.14) get tok: STRING(()
(l.242,c.15) get tok: STRING([)
(l.242,c.16) get tok: STRING(])
(l.242,c.20) get tok: INT(CHAR[113])
(l.242,c.22) get tok: REF TAG(s)
(l.242,c.23) get tok: STRING())
(l.242,c.25) get tok: STRING([)
(l.242,c.26) get tok: STRING(])
(l.242,c.30) get tok: INT(CHAR[113])
(l.243,c.0) get tok: STRING(:)
(l.243,c.2) get tok: INT(IF[62])
(l.243,c.5) get tok: REF TAG(s)
(l.243,c.6) get tok: STRING(=)
(l.244,c.0) get tok: STRING("")
(l.244,c.4) get tok: INT(THEN[190])
(l.245,c.0) get tok: STRING("")
(l.245,c.4) get tok: INT(ELSE[4])
(l.246,c.1) get tok: STRING([)
(l.246,c.4) get tok: INT(LWB[148])
(l.246,c.6) get tok: REF TAG(s)
(l.246,c.7) get tok: STRING(:)
(l.246,c.10) get tok: INT(UPB[150])
(l.246,c.12) get tok: REF TAG(s)
(l.246,c.13) get tok: STRING(])
(l.246,c.17) get tok: INT(CHAR[113])
(l.246,c.20) get tok: REF TAG(ss)
(l.246,c.21) get tok: STRING(;)
(l.247,c.3) get tok: INT(FOR[138])
(l.247,c.6) get tok: REF TAG(i)
(l.247,c.10) get tok: INT(FROM[176])
(l.247,c.14) get tok: INT(UPB[150])
(l.247,c.17) get tok: REF TAG(s)
(l.247,c.19) get tok: INT(BY[237])
(l.247,c.23) get tok: STRING(---)
(l.247,c.25) get tok: STRING(1)
(l.247,c.27) get tok: INT(TO[187])
(l.247,c.31) get tok: INT(LWB[148])
(l.248,c.0) get tok: REF TAG(s)
(l.248,c.2) get tok: INT(DO[244])
(l.249,c.2) get tok: REF TAG(ss)
(l.249,c.3) get tok: STRING([)
(l.249,c.6) get tok: INT(LWB[148])
(l.249,c.8) get tok: REF TAG(s)
(l.249,c.9) get tok: STRING(+)
(l.249,c.12) get tok: INT(UPB[150])
(l.249,c.14) get tok: REF TAG(s)
(l.249,c.15) get tok: STRING(-)
(l.249,c.16) get tok: REF TAG(i)
(l.249,c.17) get tok: STRING(])
(l.249,c.19) get tok: STRING(:=)
(l.249,c.20) get tok: REF TAG(s)
(l.249,c.21) get tok: STRING([)
(l.249,c.22) get tok: REF TAG(i)
(l.249,c.23) get tok: STRING(])
(l.250,c.2) get tok: INT(OD[231])
(l.250,c.3) get tok: STRING(;)
(l.252,c.0) get tok: REF TAG(ss)
(l.252,c.2) get tok: INT(FI[107])
(l.254,c.2) get tok: CONTROL( )
(l.256,c.2) get tok: CONTROL(d)
(l.256,c.18) get tok: REF TAG(macropriolop)
(l.256,c.19) get tok: STRING(=)
(l.256,c.24) get tok: INT(PRIO[134])
(l.256,c.28) get tok: REF TAG(LOP)
(l.256,c.30) get tok: STRING(=)
(l.258,c.0) get tok: STRING(7)
(l.258,c.2) get tok: CONTROL(d)
(l.258,c.19) get tok: REF TAG(macrogpoplop)
(l.258,c.20) get tok: STRING(=)
(l.259,c.19) get tok: REF TAG(macrogpopreverse)
(l.259,c.20) get tok: STRING(;)
(l.260,c.17) get tok: REF TAG(macrogpopafter)
(l.260,c.18) get tok: STRING(;)
(l.261,c.14) get tok: REF TAG(macropriolop)
(l.261,c.15) get tok: STRING(;)
(l.262,c.2) get tok: INT(OP[87])
(l.262,c.6) get tok: REF TAG(LOP)
(l.262,c.8) get tok: STRING(=)
(l.262,c.10) get tok: STRING(()
(l.262,c.11) get tok: STRING([)
(l.262,c.12) get tok: STRING(])
(l.262,c.16) get tok: INT(CHAR[113])
(l.262,c.18) get tok: REF TAG(s)
(l.262,c.19) get tok: STRING(,)
(l.262,c.23) get tok: INT(CHAR[113])
(l.262,c.25) get tok: REF TAG(c)
(l.262,c.26) get tok: STRING())
(l.262,c.27) get tok: STRING([)
(l.262,c.28) get tok: STRING(])
(l.262,c.32) get tok: INT(CHAR[113])
(l.263,c.0) get tok: STRING(:)
(l.263,c.7) get tok: REF TAG(REVERSE)
(l.263,c.8) get tok: STRING(()
(l.263,c.15) get tok: REF TAG(REVERSE)
(l.263,c.18) get tok: REF TAG(s)
(l.263,c.23) get tok: INT(AFTER[168])
(l.263,c.25) get tok: REF TAG(c)
(l.263,c.26) get tok: STRING())
(l.265,c.2) get tok: CONTROL(2)
(l.268,c.2) get tok: CONTROL(d)
(l.268,c.18) get tok: REF TAG(macroprioxor)
(l.268,c.19) get tok: STRING(=)
(l.268,c.24) get tok: INT(PRIO[134])
(l.268,c.27) get tok: CONTROL(!)
(l.268,c.30) get tok: REF TAG(XOR)
(l.268,c.32) get tok: STRING(=)
(l.270,c.0) get tok: STRING(4)
(l.270,c.2) get tok: CONTROL( )
(l.272,c.2) get tok: CONTROL(d)
(l.272,c.24) get tok: REF TAG(macrogpopxorbits)
(l.272,c.25) get tok: STRING(=)
(l.273,c.14) get tok: REF TAG(macroprioxor)
(l.273,c.15) get tok: STRING(;)
(l.274,c.2) get tok: INT(OP[87])
(l.274,c.6) get tok: REF TAG(XOR)
(l.274,c.8) get tok: STRING(=)
(l.274,c.10) get tok: STRING(()
(l.274,c.14) get tok: INT(BITS[164])
(l.274,c.16) get tok: REF TAG(a)
(l.274,c.17) get tok: STRING(,)
(l.274,c.18) get tok: REF TAG(b)
(l.274,c.19) get tok: STRING())
(l.274,c.23) get tok: INT(BITS[164])
(l.274,c.24) get tok: STRING(:)
(l.274,c.27) get tok: REF TAG(a)
(l.274,c.28) get tok: STRING(&)
(l.274,c.32) get tok: INT(NOT[230])
(l.274,c.35) get tok: REF TAG(b)
(l.274,c.37) get tok: INT(OR[177])
(l.274,c.41) get tok: INT(NOT[230])
(l.274,c.44) get tok: REF TAG(a)
(l.274,c.45) get tok: STRING(&)
(l.275,c.0) get tok: REF TAG(b)
(l.275,c.2) get tok: CONTROL(d)
(l.275,c.29) get tok: REF TAG(macrogpopxorlongbits)
(l.275,c.30) get tok: STRING(=)
(l.276,c.14) get tok: REF TAG(macroprioxor)
(l.276,c.15) get tok: STRING(;)
(l.277,c.2) get tok: INT(OP[87])
(l.277,c.6) get tok: REF TAG(XOR)
(l.277,c.8) get tok: STRING(=)
(l.277,c.10) get tok: STRING(()
(l.277,c.14) get tok: INT(LONG[209])
(l.277,c.19) get tok: INT(BITS[164])
(l.277,c.21) get tok: REF TAG(a)
(l.277,c.22) get tok: STRING(,)
(l.277,c.23) get tok: REF TAG(b)
(l.277,c.24) get tok: STRING())
(l.277,c.28) get tok: INT(LONG[209])
(l.277,c.33) get tok: INT(BITS[164])
(l.277,c.34) get tok: STRING(:)
(l.277,c.37) get tok: REF TAG(a)
(l.277,c.38) get tok: STRING(&)
(l.277,c.42) get tok: INT(NOT[230])
(l.277,c.45) get tok: REF TAG(b)
(l.277,c.47) get tok: INT(OR[177])
(l.277,c.51) get tok: INT(NOT[230])
(l.277,c.54) get tok: REF TAG(a)
(l.277,c.55) get tok: STRING(&)
(l.278,c.0) get tok: REF TAG(b)
(l.278,c.2) get tok: CONTROL(d)
(l.278,c.30) get tok: REF TAG(macrogpopxorshortbits)
(l.278,c.31) get tok: STRING(=)
(l.279,c.14) get tok: REF TAG(macroprioxor)
(l.279,c.15) get tok: STRING(;)
(l.280,c.2) get tok: INT(OP[87])
(l.280,c.6) get tok: REF TAG(XOR)
(l.280,c.8) get tok: STRING(=)
(l.280,c.10) get tok: STRING(()
(l.280,c.15) get tok: INT(SHORT[79])
(l.280,c.20) get tok: INT(BITS[164])
(l.280,c.22) get tok: REF TAG(a)
(l.280,c.23) get tok: STRING(,)
(l.280,c.24) get tok: REF TAG(b)
(l.280,c.25) get tok: STRING())
(l.280,c.30) get tok: INT(SHORT[79])
(l.280,c.35) get tok: INT(BITS[164])
(l.280,c.36) get tok: STRING(:)
(l.280,c.39) get tok: REF TAG(a)
(l.280,c.40) get tok: STRING(&)
(l.280,c.44) get tok: INT(NOT[230])
(l.280,c.47) get tok: REF TAG(b)
(l.280,c.49) get tok: INT(OR[177])
(l.280,c.53) get tok: INT(NOT[230])
(l.280,c.56) get tok: REF TAG(a)
(l.280,c.57) get tok: STRING(&)
(l.281,c.0) get tok: REF TAG(b)
(l.281,c.2) get tok: CONTROL(d)
(l.281,c.36) get tok: REF TAG(macrogpopxorshortshortbits)
(l.281,c.37) get tok: STRING(=)
(l.282,c.14) get tok: REF TAG(macroprioxor)
(l.282,c.15) get tok: STRING(;)
(l.283,c.2) get tok: INT(OP[87])
(l.283,c.6) get tok: REF TAG(XOR)
(l.283,c.8) get tok: STRING(=)
(l.283,c.10) get tok: STRING(()
(l.283,c.15) get tok: INT(SHORT[79])
(l.283,c.21) get tok: INT(SHORT[79])
(l.283,c.26) get tok: INT(BITS[164])
(l.283,c.28) get tok: REF TAG(a)
(l.283,c.29) get tok: STRING(,)
(l.283,c.30) get tok: REF TAG(b)
(l.283,c.31) get tok: STRING())
(l.283,c.36) get tok: INT(SHORT[79])
(l.283,c.42) get tok: INT(SHORT[79])
(l.283,c.47) get tok: INT(BITS[164])
(l.283,c.48) get tok: STRING(:)
(l.283,c.51) get tok: REF TAG(a)
(l.283,c.52) get tok: STRING(&)
(l.283,c.56) get tok: INT(NOT[230])
(l.283,c.59) get tok: REF TAG(b)
(l.283,c.61) get tok: INT(OR[177])
(l.283,c.65) get tok: INT(NOT[230])
(l.283,c.68) get tok: REF TAG(a)
(l.283,c.69) get tok: STRING(&)
(l.285,c.0) get tok: REF TAG(b)
(l.285,c.2) get tok: CONTROL(2)
(l.314,c.2) get tok: CONTROL( )
(l.316,c.2) get tok: CONTROL(d)
(l.316,c.24) get tok: REF TAG(macrogpbubblesort)
(l.316,c.25) get tok: STRING(=)
(l.317,c.4) get tok: INT(PROC[69])
(l.317,c.17) get tok: REF TAG(bubblesort)
(l.317,c.18) get tok: STRING(=)
(l.317,c.20) get tok: STRING(()
(l.317,c.23) get tok: INT(INT[195])
(l.317,c.26) get tok: CONTROL(!)
(l.317,c.27) get tok: REF TAG(l)
(l.317,c.28) get tok: STRING(,)
(l.317,c.30) get tok: CONTROL(!)
(l.317,c.31) get tok: REF TAG(u)
(l.317,c.32) get tok: STRING(,)
(l.317,c.37) get tok: INT(PROC[69])
(l.317,c.38) get tok: STRING(()
(l.317,c.41) get tok: INT(INT[195])
(l.317,c.42) get tok: STRING(,)
(l.317,c.45) get tok: INT(INT[195])
(l.317,c.46) get tok: STRING())
(l.317,c.50) get tok: INT(BOOL[184])
(l.317,c.53) get tok: CONTROL(!)
(l.317,c.59) get tok: REF TAG(before)
(l.317,c.60) get tok: STRING())
(l.317,c.61) get tok: STRING([)
(l.317,c.62) get tok: STRING(])
(l.317,c.65) get tok: INT(INT[195])
(l.318,c.0) get tok: STRING(:)
(l.318,c.5) get tok: INT(BEGIN[227])
(l.319,c.1) get tok: STRING([)
(l.319,c.2) get tok: REF TAG(l)
(l.319,c.3) get tok: STRING(:)
(l.319,c.4) get tok: REF TAG(u)
(l.319,c.5) get tok: STRING(])
(l.319,c.8) get tok: INT(INT[195])
(l.319,c.11) get tok: CONTROL(!)
(l.319,c.15) get tok: REF TAG(keys)
(l.319,c.16) get tok: STRING(;)
(l.319,c.18) get tok: CONTROL(+)
(l.319,c.22) get tok: INT(FOR[138])
(l.319,c.25) get tok: REF TAG(i)
(l.319,c.29) get tok: INT(FROM[176])
(l.319,c.32) get tok: REF TAG(l)
(l.319,c.34) get tok: INT(TO[187])
(l.319,c.37) get tok: REF TAG(u)
(l.319,c.39) get tok: INT(DO[244])
(l.319,c.44) get tok: REF TAG(keys)
(l.319,c.45) get tok: STRING([)
(l.319,c.46) get tok: REF TAG(i)
(l.319,c.47) get tok: STRING(])
(l.319,c.49) get tok: STRING(:=)
(l.319,c.51) get tok: REF TAG(i)
(l.319,c.53) get tok: INT(OD[231])
(l.319,c.54) get tok: STRING(;)
(l.321,c.5) get tok: INT(WHILE[99])
(l.321,c.7) get tok: CONTROL(/)
(l.322,c.4) get tok: INT(BOOL[184])
(l.322,c.7) get tok: CONTROL(!)
(l.322,c.14) get tok: REF TAG(ordered)
(l.322,c.16) get tok: STRING(:=)
(l.322,c.20) get tok: INT(TRUE[64])
(l.322,c.21) get tok: STRING(;)
(l.323,c.2) get tok: CONTROL(#)
(l.324,c.3) get tok: INT(FOR[138])
(l.324,c.6) get tok: REF TAG(n)
(l.324,c.10) get tok: INT(FROM[176])
(l.324,c.13) get tok: REF TAG(l)
(l.324,c.15) get tok: INT(TO[187])
(l.324,c.17) get tok: REF TAG(u)
(l.324,c.18) get tok: STRING(-)
(l.325,c.0) get tok: STRING(1)
(l.325,c.2) get tok: INT(DO[244])
(l.326,c.2) get tok: INT(IF[62])
(l.326,c.6) get tok: INT(INT[195])
(l.326,c.9) get tok: CONTROL(!)
(l.326,c.11) get tok: REF TAG(i)
(l.326,c.12) get tok: STRING(=)
(l.326,c.17) get tok: REF TAG(keys)
(l.326,c.18) get tok: STRING([)
(l.326,c.19) get tok: REF TAG(n)
(l.326,c.20) get tok: STRING(])
(l.326,c.21) get tok: STRING(,)
(l.326,c.23) get tok: REF TAG(j)
(l.326,c.24) get tok: STRING(=)
(l.326,c.28) get tok: REF TAG(keys)
(l.326,c.29) get tok: STRING([)
(l.326,c.30) get tok: REF TAG(n)
(l.326,c.31) get tok: STRING(+)
(l.326,c.32) get tok: STRING(1)
(l.326,c.33) get tok: STRING(])
(l.326,c.34) get tok: STRING(;)
(l.326,c.36) get tok: CONTROL(+)
(l.326,c.43) get tok: REF TAG(before)
(l.326,c.44) get tok: STRING(()
(l.326,c.45) get tok: REF TAG(j)
(l.326,c.46) get tok: STRING(,)
(l.326,c.47) get tok: REF TAG(i)
(l.326,c.48) get tok: STRING())
(l.327,c.4) get tok: INT(THEN[190])
(l.327,c.6) get tok: CONTROL(/)
(l.328,c.4) get tok: REF TAG(keys)
(l.328,c.5) get tok: STRING([)
(l.328,c.6) get tok: REF TAG(n)
(l.328,c.7) get tok: STRING(])
(l.328,c.9) get tok: STRING(:=)
(l.328,c.10) get tok: REF TAG(j)
(l.328,c.11) get tok: STRING(;)
(l.328,c.17) get tok: REF TAG(keys)
(l.328,c.18) get tok: STRING([)
(l.328,c.19) get tok: REF TAG(n)
(l.328,c.20) get tok: STRING(+)
(l.328,c.21) get tok: STRING(1)
(l.328,c.22) get tok: STRING(])
(l.328,c.24) get tok: STRING(:=)
(l.328,c.25) get tok: REF TAG(i)
(l.328,c.26) get tok: STRING(;)
(l.329,c.7) get tok: REF TAG(ordered)
(l.329,c.9) get tok: STRING(:=)
(l.329,c.14) get tok: INT(FALSE[123])
(l.330,c.2) get tok: INT(FI[107])
(l.331,c.2) get tok: INT(OD[231])
(l.331,c.3) get tok: STRING(;)
(l.332,c.2) get tok: CONTROL(#)
(l.333,c.3) get tok: INT(NOT[230])
(l.334,c.0) get tok: REF TAG(ordered)
(l.334,c.2) get tok: INT(DO[244])
(l.334,c.4) get tok: CONTROL(+)
(l.334,c.9) get tok: INT(SKIP[44])
(l.334,c.11) get tok: CONTROL(+)
(l.334,c.14) get tok: INT(OD[231])
(l.334,c.15) get tok: STRING(;)
(l.335,c.2) get tok: CONTROL(#)
(l.337,c.0) get tok: REF TAG(keys)
(l.337,c.3) get tok: INT(END[202])
(l.339,c.2) get tok: CONTROL( )
(l.341,c.2) get tok: CONTROL(d)
(l.341,c.23) get tok: REF TAG(macrogpshellsort)
(l.341,c.24) get tok: STRING(=)
(l.342,c.4) get tok: INT(PROC[69])
(l.342,c.16) get tok: REF TAG(shellsort)
(l.342,c.17) get tok: STRING(=)
(l.342,c.19) get tok: STRING(()
(l.342,c.22) get tok: INT(INT[195])
(l.342,c.25) get tok: CONTROL(!)
(l.342,c.26) get tok: REF TAG(l)
(l.342,c.27) get tok: STRING(,)
(l.342,c.29) get tok: CONTROL(!)
(l.342,c.30) get tok: REF TAG(u)
(l.342,c.31) get tok: STRING(,)
(l.342,c.36) get tok: INT(PROC[69])
(l.342,c.37) get tok: STRING(()
(l.342,c.40) get tok: INT(INT[195])
(l.342,c.41) get tok: STRING(,)
(l.342,c.44) get tok: INT(INT[195])
(l.342,c.45) get tok: STRING())
(l.342,c.49) get tok: INT(BOOL[184])
(l.342,c.52) get tok: CONTROL(!)
(l.342,c.58) get tok: REF TAG(before)
(l.342,c.59) get tok: STRING())
(l.342,c.60) get tok: STRING([)
(l.342,c.61) get tok: STRING(])
(l.342,c.64) get tok: INT(INT[195])
(l.343,c.0) get tok: STRING(:)
(l.343,c.5) get tok: INT(BEGIN[227])
(l.344,c.1) get tok: STRING([)
(l.344,c.2) get tok: REF TAG(l)
(l.344,c.3) get tok: STRING(:)
(l.344,c.4) get tok: REF TAG(u)
(l.344,c.5) get tok: STRING(])
(l.344,c.8) get tok: INT(INT[195])
(l.344,c.11) get tok: CONTROL(!)
(l.344,c.15) get tok: REF TAG(keys)
(l.344,c.16) get tok: STRING(;)
(l.344,c.18) get tok: CONTROL(+)
(l.344,c.23) get tok: INT(FOR[138])
(l.344,c.26) get tok: REF TAG(i)
(l.344,c.30) get tok: INT(FROM[176])
(l.344,c.33) get tok: REF TAG(l)
(l.344,c.35) get tok: INT(TO[187])
(l.344,c.38) get tok: REF TAG(u)
(l.344,c.40) get tok: INT(DO[244])
(l.344,c.45) get tok: REF TAG(keys)
(l.344,c.46) get tok: STRING([)
(l.344,c.47) get tok: REF TAG(i)
(l.344,c.48) get tok: STRING(])
(l.344,c.50) get tok: STRING(:=)
(l.344,c.52) get tok: REF TAG(i)
(l.344,c.54) get tok: INT(OD[231])
(l.344,c.55) get tok: STRING(;)
(l.345,c.3) get tok: INT(INT[195])
(l.345,c.6) get tok: CONTROL(!)
(l.345,c.9) get tok: REF TAG(inc)
(l.345,c.11) get tok: STRING(:=)
(l.345,c.12) get tok: STRING(()
(l.345,c.13) get tok: REF TAG(u)
(l.345,c.14) get tok: STRING(+)
(l.345,c.15) get tok: REF TAG(l)
(l.345,c.16) get tok: STRING())
(l.345,c.17) get tok: STRING(%)
(l.345,c.18) get tok: STRING(2)
(l.345,c.19) get tok: STRING(;)
(l.347,c.5) get tok: INT(WHILE[99])
(l.347,c.7) get tok: CONTROL(/)
(l.348,c.5) get tok: INT(WHILE[99])
(l.348,c.7) get tok: CONTROL(/)
(l.349,c.4) get tok: INT(BOOL[184])
(l.349,c.7) get tok: CONTROL(!)
(l.349,c.14) get tok: REF TAG(ordered)
(l.349,c.16) get tok: STRING(:=)
(l.349,c.20) get tok: INT(TRUE[64])
(l.349,c.21) get tok: STRING(;)
(l.350,c.2) get tok: CONTROL(#)
(l.351,c.3) get tok: INT(FOR[138])
(l.351,c.6) get tok: REF TAG(n)
(l.351,c.10) get tok: INT(FROM[176])
(l.351,c.14) get tok: INT(LWB[148])
(l.351,c.20) get tok: REF TAG(keys)
(l.351,c.22) get tok: INT(TO[187])
(l.351,c.26) get tok: INT(UPB[150])
(l.351,c.32) get tok: REF TAG(keys)
(l.351,c.33) get tok: STRING(-)
(l.352,c.0) get tok: REF TAG(inc)
(l.352,c.2) get tok: INT(DO[244])
(l.353,c.2) get tok: INT(IF[62])
(l.353,c.6) get tok: INT(INT[195])
(l.353,c.9) get tok: CONTROL(!)
(l.353,c.11) get tok: REF TAG(i)
(l.353,c.12) get tok: STRING(=)
(l.353,c.17) get tok: REF TAG(keys)
(l.353,c.18) get tok: STRING([)
(l.353,c.19) get tok: REF TAG(n)
(l.353,c.20) get tok: STRING(])
(l.353,c.21) get tok: STRING(,)
(l.353,c.24) get tok: REF TAG(j)
(l.353,c.25) get tok: STRING(=)
(l.353,c.30) get tok: REF TAG(keys)
(l.353,c.31) get tok: STRING([)
(l.353,c.32) get tok: REF TAG(n)
(l.353,c.33) get tok: STRING(+)
(l.353,c.36) get tok: REF TAG(inc)
(l.353,c.37) get tok: STRING(])
(l.353,c.38) get tok: STRING(;)
(l.353,c.40) get tok: CONTROL(+)
(l.353,c.47) get tok: REF TAG(before)
(l.353,c.48) get tok: STRING(()
(l.353,c.49) get tok: REF TAG(j)
(l.353,c.50) get tok: STRING(,)
(l.353,c.51) get tok: REF TAG(i)
(l.353,c.52) get tok: STRING())
(l.354,c.4) get tok: INT(THEN[190])
(l.354,c.6) get tok: CONTROL(/)
(l.355,c.4) get tok: REF TAG(keys)
(l.355,c.5) get tok: STRING([)
(l.355,c.6) get tok: REF TAG(n)
(l.355,c.7) get tok: STRING(])
(l.355,c.9) get tok: STRING(:=)
(l.355,c.10) get tok: REF TAG(j)
(l.355,c.11) get tok: STRING(;)
(l.355,c.17) get tok: REF TAG(keys)
(l.355,c.18) get tok: STRING([)
(l.355,c.19) get tok: REF TAG(n)
(l.355,c.20) get tok: STRING(+)
(l.355,c.23) get tok: REF TAG(inc)
(l.355,c.24) get tok: STRING(])
(l.355,c.26) get tok: STRING(:=)
(l.355,c.27) get tok: REF TAG(i)
(l.355,c.28) get tok: STRING(;)
(l.356,c.7) get tok: REF TAG(ordered)
(l.356,c.9) get tok: STRING(:=)
(l.356,c.14) get tok: INT(FALSE[123])
(l.357,c.2) get tok: INT(FI[107])
(l.358,c.2) get tok: INT(OD[231])
(l.358,c.3) get tok: STRING(;)
(l.359,c.2) get tok: CONTROL(#)
(l.360,c.3) get tok: INT(NOT[230])
(l.361,c.0) get tok: REF TAG(ordered)
(l.361,c.2) get tok: INT(DO[244])
(l.361,c.4) get tok: CONTROL(+)
(l.361,c.9) get tok: INT(SKIP[44])
(l.361,c.11) get tok: CONTROL(+)
(l.361,c.14) get tok: INT(OD[231])
(l.361,c.15) get tok: STRING(;)
(l.362,c.2) get tok: CONTROL(#)
(l.363,c.4) get tok: REF TAG(inc)
(l.363,c.6) get tok: STRING(/=)
(l.364,c.0) get tok: STRING(1)
(l.364,c.2) get tok: INT(DO[244])
(l.365,c.4) get tok: REF TAG(inc)
(l.365,c.7) get tok: STRING(%:=)
(l.366,c.0) get tok: STRING(2)
(l.366,c.2) get tok: INT(OD[231])
(l.366,c.3) get tok: STRING(;)
(l.369,c.0) get tok: REF TAG(keys)
(l.369,c.3) get tok: INT(END[202])
(l.371,c.2) get tok: CONTROL(2)
(l.389,c.2) get tok: CONTROL(m)
(l.389,c.14) get tok: REF TAG(binarychop)
(l.389,c.15) get tok: STRING(()
(l.389,c.23) get tok: REF TAG(multiple)
(l.389,c.24) get tok: STRING(,)
(l.389,c.36) get tok: REF TAG(discriminant)
(l.389,c.37) get tok: STRING(,)
(l.389,c.49) get tok: REF TAG(meekprimary)
(l.389,c.50) get tok: STRING(,)
(l.389,c.60) get tok: REF TAG(refresult)
(l.389,c.61) get tok: STRING())
(l.389,c.63) get tok: STRING(=)
(l.390,c.5) get tok: INT(BEGIN[227])
(l.391,c.3) get tok: INT(INT[195])
(l.391,c.5) get tok: REF TAG(l)
(l.391,c.7) get tok: STRING(:=)
(l.391,c.10) get tok: INT(LWB[148])
(l.391,c.19) get tok: REF TAG(multiple)
(l.391,c.20) get tok: STRING(,)
(l.391,c.21) get tok: REF TAG(u)
(l.391,c.23) get tok: STRING(:=)
(l.391,c.26) get tok: INT(UPB[150])
(l.391,c.35) get tok: REF TAG(multiple)
(l.391,c.36) get tok: STRING(,)
(l.391,c.37) get tok: REF TAG(m)
(l.391,c.38) get tok: STRING(;)
(l.393,c.5) get tok: INT(WHILE[99])
(l.394,c.2) get tok: INT(IF[62])
(l.394,c.5) get tok: REF TAG(l)
(l.394,c.7) get tok: STRING(<=)
(l.395,c.0) get tok: REF TAG(u)
(l.395,c.4) get tok: INT(THEN[190])
(l.395,c.18) get tok: REF TAG(discriminant)
(l.395,c.20) get tok: STRING(/=)
(l.395,c.33) get tok: REF TAG(meekprimary)
(l.395,c.34) get tok: STRING([)
(l.395,c.35) get tok: REF TAG(m)
(l.395,c.37) get tok: STRING(:=)
(l.395,c.40) get tok: INT(ABS[226])
(l.395,c.41) get tok: STRING(()
(l.395,c.44) get tok: INT(BIN[275])
(l.395,c.45) get tok: STRING(()
(l.395,c.46) get tok: REF TAG(l)
(l.395,c.47) get tok: STRING(+)
(l.395,c.48) get tok: REF TAG(u)
(l.395,c.49) get tok: STRING())
(l.395,c.52) get tok: REF TAG(SHR)
(l.395,c.54) get tok: STRING(1)
(l.395,c.55) get tok: STRING())
(l.395,c.56) get tok: STRING(])
(l.396,c.4) get tok: INT(ELSE[4])
(l.396,c.10) get tok: INT(FALSE[123])
(l.397,c.2) get tok: INT(FI[107])
(l.398,c.2) get tok: INT(DO[244])
(l.399,c.1) get tok: STRING(()
(l.399,c.14) get tok: REF TAG(discriminant)
(l.399,c.15) get tok: STRING(<)
(l.399,c.28) get tok: REF TAG(meekprimary)
(l.399,c.29) get tok: STRING([)
(l.399,c.30) get tok: REF TAG(m)
(l.399,c.31) get tok: STRING(])
(l.399,c.32) get tok: STRING(|)
(l.399,c.33) get tok: REF TAG(u)
(l.399,c.35) get tok: STRING(:=)
(l.399,c.36) get tok: REF TAG(m)
(l.399,c.37) get tok: STRING(-)
(l.399,c.38) get tok: STRING(1)
(l.399,c.39) get tok: STRING(|)
(l.399,c.40) get tok: REF TAG(l)
(l.399,c.42) get tok: STRING(:=)
(l.399,c.43) get tok: REF TAG(m)
(l.399,c.44) get tok: STRING(+)
(l.399,c.45) get tok: STRING(1)
(l.399,c.46) get tok: STRING())
(l.400,c.2) get tok: INT(OD[231])
(l.400,c.3) get tok: STRING(;)
(l.402,c.10) get tok: REF TAG(refresult)
(l.402,c.12) get tok: STRING(:=)
(l.402,c.13) get tok: STRING(()
(l.402,c.14) get tok: REF TAG(l)
(l.402,c.15) get tok: STRING(>)
(l.402,c.16) get tok: REF TAG(u)
(l.402,c.17) get tok: STRING(|)
(l.402,c.18) get tok: REF TAG(u)
(l.402,c.19) get tok: STRING(|)
(l.402,c.20) get tok: REF TAG(m)
(l.402,c.21) get tok: STRING())
(l.402,c.22) get tok: STRING(;)
(l.403,c.1) get tok: STRING(()
(l.403,c.2) get tok: REF TAG(l)
(l.403,c.3) get tok: STRING(>)
(l.403,c.4) get tok: REF TAG(u)
(l.403,c.5) get tok: STRING(|)
(l.403,c.8) get tok: INT(LWB[148])
(l.403,c.17) get tok: REF TAG(multiple)
(l.403,c.18) get tok: STRING(-)
(l.403,c.19) get tok: STRING(1)
(l.403,c.20) get tok: STRING(|)
(l.403,c.21) get tok: REF TAG(m)
(l.403,c.22) get tok: STRING())
(l.404,c.3) get tok: INT(END[202])
(l.406,c.2) get tok: CONTROL(2)
(l.414,c.2) get tok: CONTROL(3)
(l.420,c.2) get tok: CONTROL(m)
(l.420,c.13) get tok: REF TAG(gpnormal)
(l.420,c.14) get tok: STRING(=)
(l.421,c.0) get tok: STRING(0)
(l.421,c.2) get tok: CONTROL(m)
(l.421,c.11) get tok: REF TAG(gpbold)
(l.421,c.12) get tok: STRING(=)
(l.422,c.0) get tok: STRING(1)
(l.422,c.2) get tok: CONTROL(m)
(l.422,c.12) get tok: REF TAG(gpunder)
(l.422,c.13) get tok: STRING(=)
(l.423,c.0) get tok: STRING(4)
(l.423,c.2) get tok: CONTROL(m)
(l.423,c.14) get tok: REF TAG(gpinverse)
(l.423,c.15) get tok: STRING(=)
(l.425,c.0) get tok: STRING(7)
(l.425,c.2) get tok: CONTROL( )
(l.427,c.2) get tok: CONTROL(m)
(l.427,c.15) get tok: REF TAG(gpfgblack)
(l.427,c.16) get tok: STRING(=)
(l.428,c.0) get tok: STRING(30)
(l.428,c.2) get tok: CONTROL(m)
(l.428,c.13) get tok: REF TAG(gpfgred)
(l.428,c.14) get tok: STRING(=)
(l.429,c.0) get tok: STRING(31)
(l.429,c.2) get tok: CONTROL(m)
(l.429,c.15) get tok: REF TAG(gpfggreen)
(l.429,c.16) get tok: STRING(=)
(l.430,c.0) get tok: STRING(32)
(l.430,c.2) get tok: CONTROL(m)
(l.430,c.16) get tok: REF TAG(gpfgyellow)
(l.430,c.17) get tok: STRING(=)
(l.431,c.0) get tok: STRING(33)
(l.431,c.2) get tok: CONTROL(m)
(l.431,c.14) get tok: REF TAG(gpfgblue)
(l.431,c.15) get tok: STRING(=)
(l.432,c.0) get tok: STRING(34)
(l.432,c.2) get tok: CONTROL(m)
(l.432,c.17) get tok: REF TAG(gpfgmagenta)
(l.432,c.18) get tok: STRING(=)
(l.433,c.0) get tok: STRING(35)
(l.433,c.2) get tok: CONTROL(m)
(l.433,c.14) get tok: REF TAG(gpfgcyan)
(l.433,c.15) get tok: STRING(=)
(l.434,c.0) get tok: STRING(36)
(l.434,c.2) get tok: CONTROL(m)
(l.434,c.15) get tok: REF TAG(gpfgwhite)
(l.434,c.16) get tok: STRING(=)
(l.435,c.0) get tok: STRING(37)
(l.435,c.2) get tok: CONTROL(m)
(l.435,c.14) get tok: REF TAG(gpfgorig)
(l.435,c.15) get tok: STRING(=)
(l.437,c.0) get tok: STRING(39)
(l.437,c.2) get tok: CONTROL( )
(l.439,c.2) get tok: CONTROL(m)
(l.439,c.15) get tok: REF TAG(gpbgblack)
(l.439,c.16) get tok: STRING(=)
(l.440,c.0) get tok: STRING(40)
(l.440,c.2) get tok: CONTROL(m)
(l.440,c.13) get tok: REF TAG(gpbgred)
(l.440,c.14) get tok: STRING(=)
(l.441,c.0) get tok: STRING(41)
(l.441,c.2) get tok: CONTROL(m)
(l.441,c.15) get tok: REF TAG(gpbggreen)
(l.441,c.16) get tok: STRING(=)
(l.442,c.0) get tok: STRING(42)
(l.442,c.2) get tok: CONTROL(m)
(l.442,c.16) get tok: REF TAG(gpbgyellow)
(l.442,c.17) get tok: STRING(=)
(l.443,c.0) get tok: STRING(43)
(l.443,c.2) get tok: CONTROL(m)
(l.443,c.14) get tok: REF TAG(gpbgblue)
(l.443,c.15) get tok: STRING(=)
(l.444,c.0) get tok: STRING(44)
(l.444,c.2) get tok: CONTROL(m)
(l.444,c.17) get tok: REF TAG(gpbgmagenta)
(l.444,c.18) get tok: STRING(=)
(l.445,c.0) get tok: STRING(45)
(l.445,c.2) get tok: CONTROL(m)
(l.445,c.14) get tok: REF TAG(gpbgcyan)
(l.445,c.15) get tok: STRING(=)
(l.446,c.0) get tok: STRING(46)
(l.446,c.2) get tok: CONTROL(m)
(l.446,c.15) get tok: REF TAG(gpbgwhite)
(l.446,c.16) get tok: STRING(=)
(l.447,c.0) get tok: STRING(47)
(l.447,c.2) get tok: CONTROL(m)
(l.447,c.14) get tok: REF TAG(gpbgorig)
(l.447,c.15) get tok: STRING(=)
(l.449,c.0) get tok: STRING(49)
(l.449,c.2) get tok: CONTROL(3)
(l.453,c.2) get tok: CONTROL(m)
(l.453,c.10) get tok: REF TAG(gpcsi)
(l.453,c.11) get tok: STRING(=)
(l.453,c.15) get tok: REF TAG(esc)
(l.453,c.16) get tok: STRING(+)
(l.454,c.0) get tok: STRING("[")
(l.454,c.2) get tok: CONTROL(m)
(l.454,c.10) get tok: REF TAG(gposc)
(l.454,c.11) get tok: STRING(=)
(l.454,c.15) get tok: REF TAG(esc)
(l.454,c.16) get tok: STRING(+)
(l.455,c.0) get tok: STRING("]")
(l.455,c.2) get tok: CONTROL(m)
(l.455,c.10) get tok: REF TAG(gpind)
(l.455,c.11) get tok: STRING(=)
(l.455,c.15) get tok: REF TAG(esc)
(l.455,c.16) get tok: STRING(+)
(l.456,c.0) get tok: STRING("D")
(l.456,c.2) get tok: CONTROL(m)
(l.456,c.10) get tok: REF TAG(gpnel)
(l.456,c.11) get tok: STRING(=)
(l.456,c.15) get tok: REF TAG(esc)
(l.456,c.16) get tok: STRING(+)
(l.457,c.0) get tok: STRING("E")
(l.457,c.2) get tok: CONTROL(m)
(l.457,c.10) get tok: REF TAG(gphts)
(l.457,c.11) get tok: STRING(=)
(l.457,c.15) get tok: REF TAG(esc)
(l.457,c.16) get tok: STRING(+)
(l.458,c.0) get tok: STRING("H")
(l.458,c.2) get tok: CONTROL(m)
(l.458,c.9) get tok: REF TAG(gpri)
(l.458,c.10) get tok: STRING(=)
(l.458,c.14) get tok: REF TAG(esc)
(l.458,c.15) get tok: STRING(+)
(l.459,c.0) get tok: STRING("M")
(l.459,c.2) get tok: CONTROL(m)
(l.459,c.10) get tok: REF TAG(gpss2)
(l.459,c.11) get tok: STRING(=)
(l.459,c.15) get tok: REF TAG(esc)
(l.459,c.16) get tok: STRING(+)
(l.460,c.0) get tok: STRING("N")
(l.460,c.2) get tok: CONTROL(m)
(l.460,c.10) get tok: REF TAG(gpss3)
(l.460,c.11) get tok: STRING(=)
(l.460,c.15) get tok: REF TAG(esc)
(l.460,c.16) get tok: STRING(+)
(l.461,c.0) get tok: STRING("O")
(l.461,c.2) get tok: CONTROL(m)
(l.461,c.10) get tok: REF TAG(gpdcs)
(l.461,c.11) get tok: STRING(=)
(l.461,c.15) get tok: REF TAG(esc)
(l.461,c.16) get tok: STRING(+)
(l.462,c.0) get tok: STRING("P")
(l.462,c.2) get tok: CONTROL(m)
(l.462,c.10) get tok: REF TAG(gpspa)
(l.462,c.11) get tok: STRING(=)
(l.462,c.15) get tok: REF TAG(esc)
(l.462,c.16) get tok: STRING(+)
(l.463,c.0) get tok: STRING("V")
(l.463,c.2) get tok: CONTROL(m)
(l.463,c.10) get tok: REF TAG(gpepa)
(l.463,c.11) get tok: STRING(=)
(l.463,c.15) get tok: REF TAG(esc)
(l.463,c.16) get tok: STRING(+)
(l.464,c.0) get tok: STRING("W")
(l.464,c.2) get tok: CONTROL(m)
(l.464,c.10) get tok: REF TAG(gpsos)
(l.464,c.11) get tok: STRING(=)
(l.464,c.15) get tok: REF TAG(esc)
(l.464,c.16) get tok: STRING(+)
(l.465,c.0) get tok: STRING("X")
(l.465,c.2) get tok: CONTROL(m)
(l.465,c.9) get tok: REF TAG(gpst)
(l.465,c.10) get tok: STRING(=)
(l.465,c.14) get tok: REF TAG(esc)
(l.465,c.15) get tok: STRING(+)
(l.466,c.0) get tok: STRING("\")
(l.466,c.2) get tok: CONTROL(m)
(l.466,c.10) get tok: REF TAG(gpapc)
(l.466,c.11) get tok: STRING(=)
(l.466,c.15) get tok: REF TAG(esc)
(l.466,c.16) get tok: STRING(+)
(l.468,c.0) get tok: REF TAG(blank)
(l.468,c.2) get tok: CONTROL(3)
(l.472,c.2) get tok: CONTROL(d)
(l.472,c.20) get tok: REF TAG(macrogpopctrl)
(l.472,c.21) get tok: STRING(=)
(l.473,c.2) get tok: INT(OP[87])
(l.473,c.7) get tok: REF TAG(CTRL)
(l.473,c.9) get tok: STRING(=)
(l.473,c.11) get tok: STRING(()
(l.473,c.15) get tok: INT(CHAR[113])
(l.473,c.17) get tok: REF TAG(c)
(l.473,c.18) get tok: STRING())
(l.473,c.22) get tok: INT(CHAR[113])
(l.473,c.23) get tok: STRING(:)
(l.473,c.29) get tok: INT(REPR[94])
(l.473,c.30) get tok: STRING(()
(l.473,c.33) get tok: INT(ABS[226])
(l.473,c.35) get tok: REF TAG(c)
(l.473,c.36) get tok: STRING(-)
(l.473,c.39) get tok: INT(ABS[226])
(l.473,c.43) get tok: STRING("@")
(l.473,c.44) get tok: STRING())
(l.475,c.2) get tok: CONTROL( )
(l.478,c.2) get tok: CONTROL(d)
(l.478,c.17) get tok: REF TAG(macrogpints)
(l.478,c.18) get tok: STRING(=)
(l.479,c.4) get tok: INT(PROC[69])
(l.479,c.13) get tok: REF TAG(gpints)
(l.479,c.14) get tok: STRING(=)
(l.479,c.16) get tok: STRING(()
(l.479,c.17) get tok: STRING([)
(l.479,c.18) get tok: STRING(])
(l.479,c.21) get tok: INT(INT[195])
(l.479,c.23) get tok: REF TAG(m)
(l.479,c.24) get tok: STRING())
(l.479,c.25) get tok: STRING([)
(l.479,c.26) get tok: STRING(])
(l.479,c.30) get tok: INT(CHAR[113])
(l.480,c.0) get tok: STRING(:)
(l.480,c.1) get tok: STRING(()
(l.481,c.4) get tok: INT(FILE[59])
(l.481,c.7) get tok: REF TAG(mf)
(l.481,c.8) get tok: STRING(;)
(l.481,c.19) get tok: REF TAG(establish)
(l.481,c.20) get tok: STRING(()
(l.481,c.22) get tok: REF TAG(mf)
(l.481,c.23) get tok: STRING(,)
(l.481,c.25) get tok: STRING("")
(l.481,c.26) get tok: STRING(,)
(l.481,c.37) get tok: REF TAG(memchannel)
(l.481,c.38) get tok: STRING(,)
(l.481,c.39) get tok: STRING(1)
(l.481,c.40) get tok: STRING(,)
(l.481,c.41) get tok: STRING(1)
(l.481,c.42) get tok: STRING(,)
(l.481,c.43) get tok: STRING(4)
(l.481,c.44) get tok: STRING(*)
(l.481,c.47) get tok: INT(UPB[150])
(l.481,c.49) get tok: REF TAG(m)
(l.481,c.50) get tok: STRING())
(l.481,c.51) get tok: STRING(;)
(l.482,c.3) get tok: INT(FOR[138])
(l.482,c.6) get tok: REF TAG(i)
(l.482,c.10) get tok: INT(FROM[176])
(l.482,c.14) get tok: INT(LWB[148])
(l.482,c.17) get tok: REF TAG(m)
(l.482,c.19) get tok: INT(TO[187])
(l.482,c.23) get tok: INT(UPB[150])
(l.482,c.25) get tok: REF TAG(m)
(l.482,c.26) get tok: STRING(-)
(l.483,c.0) get tok: STRING(1)
(l.483,c.2) get tok: INT(DO[244])
(l.484,c.3) get tok: REF TAG(put)
(l.484,c.4) get tok: STRING(()
(l.484,c.6) get tok: REF TAG(mf)
(l.484,c.7) get tok: STRING(,)
(l.484,c.8) get tok: STRING(()
(l.484,c.13) get tok: REF TAG(whole)
(l.484,c.14) get tok: STRING(()
(l.484,c.15) get tok: REF TAG(m)
(l.484,c.16) get tok: STRING([)
(l.484,c.17) get tok: REF TAG(i)
(l.484,c.18) get tok: STRING(])
(l.484,c.19) get tok: STRING(,)
(l.484,c.20) get tok: STRING(0)
(l.484,c.21) get tok: STRING())
(l.484,c.22) get tok: STRING(,)
(l.484,c.25) get tok: STRING(";")
(l.484,c.26) get tok: STRING())
(l.484,c.27) get tok: STRING())
(l.485,c.2) get tok: INT(OD[231])
(l.485,c.3) get tok: STRING(;)
(l.486,c.3) get tok: REF TAG(put)
(l.486,c.4) get tok: STRING(()
(l.486,c.6) get tok: REF TAG(mf)
(l.486,c.7) get tok: STRING(,)
(l.486,c.12) get tok: REF TAG(whole)
(l.486,c.13) get tok: STRING(()
(l.486,c.14) get tok: REF TAG(m)
(l.486,c.15) get tok: STRING([)
(l.486,c.18) get tok: INT(UPB[150])
(l.486,c.20) get tok: REF TAG(m)
(l.486,c.21) get tok: STRING(])
(l.486,c.22) get tok: STRING(,)
(l.486,c.23) get tok: STRING(0)
(l.486,c.24) get tok: STRING())
(l.486,c.25) get tok: STRING())
(l.486,c.26) get tok: STRING(;)
(l.487,c.6) get tok: INT(STRING[156])
(l.487,c.8) get tok: REF TAG(s)
(l.487,c.10) get tok: STRING(:=)
(l.487,c.21) get tok: REF TAG(filebuffer)
(l.487,c.22) get tok: STRING(()
(l.487,c.24) get tok: REF TAG(mf)
(l.487,c.25) get tok: STRING())
(l.487,c.26) get tok: STRING([)
(l.487,c.27) get tok: STRING(:)
(l.487,c.38) get tok: REF TAG(currentpos)
(l.487,c.39) get tok: STRING(()
(l.487,c.41) get tok: REF TAG(mf)
(l.487,c.42) get tok: STRING())
(l.487,c.43) get tok: STRING(])
(l.487,c.44) get tok: STRING(;)
(l.488,c.5) get tok: REF TAG(close)
(l.488,c.6) get tok: STRING(()
(l.488,c.8) get tok: REF TAG(mf)
(l.488,c.9) get tok: STRING())
(l.488,c.10) get tok: STRING(;)
(l.490,c.0) get tok: REF TAG(s)
(l.490,c.1) get tok: STRING())
(l.492,c.2) get tok: CONTROL( )
(l.503,c.2) get tok: CONTROL(d)
(l.503,c.13) get tok: REF TAG(macrokbd)
(l.503,c.14) get tok: STRING(=)
(l.503,c.19) get tok: INT(FILE[59])
(l.503,c.22) get tok: CONTROL(!)
(l.505,c.0) get tok: REF TAG(kbd)
(l.505,c.2) get tok: CONTROL(d)
(l.505,c.20) get tok: REF TAG(macrogpgetkey)
(l.505,c.21) get tok: STRING(=)
(l.506,c.9) get tok: REF TAG(macrokbd)
(l.506,c.10) get tok: STRING(;)
(l.507,c.4) get tok: INT(PROC[69])
(l.507,c.16) get tok: REF TAG(gpgetkey)
(l.507,c.17) get tok: STRING(=)
(l.507,c.19) get tok: STRING([)
(l.507,c.20) get tok: STRING(])
(l.507,c.24) get tok: INT(CHAR[113])
(l.508,c.0) get tok: STRING(:)
(l.508,c.5) get tok: INT(BEGIN[227])
(l.509,c.6) get tok: REF TAG(VECTOR)
(l.509,c.7) get tok: STRING([)
(l.509,c.10) get tok: STRING(256)
(l.509,c.11) get tok: STRING(])
(l.509,c.15) get tok: INT(CHAR[113])
(l.509,c.22) get tok: REF TAG(buffer)
(l.509,c.23) get tok: STRING(;)
(l.510,c.3) get tok: INT(INT[195])
(l.510,c.7) get tok: REF TAG(res)
(l.510,c.8) get tok: STRING(=)
(l.510,c.18) get tok: REF TAG(posixread)
(l.510,c.19) get tok: STRING(()
(l.510,c.28) get tok: REF TAG(sysfile)
(l.510,c.30) get tok: INT(OF[97])
(l.510,c.34) get tok: REF TAG(kbd)
(l.510,c.35) get tok: STRING(,)
(l.510,c.41) get tok: REF TAG(buffer)
(l.510,c.42) get tok: STRING(,)
(l.510,c.45) get tok: INT(UPB[150])
(l.510,c.52) get tok: REF TAG(buffer)
(l.510,c.53) get tok: STRING())
(l.510,c.54) get tok: STRING(;)
(l.511,c.6) get tok: REF TAG(buffer)
(l.511,c.7) get tok: STRING([)
(l.511,c.8) get tok: STRING(:)
(l.511,c.11) get tok: REF TAG(res)
(l.511,c.12) get tok: STRING(])
(l.512,c.3) get tok: INT(END[202])
(l.514,c.2) get tok: CONTROL( )
(l.522,c.2) get tok: CONTROL(d)
(l.522,c.22) get tok: REF TAG(macrogpgetreply)
(l.522,c.23) get tok: STRING(=)
(l.523,c.16) get tok: REF TAG(macrogpopends)
(l.523,c.17) get tok: STRING(;)
(l.524,c.16) get tok: REF TAG(macrogpgetkey)
(l.524,c.17) get tok: STRING(;)
(l.525,c.4) get tok: INT(PROC[69])
(l.525,c.18) get tok: REF TAG(gpgetreply)
(l.525,c.19) get tok: STRING(=)
(l.525,c.21) get tok: STRING(()
(l.525,c.26) get tok: INT(UNION[311])
(l.525,c.27) get tok: STRING(()
(l.525,c.31) get tok: INT(CHAR[113])
(l.525,c.32) get tok: STRING(,)
(l.525,c.33) get tok: STRING([)
(l.525,c.34) get tok: STRING(])
(l.525,c.38) get tok: INT(CHAR[113])
(l.525,c.39) get tok: STRING())
(l.525,c.44) get tok: REF TAG(term)
(l.525,c.45) get tok: STRING())
(l.525,c.46) get tok: STRING([)
(l.525,c.47) get tok: STRING(])
(l.525,c.51) get tok: INT(CHAR[113])
(l.526,c.0) get tok: STRING(:)
(l.526,c.4) get tok: INT(CASE[137])
(l.526,c.11) get tok: INT(STRING[156])
(l.526,c.17) get tok: REF TAG(reply)
(l.526,c.18) get tok: STRING(;)
(l.527,c.0) get tok: REF TAG(term)
(l.527,c.2) get tok: INT(IN[306])
(l.528,c.1) get tok: STRING(()
(l.528,c.2) get tok: STRING([)
(l.528,c.3) get tok: STRING(])
(l.528,c.7) get tok: INT(CHAR[113])
(l.528,c.10) get tok: REF TAG(ts)
(l.528,c.11) get tok: STRING())
(l.529,c.0) get tok: STRING(:)
(l.529,c.2) get tok: INT(IF[62])
(l.529,c.6) get tok: INT(UPB[150])
(l.529,c.9) get tok: REF TAG(ts)
(l.529,c.10) get tok: STRING(=)
(l.530,c.0) get tok: STRING(0)
(l.530,c.4) get tok: INT(THEN[190])
(l.531,c.0) get tok: STRING("")
(l.531,c.4) get tok: INT(ELSE[4])
(l.532,c.5) get tok: INT(WHILE[99])
(l.533,c.5) get tok: REF TAG(reply)
(l.533,c.8) get tok: STRING(+:=)
(l.533,c.18) get tok: REF TAG(gpgetkey)
(l.533,c.19) get tok: STRING(;)
(l.534,c.2) get tok: INT(IF[62])
(l.534,c.6) get tok: INT(UPB[150])
(l.534,c.12) get tok: REF TAG(reply)
(l.534,c.13) get tok: STRING(>)
(l.535,c.0) get tok: STRING(1)
(l.535,c.4) get tok: INT(THEN[190])
(l.535,c.10) get tok: REF TAG(reply)
(l.535,c.11) get tok: STRING([)
(l.535,c.14) get tok: INT(UPB[150])
(l.535,c.20) get tok: REF TAG(reply)
(l.535,c.21) get tok: STRING(-)
(l.535,c.24) get tok: INT(UPB[150])
(l.535,c.27) get tok: REF TAG(ts)
(l.535,c.28) get tok: STRING(+)
(l.535,c.29) get tok: STRING(1)
(l.535,c.30) get tok: STRING(:)
(l.535,c.31) get tok: STRING(])
(l.535,c.33) get tok: STRING(/=)
(l.536,c.0) get tok: REF TAG(ts)
(l.536,c.4) get tok: INT(ELSE[4])
(l.536,c.9) get tok: INT(TRUE[64])
(l.537,c.2) get tok: INT(FI[107])
(l.538,c.2) get tok: INT(DO[244])
(l.538,c.7) get tok: INT(SKIP[44])
(l.538,c.10) get tok: INT(OD[231])
(l.538,c.11) get tok: STRING(;)
(l.540,c.0) get tok: REF TAG(reply)
(l.540,c.2) get tok: INT(FI[107])
(l.540,c.3) get tok: STRING(,)
(l.541,c.1) get tok: STRING(()
(l.541,c.5) get tok: INT(CHAR[113])
(l.541,c.8) get tok: REF TAG(tc)
(l.541,c.9) get tok: STRING())
(l.542,c.0) get tok: STRING(:)
(l.542,c.5) get tok: INT(BEGIN[227])
(l.543,c.5) get tok: INT(WHILE[99])
(l.544,c.5) get tok: REF TAG(reply)
(l.544,c.8) get tok: STRING(+:=)
(l.544,c.18) get tok: REF TAG(gpgetkey)
(l.544,c.19) get tok: STRING(;)
(l.545,c.3) get tok: INT(NOT[230])
(l.545,c.4) get tok: STRING(()
(l.545,c.10) get tok: REF TAG(reply)
(l.545,c.14) get tok: REF TAG(ENDS)
(l.545,c.17) get tok: REF TAG(tc)
(l.545,c.18) get tok: STRING())
(l.546,c.2) get tok: INT(DO[244])
(l.546,c.7) get tok: INT(SKIP[44])
(l.546,c.10) get tok: INT(OD[231])
(l.546,c.11) get tok: STRING(;)
(l.548,c.0) get tok: REF TAG(reply)
(l.548,c.3) get tok: INT(END[202])
(l.549,c.3) get tok: INT(OUT[155])
(l.550,c.0) get tok: STRING("")
(l.550,c.4) get tok: INT(ESAC[39])
(l.552,c.2) get tok: CONTROL( )
(l.554,c.2) get tok: CONTROL(d)
(l.554,c.18) get tok: REF TAG(macrogppcsi)
(l.554,c.19) get tok: STRING(=)
(l.555,c.13) get tok: REF TAG(macrogpints)
(l.555,c.14) get tok: STRING(;)
(l.556,c.4) get tok: INT(PROC[69])
(l.556,c.14) get tok: REF TAG(gppcsi)
(l.556,c.15) get tok: STRING(=)
(l.556,c.17) get tok: STRING(()
(l.556,c.18) get tok: STRING([)
(l.556,c.19) get tok: STRING(])
(l.556,c.22) get tok: INT(INT[195])
(l.556,c.25) get tok: REF TAG(ri)
(l.556,c.26) get tok: STRING())
(l.556,c.30) get tok: INT(VOID[181])
(l.556,c.31) get tok: STRING(:)
(l.556,c.37) get tok: REF TAG(print)
(l.556,c.38) get tok: STRING(()
(l.556,c.39) get tok: STRING(()
(l.556,c.45) get tok: REF TAG(gpcsi)
(l.556,c.46) get tok: STRING(,)
(l.556,c.53) get tok: REF TAG(gpints)
(l.556,c.54) get tok: STRING(()
(l.556,c.56) get tok: REF TAG(ri)
(l.556,c.57) get tok: STRING())
(l.556,c.58) get tok: STRING(,)
(l.556,c.61) get tok: STRING("t")
(l.556,c.62) get tok: STRING())
(l.556,c.63) get tok: STRING())
(l.558,c.2) get tok: CONTROL( )
(l.561,c.2) get tok: CONTROL(d)
(l.561,c.21) get tok: REF TAG(macrogpsettext)
(l.561,c.22) get tok: STRING(=)
(l.562,c.16) get tok: REF TAG(macrogpopctrl)
(l.562,c.17) get tok: STRING(;)
(l.563,c.4) get tok: INT(PROC[69])
(l.563,c.17) get tok: REF TAG(gpsettext)
(l.563,c.18) get tok: STRING(=)
(l.563,c.20) get tok: STRING(()
(l.563,c.23) get tok: INT(INT[195])
(l.563,c.26) get tok: REF TAG(ps)
(l.563,c.27) get tok: STRING(,)
(l.563,c.29) get tok: STRING([)
(l.563,c.30) get tok: STRING(])
(l.563,c.34) get tok: INT(CHAR[113])
(l.563,c.37) get tok: REF TAG(pt)
(l.563,c.38) get tok: STRING())
(l.563,c.42) get tok: INT(VOID[181])
(l.564,c.0) get tok: STRING(:)
(l.564,c.5) get tok: REF TAG(print)
(l.564,c.6) get tok: STRING(()
(l.564,c.7) get tok: STRING(()
(l.564,c.13) get tok: REF TAG(gposc)
(l.564,c.14) get tok: STRING(,)
(l.564,c.19) get tok: REF TAG(whole)
(l.564,c.20) get tok: STRING(()
(l.564,c.22) get tok: REF TAG(ps)
(l.564,c.23) get tok: STRING(,)
(l.564,c.24) get tok: STRING(0)
(l.564,c.25) get tok: STRING())
(l.564,c.26) get tok: STRING(,)
(l.564,c.29) get tok: STRING(";")
(l.564,c.30) get tok: STRING(,)
(l.564,c.32) get tok: REF TAG(pt)
(l.564,c.33) get tok: STRING(,)
(l.564,c.37) get tok: REF TAG(CTRL)
(l.564,c.40) get tok: STRING("G")
(l.564,c.41) get tok: STRING())
(l.564,c.42) get tok: STRING())
(l.566,c.2) get tok: CONTROL(3)
(l.576,c.2) get tok: CONTROL( )
(l.579,c.2) get tok: CONTROL(d)
(l.579,c.17) get tok: REF TAG(macrogpattr)
(l.579,c.18) get tok: STRING(=)
(l.580,c.13) get tok: REF TAG(macrogpints)
(l.580,c.14) get tok: STRING(;)
(l.581,c.4) get tok: INT(PROC[69])
(l.581,c.12) get tok: REF TAG(gpattr)
(l.581,c.13) get tok: STRING(=)
(l.581,c.14) get tok: STRING(()
(l.581,c.15) get tok: STRING([)
(l.581,c.16) get tok: STRING(])
(l.581,c.19) get tok: INT(INT[195])
(l.581,c.21) get tok: REF TAG(a)
(l.581,c.22) get tok: STRING())
(l.581,c.23) get tok: STRING([)
(l.581,c.24) get tok: STRING(])
(l.581,c.28) get tok: INT(CHAR[113])
(l.581,c.29) get tok: STRING(:)
(l.581,c.36) get tok: REF TAG(gpcsi)
(l.581,c.37) get tok: STRING(+)
(l.581,c.44) get tok: REF TAG(gpints)
(l.581,c.45) get tok: STRING(()
(l.581,c.46) get tok: REF TAG(a)
(l.581,c.47) get tok: STRING())
(l.581,c.48) get tok: STRING(+)
(l.583,c.0) get tok: STRING("m")
(l.583,c.2) get tok: CONTROL( )
(l.587,c.2) get tok: CONTROL(d)
(l.587,c.17) get tok: REF TAG(macrogpcup)
(l.587,c.18) get tok: STRING(=)
(l.588,c.4) get tok: INT(PROC[69])
(l.588,c.12) get tok: REF TAG(gpcup)
(l.588,c.13) get tok: STRING(=)
(l.588,c.14) get tok: STRING(()
(l.588,c.17) get tok: INT(INT[195])
(l.588,c.19) get tok: REF TAG(r)
(l.588,c.20) get tok: STRING())
(l.588,c.24) get tok: INT(VOID[181])
(l.588,c.25) get tok: STRING(:)
(l.588,c.32) get tok: REF TAG(print)
(l.588,c.33) get tok: STRING(()
(l.588,c.34) get tok: STRING(()
(l.588,c.40) get tok: REF TAG(gpcsi)
(l.588,c.41) get tok: STRING(,)
(l.588,c.46) get tok: REF TAG(whole)
(l.588,c.47) get tok: STRING(()
(l.588,c.48) get tok: REF TAG(r)
(l.588,c.49) get tok: STRING(,)
(l.588,c.50) get tok: STRING(0)
(l.588,c.51) get tok: STRING())
(l.588,c.52) get tok: STRING(,)
(l.588,c.55) get tok: STRING("A")
(l.588,c.56) get tok: STRING())
(l.588,c.57) get tok: STRING())
(l.589,c.2) get tok: CONTROL(d)
(l.589,c.17) get tok: REF TAG(macrogpcdn)
(l.589,c.18) get tok: STRING(=)
(l.590,c.4) get tok: INT(PROC[69])
(l.590,c.12) get tok: REF TAG(gpcdn)
(l.590,c.13) get tok: STRING(=)
(l.590,c.14) get tok: STRING(()
(l.590,c.17) get tok: INT(INT[195])
(l.590,c.19) get tok: REF TAG(r)
(l.590,c.20) get tok: STRING())
(l.590,c.24) get tok: INT(VOID[181])
(l.590,c.25) get tok: STRING(:)
(l.590,c.32) get tok: REF TAG(print)
(l.590,c.33) get tok: STRING(()
(l.590,c.34) get tok: STRING(()
(l.590,c.40) get tok: REF TAG(gpcsi)
(l.590,c.41) get tok: STRING(,)
(l.590,c.46) get tok: REF TAG(whole)
(l.590,c.47) get tok: STRING(()
(l.590,c.48) get tok: REF TAG(r)
(l.590,c.49) get tok: STRING(,)
(l.590,c.50) get tok: STRING(0)
(l.590,c.51) get tok: STRING())
(l.590,c.52) get tok: STRING(,)
(l.590,c.55) get tok: STRING("B")
(l.590,c.56) get tok: STRING())
(l.590,c.57) get tok: STRING())
(l.591,c.2) get tok: CONTROL(d)
(l.591,c.17) get tok: REF TAG(macrogpcrt)
(l.591,c.18) get tok: STRING(=)
(l.592,c.4) get tok: INT(PROC[69])
(l.592,c.12) get tok: REF TAG(gpcrt)
(l.592,c.13) get tok: STRING(=)
(l.592,c.14) get tok: STRING(()
(l.592,c.17) get tok: INT(INT[195])
(l.592,c.19) get tok: REF TAG(r)
(l.592,c.20) get tok: STRING())
(l.592,c.24) get tok: INT(VOID[181])
(l.592,c.25) get tok: STRING(:)
(l.592,c.32) get tok: REF TAG(print)
(l.592,c.33) get tok: STRING(()
(l.592,c.34) get tok: STRING(()
(l.592,c.40) get tok: REF TAG(gpcsi)
(l.592,c.41) get tok: STRING(,)
(l.592,c.46) get tok: REF TAG(whole)
(l.592,c.47) get tok: STRING(()
(l.592,c.48) get tok: REF TAG(r)
(l.592,c.49) get tok: STRING(,)
(l.592,c.50) get tok: STRING(0)
(l.592,c.51) get tok: STRING())
(l.592,c.52) get tok: STRING(,)
(l.592,c.55) get tok: STRING("C")
(l.592,c.56) get tok: STRING())
(l.592,c.57) get tok: STRING())
(l.593,c.2) get tok: CONTROL(d)
(l.593,c.17) get tok: REF TAG(macrogpclt)
(l.593,c.18) get tok: STRING(=)
(l.594,c.4) get tok: INT(PROC[69])
(l.594,c.12) get tok: REF TAG(gpclt)
(l.594,c.13) get tok: STRING(=)
(l.594,c.14) get tok: STRING(()
(l.594,c.17) get tok: INT(INT[195])
(l.594,c.19) get tok: REF TAG(r)
(l.594,c.20) get tok: STRING())
(l.594,c.24) get tok: INT(VOID[181])
(l.594,c.25) get tok: STRING(:)
(l.594,c.32) get tok: REF TAG(print)
(l.594,c.33) get tok: STRING(()
(l.594,c.34) get tok: STRING(()
(l.594,c.40) get tok: REF TAG(gpcsi)
(l.594,c.41) get tok: STRING(,)
(l.594,c.46) get tok: REF TAG(whole)
(l.594,c.47) get tok: STRING(()
(l.594,c.48) get tok: REF TAG(r)
(l.594,c.49) get tok: STRING(,)
(l.594,c.50) get tok: STRING(0)
(l.594,c.51) get tok: STRING())
(l.594,c.52) get tok: STRING(,)
(l.594,c.55) get tok: STRING("D")
(l.594,c.56) get tok: STRING())
(l.594,c.57) get tok: STRING())
(l.596,c.2) get tok: CONTROL(d)
(l.596,c.17) get tok: REF TAG(macrogpcsav)
(l.596,c.18) get tok: STRING(=)
(l.597,c.4) get tok: INT(PROC[69])
(l.597,c.12) get tok: REF TAG(gpcsav)
(l.597,c.13) get tok: STRING(=)
(l.597,c.17) get tok: INT(VOID[181])
(l.597,c.18) get tok: STRING(:)
(l.597,c.32) get tok: REF TAG(print)
(l.597,c.33) get tok: STRING(()
(l.597,c.34) get tok: STRING(()
(l.597,c.37) get tok: REF TAG(esc)
(l.597,c.38) get tok: STRING(,)
(l.597,c.41) get tok: STRING("7")
(l.597,c.42) get tok: STRING())
(l.597,c.43) get tok: STRING())
(l.598,c.2) get tok: CONTROL(d)
(l.598,c.17) get tok: REF TAG(macrogpcres)
(l.598,c.18) get tok: STRING(=)
(l.599,c.4) get tok: INT(PROC[69])
(l.599,c.12) get tok: REF TAG(gpcres)
(l.599,c.13) get tok: STRING(=)
(l.599,c.17) get tok: INT(VOID[181])
(l.599,c.18) get tok: STRING(:)
(l.599,c.32) get tok: REF TAG(print)
(l.599,c.33) get tok: STRING(()
(l.599,c.34) get tok: STRING(()
(l.599,c.37) get tok: REF TAG(esc)
(l.599,c.38) get tok: STRING(,)
(l.599,c.41) get tok: STRING("8")
(l.599,c.42) get tok: STRING())
(l.599,c.43) get tok: STRING())
(l.600,c.2) get tok: CONTROL(d)
(l.600,c.15) get tok: REF TAG(macrogprc)
(l.600,c.16) get tok: STRING(=)
(l.601,c.4) get tok: INT(PROC[69])
(l.601,c.10) get tok: REF TAG(gprc)
(l.601,c.11) get tok: STRING(=)
(l.601,c.12) get tok: STRING(()
(l.601,c.15) get tok: INT(INT[195])
(l.601,c.17) get tok: REF TAG(r)
(l.601,c.18) get tok: STRING(,)
(l.601,c.19) get tok: REF TAG(c)
(l.601,c.20) get tok: STRING())
(l.601,c.24) get tok: INT(VOID[181])
(l.601,c.25) get tok: STRING(:)
(l.601,c.32) get tok: REF TAG(print)
(l.601,c.33) get tok: STRING(()
(l.601,c.34) get tok: STRING(()
(l.601,c.40) get tok: REF TAG(gpcsi)
(l.601,c.41) get tok: STRING(,)
(l.601,c.46) get tok: REF TAG(whole)
(l.601,c.47) get tok: STRING(()
(l.601,c.48) get tok: REF TAG(r)
(l.601,c.49) get tok: STRING(,)
(l.601,c.50) get tok: STRING(0)
(l.601,c.51) get tok: STRING())
(l.601,c.52) get tok: STRING(,)
(l.601,c.55) get tok: STRING(";")
(l.601,c.56) get tok: STRING(,)
(l.601,c.61) get tok: REF TAG(whole)
(l.601,c.62) get tok: STRING(()
(l.601,c.63) get tok: REF TAG(c)
(l.601,c.64) get tok: STRING(,)
(l.601,c.65) get tok: STRING(0)
(l.601,c.66) get tok: STRING())
(l.601,c.67) get tok: STRING(,)
(l.601,c.70) get tok: STRING("H")
(l.601,c.71) get tok: STRING())
(l.601,c.72) get tok: STRING())
(l.604,c.2) get tok: CONTROL( )
(l.607,c.2) get tok: CONTROL(d)
(l.607,c.17) get tok: REF TAG(macrogpceow)
(l.607,c.18) get tok: STRING(=)
(l.608,c.4) get tok: INT(PROC[69])
(l.608,c.12) get tok: REF TAG(gpceow)
(l.608,c.13) get tok: STRING(=)
(l.608,c.17) get tok: INT(VOID[181])
(l.608,c.18) get tok: STRING(:)
(l.608,c.32) get tok: REF TAG(print)
(l.608,c.33) get tok: STRING(()
(l.608,c.34) get tok: STRING(()
(l.608,c.40) get tok: REF TAG(gpcsi)
(l.608,c.41) get tok: STRING(,)
(l.608,c.45) get tok: STRING("0J")
(l.608,c.46) get tok: STRING())
(l.608,c.47) get tok: STRING())
(l.609,c.2) get tok: CONTROL(d)
(l.609,c.17) get tok: REF TAG(macrogpcbow)
(l.609,c.18) get tok: STRING(=)
(l.610,c.4) get tok: INT(PROC[69])
(l.610,c.12) get tok: REF TAG(gpcbow)
(l.610,c.13) get tok: STRING(=)
(l.610,c.17) get tok: INT(VOID[181])
(l.610,c.18) get tok: STRING(:)
(l.610,c.32) get tok: REF TAG(print)
(l.610,c.33) get tok: STRING(()
(l.610,c.34) get tok: STRING(()
(l.610,c.40) get tok: REF TAG(gpcsi)
(l.610,c.41) get tok: STRING(,)
(l.610,c.45) get tok: STRING("1J")
(l.610,c.46) get tok: STRING())
(l.610,c.47) get tok: STRING())
(l.611,c.2) get tok: CONTROL(d)
(l.611,c.17) get tok: REF TAG(macrogpcwin)
(l.611,c.18) get tok: STRING(=)
(l.612,c.4) get tok: INT(PROC[69])
(l.612,c.12) get tok: REF TAG(gpcwin)
(l.612,c.13) get tok: STRING(=)
(l.612,c.17) get tok: INT(VOID[181])
(l.612,c.18) get tok: STRING(:)
(l.612,c.32) get tok: REF TAG(print)
(l.612,c.33) get tok: STRING(()
(l.612,c.34) get tok: STRING(()
(l.612,c.40) get tok: REF TAG(gpcsi)
(l.612,c.41) get tok: STRING(,)
(l.612,c.45) get tok: STRING("2J")
(l.612,c.46) get tok: STRING())
(l.612,c.47) get tok: STRING())
(l.613,c.2) get tok: CONTROL(d)
(l.613,c.17) get tok: REF TAG(macrogpceol)
(l.613,c.18) get tok: STRING(=)
(l.614,c.4) get tok: INT(PROC[69])
(l.614,c.12) get tok: REF TAG(gpceol)
(l.614,c.13) get tok: STRING(=)
(l.614,c.17) get tok: INT(VOID[181])
(l.614,c.18) get tok: STRING(:)
(l.614,c.32) get tok: REF TAG(print)
(l.614,c.33) get tok: STRING(()
(l.614,c.34) get tok: STRING(()
(l.614,c.40) get tok: REF TAG(gpcsi)
(l.614,c.41) get tok: STRING(,)
(l.614,c.45) get tok: STRING("0K")
(l.614,c.46) get tok: STRING())
(l.614,c.47) get tok: STRING())
(l.615,c.2) get tok: CONTROL(d)
(l.615,c.17) get tok: REF TAG(macrogpcbol)
(l.615,c.18) get tok: STRING(=)
(l.616,c.4) get tok: INT(PROC[69])
(l.616,c.12) get tok: REF TAG(gpcbol)
(l.616,c.13) get tok: STRING(=)
(l.616,c.17) get tok: INT(VOID[181])
(l.616,c.18) get tok: STRING(:)
(l.616,c.32) get tok: REF TAG(print)
(l.616,c.33) get tok: STRING(()
(l.616,c.34) get tok: STRING(()
(l.616,c.40) get tok: REF TAG(gpcsi)
(l.616,c.41) get tok: STRING(,)
(l.616,c.45) get tok: STRING("1K")
(l.616,c.46) get tok: STRING())
(l.616,c.47) get tok: STRING())
(l.617,c.2) get tok: CONTROL(d)
(l.617,c.16) get tok: REF TAG(macrogpcln)
(l.617,c.17) get tok: STRING(=)
(l.618,c.4) get tok: INT(PROC[69])
(l.618,c.12) get tok: REF TAG(gpcln)
(l.618,c.13) get tok: STRING(=)
(l.618,c.17) get tok: INT(VOID[181])
(l.618,c.18) get tok: STRING(:)
(l.618,c.32) get tok: REF TAG(print)
(l.618,c.33) get tok: STRING(()
(l.618,c.34) get tok: STRING(()
(l.618,c.40) get tok: REF TAG(gpcsi)
(l.618,c.41) get tok: STRING(,)
(l.618,c.45) get tok: STRING("2K")
(l.618,c.46) get tok: STRING())
(l.618,c.47) get tok: STRING())
(l.620,c.2) get tok: CONTROL(d)
(l.620,c.19) get tok: REF TAG(macrogplnins)
(l.620,c.20) get tok: STRING(=)
(l.621,c.4) get tok: INT(PROC[69])
(l.621,c.14) get tok: REF TAG(gplnins)
(l.621,c.15) get tok: STRING(=)
(l.621,c.16) get tok: STRING(()
(l.621,c.19) get tok: INT(INT[195])
(l.621,c.21) get tok: REF TAG(l)
(l.621,c.22) get tok: STRING())
(l.621,c.26) get tok: INT(VOID[181])
(l.621,c.27) get tok: STRING(:)
(l.621,c.32) get tok: REF TAG(print)
(l.621,c.33) get tok: STRING(()
(l.621,c.34) get tok: STRING(()
(l.621,c.40) get tok: REF TAG(gpcsi)
(l.621,c.41) get tok: STRING(,)
(l.621,c.46) get tok: REF TAG(whole)
(l.621,c.47) get tok: STRING(()
(l.621,c.48) get tok: REF TAG(l)
(l.621,c.49) get tok: STRING(,)
(l.621,c.50) get tok: STRING(0)
(l.621,c.51) get tok: STRING())
(l.621,c.52) get tok: STRING(,)
(l.621,c.55) get tok: STRING("L")
(l.621,c.56) get tok: STRING())
(l.621,c.57) get tok: STRING())
(l.622,c.2) get tok: CONTROL(d)
(l.622,c.19) get tok: REF TAG(macrogplndel)
(l.622,c.20) get tok: STRING(=)
(l.623,c.4) get tok: INT(PROC[69])
(l.623,c.14) get tok: REF TAG(gplndel)
(l.623,c.15) get tok: STRING(=)
(l.623,c.16) get tok: STRING(()
(l.623,c.19) get tok: INT(INT[195])
(l.623,c.21) get tok: REF TAG(l)
(l.623,c.22) get tok: STRING())
(l.623,c.26) get tok: INT(VOID[181])
(l.623,c.27) get tok: STRING(:)
(l.623,c.32) get tok: REF TAG(print)
(l.623,c.33) get tok: STRING(()
(l.623,c.34) get tok: STRING(()
(l.623,c.40) get tok: REF TAG(gpcsi)
(l.623,c.41) get tok: STRING(,)
(l.623,c.46) get tok: REF TAG(whole)
(l.623,c.47) get tok: STRING(()
(l.623,c.48) get tok: REF TAG(l)
(l.623,c.49) get tok: STRING(,)
(l.623,c.50) get tok: STRING(0)
(l.623,c.51) get tok: STRING())
(l.623,c.52) get tok: STRING(,)
(l.623,c.55) get tok: STRING("M")
(l.623,c.56) get tok: STRING())
(l.623,c.57) get tok: STRING())
(l.625,c.2) get tok: CONTROL(d)
(l.625,c.19) get tok: REF TAG(macrogpscrup)
(l.625,c.20) get tok: STRING(=)
(l.626,c.4) get tok: INT(PROC[69])
(l.626,c.15) get tok: REF TAG(gpscrup)
(l.626,c.16) get tok: STRING(=)
(l.626,c.18) get tok: STRING(()
(l.626,c.21) get tok: INT(INT[195])
(l.626,c.23) get tok: REF TAG(s)
(l.626,c.24) get tok: STRING())
(l.626,c.28) get tok: INT(VOID[181])
(l.626,c.29) get tok: STRING(:)
(l.626,c.36) get tok: REF TAG(print)
(l.626,c.37) get tok: STRING(()
(l.626,c.38) get tok: STRING(()
(l.626,c.44) get tok: REF TAG(gpcsi)
(l.626,c.45) get tok: STRING(,)
(l.626,c.50) get tok: REF TAG(whole)
(l.626,c.51) get tok: STRING(()
(l.626,c.52) get tok: REF TAG(s)
(l.626,c.53) get tok: STRING(,)
(l.626,c.54) get tok: STRING(0)
(l.626,c.55) get tok: STRING())
(l.626,c.56) get tok: STRING(,)
(l.626,c.59) get tok: STRING("S")
(l.626,c.60) get tok: STRING())
(l.626,c.61) get tok: STRING())
(l.627,c.2) get tok: CONTROL(d)
(l.627,c.19) get tok: REF TAG(macrogpscrdn)
(l.627,c.20) get tok: STRING(=)
(l.628,c.4) get tok: INT(PROC[69])
(l.628,c.15) get tok: REF TAG(gpscrdn)
(l.628,c.16) get tok: STRING(=)
(l.628,c.18) get tok: STRING(()
(l.628,c.21) get tok: INT(INT[195])
(l.628,c.23) get tok: REF TAG(s)
(l.628,c.24) get tok: STRING())
(l.628,c.28) get tok: INT(VOID[181])
(l.628,c.29) get tok: STRING(:)
(l.628,c.36) get tok: REF TAG(print)
(l.628,c.37) get tok: STRING(()
(l.628,c.38) get tok: STRING(()
(l.628,c.44) get tok: REF TAG(gpcsi)
(l.628,c.45) get tok: STRING(,)
(l.628,c.50) get tok: REF TAG(whole)
(l.628,c.51) get tok: STRING(()
(l.628,c.52) get tok: REF TAG(s)
(l.628,c.53) get tok: STRING(,)
(l.628,c.54) get tok: STRING(0)
(l.628,c.55) get tok: STRING())
(l.628,c.56) get tok: STRING(,)
(l.628,c.59) get tok: STRING("T")
(l.628,c.60) get tok: STRING())
(l.628,c.61) get tok: STRING())
(l.630,c.2) get tok: CONTROL( )
(l.635,c.2) get tok: CONTROL(d)
(l.635,c.24) get tok: REF TAG(macrogpsetscrrgn)
(l.635,c.25) get tok: STRING(=)
(l.636,c.13) get tok: REF TAG(macrogpints)
(l.636,c.14) get tok: STRING(;)
(l.637,c.4) get tok: INT(PROC[69])
(l.637,c.20) get tok: REF TAG(gpsetscrrgn)
(l.637,c.21) get tok: STRING(=)
(l.637,c.23) get tok: STRING(()
(l.637,c.24) get tok: STRING([)
(l.637,c.25) get tok: STRING(])
(l.637,c.28) get tok: INT(INT[195])
(l.637,c.30) get tok: REF TAG(s)
(l.637,c.31) get tok: STRING())
(l.637,c.35) get tok: INT(VOID[181])
(l.637,c.36) get tok: STRING(:)
(l.637,c.61) get tok: REF TAG(setscrollingregion)
(l.637,c.63) get tok: INT(CO[192])
(l.638,c.2) get tok: INT(IF[62])
(l.638,c.8) get tok: REF TAG(print)
(l.638,c.9) get tok: STRING(()
(l.638,c.15) get tok: REF TAG(gpcsi)
(l.638,c.16) get tok: STRING())
(l.638,c.17) get tok: STRING(;)
(l.638,c.22) get tok: INT(UPB[150])
(l.638,c.24) get tok: REF TAG(s)
(l.638,c.25) get tok: STRING(=)
(l.639,c.0) get tok: STRING(2)
(l.639,c.4) get tok: INT(THEN[190])
(l.639,c.10) get tok: REF TAG(print)
(l.639,c.11) get tok: STRING(()
(l.639,c.12) get tok: STRING(()
(l.639,c.19) get tok: REF TAG(gpints)
(l.639,c.20) get tok: STRING(()
(l.639,c.21) get tok: REF TAG(s)
(l.639,c.22) get tok: STRING())
(l.639,c.23) get tok: STRING(,)
(l.639,c.26) get tok: STRING("r")
(l.639,c.27) get tok: STRING())
(l.639,c.28) get tok: STRING())
(l.640,c.4) get tok: INT(ELSE[4])
(l.640,c.10) get tok: REF TAG(print)
(l.640,c.11) get tok: STRING(()
(l.640,c.14) get tok: STRING("r")
(l.640,c.15) get tok: STRING())
(l.641,c.2) get tok: INT(FI[107])
(l.643,c.2) get tok: CONTROL( )
(l.647,c.2) get tok: CONTROL(d)
(l.647,c.19) get tok: REF TAG(macrogpgetrc)
(l.647,c.20) get tok: STRING(=)
(l.648,c.4) get tok: INT(PROC[69])
(l.648,c.15) get tok: REF TAG(gpgetrc)
(l.648,c.16) get tok: STRING(=)
(l.648,c.18) get tok: STRING([)
(l.648,c.19) get tok: STRING(])
(l.648,c.22) get tok: INT(INT[195])
(l.648,c.23) get tok: STRING(:)
(l.649,c.5) get tok: INT(BEGIN[227])
(l.650,c.1) get tok: STRING([)
(l.650,c.2) get tok: STRING(2)
(l.650,c.3) get tok: STRING(])
(l.650,c.6) get tok: INT(INT[195])
(l.650,c.9) get tok: REF TAG(xy)
(l.650,c.11) get tok: STRING(:=)
(l.650,c.12) get tok: STRING(()
(l.650,c.13) get tok: STRING(-)
(l.650,c.14) get tok: STRING(1)
(l.650,c.15) get tok: STRING(,)
(l.650,c.16) get tok: STRING(-)
(l.650,c.17) get tok: STRING(1)
(l.650,c.18) get tok: STRING())
(l.650,c.19) get tok: STRING(;)
(l.651,c.5) get tok: REF TAG(print)
(l.651,c.6) get tok: STRING(()
(l.651,c.7) get tok: STRING(()
(l.651,c.13) get tok: REF TAG(gpcsi)
(l.651,c.14) get tok: STRING(,)
(l.651,c.18) get tok: STRING("6n")
(l.651,c.19) get tok: STRING())
(l.651,c.20) get tok: STRING())
(l.651,c.21) get tok: STRING(;)
(l.652,c.4) get tok: INT(FILE[59])
(l.652,c.7) get tok: REF TAG(mf)
(l.652,c.8) get tok: STRING(;)
(l.652,c.14) get tok: REF TAG(open)
(l.652,c.15) get tok: STRING(()
(l.652,c.17) get tok: REF TAG(mf)
(l.652,c.18) get tok: STRING(,)
(l.652,c.25) get tok: REF TAG(MAKERVC)
(l.652,c.38) get tok: REF TAG(gpgetreply)
(l.652,c.39) get tok: STRING(()
(l.652,c.42) get tok: STRING("R")
(l.652,c.43) get tok: STRING())
(l.652,c.44) get tok: STRING(,)
(l.652,c.55) get tok: REF TAG(memchannel)
(l.652,c.56) get tok: STRING())
(l.652,c.57) get tok: STRING(;)
(l.653,c.19) get tok: REF TAG(onlogicalfileend)
(l.653,c.20) get tok: STRING(()
(l.653,c.22) get tok: REF TAG(mf)
(l.653,c.23) get tok: STRING(,)
(l.654,c.1) get tok: STRING(()
(l.654,c.4) get tok: INT(REF[53])
(l.654,c.9) get tok: INT(FILE[59])
(l.654,c.11) get tok: REF TAG(f)
(l.654,c.12) get tok: STRING())
(l.654,c.16) get tok: INT(BOOL[184])
(l.654,c.17) get tok: STRING(:)
(l.654,c.19) get tok: STRING(()
(l.654,c.21) get tok: REF TAG(xy)
(l.654,c.23) get tok: STRING(:=)
(l.654,c.24) get tok: STRING(()
(l.654,c.26) get tok: STRING(10)
(l.654,c.27) get tok: STRING(,)
(l.654,c.29) get tok: STRING(10)
(l.654,c.30) get tok: STRING())
(l.654,c.31) get tok: STRING(;)
(l.654,c.37) get tok: INT(GOTO[294])
(l.654,c.41) get tok: REF TAG(eof)
(l.654,c.42) get tok: STRING(;)
(l.654,c.48) get tok: INT(SKIP[44])
(l.654,c.49) get tok: STRING())
(l.654,c.50) get tok: STRING())
(l.654,c.51) get tok: STRING(;)
(l.655,c.3) get tok: REF TAG(set)
(l.655,c.4) get tok: STRING(()
(l.655,c.6) get tok: REF TAG(mf)
(l.655,c.7) get tok: STRING(,)
(l.655,c.8) get tok: STRING(1)
(l.655,c.9) get tok: STRING(,)
(l.655,c.10) get tok: STRING(1)
(l.655,c.11) get tok: STRING(,)
(l.655,c.12) get tok: STRING(2)
(l.655,c.13) get tok: STRING())
(l.655,c.14) get tok: STRING(;)
(l.656,c.3) get tok: REF TAG(get)
(l.656,c.4) get tok: STRING(()
(l.656,c.6) get tok: REF TAG(mf)
(l.656,c.7) get tok: STRING(,)
(l.656,c.8) get tok: STRING(()
(l.656,c.10) get tok: REF TAG(xy)
(l.656,c.11) get tok: STRING([)
(l.656,c.12) get tok: STRING(1)
(l.656,c.13) get tok: STRING(])
(l.656,c.14) get tok: STRING(,)
(l.656,c.17) get tok: INT(LOC[108])
(l.656,c.22) get tok: INT(CHAR[113])
(l.656,c.23) get tok: STRING(,)
(l.656,c.25) get tok: REF TAG(xy)
(l.656,c.26) get tok: STRING([)
(l.656,c.27) get tok: STRING(2)
(l.656,c.28) get tok: STRING(])
(l.656,c.29) get tok: STRING())
(l.656,c.30) get tok: STRING())
(l.656,c.31) get tok: STRING(;)
(l.657,c.3) get tok: REF TAG(eof)
(l.658,c.0) get tok: STRING(:)
(l.658,c.5) get tok: REF TAG(close)
(l.658,c.6) get tok: STRING(()
(l.658,c.8) get tok: REF TAG(mf)
(l.658,c.9) get tok: STRING())
(l.658,c.10) get tok: STRING(;)
(l.660,c.0) get tok: REF TAG(xy)
(l.660,c.3) get tok: INT(END[202])
(l.662,c.2) get tok: CONTROL( )
(l.668,c.2) get tok: CONTROL(d)
(l.668,c.23) get tok: REF TAG(macrogpassigngcs)
(l.668,c.24) get tok: STRING(=)
(l.669,c.38) get tok: REF TAG(macrogpopfindrowcharrowrowchar)
(l.669,c.39) get tok: STRING(;)
(l.670,c.4) get tok: INT(PROC[69])
(l.670,c.19) get tok: REF TAG(gpassigngcs)
(l.670,c.20) get tok: STRING(=)
(l.670,c.22) get tok: STRING(()
(l.670,c.25) get tok: INT(INT[195])
(l.670,c.27) get tok: REF TAG(g)
(l.670,c.28) get tok: STRING(,)
(l.670,c.29) get tok: STRING([)
(l.670,c.30) get tok: STRING(])
(l.670,c.34) get tok: INT(CHAR[113])
(l.670,c.37) get tok: REF TAG(cs)
(l.670,c.38) get tok: STRING())
(l.670,c.42) get tok: INT(VOID[181])
(l.670,c.43) get tok: STRING(:)
(l.671,c.1) get tok: STRING(()
(l.672,c.4) get tok: INT(CHAR[113])
(l.672,c.13) get tok: REF TAG(charset)
(l.672,c.14) get tok: STRING(=)
(l.672,c.30) get tok: STRING("0AB4CRQKYEZH=")
(l.672,c.31) get tok: STRING([)
(l.672,c.34) get tok: REF TAG(cs)
(l.672,c.38) get tok: INT(FIND[131])
(l.673,c.1) get tok: STRING([)
(l.673,c.2) get tok: STRING(])
(l.673,c.8) get tok: INT(STRING[156])
(l.673,c.9) get tok: STRING(()
(l.673,c.14) get tok: STRING("DEC")
(l.673,c.15) get tok: STRING(,)
(l.673,c.19) get tok: STRING("UK")
(l.673,c.20) get tok: STRING(,)
(l.673,c.24) get tok: STRING("US")
(l.673,c.25) get tok: STRING(,)
(l.673,c.29) get tok: STRING("NL")
(l.673,c.30) get tok: STRING(,)
(l.673,c.34) get tok: STRING("SU")
(l.673,c.35) get tok: STRING(,)
(l.673,c.39) get tok: STRING("FR")
(l.673,c.40) get tok: STRING(,)
(l.673,c.44) get tok: STRING("CF")
(l.673,c.45) get tok: STRING(,)
(l.674,c.4) get tok: STRING("DE")
(l.674,c.5) get tok: STRING(,)
(l.674,c.9) get tok: STRING("IT")
(l.674,c.10) get tok: STRING(,)
(l.674,c.14) get tok: STRING("ND")
(l.674,c.15) get tok: STRING(,)
(l.674,c.19) get tok: STRING("ES")
(l.674,c.20) get tok: STRING(,)
(l.674,c.24) get tok: STRING("SV")
(l.674,c.25) get tok: STRING(,)
(l.674,c.29) get tok: STRING("CH")
(l.674,c.30) get tok: STRING())
(l.674,c.31) get tok: STRING(])
(l.674,c.32) get tok: STRING(;)
(l.675,c.4) get tok: INT(CHAR[113])
(l.675,c.8) get tok: REF TAG(gcs)
(l.675,c.9) get tok: STRING(=)
(l.675,c.15) get tok: STRING("()*+")
(l.675,c.16) get tok: STRING([)
(l.675,c.17) get tok: REF TAG(g)
(l.675,c.18) get tok: STRING(+)
(l.675,c.19) get tok: STRING(1)
(l.675,c.20) get tok: STRING(])
(l.675,c.21) get tok: STRING(;)
(l.676,c.5) get tok: REF TAG(print)
(l.676,c.6) get tok: STRING(()
(l.676,c.7) get tok: STRING(()
(l.676,c.10) get tok: REF TAG(esc)
(l.676,c.11) get tok: STRING(,)
(l.676,c.14) get tok: REF TAG(gcs)
(l.676,c.15) get tok: STRING(,)
(l.676,c.22) get tok: REF TAG(charset)
(l.676,c.23) get tok: STRING())
(l.676,c.24) get tok: STRING())
(l.677,c.1) get tok: STRING())
(l.679,c.2) get tok: CONTROL( )
(l.684,c.2) get tok: CONTROL(d)
(l.684,c.17) get tok: REF TAG(macrogpsetg)
(l.684,c.18) get tok: STRING(=)
(l.685,c.16) get tok: REF TAG(macrogpopctrl)
(l.685,c.17) get tok: STRING(;)
(l.686,c.4) get tok: INT(PROC[69])
(l.686,c.13) get tok: REF TAG(gpsetg)
(l.686,c.14) get tok: STRING(=)
(l.686,c.16) get tok: STRING(()
(l.686,c.19) get tok: INT(INT[195])
(l.686,c.21) get tok: REF TAG(g)
(l.686,c.22) get tok: STRING())
(l.686,c.26) get tok: INT(VOID[181])
(l.686,c.27) get tok: STRING(:)
(l.687,c.5) get tok: REF TAG(print)
(l.687,c.6) get tok: STRING(()
(l.687,c.10) get tok: INT(CASE[137])
(l.687,c.12) get tok: REF TAG(g)
(l.687,c.13) get tok: STRING(+)
(l.688,c.0) get tok: STRING(1)
(l.688,c.2) get tok: INT(IN[306])
(l.689,c.4) get tok: REF TAG(CTRL)
(l.689,c.7) get tok: STRING("O")
(l.689,c.8) get tok: STRING(,)
(l.690,c.4) get tok: REF TAG(CTRL)
(l.690,c.7) get tok: STRING("N")
(l.690,c.8) get tok: STRING(,)
(l.691,c.1) get tok: STRING(()
(l.691,c.4) get tok: REF TAG(esc)
(l.691,c.5) get tok: STRING(,)
(l.691,c.8) get tok: STRING("n")
(l.691,c.9) get tok: STRING())
(l.691,c.10) get tok: STRING(,)
(l.692,c.1) get tok: STRING(()
(l.692,c.4) get tok: REF TAG(esc)
(l.692,c.5) get tok: STRING(,)
(l.692,c.8) get tok: STRING("o")
(l.692,c.9) get tok: STRING())
(l.693,c.3) get tok: INT(OUT[155])
(l.694,c.4) get tok: REF TAG(CTRL)
(l.695,c.0) get tok: STRING("O")
(l.695,c.4) get tok: INT(ESAC[39])
(l.695,c.5) get tok: STRING())
(l.697,c.2) get tok: CONTROL( )
(l.702,c.2) get tok: CONTROL(d)
(l.702,c.20) get tok: REF TAG(macrogpsetdec)
(l.702,c.21) get tok: STRING(=)
(l.703,c.13) get tok: REF TAG(macrogpints)
(l.703,c.14) get tok: STRING(;)
(l.704,c.4) get tok: INT(PROC[69])
(l.704,c.16) get tok: REF TAG(gpsetdec)
(l.704,c.17) get tok: STRING(=)
(l.704,c.19) get tok: STRING(()
(l.704,c.20) get tok: STRING([)
(l.704,c.21) get tok: STRING(])
(l.704,c.24) get tok: INT(INT[195])
(l.704,c.27) get tok: REF TAG(pm)
(l.704,c.28) get tok: STRING())
(l.704,c.32) get tok: INT(VOID[181])
(l.705,c.0) get tok: STRING(:)
(l.705,c.5) get tok: REF TAG(print)
(l.705,c.6) get tok: STRING(()
(l.705,c.7) get tok: STRING(()
(l.705,c.13) get tok: REF TAG(gpcsi)
(l.705,c.14) get tok: STRING(,)
(l.705,c.17) get tok: STRING("?")
(l.705,c.18) get tok: STRING(,)
(l.705,c.25) get tok: REF TAG(gpints)
(l.705,c.26) get tok: STRING(()
(l.705,c.28) get tok: REF TAG(pm)
(l.705,c.29) get tok: STRING())
(l.705,c.30) get tok: STRING(,)
(l.705,c.33) get tok: STRING("h")
(l.705,c.34) get tok: STRING())
(l.705,c.35) get tok: STRING())
(l.707,c.2) get tok: CONTROL(d)
(l.707,c.22) get tok: REF TAG(macrogpunsetdec)
(l.707,c.23) get tok: STRING(=)
(l.708,c.13) get tok: REF TAG(macrogpints)
(l.708,c.14) get tok: STRING(;)
(l.709,c.4) get tok: INT(PROC[69])
(l.709,c.18) get tok: REF TAG(gpunsetdec)
(l.709,c.19) get tok: STRING(=)
(l.709,c.21) get tok: STRING(()
(l.709,c.22) get tok: STRING([)
(l.709,c.23) get tok: STRING(])
(l.709,c.26) get tok: INT(INT[195])
(l.709,c.29) get tok: REF TAG(pm)
(l.709,c.30) get tok: STRING())
(l.709,c.34) get tok: INT(VOID[181])
(l.710,c.0) get tok: STRING(:)
(l.710,c.5) get tok: REF TAG(print)
(l.710,c.6) get tok: STRING(()
(l.710,c.7) get tok: STRING(()
(l.710,c.13) get tok: REF TAG(gpcsi)
(l.710,c.14) get tok: STRING(,)
(l.710,c.17) get tok: STRING("?")
(l.710,c.18) get tok: STRING(,)
(l.710,c.25) get tok: REF TAG(gpints)
(l.710,c.26) get tok: STRING(()
(l.710,c.28) get tok: REF TAG(pm)
(l.710,c.29) get tok: STRING())
(l.710,c.30) get tok: STRING(,)
(l.710,c.33) get tok: STRING("l")
(l.710,c.34) get tok: STRING())
(l.710,c.35) get tok: STRING())
(l.712,c.2) get tok: CONTROL(d)
(l.712,c.20) get tok: REF TAG(macrogpsavdec)
(l.712,c.21) get tok: STRING(=)
(l.713,c.13) get tok: REF TAG(macrogpints)
(l.713,c.14) get tok: STRING(;)
(l.714,c.4) get tok: INT(PROC[69])
(l.714,c.16) get tok: REF TAG(gpsavdec)
(l.714,c.17) get tok: STRING(=)
(l.714,c.19) get tok: STRING(()
(l.714,c.20) get tok: STRING([)
(l.714,c.21) get tok: STRING(])
(l.714,c.24) get tok: INT(INT[195])
(l.714,c.27) get tok: REF TAG(pm)
(l.714,c.28) get tok: STRING())
(l.714,c.32) get tok: INT(VOID[181])
(l.715,c.0) get tok: STRING(:)
(l.715,c.5) get tok: REF TAG(print)
(l.715,c.6) get tok: STRING(()
(l.715,c.7) get tok: STRING(()
(l.715,c.13) get tok: REF TAG(gpcsi)
(l.715,c.14) get tok: STRING(,)
(l.715,c.17) get tok: STRING("?")
(l.715,c.18) get tok: STRING(,)
(l.715,c.25) get tok: REF TAG(gpints)
(l.715,c.26) get tok: STRING(()
(l.715,c.28) get tok: REF TAG(pm)
(l.715,c.29) get tok: STRING())
(l.715,c.30) get tok: STRING(,)
(l.715,c.33) get tok: STRING("s")
(l.715,c.34) get tok: STRING())
(l.715,c.35) get tok: STRING())
(l.717,c.2) get tok: CONTROL(d)
(l.717,c.20) get tok: REF TAG(macrogpresdec)
(l.717,c.21) get tok: STRING(=)
(l.718,c.13) get tok: REF TAG(macrogpints)
(l.718,c.14) get tok: STRING(;)
(l.719,c.4) get tok: INT(PROC[69])
(l.719,c.16) get tok: REF TAG(gpresdec)
(l.719,c.17) get tok: STRING(=)
(l.719,c.19) get tok: STRING(()
(l.719,c.20) get tok: STRING([)
(l.719,c.21) get tok: STRING(])
(l.719,c.24) get tok: INT(INT[195])
(l.719,c.27) get tok: REF TAG(pm)
(l.719,c.28) get tok: STRING())
(l.719,c.32) get tok: INT(VOID[181])
(l.720,c.0) get tok: STRING(:)
(l.720,c.5) get tok: REF TAG(print)
(l.720,c.6) get tok: STRING(()
(l.720,c.7) get tok: STRING(()
(l.720,c.13) get tok: REF TAG(gpcsi)
(l.720,c.14) get tok: STRING(,)
(l.720,c.17) get tok: STRING("?")
(l.720,c.18) get tok: STRING(,)
(l.720,c.25) get tok: REF TAG(gpints)
(l.720,c.26) get tok: STRING(()
(l.720,c.28) get tok: REF TAG(pm)
(l.720,c.29) get tok: STRING())
(l.720,c.30) get tok: STRING(,)
(l.720,c.33) get tok: STRING("r")
(l.720,c.34) get tok: STRING())
(l.720,c.35) get tok: STRING())
(l.722,c.2) get tok: CONTROL( )
(l.727,c.2) get tok: CONTROL(d)
(l.727,c.22) get tok: REF TAG(macrogpsetlabel)
(l.727,c.23) get tok: STRING(=)
(l.728,c.17) get tok: REF TAG(macrogpsettext)
(l.728,c.18) get tok: STRING(;)
(l.729,c.4) get tok: INT(PROC[69])
(l.729,c.18) get tok: REF TAG(gpsetlabel)
(l.729,c.19) get tok: STRING(=)
(l.729,c.21) get tok: STRING(()
(l.729,c.22) get tok: STRING([)
(l.729,c.23) get tok: STRING(])
(l.729,c.27) get tok: INT(CHAR[113])
(l.729,c.29) get tok: REF TAG(t)
(l.729,c.30) get tok: STRING())
(l.729,c.34) get tok: INT(VOID[181])
(l.729,c.35) get tok: STRING(:)
(l.729,c.47) get tok: REF TAG(gpsettext)
(l.729,c.48) get tok: STRING(()
(l.729,c.49) get tok: STRING(1)
(l.729,c.50) get tok: STRING(,)
(l.729,c.51) get tok: REF TAG(t)
(l.729,c.52) get tok: STRING())
(l.731,c.2) get tok: CONTROL(d)
(l.731,c.22) get tok: REF TAG(macrogpsettitle)
(l.731,c.23) get tok: STRING(=)
(l.732,c.17) get tok: REF TAG(macrogpsettext)
(l.732,c.18) get tok: STRING(;)
(l.733,c.4) get tok: INT(PROC[69])
(l.733,c.18) get tok: REF TAG(gpsettitle)
(l.733,c.19) get tok: STRING(=)
(l.733,c.21) get tok: STRING(()
(l.733,c.22) get tok: STRING([)
(l.733,c.23) get tok: STRING(])
(l.733,c.27) get tok: INT(CHAR[113])
(l.733,c.29) get tok: REF TAG(t)
(l.733,c.30) get tok: STRING())
(l.733,c.34) get tok: INT(VOID[181])
(l.733,c.35) get tok: STRING(:)
(l.733,c.47) get tok: REF TAG(gpsettext)
(l.733,c.48) get tok: STRING(()
(l.733,c.49) get tok: STRING(2)
(l.733,c.50) get tok: STRING(,)
(l.733,c.51) get tok: REF TAG(t)
(l.733,c.52) get tok: STRING())
(l.735,c.2) get tok: CONTROL(d)
(l.735,c.21) get tok: REF TAG(macrogpsetprop)
(l.735,c.22) get tok: STRING(=)
(l.736,c.17) get tok: REF TAG(macrogpsettext)
(l.736,c.18) get tok: STRING(;)
(l.737,c.4) get tok: INT(PROC[69])
(l.737,c.18) get tok: REF TAG(gpsetprop)
(l.737,c.19) get tok: STRING(=)
(l.737,c.21) get tok: STRING(()
(l.737,c.22) get tok: STRING([)
(l.737,c.23) get tok: STRING(])
(l.737,c.27) get tok: INT(CHAR[113])
(l.737,c.29) get tok: REF TAG(t)
(l.737,c.30) get tok: STRING())
(l.737,c.34) get tok: INT(VOID[181])
(l.737,c.35) get tok: STRING(:)
(l.737,c.47) get tok: REF TAG(gpsettext)
(l.737,c.48) get tok: STRING(()
(l.737,c.49) get tok: STRING(4)
(l.737,c.50) get tok: STRING(,)
(l.737,c.51) get tok: REF TAG(t)
(l.737,c.52) get tok: STRING())
(l.739,c.2) get tok: CONTROL( )
(l.741,c.2) get tok: CONTROL(d)
(l.741,c.22) get tok: REF TAG(macrogpdeiconify)
(l.741,c.23) get tok: STRING(=)
(l.742,c.14) get tok: REF TAG(macrogppcsi)
(l.742,c.15) get tok: STRING(;)
(l.743,c.4) get tok: INT(PROC[69])
(l.743,c.20) get tok: REF TAG(gpdeiconify)
(l.743,c.21) get tok: STRING(=)
(l.743,c.26) get tok: INT(VOID[181])
(l.743,c.27) get tok: STRING(:)
(l.743,c.45) get tok: REF TAG(gppcsi)
(l.743,c.46) get tok: STRING(()
(l.743,c.47) get tok: STRING(1)
(l.743,c.48) get tok: STRING())
(l.744,c.2) get tok: CONTROL(d)
(l.744,c.20) get tok: REF TAG(macrogpiconify)
(l.744,c.21) get tok: STRING(=)
(l.745,c.14) get tok: REF TAG(macrogppcsi)
(l.745,c.15) get tok: STRING(;)
(l.746,c.4) get tok: INT(PROC[69])
(l.746,c.20) get tok: REF TAG(gpiconify)
(l.746,c.21) get tok: STRING(=)
(l.746,c.26) get tok: INT(VOID[181])
(l.746,c.27) get tok: STRING(:)
(l.746,c.45) get tok: REF TAG(gppcsi)
(l.746,c.46) get tok: STRING(()
(l.746,c.47) get tok: STRING(2)
(l.746,c.48) get tok: STRING())
(l.747,c.2) get tok: CONTROL(d)
(l.747,c.23) get tok: REF TAG(macrogpmovexperm)
(l.747,c.24) get tok: STRING(=)
(l.748,c.14) get tok: REF TAG(macrogppcsi)
(l.748,c.15) get tok: STRING(;)
(l.749,c.4) get tok: INT(PROC[69])
(l.749,c.20) get tok: REF TAG(gpmovexperm)
(l.749,c.21) get tok: STRING(=)
(l.749,c.23) get tok: STRING(()
(l.749,c.26) get tok: INT(INT[195])
(l.749,c.28) get tok: REF TAG(x)
(l.749,c.29) get tok: STRING(,)
(l.749,c.30) get tok: REF TAG(y)
(l.749,c.31) get tok: STRING())
(l.749,c.35) get tok: INT(VOID[181])
(l.749,c.36) get tok: STRING(:)
(l.749,c.45) get tok: REF TAG(gppcsi)
(l.749,c.46) get tok: STRING(()
(l.749,c.47) get tok: STRING(()
(l.749,c.48) get tok: STRING(3)
(l.749,c.49) get tok: STRING(,)
(l.749,c.50) get tok: REF TAG(x)
(l.749,c.51) get tok: STRING(,)
(l.749,c.52) get tok: REF TAG(y)
(l.749,c.53) get tok: STRING())
(l.749,c.54) get tok: STRING())
(l.750,c.2) get tok: CONTROL(d)
(l.750,c.23) get tok: REF TAG(macrogppixresize)
(l.750,c.24) get tok: STRING(=)
(l.751,c.14) get tok: REF TAG(macrogppcsi)
(l.751,c.15) get tok: STRING(;)
(l.752,c.4) get tok: INT(PROC[69])
(l.752,c.20) get tok: REF TAG(gppixresize)
(l.752,c.21) get tok: STRING(=)
(l.752,c.23) get tok: STRING(()
(l.752,c.26) get tok: INT(INT[195])
(l.752,c.28) get tok: REF TAG(h)
(l.752,c.29) get tok: STRING(,)
(l.752,c.30) get tok: REF TAG(w)
(l.752,c.31) get tok: STRING())
(l.752,c.35) get tok: INT(VOID[181])
(l.752,c.36) get tok: STRING(:)
(l.752,c.45) get tok: REF TAG(gppcsi)
(l.752,c.46) get tok: STRING(()
(l.752,c.47) get tok: STRING(()
(l.752,c.48) get tok: STRING(4)
(l.752,c.49) get tok: STRING(,)
(l.752,c.50) get tok: REF TAG(h)
(l.752,c.51) get tok: STRING(,)
(l.752,c.52) get tok: REF TAG(w)
(l.752,c.53) get tok: STRING())
(l.752,c.54) get tok: STRING())
(l.753,c.2) get tok: CONTROL(d)
(l.753,c.18) get tok: REF TAG(macrogpraise)
(l.753,c.19) get tok: STRING(=)
(l.754,c.14) get tok: REF TAG(macrogppcsi)
(l.754,c.15) get tok: STRING(;)
(l.755,c.4) get tok: INT(PROC[69])
(l.755,c.20) get tok: REF TAG(gpraise)
(l.755,c.21) get tok: STRING(=)
(l.755,c.26) get tok: INT(VOID[181])
(l.755,c.27) get tok: STRING(:)
(l.755,c.45) get tok: REF TAG(gppcsi)
(l.755,c.46) get tok: STRING(()
(l.755,c.47) get tok: STRING(5)
(l.755,c.48) get tok: STRING())
(l.756,c.2) get tok: CONTROL(d)
(l.756,c.18) get tok: REF TAG(macrogplower)
(l.756,c.19) get tok: STRING(=)
(l.757,c.14) get tok: REF TAG(macrogppcsi)
(l.757,c.15) get tok: STRING(;)
(l.758,c.4) get tok: INT(PROC[69])
(l.758,c.20) get tok: REF TAG(gplower)
(l.758,c.21) get tok: STRING(=)
(l.758,c.26) get tok: INT(VOID[181])
(l.758,c.27) get tok: STRING(:)
(l.758,c.45) get tok: REF TAG(gppcsi)
(l.758,c.46) get tok: STRING(()
(l.758,c.47) get tok: STRING(6)
(l.758,c.48) get tok: STRING())
(l.759,c.2) get tok: CONTROL(d)
(l.759,c.20) get tok: REF TAG(macrogprefresh)
(l.759,c.21) get tok: STRING(=)
(l.760,c.14) get tok: REF TAG(macrogppcsi)
(l.760,c.15) get tok: STRING(;)
(l.761,c.4) get tok: INT(PROC[69])
(l.761,c.20) get tok: REF TAG(gprefresh)
(l.761,c.21) get tok: STRING(=)
(l.761,c.26) get tok: INT(VOID[181])
(l.761,c.27) get tok: STRING(:)
(l.761,c.45) get tok: REF TAG(gppcsi)
(l.761,c.46) get tok: STRING(()
(l.761,c.47) get tok: STRING(7)
(l.761,c.48) get tok: STRING())
(l.762,c.2) get tok: CONTROL(d)
(l.762,c.24) get tok: REF TAG(macrogpcharresize)
(l.762,c.25) get tok: STRING(=)
(l.763,c.14) get tok: REF TAG(macrogppcsi)
(l.763,c.15) get tok: STRING(;)
(l.764,c.4) get tok: INT(PROC[69])
(l.764,c.20) get tok: REF TAG(gpcharresize)
(l.764,c.21) get tok: STRING(=)
(l.764,c.23) get tok: STRING(()
(l.764,c.26) get tok: INT(INT[195])
(l.764,c.28) get tok: REF TAG(h)
(l.764,c.29) get tok: STRING(,)
(l.764,c.30) get tok: REF TAG(w)
(l.764,c.31) get tok: STRING())
(l.764,c.35) get tok: INT(VOID[181])
(l.764,c.36) get tok: STRING(:)
(l.764,c.45) get tok: REF TAG(gppcsi)
(l.764,c.46) get tok: STRING(()
(l.764,c.47) get tok: STRING(()
(l.764,c.48) get tok: STRING(8)
(l.764,c.49) get tok: STRING(,)
(l.764,c.50) get tok: REF TAG(h)
(l.764,c.51) get tok: STRING(,)
(l.764,c.52) get tok: REF TAG(w)
(l.764,c.53) get tok: STRING())
(l.764,c.54) get tok: STRING())
(l.766,c.2) get tok: CONTROL( )
(l.772,c.2) get tok: CONTROL(d)
(l.772,c.25) get tok: REF TAG(macrogpreportstate)
(l.772,c.26) get tok: STRING(=)
(l.773,c.14) get tok: REF TAG(macrogppcsi)
(l.773,c.15) get tok: STRING(;)
(l.774,c.18) get tok: REF TAG(macrogpgetreply)
(l.774,c.19) get tok: STRING(;)
(l.775,c.4) get tok: INT(PROC[69])
(l.775,c.21) get tok: REF TAG(gpreportstate)
(l.775,c.22) get tok: STRING(=)
(l.775,c.27) get tok: INT(BOOL[184])
(l.776,c.0) get tok: STRING(:)
(l.776,c.1) get tok: STRING(()
(l.777,c.8) get tok: REF TAG(gppcsi)
(l.777,c.9) get tok: STRING(()
(l.777,c.11) get tok: STRING(11)
(l.777,c.12) get tok: STRING())
(l.777,c.13) get tok: STRING(;)
(l.778,c.12) get tok: REF TAG(gpgetreply)
(l.778,c.13) get tok: STRING(()
(l.778,c.16) get tok: STRING("t")
(l.778,c.17) get tok: STRING())
(l.778,c.18) get tok: STRING([)
(l.778,c.19) get tok: STRING(3)
(l.778,c.20) get tok: STRING(])
(l.778,c.21) get tok: STRING(=)
(l.779,c.0) get tok: STRING("1")
(l.779,c.1) get tok: STRING())
(l.781,c.2) get tok: CONTROL( )
(l.783,c.2) get tok: CONTROL(d)
(l.783,c.23) get tok: REF TAG(macrogpreportpos)
(l.783,c.24) get tok: STRING(=)
(l.784,c.14) get tok: REF TAG(macrogppcsi)
(l.784,c.15) get tok: STRING(;)
(l.785,c.18) get tok: REF TAG(macrogpgetreply)
(l.785,c.19) get tok: STRING(;)
(l.786,c.4) get tok: INT(PROC[69])
(l.786,c.19) get tok: REF TAG(gpreportpos)
(l.786,c.20) get tok: STRING(=)
(l.786,c.22) get tok: STRING([)
(l.786,c.23) get tok: STRING(])
(l.786,c.26) get tok: INT(INT[195])
(l.786,c.27) get tok: STRING(:)
(l.787,c.1) get tok: STRING(()
(l.788,c.8) get tok: REF TAG(gppcsi)
(l.788,c.9) get tok: STRING(()
(l.788,c.11) get tok: STRING(13)
(l.788,c.12) get tok: STRING())
(l.788,c.13) get tok: STRING(;)
(l.789,c.4) get tok: INT(FILE[59])
(l.789,c.7) get tok: REF TAG(mf)
(l.789,c.8) get tok: STRING(;)
(l.790,c.4) get tok: REF TAG(open)
(l.790,c.5) get tok: STRING(()
(l.790,c.7) get tok: REF TAG(mf)
(l.790,c.8) get tok: STRING(,)
(l.790,c.15) get tok: REF TAG(MAKERVC)
(l.790,c.28) get tok: REF TAG(gpgetreply)
(l.790,c.29) get tok: STRING(()
(l.790,c.32) get tok: STRING("t")
(l.790,c.33) get tok: STRING())
(l.790,c.34) get tok: STRING(,)
(l.790,c.45) get tok: REF TAG(memchannel)
(l.790,c.46) get tok: STRING())
(l.790,c.47) get tok: STRING(;)
(l.791,c.9) get tok: REF TAG(maketerm)
(l.791,c.10) get tok: STRING(()
(l.791,c.12) get tok: REF TAG(mf)
(l.791,c.13) get tok: STRING(,)
(l.791,c.16) get tok: STRING(";")
(l.791,c.17) get tok: STRING())
(l.791,c.18) get tok: STRING(;)
(l.792,c.1) get tok: STRING([)
(l.792,c.2) get tok: STRING(2)
(l.792,c.3) get tok: STRING(])
(l.792,c.6) get tok: INT(INT[195])
(l.792,c.10) get tok: REF TAG(pos)
(l.792,c.11) get tok: STRING(;)
(l.793,c.3) get tok: REF TAG(get)
(l.793,c.4) get tok: STRING(()
(l.793,c.6) get tok: REF TAG(mf)
(l.793,c.7) get tok: STRING(,)
(l.793,c.8) get tok: STRING(()
(l.793,c.11) get tok: INT(LOC[108])
(l.793,c.18) get tok: INT(STRING[156])
(l.793,c.19) get tok: STRING(,)
(l.793,c.22) get tok: INT(LOC[108])
(l.793,c.27) get tok: INT(CHAR[113])
(l.793,c.28) get tok: STRING(,)
(l.793,c.31) get tok: REF TAG(pos)
(l.793,c.32) get tok: STRING([)
(l.793,c.33) get tok: STRING(1)
(l.793,c.34) get tok: STRING(])
(l.793,c.35) get tok: STRING(,)
(l.793,c.38) get tok: INT(LOC[108])
(l.793,c.43) get tok: INT(CHAR[113])
(l.793,c.44) get tok: STRING(,)
(l.793,c.47) get tok: REF TAG(pos)
(l.793,c.48) get tok: STRING([)
(l.793,c.49) get tok: STRING(2)
(l.793,c.50) get tok: STRING(])
(l.793,c.51) get tok: STRING())
(l.793,c.52) get tok: STRING())
(l.793,c.53) get tok: STRING(;)
(l.794,c.5) get tok: REF TAG(close)
(l.794,c.6) get tok: STRING(()
(l.794,c.8) get tok: REF TAG(mf)
(l.794,c.9) get tok: STRING())
(l.794,c.10) get tok: STRING(;)
(l.796,c.0) get tok: REF TAG(pos)
(l.796,c.1) get tok: STRING())
(l.798,c.2) get tok: CONTROL( )
(l.802,c.2) get tok: CONTROL(d)
(l.802,c.24) get tok: REF TAG(macrogpreportsize)
(l.802,c.25) get tok: STRING(=)
(l.803,c.14) get tok: REF TAG(macrogppcsi)
(l.803,c.15) get tok: STRING(;)
(l.804,c.18) get tok: REF TAG(macrogpgetreply)
(l.804,c.19) get tok: STRING(;)
(l.805,c.4) get tok: INT(PROC[69])
(l.805,c.20) get tok: REF TAG(gpreportsize)
(l.805,c.21) get tok: STRING(=)
(l.805,c.23) get tok: STRING(()
(l.805,c.29) get tok: INT(STRING[156])
(l.805,c.31) get tok: REF TAG(s)
(l.805,c.32) get tok: STRING())
(l.805,c.33) get tok: STRING([)
(l.805,c.34) get tok: STRING(])
(l.805,c.37) get tok: INT(INT[195])
(l.805,c.38) get tok: STRING(:)
(l.806,c.1) get tok: STRING(()
(l.807,c.8) get tok: REF TAG(gppcsi)
(l.807,c.9) get tok: STRING(()
(l.807,c.10) get tok: STRING(()
(l.807,c.11) get tok: REF TAG(s)
(l.807,c.12) get tok: STRING(=)
(l.807,c.17) get tok: STRING("pix")
(l.807,c.18) get tok: STRING(|)
(l.807,c.20) get tok: STRING(14)
(l.807,c.21) get tok: STRING(|)
(l.807,c.22) get tok: STRING(:)
(l.807,c.23) get tok: REF TAG(s)
(l.807,c.24) get tok: STRING(=)
(l.807,c.30) get tok: STRING("char")
(l.807,c.31) get tok: STRING(|)
(l.807,c.33) get tok: STRING(18)
(l.807,c.34) get tok: STRING(|)
(l.807,c.36) get tok: STRING(18)
(l.807,c.37) get tok: STRING())
(l.807,c.38) get tok: STRING())
(l.807,c.39) get tok: STRING(;)
(l.808,c.4) get tok: INT(FILE[59])
(l.808,c.7) get tok: REF TAG(mf)
(l.808,c.8) get tok: STRING(;)
(l.809,c.4) get tok: REF TAG(open)
(l.809,c.5) get tok: STRING(()
(l.809,c.7) get tok: REF TAG(mf)
(l.809,c.8) get tok: STRING(,)
(l.809,c.15) get tok: REF TAG(MAKERVC)
(l.809,c.28) get tok: REF TAG(gpgetreply)
(l.809,c.29) get tok: STRING(()
(l.809,c.32) get tok: STRING("t")
(l.809,c.33) get tok: STRING())
(l.809,c.34) get tok: STRING(,)
(l.809,c.45) get tok: REF TAG(memchannel)
(l.809,c.46) get tok: STRING())
(l.809,c.47) get tok: STRING(;)
(l.810,c.9) get tok: REF TAG(maketerm)
(l.810,c.10) get tok: STRING(()
(l.810,c.12) get tok: REF TAG(mf)
(l.810,c.13) get tok: STRING(,)
(l.810,c.16) get tok: STRING(";")
(l.810,c.17) get tok: STRING())
(l.810,c.18) get tok: STRING(;)
(l.811,c.1) get tok: STRING([)
(l.811,c.2) get tok: STRING(2)
(l.811,c.3) get tok: STRING(])
(l.811,c.6) get tok: INT(INT[195])
(l.811,c.11) get tok: REF TAG(size)
(l.811,c.12) get tok: STRING(;)
(l.812,c.3) get tok: REF TAG(get)
(l.812,c.4) get tok: STRING(()
(l.812,c.6) get tok: REF TAG(mf)
(l.812,c.7) get tok: STRING(,)
(l.812,c.8) get tok: STRING(()
(l.812,c.11) get tok: INT(LOC[108])
(l.812,c.18) get tok: INT(STRING[156])
(l.812,c.19) get tok: STRING(,)
(l.812,c.22) get tok: INT(LOC[108])
(l.812,c.27) get tok: INT(CHAR[113])
(l.812,c.28) get tok: STRING(,)
(l.812,c.32) get tok: REF TAG(size)
(l.812,c.33) get tok: STRING([)
(l.812,c.34) get tok: STRING(1)
(l.812,c.35) get tok: STRING(])
(l.812,c.36) get tok: STRING(,)
(l.812,c.39) get tok: INT(LOC[108])
(l.812,c.44) get tok: INT(CHAR[113])
(l.812,c.45) get tok: STRING(,)
(l.812,c.49) get tok: REF TAG(size)
(l.812,c.50) get tok: STRING([)
(l.812,c.51) get tok: STRING(2)
(l.812,c.52) get tok: STRING(])
(l.812,c.53) get tok: STRING())
(l.812,c.54) get tok: STRING())
(l.812,c.55) get tok: STRING(;)
(l.813,c.5) get tok: REF TAG(close)
(l.813,c.6) get tok: STRING(()
(l.813,c.8) get tok: REF TAG(mf)
(l.813,c.9) get tok: STRING())
(l.813,c.10) get tok: STRING(;)
(l.815,c.0) get tok: REF TAG(size)
(l.815,c.1) get tok: STRING())
(l.817,c.2) get tok: CONTROL( )
(l.820,c.2) get tok: CONTROL(d)
(l.820,c.27) get tok: REF TAG(macrogpgeticonlabel)
(l.820,c.28) get tok: STRING(=)
(l.821,c.14) get tok: REF TAG(macrogppcsi)
(l.821,c.15) get tok: STRING(;)
(l.822,c.18) get tok: REF TAG(macrogpgetreply)
(l.822,c.19) get tok: STRING(;)
(l.823,c.4) get tok: INT(PROC[69])
(l.823,c.23) get tok: REF TAG(gpgeticonlabel)
(l.823,c.24) get tok: STRING(=)
(l.823,c.31) get tok: INT(STRING[156])
(l.824,c.0) get tok: STRING(:)
(l.824,c.1) get tok: STRING(()
(l.825,c.8) get tok: REF TAG(gppcsi)
(l.825,c.9) get tok: STRING(()
(l.825,c.11) get tok: STRING(20)
(l.825,c.12) get tok: STRING())
(l.825,c.13) get tok: STRING(;)
(l.826,c.6) get tok: INT(STRING[156])
(l.826,c.12) get tok: REF TAG(label)
(l.826,c.13) get tok: STRING(=)
(l.826,c.25) get tok: REF TAG(gpgetreply)
(l.826,c.26) get tok: STRING(()
(l.826,c.29) get tok: REF TAG(esc)
(l.826,c.30) get tok: STRING(+)
(l.826,c.33) get tok: STRING("\")
(l.826,c.34) get tok: STRING())
(l.826,c.35) get tok: STRING(;)
(l.827,c.5) get tok: REF TAG(label)
(l.827,c.6) get tok: STRING([)
(l.827,c.7) get tok: STRING(4)
(l.827,c.8) get tok: STRING(:)
(l.827,c.11) get tok: INT(UPB[150])
(l.827,c.17) get tok: REF TAG(label)
(l.827,c.18) get tok: STRING(-)
(l.827,c.19) get tok: STRING(2)
(l.827,c.20) get tok: STRING(])
(l.828,c.1) get tok: STRING())
(l.830,c.2) get tok: CONTROL( )
(l.832,c.2) get tok: CONTROL(d)
(l.832,c.22) get tok: REF TAG(macrogpgettitle)
(l.832,c.23) get tok: STRING(=)
(l.833,c.14) get tok: REF TAG(macrogppcsi)
(l.833,c.15) get tok: STRING(;)
(l.834,c.18) get tok: REF TAG(macrogpgetreply)
(l.834,c.19) get tok: STRING(;)
(l.835,c.4) get tok: INT(PROC[69])
(l.835,c.18) get tok: REF TAG(gpgettitle)
(l.835,c.19) get tok: STRING(=)
(l.835,c.26) get tok: INT(STRING[156])
(l.836,c.0) get tok: STRING(:)
(l.836,c.1) get tok: STRING(()
(l.837,c.8) get tok: REF TAG(gppcsi)
(l.837,c.9) get tok: STRING(()
(l.837,c.11) get tok: STRING(21)
(l.837,c.12) get tok: STRING())
(l.837,c.13) get tok: STRING(;)
(l.838,c.6) get tok: INT(STRING[156])
(l.838,c.12) get tok: REF TAG(title)
(l.838,c.14) get tok: STRING(:=)
(l.838,c.26) get tok: REF TAG(gpgetreply)
(l.838,c.27) get tok: STRING(()
(l.838,c.30) get tok: REF TAG(esc)
(l.838,c.31) get tok: STRING(+)
(l.838,c.34) get tok: STRING("\")
(l.838,c.35) get tok: STRING())
(l.838,c.36) get tok: STRING(;)
(l.839,c.5) get tok: REF TAG(title)
(l.839,c.6) get tok: STRING([)
(l.839,c.7) get tok: STRING(4)
(l.839,c.8) get tok: STRING(:)
(l.839,c.11) get tok: INT(UPB[150])
(l.839,c.17) get tok: REF TAG(title)
(l.839,c.18) get tok: STRING(-)
(l.839,c.19) get tok: STRING(2)
(l.839,c.20) get tok: STRING(])
(l.840,c.1) get tok: STRING())
(l.842,c.2) get tok: CONTROL( )
(l.71,c.2) get tok: CONTROL(2)
(l.75,c.2) get tok: CONTROL(d)
(l.75,c.22) get tok: REF TAG(macromonitorfile)
(l.75,c.23) get tok: STRING(=)
(l.75,c.28) get tok: INT(FILE[59])
(l.77,c.0) get tok: REF TAG(monitorfile)
(l.77,c.2) get tok: CONTROL(d)
(l.77,c.17) get tok: REF TAG(macromonitor)
(l.77,c.18) get tok: STRING(=)
(l.78,c.18) get tok: REF TAG(macromonitorfile)
(l.78,c.19) get tok: STRING(;)
(l.79,c.4) get tok: INT(PROC[69])
(l.79,c.12) get tok: REF TAG(monitor)
(l.79,c.13) get tok: STRING(=)
(l.79,c.14) get tok: STRING(()
(l.79,c.15) get tok: STRING([)
(l.79,c.16) get tok: STRING(])
(l.79,c.21) get tok: INT(UNION[311])
(l.79,c.22) get tok: STRING(()
(l.79,c.30) get tok: REF TAG(SIMPLOUT)
(l.79,c.31) get tok: STRING(,)
(l.79,c.35) get tok: INT(PROC[69])
(l.79,c.36) get tok: STRING(()
(l.79,c.39) get tok: INT(REF[53])
(l.79,c.44) get tok: INT(FILE[59])
(l.79,c.45) get tok: STRING())
(l.79,c.49) get tok: INT(VOID[181])
(l.79,c.50) get tok: STRING())
(l.79,c.52) get tok: REF TAG(s)
(l.79,c.53) get tok: STRING())
(l.79,c.57) get tok: INT(BOOL[184])
(l.80,c.0) get tok: STRING(:)
(l.80,c.2) get tok: INT(IF[62])
(l.80,c.7) get tok: REF TAG(open)
(l.80,c.8) get tok: STRING(()
(l.80,c.20) get tok: REF TAG(monitorfile)
(l.80,c.21) get tok: STRING(,)
(l.80,c.24) get tok: REF TAG(idf)
(l.80,c.25) get tok: STRING(()
(l.80,c.37) get tok: REF TAG(monitorfile)
(l.80,c.38) get tok: STRING())
(l.80,c.39) get tok: STRING(,)
(l.80,c.57) get tok: REF TAG(standbackchannel)
(l.80,c.58) get tok: STRING())
(l.80,c.60) get tok: STRING(/=)
(l.81,c.0) get tok: STRING(0)
(l.81,c.4) get tok: INT(THEN[190])
(l.81,c.10) get tok: INT(FALSE[123])
(l.82,c.4) get tok: INT(ELSE[4])
(l.83,c.3) get tok: REF TAG(set)
(l.83,c.4) get tok: STRING(()
(l.83,c.16) get tok: REF TAG(monitorfile)
(l.83,c.17) get tok: STRING(,)
(l.83,c.18) get tok: STRING(0)
(l.83,c.19) get tok: STRING(,)
(l.83,c.20) get tok: STRING(0)
(l.83,c.21) get tok: STRING(,)
(l.83,c.32) get tok: REF TAG(logicalend)
(l.83,c.33) get tok: STRING(()
(l.83,c.45) get tok: REF TAG(monitorfile)
(l.83,c.46) get tok: STRING())
(l.83,c.47) get tok: STRING())
(l.83,c.48) get tok: STRING(;)
(l.84,c.3) get tok: REF TAG(put)
(l.84,c.4) get tok: STRING(()
(l.84,c.16) get tok: REF TAG(monitorfile)
(l.84,c.17) get tok: STRING(,)
(l.84,c.18) get tok: REF TAG(s)
(l.84,c.19) get tok: STRING())
(l.84,c.20) get tok: STRING(;)
(l.85,c.5) get tok: REF TAG(close)
(l.85,c.6) get tok: STRING(()
(l.85,c.18) get tok: REF TAG(monitorfile)
(l.85,c.19) get tok: STRING())
(l.85,c.20) get tok: STRING(;)
(l.86,c.4) get tok: INT(TRUE[64])
(l.87,c.2) get tok: INT(FI[107])
(l.89,c.2) get tok: CONTROL( )
(l.92,c.2) get tok: CONTROL(d)
(l.92,c.23) get tok: REF TAG(macrostartmonitor)
(l.92,c.24) get tok: STRING(=)
(l.93,c.18) get tok: REF TAG(macromonitorfile)
(l.93,c.19) get tok: STRING(;)
(l.94,c.13) get tok: REF TAG(macromonitor)
(l.94,c.14) get tok: STRING(;)
(l.95,c.4) get tok: INT(PROC[69])
(l.95,c.19) get tok: REF TAG(startmonitor)
(l.95,c.20) get tok: STRING(=)
(l.95,c.22) get tok: STRING(()
(l.95,c.28) get tok: INT(STRING[156])
(l.95,c.31) get tok: REF TAG(fn)
(l.95,c.32) get tok: STRING())
(l.95,c.36) get tok: INT(BOOL[184])
(l.96,c.0) get tok: STRING(:)
(l.96,c.2) get tok: INT(IF[62])
(l.96,c.12) get tok: REF TAG(establish)
(l.96,c.13) get tok: STRING(()
(l.96,c.25) get tok: REF TAG(monitorfile)
(l.96,c.26) get tok: STRING(,)
(l.96,c.28) get tok: REF TAG(fn)
(l.96,c.29) get tok: STRING(,)
(l.96,c.47) get tok: REF TAG(standbackchannel)
(l.96,c.48) get tok: STRING(,)
(l.96,c.49) get tok: STRING(0)
(l.96,c.50) get tok: STRING(,)
(l.96,c.51) get tok: STRING(0)
(l.96,c.52) get tok: STRING(,)
(l.96,c.53) get tok: STRING(0)
(l.96,c.54) get tok: STRING())
(l.96,c.56) get tok: STRING(/=)
(l.97,c.0) get tok: STRING(0)
(l.97,c.4) get tok: INT(THEN[190])
(l.97,c.10) get tok: INT(FALSE[123])
(l.98,c.4) get tok: INT(ELSE[4])
(l.99,c.3) get tok: REF TAG(put)
(l.99,c.4) get tok: STRING(()
(l.99,c.16) get tok: REF TAG(monitorfile)
(l.99,c.17) get tok: STRING(,)
(l.99,c.18) get tok: STRING(()
(l.99,c.31) get tok: STRING("Monitor log")
(l.99,c.32) get tok: STRING(,)
(l.99,c.39) get tok: REF TAG(newline)
(l.99,c.40) get tok: STRING(,)
(l.100,c.13) get tok: STRING("===========")
(l.100,c.14) get tok: STRING(,)
(l.100,c.21) get tok: REF TAG(newline)
(l.100,c.22) get tok: STRING(,)
(l.100,c.29) get tok: REF TAG(newline)
(l.100,c.30) get tok: STRING())
(l.100,c.31) get tok: STRING())
(l.100,c.32) get tok: STRING(;)
(l.101,c.5) get tok: REF TAG(close)
(l.101,c.6) get tok: STRING(()
(l.101,c.18) get tok: REF TAG(monitorfile)
(l.101,c.19) get tok: STRING())
(l.101,c.20) get tok: STRING(;)
(l.102,c.4) get tok: INT(TRUE[64])
(l.103,c.2) get tok: INT(FI[107])
(l.105,c.2) get tok: CONTROL(2)
(l.110,c.2) get tok: CONTROL(d)
(l.110,c.15) get tok: REF TAG(macrochown)
(l.110,c.16) get tok: STRING(=)
(l.111,c.4) get tok: INT(PROC[69])
(l.111,c.11) get tok: REF TAG(chown)
(l.111,c.12) get tok: STRING(=)
(l.111,c.14) get tok: STRING(()
(l.111,c.20) get tok: INT(STRING[156])
(l.111,c.25) get tok: REF TAG(path)
(l.111,c.26) get tok: STRING(,)
(l.111,c.30) get tok: INT(INT[195])
(l.111,c.36) get tok: REF TAG(owner)
(l.111,c.37) get tok: STRING(,)
(l.111,c.43) get tok: REF TAG(group)
(l.111,c.44) get tok: STRING())
(l.111,c.47) get tok: INT(INT[195])
(l.112,c.0) get tok: STRING(:)
(l.112,c.5) get tok: INT(BEGIN[227])
(l.113,c.4) get tok: INT(PROC[69])
(l.113,c.5) get tok: STRING(()
(l.113,c.8) get tok: REF TAG(STR)
(l.113,c.9) get tok: STRING(,)
(l.113,c.12) get tok: INT(INT[195])
(l.113,c.13) get tok: STRING(,)
(l.113,c.16) get tok: INT(INT[195])
(l.113,c.17) get tok: STRING())
(l.113,c.20) get tok: INT(INT[195])
(l.114,c.0) get tok: REF TAG(posixchown)
(l.114,c.1) get tok: STRING(=)
(l.114,c.7) get tok: INT(ALIEN[245])
(l.115,c.0) get tok: STRING("CHOWN")
(l.116,c.0) get tok: STRING("#include <sys/types.h>")
(l.117,c.0) get tok: STRING("#include <unistd.h>")
(l.118,c.0) get tok: STRING("#define CHOWN(p,u,g) \")
(l.119,c.0) get tok: STRING("  A_int_INT(chown(A_VC_charptr(p),\")
(l.119,c.41) get tok: STRING("            A_INT_int(u),A_INT_int(g)))")
(l.119,c.42) get tok: STRING(;)
(l.121,c.11) get tok: REF TAG(posixchown)
(l.121,c.12) get tok: STRING(()
(l.121,c.19) get tok: REF TAG(MAKERVC)
(l.121,c.24) get tok: REF TAG(path)
(l.121,c.25) get tok: STRING(,)
(l.121,c.30) get tok: REF TAG(owner)
(l.121,c.31) get tok: STRING(,)
(l.121,c.36) get tok: REF TAG(group)
(l.121,c.37) get tok: STRING())
(l.122,c.3) get tok: INT(END[202])
(l.124,c.2) get tok: CONTROL( )
(l.128,c.2) get tok: CONTROL(d)
(l.128,c.16) get tok: REF TAG(macrofchown)
(l.128,c.17) get tok: STRING(=)
(l.129,c.4) get tok: INT(PROC[69])
(l.129,c.12) get tok: REF TAG(fchown)
(l.129,c.13) get tok: STRING(=)
(l.129,c.15) get tok: STRING(()
(l.129,c.18) get tok: INT(REF[53])
(l.129,c.23) get tok: INT(FILE[59])
(l.129,c.25) get tok: REF TAG(f)
(l.129,c.26) get tok: STRING(,)
(l.129,c.30) get tok: INT(INT[195])
(l.129,c.36) get tok: REF TAG(owner)
(l.129,c.37) get tok: STRING(,)
(l.129,c.43) get tok: REF TAG(group)
(l.129,c.44) get tok: STRING())
(l.129,c.47) get tok: INT(INT[195])
(l.130,c.0) get tok: STRING(:)
(l.130,c.5) get tok: INT(BEGIN[227])
(l.131,c.4) get tok: INT(PROC[69])
(l.131,c.5) get tok: STRING(()
(l.131,c.8) get tok: INT(INT[195])
(l.131,c.9) get tok: STRING(,)
(l.131,c.12) get tok: INT(INT[195])
(l.131,c.13) get tok: STRING(,)
(l.131,c.16) get tok: INT(INT[195])
(l.131,c.17) get tok: STRING())
(l.131,c.20) get tok: INT(INT[195])
(l.132,c.0) get tok: REF TAG(posixfchown)
(l.132,c.1) get tok: STRING(=)
(l.132,c.7) get tok: INT(ALIEN[245])
(l.133,c.0) get tok: STRING("FCHOWN")
(l.133,c.50) get tok: STRING("#define FCHOWN(fd,u,g) A_int_INT(fchown(fd,u,g))")
(l.133,c.51) get tok: STRING(;)
(l.135,c.12) get tok: REF TAG(posixfchown)
(l.135,c.13) get tok: STRING(()
(l.135,c.21) get tok: REF TAG(sysfile)
(l.135,c.23) get tok: INT(OF[97])
(l.135,c.25) get tok: REF TAG(f)
(l.135,c.26) get tok: STRING(,)
(l.135,c.31) get tok: REF TAG(owner)
(l.135,c.32) get tok: STRING(,)
(l.135,c.37) get tok: REF TAG(group)
(l.135,c.38) get tok: STRING())
(l.136,c.3) get tok: INT(END[202])
(l.138,c.2) get tok: CONTROL(2)
(l.144,c.2) get tok: CONTROL(d)
(l.144,c.15) get tok: REF TAG(macromkdir)
(l.144,c.16) get tok: STRING(=)
(l.145,c.4) get tok: INT(PROC[69])
(l.145,c.11) get tok: REF TAG(mkdir)
(l.145,c.12) get tok: STRING(=)
(l.145,c.14) get tok: STRING(()
(l.145,c.20) get tok: INT(STRING[156])
(l.145,c.22) get tok: REF TAG(s)
(l.145,c.23) get tok: STRING(,)
(l.145,c.27) get tok: INT(BITS[164])
(l.145,c.32) get tok: REF TAG(mode)
(l.145,c.33) get tok: STRING())
(l.145,c.36) get tok: INT(INT[195])
(l.146,c.0) get tok: STRING(:)
(l.146,c.5) get tok: INT(BEGIN[227])
(l.147,c.4) get tok: INT(PROC[69])
(l.147,c.5) get tok: STRING(()
(l.147,c.11) get tok: REF TAG(VECTOR)
(l.147,c.12) get tok: STRING([)
(l.147,c.13) get tok: STRING(])
(l.147,c.17) get tok: INT(CHAR[113])
(l.147,c.18) get tok: STRING(,)
(l.147,c.21) get tok: INT(INT[195])
(l.147,c.22) get tok: STRING())
(l.147,c.25) get tok: INT(INT[195])
(l.148,c.0) get tok: REF TAG(posixmkdir)
(l.148,c.1) get tok: STRING(=)
(l.148,c.7) get tok: INT(ALIEN[245])
(l.149,c.0) get tok: STRING("MKDIR")
(l.150,c.0) get tok: STRING("#include <sys/stat.h>")
(l.151,c.0) get tok: STRING("#include <sys/types.h>")
(l.151,c.79) get tok: STRING("#define MKDIR(path,mode) A_int_INT(mkdir(A_VC_charptr(path),A_INT_int(mode)))")
(l.151,c.80) get tok: STRING(;)
(l.152,c.11) get tok: REF TAG(posixmkdir)
(l.152,c.12) get tok: STRING(()
(l.152,c.13) get tok: REF TAG(Z)
(l.152,c.21) get tok: REF TAG(MAKERVC)
(l.152,c.23) get tok: REF TAG(s)
(l.152,c.24) get tok: STRING(,)
(l.152,c.27) get tok: INT(ABS[226])
(l.152,c.32) get tok: REF TAG(mode)
(l.152,c.33) get tok: STRING())
(l.153,c.3) get tok: INT(END[202])
(l.155,c.2) get tok: CONTROL( )
(l.157,c.2) get tok: CONTROL(d)
(l.157,c.15) get tok: REF TAG(macrormdir)
(l.157,c.16) get tok: STRING(=)
(l.158,c.4) get tok: INT(PROC[69])
(l.158,c.11) get tok: REF TAG(rmdir)
(l.158,c.12) get tok: STRING(=)
(l.158,c.14) get tok: STRING(()
(l.158,c.20) get tok: INT(STRING[156])
(l.158,c.22) get tok: REF TAG(s)
(l.158,c.23) get tok: STRING())
(l.158,c.26) get tok: INT(INT[195])
(l.159,c.0) get tok: STRING(:)
(l.159,c.5) get tok: INT(BEGIN[227])
(l.160,c.4) get tok: INT(PROC[69])
(l.160,c.5) get tok: STRING(()
(l.160,c.11) get tok: REF TAG(VECTOR)
(l.160,c.12) get tok: STRING([)
(l.160,c.13) get tok: STRING(])
(l.160,c.17) get tok: INT(CHAR[113])
(l.160,c.18) get tok: STRING())
(l.160,c.21) get tok: INT(INT[195])
(l.161,c.0) get tok: REF TAG(posixrmdir)
(l.161,c.1) get tok: STRING(=)
(l.161,c.7) get tok: INT(ALIEN[245])
(l.162,c.0) get tok: STRING("RMDIR")
(l.162,c.58) get tok: STRING("#define RMDIR(path) A_int_INT(rmdir(A_VC_charptr(path)))")
(l.162,c.59) get tok: STRING(;)
(l.163,c.11) get tok: REF TAG(posixrmdir)
(l.163,c.12) get tok: STRING(()
(l.163,c.13) get tok: REF TAG(Z)
(l.163,c.21) get tok: REF TAG(MAKERVC)
(l.163,c.23) get tok: REF TAG(s)
(l.163,c.24) get tok: STRING())
(l.164,c.3) get tok: INT(END[202])
(l.166,c.2) get tok: CONTROL( )
(l.169,c.2) get tok: CONTROL(d)
(l.169,c.15) get tok: REF TAG(macrochdir)
(l.169,c.16) get tok: STRING(=)
(l.170,c.4) get tok: INT(PROC[69])
(l.170,c.11) get tok: REF TAG(chdir)
(l.170,c.12) get tok: STRING(=)
(l.170,c.14) get tok: STRING(()
(l.170,c.20) get tok: INT(STRING[156])
(l.170,c.22) get tok: REF TAG(s)
(l.170,c.23) get tok: STRING())
(l.170,c.26) get tok: INT(INT[195])
(l.171,c.0) get tok: STRING(:)
(l.171,c.5) get tok: INT(BEGIN[227])
(l.172,c.4) get tok: INT(PROC[69])
(l.172,c.5) get tok: STRING(()
(l.172,c.11) get tok: REF TAG(VECTOR)
(l.172,c.12) get tok: STRING([)
(l.172,c.13) get tok: STRING(])
(l.172,c.17) get tok: INT(CHAR[113])
(l.172,c.18) get tok: STRING())
(l.172,c.21) get tok: INT(INT[195])
(l.173,c.0) get tok: REF TAG(posixchdir)
(l.173,c.1) get tok: STRING(=)
(l.173,c.7) get tok: INT(ALIEN[245])
(l.174,c.0) get tok: STRING("CHDIR")
(l.175,c.0) get tok: STRING("#define CHDIR(path) \")
(l.175,c.41) get tok: STRING("   A_int_INT(chdir(A_VC_charptr(path)))")
(l.175,c.42) get tok: STRING(;)
(l.176,c.11) get tok: REF TAG(posixchdir)
(l.176,c.12) get tok: STRING(()
(l.176,c.13) get tok: REF TAG(Z)
(l.176,c.21) get tok: REF TAG(MAKERVC)
(l.176,c.23) get tok: REF TAG(s)
(l.176,c.24) get tok: STRING())
(l.177,c.3) get tok: INT(END[202])
(l.179,c.2) get tok: CONTROL(2)
(l.185,c.2) get tok: CONTROL(d)
(l.185,c.19) get tok: REF TAG(macroreadlink)
(l.185,c.20) get tok: STRING(=)
(l.186,c.18) get tok: REF TAG(macroenametoolong)
(l.186,c.19) get tok: STRING(;)
(l.187,c.4) get tok: INT(PROC[69])
(l.187,c.15) get tok: REF TAG(readlink)
(l.187,c.16) get tok: STRING(=)
(l.187,c.18) get tok: STRING(()
(l.187,c.24) get tok: INT(STRING[156])
(l.187,c.29) get tok: REF TAG(link)
(l.187,c.30) get tok: STRING())
(l.187,c.36) get tok: INT(STRING[156])
(l.188,c.0) get tok: STRING(:)
(l.188,c.2) get tok: INT(IF[62])
(l.188,c.9) get tok: INT(PROC[69])
(l.188,c.10) get tok: STRING(()
(l.188,c.16) get tok: REF TAG(VECTOR)
(l.188,c.17) get tok: STRING([)
(l.188,c.18) get tok: STRING(])
(l.188,c.22) get tok: INT(CHAR[113])
(l.188,c.23) get tok: STRING(,)
(l.188,c.26) get tok: REF TAG(RVC)
(l.188,c.27) get tok: STRING())
(l.188,c.30) get tok: INT(INT[195])
(l.188,c.43) get tok: REF TAG(bsdreadlink)
(l.188,c.45) get tok: CONTROL(/)
(l.189,c.1) get tok: STRING(=)
(l.189,c.7) get tok: INT(ALIEN[245])
(l.189,c.18) get tok: STRING("READLINK")
(l.189,c.20) get tok: CONTROL(/)
(l.190,c.20) get tok: STRING("#include <fcntl.h>")
(l.190,c.22) get tok: CONTROL(/)
(l.191,c.30) get tok: STRING("#define READLINK(path,buf) \")
(l.191,c.32) get tok: CONTROL(/)
(l.192,c.71) get tok: STRING("  A_int_INT(readlink(A_VC_charptr(path),A_VC_charptr(buf),(buf).upb))")
(l.192,c.72) get tok: STRING(;)
(l.194,c.2) get tok: CONTROL(<)
(l.195,c.2) get tok: CONTROL(<)
(l.196,c.8) get tok: REF TAG(pathlen)
(l.196,c.9) get tok: STRING(>)
(l.197,c.0) get tok: STRING(0)
(l.197,c.4) get tok: INT(THEN[190])
(l.197,c.7) get tok: CONTROL(<)
(l.198,c.4) get tok: INT(ELSE[4])
(l.199,c.0) get tok: STRING("")
(l.199,c.2) get tok: INT(FI[107])
(l.201,c.2) get tok: CONTROL( )
(l.206,c.2) get tok: CONTROL(<)
(l.207,c.3) get tok: INT(REF[53])
(l.207,c.10) get tok: REF TAG(VECTOR)
(l.207,c.11) get tok: STRING([)
(l.207,c.12) get tok: STRING(])
(l.207,c.16) get tok: INT(CHAR[113])
(l.207,c.21) get tok: REF TAG(rrvc)
(l.207,c.23) get tok: STRING(:=)
(l.207,c.27) get tok: INT(HEAP[48])
(l.207,c.34) get tok: REF TAG(VECTOR)
(l.207,c.35) get tok: STRING([)
(l.207,c.37) get tok: STRING(64)
(l.207,c.38) get tok: STRING(])
(l.207,c.42) get tok: INT(CHAR[113])
(l.207,c.43) get tok: STRING(;)
(l.209,c.2) get tok: CONTROL( )
(l.213,c.2) get tok: CONTROL(<)
(l.214,c.3) get tok: REF TAG(RVC)
(l.214,c.11) get tok: REF TAG(plink)
(l.214,c.12) get tok: STRING(=)
(l.214,c.20) get tok: REF TAG(MAKERVC)
(l.214,c.25) get tok: REF TAG(link)
(l.214,c.26) get tok: STRING(;)
(l.216,c.2) get tok: CONTROL( )
(l.219,c.2) get tok: CONTROL(<)
(l.220,c.3) get tok: INT(INT[195])
(l.220,c.12) get tok: REF TAG(pathlen)
(l.220,c.13) get tok: STRING(;)
(l.222,c.2) get tok: CONTROL( )
(l.222,c.4) get tok: CONTROL(<)
(l.223,c.5) get tok: INT(WHILE[99])
(l.224,c.2) get tok: INT(IF[62])
(l.224,c.4) get tok: STRING(()
(l.224,c.12) get tok: REF TAG(pathlen)
(l.224,c.14) get tok: STRING(:=)
(l.224,c.26) get tok: REF TAG(bsdreadlink)
(l.224,c.27) get tok: STRING(()
(l.224,c.33) get tok: REF TAG(plink)
(l.224,c.34) get tok: STRING(,)
(l.224,c.38) get tok: REF TAG(rrvc)
(l.224,c.39) get tok: STRING())
(l.224,c.40) get tok: STRING())
(l.224,c.42) get tok: STRING(=)
(l.224,c.44) get tok: STRING(-)
(l.225,c.0) get tok: STRING(1)
(l.225,c.4) get tok: INT(THEN[190])
(l.225,c.11) get tok: REF TAG(errno)
(l.225,c.12) get tok: STRING(=)
(l.226,c.0) get tok: REF TAG(enametoolong)
(l.226,c.4) get tok: INT(ELSE[4])
(l.226,c.10) get tok: INT(FALSE[123])
(l.227,c.2) get tok: INT(FI[107])
(l.228,c.2) get tok: INT(DO[244])
(l.229,c.4) get tok: REF TAG(rrvc)
(l.229,c.6) get tok: STRING(:=)
(l.229,c.10) get tok: INT(HEAP[48])
(l.229,c.17) get tok: REF TAG(VECTOR)
(l.229,c.18) get tok: STRING([)
(l.229,c.21) get tok: INT(UPB[150])
(l.229,c.27) get tok: REF TAG(rrvc)
(l.229,c.28) get tok: STRING(*)
(l.229,c.30) get tok: STRING(2)
(l.229,c.31) get tok: STRING(])
(l.229,c.35) get tok: INT(CHAR[113])
(l.230,c.2) get tok: INT(OD[231])
(l.230,c.3) get tok: STRING(;)
(l.232,c.2) get tok: CONTROL( )
(l.235,c.2) get tok: CONTROL(<)
(l.236,c.4) get tok: REF TAG(rrvc)
(l.236,c.5) get tok: STRING([)
(l.236,c.6) get tok: STRING(:)
(l.236,c.14) get tok: REF TAG(pathlen)
(l.236,c.15) get tok: STRING(])
(l.238,c.2) get tok: CONTROL( )
(l.244,c.2) get tok: CONTROL(d)
(l.244,c.17) get tok: REF TAG(macrogetcwd)
(l.244,c.18) get tok: STRING(=)
(l.245,c.16) get tok: REF TAG(macrogpopupto)
(l.245,c.17) get tok: STRING(;)
(l.246,c.12) get tok: REF TAG(macroerange)
(l.246,c.13) get tok: STRING(;)
(l.247,c.4) get tok: INT(PROC[69])
(l.247,c.13) get tok: REF TAG(getcwd)
(l.247,c.14) get tok: STRING(=)
(l.247,c.21) get tok: INT(STRING[156])
(l.248,c.0) get tok: STRING(:)
(l.248,c.5) get tok: INT(BEGIN[227])
(l.249,c.4) get tok: INT(PROC[69])
(l.249,c.5) get tok: STRING(()
(l.249,c.11) get tok: REF TAG(VECTOR)
(l.249,c.12) get tok: STRING([)
(l.249,c.13) get tok: STRING(])
(l.249,c.17) get tok: INT(CHAR[113])
(l.249,c.18) get tok: STRING())
(l.249,c.22) get tok: REF TAG(CSTR)
(l.250,c.0) get tok: REF TAG(posixgetcwd)
(l.250,c.1) get tok: STRING(=)
(l.250,c.7) get tok: INT(ALIEN[245])
(l.251,c.0) get tok: STRING("GETCWD")
(l.252,c.0) get tok: STRING("#define GETCWD(buf) \")
(l.252,c.55) get tok: STRING(" (void *)getcwd(A_VC_charptr(buf),A_INT_int(buf.upb))")
(l.252,c.56) get tok: STRING(;)
(l.253,c.2) get tok: CONTROL(&)
(l.254,c.3) get tok: REF TAG(RVC)
(l.254,c.7) get tok: REF TAG(rvc)
(l.254,c.9) get tok: STRING(:=)
(l.254,c.13) get tok: INT(HEAP[48])
(l.254,c.20) get tok: REF TAG(VECTOR)
(l.254,c.21) get tok: STRING([)
(l.254,c.24) get tok: STRING(256)
(l.254,c.25) get tok: STRING(])
(l.254,c.29) get tok: INT(CHAR[113])
(l.254,c.30) get tok: STRING(;)
(l.255,c.2) get tok: CONTROL(&)
(l.256,c.5) get tok: INT(WHILE[99])
(l.256,c.7) get tok: STRING(()
(l.256,c.19) get tok: REF TAG(posixgetcwd)
(l.256,c.20) get tok: STRING(()
(l.256,c.23) get tok: REF TAG(rvc)
(l.256,c.24) get tok: STRING())
(l.256,c.27) get tok: INT(IS[82])
(l.256,c.31) get tok: INT(NIL[180])
(l.256,c.32) get tok: STRING(|)
(l.256,c.37) get tok: REF TAG(errno)
(l.256,c.38) get tok: STRING(=)
(l.256,c.44) get tok: REF TAG(erange)
(l.256,c.45) get tok: STRING(|)
(l.256,c.50) get tok: INT(FALSE[123])
(l.256,c.51) get tok: STRING())
(l.257,c.2) get tok: INT(DO[244])
(l.257,c.6) get tok: REF TAG(rvc)
(l.257,c.8) get tok: STRING(:=)
(l.257,c.12) get tok: INT(HEAP[48])
(l.257,c.19) get tok: REF TAG(VECTOR)
(l.257,c.20) get tok: STRING([)
(l.257,c.23) get tok: INT(UPB[150])
(l.257,c.28) get tok: REF TAG(rvc)
(l.257,c.29) get tok: STRING(*)
(l.257,c.31) get tok: STRING(2)
(l.257,c.32) get tok: STRING(])
(l.257,c.36) get tok: INT(CHAR[113])
(l.257,c.39) get tok: INT(OD[231])
(l.257,c.40) get tok: STRING(;)
(l.258,c.4) get tok: REF TAG(rvc)
(l.258,c.8) get tok: REF TAG(UPTO)
(l.259,c.0) get tok: REF TAG(nulch)
(l.259,c.3) get tok: INT(END[202])
(l.261,c.2) get tok: CONTROL( )
(l.266,c.2) get tok: CONTROL(d)
(l.266,c.15) get tok: REF TAG(macrooptc)
(l.266,c.16) get tok: STRING(=)
(l.267,c.2) get tok: INT(OP[87])
(l.267,c.5) get tok: REF TAG(TC)
(l.267,c.7) get tok: STRING(=)
(l.267,c.9) get tok: STRING(()
(l.267,c.15) get tok: INT(STRING[156])
(l.267,c.17) get tok: REF TAG(s)
(l.267,c.18) get tok: STRING())
(l.267,c.24) get tok: INT(STRING[156])
(l.268,c.0) get tok: STRING(:)
(l.268,c.2) get tok: INT(IF[62])
(l.268,c.4) get tok: REF TAG(s)
(l.268,c.5) get tok: STRING([)
(l.268,c.8) get tok: INT(LWB[148])
(l.268,c.10) get tok: REF TAG(s)
(l.268,c.11) get tok: STRING(])
(l.268,c.13) get tok: STRING(/=)
(l.269,c.0) get tok: STRING("~")
(l.269,c.4) get tok: INT(THEN[190])
(l.270,c.0) get tok: REF TAG(s)
(l.270,c.4) get tok: INT(ELIF[9])
(l.270,c.9) get tok: INT(FILE[59])
(l.270,c.11) get tok: REF TAG(e)
(l.270,c.12) get tok: STRING(;)
(l.270,c.18) get tok: REF TAG(open)
(l.270,c.19) get tok: STRING(()
(l.270,c.20) get tok: REF TAG(e)
(l.270,c.21) get tok: STRING(,)
(l.270,c.27) get tok: STRING("HOME")
(l.270,c.28) get tok: STRING(,)
(l.270,c.39) get tok: REF TAG(envchannel)
(l.270,c.40) get tok: STRING())
(l.270,c.42) get tok: STRING(/=)
(l.271,c.0) get tok: STRING(0)
(l.271,c.4) get tok: INT(THEN[190])
(l.272,c.0) get tok: REF TAG(s)
(l.272,c.4) get tok: INT(ELSE[4])
(l.272,c.6) get tok: CONTROL(/)
(l.273,c.6) get tok: INT(STRING[156])
(l.273,c.11) get tok: REF TAG(home)
(l.273,c.12) get tok: STRING(;)
(l.274,c.19) get tok: REF TAG(onlogicalfileend)
(l.274,c.20) get tok: STRING(()
(l.274,c.21) get tok: REF TAG(e)
(l.274,c.22) get tok: STRING(,)
(l.274,c.23) get tok: STRING(()
(l.274,c.26) get tok: INT(REF[53])
(l.274,c.31) get tok: INT(FILE[59])
(l.274,c.33) get tok: REF TAG(f)
(l.274,c.34) get tok: STRING())
(l.274,c.38) get tok: INT(BOOL[184])
(l.274,c.39) get tok: STRING(:)
(l.274,c.41) get tok: STRING(()
(l.274,c.45) get tok: INT(GOTO[294])
(l.274,c.49) get tok: REF TAG(eof)
(l.274,c.50) get tok: STRING(;)
(l.274,c.55) get tok: INT(SKIP[44])
(l.274,c.56) get tok: STRING())
(l.274,c.57) get tok: STRING())
(l.274,c.58) get tok: STRING(;)
(l.275,c.9) get tok: REF TAG(maketerm)
(l.275,c.10) get tok: STRING(()
(l.275,c.11) get tok: REF TAG(e)
(l.275,c.12) get tok: STRING(,)
(l.275,c.18) get tok: REF TAG(nulch)
(l.275,c.19) get tok: STRING())
(l.275,c.20) get tok: STRING(;)
(l.276,c.3) get tok: REF TAG(get)
(l.276,c.4) get tok: STRING(()
(l.276,c.5) get tok: REF TAG(e)
(l.276,c.6) get tok: STRING(,)
(l.276,c.10) get tok: REF TAG(home)
(l.276,c.11) get tok: STRING())
(l.276,c.12) get tok: STRING(;)
(l.277,c.3) get tok: REF TAG(eof)
(l.278,c.0) get tok: STRING(:)
(l.278,c.5) get tok: REF TAG(close)
(l.278,c.6) get tok: STRING(()
(l.278,c.7) get tok: REF TAG(e)
(l.278,c.8) get tok: STRING())
(l.278,c.9) get tok: STRING(;)
(l.279,c.4) get tok: REF TAG(home)
(l.279,c.5) get tok: STRING(+)
(l.279,c.6) get tok: REF TAG(s)
(l.279,c.7) get tok: STRING([)
(l.279,c.8) get tok: STRING(1)
(l.279,c.9) get tok: STRING(+)
(l.279,c.12) get tok: INT(LWB[148])
(l.279,c.14) get tok: REF TAG(s)
(l.279,c.15) get tok: STRING(:)
(l.279,c.16) get tok: STRING(])
(l.280,c.2) get tok: INT(FI[107])
(l.282,c.2) get tok: CONTROL( )
(l.285,c.2) get tok: CONTROL(d)
(l.285,c.17) get tok: REF TAG(macroopnorm)
(l.285,c.18) get tok: STRING(=)
(l.286,c.13) get tok: REF TAG(macrogetcwd)
(l.286,c.14) get tok: STRING(;)
(l.287,c.11) get tok: REF TAG(macrooptc)
(l.287,c.12) get tok: STRING(;)
(l.288,c.15) get tok: REF TAG(macrogpoplop)
(l.288,c.16) get tok: STRING(;)
(l.289,c.16) get tok: REF TAG(macrogpopends)
(l.289,c.17) get tok: STRING(;)
(l.290,c.34) get tok: REF TAG(macrogpopfindrowcharrowchar)
(l.290,c.35) get tok: STRING(;)
(l.291,c.16) get tok: REF TAG(macrogpreplace)
(l.291,c.17) get tok: STRING(;)
(l.292,c.2) get tok: INT(OP[87])
(l.292,c.7) get tok: REF TAG(NORM)
(l.292,c.9) get tok: STRING(=)
(l.292,c.11) get tok: STRING(()
(l.292,c.12) get tok: STRING([)
(l.292,c.13) get tok: STRING(])
(l.292,c.17) get tok: INT(CHAR[113])
(l.292,c.19) get tok: REF TAG(s)
(l.292,c.20) get tok: STRING())
(l.292,c.21) get tok: STRING([)
(l.292,c.22) get tok: STRING(])
(l.292,c.26) get tok: INT(CHAR[113])
(l.293,c.0) get tok: STRING(:)
(l.293,c.2) get tok: INT(IF[62])
(l.293,c.4) get tok: REF TAG(s)
(l.293,c.5) get tok: STRING(=)
(l.294,c.0) get tok: STRING("")
(l.294,c.4) get tok: INT(THEN[190])
(l.295,c.0) get tok: REF TAG(getcwd)
(l.295,c.4) get tok: INT(ELIF[9])
(l.295,c.6) get tok: REF TAG(s)
(l.295,c.7) get tok: STRING(=)
(l.295,c.10) get tok: STRING("~")
(l.295,c.13) get tok: INT(OR[177])
(l.295,c.15) get tok: REF TAG(s)
(l.295,c.16) get tok: STRING(=)
(l.296,c.0) get tok: STRING("~/")
(l.296,c.4) get tok: INT(THEN[190])
(l.296,c.7) get tok: REF TAG(TC)
(l.296,c.9) get tok: STRING([)
(l.296,c.10) get tok: STRING(])
(l.296,c.14) get tok: INT(CHAR[113])
(l.296,c.15) get tok: STRING(()
(l.296,c.18) get tok: STRING("~")
(l.296,c.19) get tok: STRING())
(l.297,c.4) get tok: INT(ELIF[9])
(l.297,c.8) get tok: INT(NOT[230])
(l.297,c.23) get tok: REF TAG(charinstring)
(l.297,c.24) get tok: STRING(()
(l.297,c.27) get tok: STRING(".")
(l.297,c.28) get tok: STRING(,)
(l.297,c.31) get tok: INT(LOC[108])
(l.297,c.35) get tok: INT(INT[195])
(l.297,c.36) get tok: STRING(,)
(l.297,c.37) get tok: REF TAG(s)
(l.297,c.38) get tok: STRING())
(l.298,c.4) get tok: INT(THEN[190])
(l.298,c.7) get tok: REF TAG(TC)
(l.299,c.0) get tok: REF TAG(s)
(l.299,c.4) get tok: INT(ELSE[4])
(l.300,c.6) get tok: INT(STRING[156])
(l.300,c.9) get tok: REF TAG(ss)
(l.300,c.11) get tok: STRING(:=)
(l.300,c.13) get tok: REF TAG(TC)
(l.300,c.15) get tok: REF TAG(s)
(l.300,c.16) get tok: STRING([)
(l.300,c.18) get tok: CONTROL(@)
(l.300,c.19) get tok: STRING(1)
(l.300,c.20) get tok: STRING(])
(l.300,c.21) get tok: STRING(;)
(l.301,c.1) get tok: STRING([)
(l.301,c.2) get tok: STRING(])
(l.301,c.6) get tok: INT(CHAR[113])
(l.301,c.10) get tok: REF TAG(cwd)
(l.301,c.11) get tok: STRING(=)
(l.301,c.17) get tok: REF TAG(getcwd)
(l.301,c.18) get tok: STRING(,)
(l.301,c.20) get tok: REF TAG(ds)
(l.301,c.21) get tok: STRING(=)
(l.301,c.25) get tok: STRING("./")
(l.301,c.26) get tok: STRING(,)
(l.301,c.28) get tok: REF TAG(sd)
(l.301,c.29) get tok: STRING(=)
(l.301,c.33) get tok: STRING("/.")
(l.301,c.34) get tok: STRING(;)
(l.302,c.3) get tok: INT(INT[195])
(l.302,c.5) get tok: REF TAG(p)
(l.302,c.6) get tok: STRING(;)
(l.303,c.4) get tok: INT(CHAR[113])
(l.303,c.8) get tok: REF TAG(dot)
(l.303,c.9) get tok: STRING(=)
(l.303,c.12) get tok: STRING(".")
(l.303,c.13) get tok: STRING(,)
(l.303,c.19) get tok: REF TAG(stroke)
(l.303,c.20) get tok: STRING(=)
(l.303,c.23) get tok: STRING("/")
(l.303,c.24) get tok: STRING(,)
(l.303,c.32) get tok: REF TAG(flagdot)
(l.303,c.33) get tok: STRING(=)
(l.303,c.37) get tok: INT(REPR[94])
(l.303,c.39) get tok: STRING(1)
(l.303,c.40) get tok: STRING(;)
(l.304,c.5) get tok: INT(WHILE[99])
(l.304,c.20) get tok: REF TAG(charinstring)
(l.304,c.21) get tok: STRING(()
(l.304,c.24) get tok: REF TAG(dot)
(l.304,c.25) get tok: STRING(,)
(l.304,c.26) get tok: REF TAG(p)
(l.304,c.27) get tok: STRING(,)
(l.304,c.29) get tok: REF TAG(ss)
(l.304,c.30) get tok: STRING())
(l.305,c.2) get tok: INT(DO[244])
(l.306,c.2) get tok: REF TAG(ss)
(l.307,c.0) get tok: STRING(:=)
(l.307,c.2) get tok: INT(IF[62])
(l.307,c.5) get tok: REF TAG(ss)
(l.307,c.6) get tok: STRING(=)
(l.307,c.8) get tok: STRING("")
(l.307,c.11) get tok: INT(OR[177])
(l.307,c.14) get tok: REF TAG(ss)
(l.307,c.15) get tok: STRING(=)
(l.308,c.0) get tok: REF TAG(dot)
(l.308,c.4) get tok: INT(THEN[190])
(l.309,c.0) get tok: REF TAG(cwd)
(l.309,c.4) get tok: INT(ELIF[9])
(l.309,c.7) get tok: REF TAG(ss)
(l.309,c.8) get tok: STRING(=)
(l.310,c.0) get tok: STRING("..")
(l.310,c.4) get tok: INT(THEN[190])
(l.310,c.9) get tok: REF TAG(cwd)
(l.310,c.12) get tok: REF TAG(LOP)
(l.311,c.0) get tok: REF TAG(stroke)
(l.311,c.4) get tok: INT(ELIF[9])
(l.311,c.8) get tok: REF TAG(ss)
(l.311,c.12) get tok: REF TAG(ENDS)
(l.312,c.0) get tok: REF TAG(stroke)
(l.312,c.4) get tok: INT(THEN[190])
(l.312,c.7) get tok: REF TAG(ss)
(l.312,c.8) get tok: STRING([)
(l.312,c.9) get tok: STRING(:)
(l.312,c.12) get tok: INT(UPB[150])
(l.312,c.15) get tok: REF TAG(ss)
(l.312,c.16) get tok: STRING(-)
(l.312,c.17) get tok: STRING(1)
(l.312,c.18) get tok: STRING(])
(l.313,c.4) get tok: INT(ELIF[9])
(l.313,c.7) get tok: REF TAG(ss)
(l.313,c.8) get tok: STRING(=)
(l.313,c.11) get tok: REF TAG(sd)
(l.313,c.13) get tok: INT(OR[177])
(l.313,c.16) get tok: REF TAG(ss)
(l.313,c.17) get tok: STRING(=)
(l.314,c.0) get tok: STRING("/..")
(l.314,c.4) get tok: INT(THEN[190])
(l.315,c.0) get tok: REF TAG(stroke)
(l.315,c.4) get tok: INT(ELIF[9])
(l.315,c.8) get tok: INT(UPB[150])
(l.315,c.11) get tok: REF TAG(ss)
(l.315,c.12) get tok: STRING(>)
(l.316,c.0) get tok: STRING(2)
(l.316,c.4) get tok: INT(THEN[190])
(l.317,c.3) get tok: INT(INT[195])
(l.317,c.8) get tok: REF TAG(pdot)
(l.317,c.9) get tok: STRING(=)
(l.317,c.10) get tok: REF TAG(p)
(l.317,c.11) get tok: STRING(;)
(l.318,c.2) get tok: INT(IF[62])
(l.318,c.5) get tok: REF TAG(ss)
(l.318,c.6) get tok: STRING([)
(l.318,c.7) get tok: STRING(:)
(l.318,c.8) get tok: STRING(3)
(l.318,c.9) get tok: STRING(])
(l.318,c.10) get tok: STRING(=)
(l.319,c.0) get tok: STRING("../")
(l.319,c.4) get tok: INT(THEN[190])
(l.319,c.9) get tok: REF TAG(cwd)
(l.319,c.12) get tok: REF TAG(LOP)
(l.319,c.19) get tok: REF TAG(stroke)
(l.319,c.20) get tok: STRING(+)
(l.319,c.22) get tok: REF TAG(ss)
(l.319,c.23) get tok: STRING([)
(l.319,c.24) get tok: STRING(3)
(l.319,c.25) get tok: STRING(:)
(l.319,c.26) get tok: STRING(])
(l.320,c.4) get tok: INT(ELIF[9])
(l.320,c.7) get tok: REF TAG(ss)
(l.320,c.8) get tok: STRING([)
(l.320,c.9) get tok: STRING(:)
(l.320,c.10) get tok: STRING(2)
(l.320,c.11) get tok: STRING(])
(l.320,c.12) get tok: STRING(=)
(l.321,c.0) get tok: REF TAG(ds)
(l.321,c.4) get tok: INT(THEN[190])
(l.321,c.7) get tok: REF TAG(ss)
(l.321,c.8) get tok: STRING([)
(l.321,c.9) get tok: STRING(3)
(l.321,c.10) get tok: STRING(:)
(l.321,c.11) get tok: STRING(])
(l.322,c.4) get tok: INT(ELIF[9])
(l.322,c.6) get tok: STRING(()
(l.322,c.7) get tok: REF TAG(p)
(l.322,c.9) get tok: STRING(:=)
(l.322,c.12) get tok: REF TAG(sd)
(l.322,c.16) get tok: INT(FIND[131])
(l.322,c.19) get tok: REF TAG(ss)
(l.322,c.20) get tok: STRING())
(l.322,c.21) get tok: STRING(=)
(l.322,c.24) get tok: INT(UPB[150])
(l.322,c.27) get tok: REF TAG(ss)
(l.322,c.28) get tok: STRING(-)
(l.323,c.0) get tok: STRING(1)
(l.323,c.4) get tok: INT(THEN[190])
(l.323,c.7) get tok: REF TAG(ss)
(l.323,c.8) get tok: STRING([)
(l.323,c.9) get tok: STRING(:)
(l.323,c.10) get tok: REF TAG(p)
(l.323,c.11) get tok: STRING(-)
(l.323,c.12) get tok: STRING(1)
(l.323,c.13) get tok: STRING(])
(l.324,c.4) get tok: INT(ELIF[9])
(l.324,c.6) get tok: REF TAG(p)
(l.324,c.8) get tok: STRING(>=)
(l.325,c.0) get tok: STRING(1)
(l.325,c.4) get tok: INT(THEN[190])
(l.326,c.2) get tok: INT(IF[62])
(l.326,c.5) get tok: REF TAG(ss)
(l.326,c.6) get tok: STRING([)
(l.326,c.7) get tok: REF TAG(p)
(l.326,c.8) get tok: STRING(+)
(l.326,c.9) get tok: STRING(2)
(l.326,c.10) get tok: STRING(])
(l.326,c.11) get tok: STRING(=)
(l.327,c.0) get tok: REF TAG(stroke)
(l.327,c.4) get tok: INT(THEN[190])
(l.327,c.6) get tok: STRING(()
(l.327,c.7) get tok: REF TAG(p)
(l.327,c.8) get tok: STRING(>)
(l.327,c.9) get tok: STRING(1)
(l.327,c.10) get tok: STRING(|)
(l.327,c.12) get tok: REF TAG(ss)
(l.327,c.13) get tok: STRING([)
(l.327,c.14) get tok: STRING(:)
(l.327,c.15) get tok: REF TAG(p)
(l.327,c.16) get tok: STRING(-)
(l.327,c.17) get tok: STRING(1)
(l.327,c.18) get tok: STRING(])
(l.327,c.19) get tok: STRING(|)
(l.327,c.21) get tok: STRING("")
(l.327,c.22) get tok: STRING())
(l.327,c.23) get tok: STRING(+)
(l.327,c.25) get tok: REF TAG(ss)
(l.327,c.26) get tok: STRING([)
(l.327,c.27) get tok: REF TAG(p)
(l.327,c.28) get tok: STRING(+)
(l.327,c.29) get tok: STRING(2)
(l.327,c.30) get tok: STRING(:)
(l.327,c.31) get tok: STRING(])
(l.328,c.4) get tok: INT(ELIF[9])
(l.328,c.7) get tok: REF TAG(ss)
(l.328,c.8) get tok: STRING([)
(l.328,c.9) get tok: REF TAG(p)
(l.328,c.10) get tok: STRING(+)
(l.328,c.11) get tok: STRING(2)
(l.328,c.12) get tok: STRING(])
(l.328,c.13) get tok: STRING(=)
(l.329,c.0) get tok: REF TAG(dot)
(l.329,c.4) get tok: INT(THEN[190])
(l.329,c.7) get tok: REF TAG(ss)
(l.329,c.8) get tok: STRING([)
(l.329,c.9) get tok: STRING(:)
(l.329,c.10) get tok: REF TAG(p)
(l.329,c.11) get tok: STRING(-)
(l.329,c.12) get tok: STRING(1)
(l.329,c.13) get tok: STRING(])
(l.329,c.17) get tok: REF TAG(LOP)
(l.329,c.24) get tok: REF TAG(stroke)
(l.329,c.25) get tok: STRING(+)
(l.329,c.26) get tok: STRING(()
(l.329,c.27) get tok: REF TAG(p)
(l.329,c.28) get tok: STRING(+)
(l.329,c.29) get tok: STRING(2)
(l.329,c.30) get tok: STRING(<)
(l.329,c.33) get tok: INT(UPB[150])
(l.329,c.36) get tok: REF TAG(ss)
(l.329,c.37) get tok: STRING(|)
(l.329,c.39) get tok: REF TAG(ss)
(l.329,c.40) get tok: STRING([)
(l.329,c.41) get tok: REF TAG(p)
(l.329,c.42) get tok: STRING(+)
(l.329,c.43) get tok: STRING(3)
(l.329,c.44) get tok: STRING(:)
(l.329,c.45) get tok: STRING(])
(l.329,c.46) get tok: STRING(|)
(l.329,c.48) get tok: STRING("")
(l.329,c.49) get tok: STRING())
(l.330,c.4) get tok: INT(ELSE[4])
(l.330,c.7) get tok: REF TAG(ss)
(l.330,c.8) get tok: STRING([)
(l.330,c.9) get tok: STRING(:)
(l.330,c.10) get tok: REF TAG(p)
(l.330,c.11) get tok: STRING(])
(l.330,c.12) get tok: STRING(+)
(l.330,c.20) get tok: REF TAG(flagdot)
(l.330,c.21) get tok: STRING(+)
(l.330,c.23) get tok: REF TAG(ss)
(l.330,c.24) get tok: STRING([)
(l.330,c.25) get tok: REF TAG(p)
(l.330,c.26) get tok: STRING(+)
(l.330,c.27) get tok: STRING(2)
(l.330,c.28) get tok: STRING(:)
(l.330,c.29) get tok: STRING(])
(l.331,c.2) get tok: INT(FI[107])
(l.332,c.4) get tok: INT(ELIF[9])
(l.332,c.6) get tok: STRING(()
(l.332,c.7) get tok: REF TAG(p)
(l.332,c.9) get tok: STRING(:=)
(l.332,c.12) get tok: REF TAG(ds)
(l.332,c.16) get tok: INT(FIND[131])
(l.332,c.19) get tok: REF TAG(ss)
(l.332,c.20) get tok: STRING())
(l.332,c.21) get tok: STRING(=)
(l.333,c.0) get tok: STRING(1)
(l.333,c.4) get tok: INT(THEN[190])
(l.333,c.8) get tok: REF TAG(cwd)
(l.333,c.9) get tok: STRING(+)
(l.333,c.11) get tok: REF TAG(ss)
(l.333,c.12) get tok: STRING([)
(l.333,c.13) get tok: REF TAG(p)
(l.333,c.14) get tok: STRING(+)
(l.333,c.15) get tok: STRING(1)
(l.333,c.16) get tok: STRING(:)
(l.333,c.17) get tok: STRING(])
(l.334,c.4) get tok: INT(ELIF[9])
(l.334,c.6) get tok: REF TAG(p)
(l.334,c.7) get tok: STRING(>)
(l.335,c.0) get tok: STRING(1)
(l.335,c.4) get tok: INT(THEN[190])
(l.336,c.2) get tok: INT(IF[62])
(l.336,c.5) get tok: REF TAG(ss)
(l.336,c.6) get tok: STRING([)
(l.336,c.7) get tok: REF TAG(p)
(l.336,c.8) get tok: STRING(-)
(l.336,c.9) get tok: STRING(1)
(l.336,c.10) get tok: STRING(])
(l.336,c.11) get tok: STRING(=)
(l.337,c.0) get tok: REF TAG(dot)
(l.337,c.4) get tok: INT(THEN[190])
(l.338,c.2) get tok: INT(IF[62])
(l.338,c.4) get tok: REF TAG(p)
(l.338,c.5) get tok: STRING(=)
(l.339,c.0) get tok: STRING(2)
(l.339,c.4) get tok: INT(THEN[190])
(l.339,c.9) get tok: REF TAG(cwd)
(l.339,c.12) get tok: REF TAG(LOP)
(l.339,c.19) get tok: REF TAG(stroke)
(l.339,c.20) get tok: STRING(+)
(l.339,c.22) get tok: REF TAG(ss)
(l.339,c.23) get tok: STRING([)
(l.339,c.24) get tok: STRING(3)
(l.339,c.25) get tok: STRING(:)
(l.339,c.26) get tok: STRING(])
(l.340,c.4) get tok: INT(ELIF[9])
(l.340,c.7) get tok: REF TAG(ss)
(l.340,c.8) get tok: STRING([)
(l.340,c.9) get tok: REF TAG(p)
(l.340,c.10) get tok: STRING(-)
(l.340,c.11) get tok: STRING(2)
(l.340,c.12) get tok: STRING(])
(l.340,c.13) get tok: STRING(=)
(l.340,c.20) get tok: REF TAG(stroke)
(l.341,c.4) get tok: INT(THEN[190])
(l.341,c.6) get tok: STRING(()
(l.341,c.7) get tok: REF TAG(p)
(l.341,c.8) get tok: STRING(=)
(l.341,c.9) get tok: STRING(3)
(l.341,c.10) get tok: STRING(|)
(l.341,c.12) get tok: REF TAG(ss)
(l.341,c.13) get tok: STRING([)
(l.341,c.14) get tok: STRING(4)
(l.341,c.15) get tok: STRING(:)
(l.341,c.16) get tok: STRING(])
(l.341,c.17) get tok: STRING(|)
(l.341,c.19) get tok: REF TAG(ss)
(l.341,c.20) get tok: STRING([)
(l.341,c.21) get tok: STRING(:)
(l.341,c.22) get tok: REF TAG(p)
(l.341,c.23) get tok: STRING(-)
(l.341,c.24) get tok: STRING(3)
(l.341,c.25) get tok: STRING(])
(l.341,c.29) get tok: REF TAG(LOP)
(l.341,c.36) get tok: REF TAG(stroke)
(l.341,c.37) get tok: STRING(+)
(l.341,c.39) get tok: REF TAG(ss)
(l.341,c.40) get tok: STRING([)
(l.341,c.41) get tok: REF TAG(p)
(l.341,c.42) get tok: STRING(+)
(l.341,c.43) get tok: STRING(1)
(l.341,c.44) get tok: STRING(:)
(l.341,c.45) get tok: STRING(])
(l.341,c.46) get tok: STRING())
(l.342,c.4) get tok: INT(ELSE[4])
(l.342,c.7) get tok: REF TAG(ss)
(l.342,c.8) get tok: STRING([)
(l.342,c.9) get tok: STRING(:)
(l.342,c.10) get tok: REF TAG(p)
(l.342,c.11) get tok: STRING(-)
(l.342,c.12) get tok: STRING(1)
(l.342,c.13) get tok: STRING(])
(l.342,c.14) get tok: STRING(+)
(l.342,c.15) get tok: STRING(2)
(l.342,c.16) get tok: STRING(*)
(l.342,c.24) get tok: REF TAG(flagdot)
(l.342,c.25) get tok: STRING(+)
(l.342,c.27) get tok: REF TAG(ss)
(l.342,c.28) get tok: STRING([)
(l.342,c.29) get tok: REF TAG(p)
(l.342,c.30) get tok: STRING(+)
(l.342,c.31) get tok: STRING(1)
(l.342,c.32) get tok: STRING(:)
(l.342,c.33) get tok: STRING(])
(l.343,c.2) get tok: INT(FI[107])
(l.344,c.4) get tok: INT(ELSE[4])
(l.344,c.7) get tok: REF TAG(ss)
(l.344,c.8) get tok: STRING([)
(l.344,c.9) get tok: STRING(:)
(l.344,c.10) get tok: REF TAG(p)
(l.344,c.11) get tok: STRING(-)
(l.344,c.12) get tok: STRING(1)
(l.344,c.13) get tok: STRING(])
(l.344,c.14) get tok: STRING(+)
(l.344,c.22) get tok: REF TAG(flagdot)
(l.344,c.23) get tok: STRING(+)
(l.344,c.25) get tok: REF TAG(ss)
(l.344,c.26) get tok: STRING([)
(l.344,c.27) get tok: REF TAG(p)
(l.344,c.28) get tok: STRING(+)
(l.344,c.29) get tok: STRING(1)
(l.344,c.30) get tok: STRING(:)
(l.344,c.31) get tok: STRING(])
(l.345,c.2) get tok: INT(FI[107])
(l.346,c.4) get tok: INT(ELSE[4])
(l.346,c.6) get tok: STRING(()
(l.346,c.10) get tok: REF TAG(pdot)
(l.346,c.11) get tok: STRING(=)
(l.346,c.12) get tok: STRING(1)
(l.346,c.13) get tok: STRING(|)
(l.346,c.15) get tok: STRING("")
(l.346,c.16) get tok: STRING(|)
(l.346,c.18) get tok: REF TAG(ss)
(l.346,c.19) get tok: STRING([)
(l.346,c.20) get tok: STRING(:)
(l.346,c.24) get tok: REF TAG(pdot)
(l.346,c.25) get tok: STRING(-)
(l.346,c.26) get tok: STRING(1)
(l.346,c.27) get tok: STRING(])
(l.346,c.28) get tok: STRING())
(l.346,c.29) get tok: STRING(+)
(l.346,c.37) get tok: REF TAG(flagdot)
(l.346,c.38) get tok: STRING(+)
(l.346,c.40) get tok: REF TAG(ss)
(l.346,c.41) get tok: STRING([)
(l.346,c.45) get tok: REF TAG(pdot)
(l.346,c.46) get tok: STRING(+)
(l.346,c.47) get tok: STRING(1)
(l.346,c.48) get tok: STRING(:)
(l.346,c.49) get tok: STRING(])
(l.347,c.2) get tok: INT(FI[107])
(l.348,c.4) get tok: INT(ELIF[9])
(l.348,c.6) get tok: REF TAG(p)
(l.348,c.7) get tok: STRING(=)
(l.349,c.0) get tok: STRING(1)
(l.349,c.4) get tok: INT(THEN[190])
(l.349,c.13) get tok: REF TAG(flagdot)
(l.349,c.14) get tok: STRING(+)
(l.349,c.16) get tok: REF TAG(ss)
(l.349,c.17) get tok: STRING([)
(l.349,c.18) get tok: STRING(2)
(l.349,c.19) get tok: STRING(:)
(l.349,c.20) get tok: STRING(])
(l.350,c.4) get tok: INT(ELSE[4])
(l.350,c.7) get tok: REF TAG(ss)
(l.350,c.8) get tok: STRING([)
(l.350,c.9) get tok: STRING(1)
(l.350,c.10) get tok: STRING(])
(l.350,c.11) get tok: STRING(+)
(l.351,c.0) get tok: REF TAG(flagdot)
(l.351,c.2) get tok: INT(FI[107])
(l.352,c.2) get tok: INT(OD[231])
(l.352,c.3) get tok: STRING(;)
(l.353,c.7) get tok: REF TAG(replace)
(l.353,c.8) get tok: STRING(()
(l.353,c.10) get tok: REF TAG(ss)
(l.353,c.11) get tok: STRING(,)
(l.353,c.19) get tok: REF TAG(flagdot)
(l.353,c.20) get tok: STRING(,)
(l.353,c.23) get tok: REF TAG(dot)
(l.353,c.24) get tok: STRING())
(l.354,c.2) get tok: INT(FI[107])
(l.356,c.2) get tok: CONTROL(2)
(l.363,c.2) get tok: CONTROL(d)
(l.363,c.21) get tok: REF TAG(macromodedirent)
(l.363,c.22) get tok: STRING(=)
(l.364,c.4) get tok: INT(MODE[211])
(l.364,c.11) get tok: REF TAG(DIRENT)
(l.364,c.13) get tok: STRING(=)
(l.364,c.20) get tok: INT(STRUCT[51])
(l.364,c.21) get tok: STRING(()
(l.364,c.24) get tok: INT(INT[195])
(l.364,c.28) get tok: REF TAG(ino)
(l.364,c.29) get tok: STRING(,)
(l.365,c.3) get tok: REF TAG(off)
(l.365,c.4) get tok: STRING(,)
(l.366,c.5) get tok: INT(SHORT[79])
(l.366,c.9) get tok: INT(INT[195])
(l.366,c.16) get tok: REF TAG(reclen)
(l.366,c.17) get tok: STRING(,)
(l.367,c.5) get tok: INT(SHORT[79])
(l.367,c.11) get tok: INT(SHORT[79])
(l.367,c.16) get tok: INT(BITS[164])
(l.367,c.21) get tok: REF TAG(type)
(l.367,c.22) get tok: STRING(,)
(l.368,c.6) get tok: INT(STRING[156])
(l.368,c.11) get tok: REF TAG(name)
(l.368,c.12) get tok: STRING())
(l.370,c.2) get tok: CONTROL( )
(l.379,c.2) get tok: CONTROL(d)
(l.379,c.18) get tok: REF TAG(macroscandir)
(l.379,c.19) get tok: STRING(=)
(l.380,c.17) get tok: REF TAG(macromodedirent)
(l.380,c.18) get tok: STRING(;)
(l.381,c.4) get tok: INT(PROC[69])
(l.381,c.14) get tok: REF TAG(scandir)
(l.381,c.15) get tok: STRING(=)
(l.381,c.17) get tok: STRING(()
(l.381,c.23) get tok: INT(STRING[156])
(l.381,c.27) get tok: REF TAG(dir)
(l.381,c.28) get tok: STRING(,)
(l.382,c.4) get tok: INT(PROC[69])
(l.382,c.5) get tok: STRING(()
(l.382,c.8) get tok: INT(REF[53])
(l.382,c.15) get tok: REF TAG(DIRENT)
(l.382,c.16) get tok: STRING(,)
(l.382,c.17) get tok: STRING([)
(l.382,c.18) get tok: STRING(])
(l.382,c.25) get tok: REF TAG(SIMPLIN)
(l.382,c.26) get tok: STRING())
(l.382,c.30) get tok: INT(BOOL[184])
(l.382,c.33) get tok: REF TAG(do)
(l.382,c.34) get tok: STRING(,)
(l.383,c.1) get tok: STRING([)
(l.383,c.2) get tok: STRING(])
(l.383,c.9) get tok: REF TAG(SIMPLIN)
(l.383,c.12) get tok: REF TAG(si)
(l.383,c.13) get tok: STRING())
(l.383,c.16) get tok: INT(INT[195])
(l.384,c.0) get tok: STRING(:)
(l.384,c.2) get tok: INT(IF[62])
(l.384,c.5) get tok: CONTROL(<)
(l.385,c.4) get tok: REF TAG(CPTR)
(l.385,c.16) get tok: REF TAG(dirstream)
(l.385,c.17) get tok: STRING(=)
(l.385,c.31) get tok: REF TAG(posixopendir)
(l.385,c.32) get tok: STRING(()
(l.385,c.33) get tok: REF TAG(Z)
(l.385,c.41) get tok: REF TAG(MAKERVC)
(l.385,c.45) get tok: REF TAG(dir)
(l.385,c.46) get tok: STRING())
(l.385,c.47) get tok: STRING(;)
(l.386,c.11) get tok: REF TAG(dirstream)
(l.386,c.13) get tok: INT(IS[82])
(l.386,c.17) get tok: INT(NIL[180])
(l.387,c.4) get tok: INT(THEN[190])
(l.388,c.0) get tok: REF TAG(errno)
(l.388,c.4) get tok: INT(ELSE[4])
(l.389,c.2) get tok: CONTROL(<)
(l.390,c.2) get tok: CONTROL(<)
(l.391,c.14) get tok: REF TAG(posixclosedir)
(l.391,c.15) get tok: STRING(()
(l.391,c.25) get tok: REF TAG(dirstream)
(l.391,c.26) get tok: STRING())
(l.391,c.27) get tok: STRING(;)
(l.393,c.0) get tok: STRING(0)
(l.393,c.2) get tok: INT(FI[107])
(l.395,c.2) get tok: CONTROL( )
(l.403,c.2) get tok: CONTROL(<)
(l.404,c.4) get tok: INT(PROC[69])
(l.404,c.16) get tok: REF TAG(getdirent)
(l.404,c.17) get tok: STRING(=)
(l.404,c.19) get tok: STRING(()
(l.404,c.23) get tok: REF TAG(CPTR)
(l.404,c.25) get tok: REF TAG(d)
(l.404,c.26) get tok: STRING())
(l.404,c.29) get tok: INT(REF[53])
(l.404,c.36) get tok: REF TAG(DIRENT)
(l.405,c.0) get tok: STRING(:)
(l.405,c.2) get tok: INT(IF[62])
(l.405,c.6) get tok: INT(INT[195])
(l.405,c.17) get tok: REF TAG(direntsz)
(l.405,c.18) get tok: STRING(=)
(l.405,c.22) get tok: STRING(267)
(l.405,c.23) get tok: STRING(;)
(l.406,c.4) get tok: REF TAG(CSTR)
(l.406,c.11) get tok: REF TAG(dirent)
(l.406,c.12) get tok: STRING(=)
(l.406,c.25) get tok: REF TAG(posixreaddir)
(l.406,c.26) get tok: STRING(()
(l.406,c.27) get tok: REF TAG(d)
(l.406,c.28) get tok: STRING())
(l.406,c.29) get tok: STRING(;)
(l.407,c.7) get tok: REF TAG(dirent)
(l.407,c.9) get tok: INT(IS[82])
(l.407,c.13) get tok: INT(NIL[180])
(l.408,c.4) get tok: INT(THEN[190])
(l.408,c.8) get tok: INT(NIL[180])
(l.409,c.4) get tok: INT(ELSE[4])
(l.410,c.4) get tok: INT(HEAP[48])
(l.410,c.11) get tok: REF TAG(DIRENT)
(l.410,c.14) get tok: REF TAG(de)
(l.410,c.15) get tok: STRING(;)
(l.411,c.4) get tok: INT(FILE[59])
(l.411,c.7) get tok: REF TAG(mf)
(l.411,c.8) get tok: STRING(;)
(l.412,c.4) get tok: REF TAG(open)
(l.412,c.5) get tok: STRING(()
(l.412,c.7) get tok: REF TAG(mf)
(l.412,c.8) get tok: STRING(,)
(l.412,c.14) get tok: REF TAG(dirent)
(l.412,c.15) get tok: STRING([)
(l.412,c.16) get tok: STRING(:)
(l.412,c.25) get tok: REF TAG(direntsz)
(l.412,c.26) get tok: STRING(])
(l.412,c.27) get tok: STRING(,)
(l.412,c.38) get tok: REF TAG(memchannel)
(l.412,c.39) get tok: STRING())
(l.412,c.40) get tok: STRING(;)
(l.413,c.9) get tok: REF TAG(maketerm)
(l.413,c.10) get tok: STRING(()
(l.413,c.12) get tok: REF TAG(mf)
(l.413,c.13) get tok: STRING(,)
(l.413,c.19) get tok: REF TAG(nulch)
(l.413,c.20) get tok: STRING())
(l.413,c.21) get tok: STRING(;)
(l.414,c.7) get tok: REF TAG(getbin)
(l.414,c.8) get tok: STRING(()
(l.414,c.10) get tok: REF TAG(mf)
(l.414,c.11) get tok: STRING(,)
(l.414,c.13) get tok: REF TAG(de)
(l.414,c.14) get tok: STRING())
(l.414,c.15) get tok: STRING(;)
(l.415,c.5) get tok: REF TAG(close)
(l.415,c.6) get tok: STRING(()
(l.415,c.8) get tok: REF TAG(mf)
(l.415,c.9) get tok: STRING())
(l.415,c.10) get tok: STRING(;)
(l.417,c.0) get tok: REF TAG(de)
(l.417,c.2) get tok: INT(FI[107])
(l.417,c.3) get tok: STRING(;)
(l.419,c.2) get tok: CONTROL( )
(l.423,c.2) get tok: CONTROL(<)
(l.424,c.5) get tok: INT(WHILE[99])
(l.425,c.3) get tok: INT(REF[53])
(l.425,c.10) get tok: REF TAG(DIRENT)
(l.425,c.14) get tok: REF TAG(de)
(l.425,c.15) get tok: STRING(=)
(l.425,c.26) get tok: REF TAG(getdirent)
(l.425,c.27) get tok: STRING(()
(l.425,c.37) get tok: REF TAG(dirstream)
(l.425,c.38) get tok: STRING())
(l.425,c.39) get tok: STRING(;)
(l.426,c.2) get tok: INT(IF[62])
(l.426,c.6) get tok: REF TAG(de)
(l.426,c.8) get tok: INT(IS[82])
(l.426,c.12) get tok: INT(NIL[180])
(l.426,c.17) get tok: INT(THEN[190])
(l.426,c.23) get tok: INT(FALSE[123])
(l.426,c.28) get tok: INT(ELSE[4])
(l.426,c.31) get tok: REF TAG(do)
(l.426,c.32) get tok: STRING(()
(l.426,c.34) get tok: REF TAG(de)
(l.426,c.35) get tok: STRING(,)
(l.426,c.37) get tok: REF TAG(si)
(l.426,c.38) get tok: STRING())
(l.426,c.41) get tok: INT(FI[107])
(l.427,c.2) get tok: INT(DO[244])
(l.427,c.7) get tok: INT(SKIP[44])
(l.427,c.10) get tok: INT(OD[231])
(l.427,c.11) get tok: STRING(;)
(l.429,c.2) get tok: CONTROL( )
(l.432,c.2) get tok: CONTROL(<)
(l.433,c.4) get tok: INT(PROC[69])
(l.433,c.5) get tok: STRING(()
(l.433,c.11) get tok: REF TAG(VECTOR)
(l.433,c.12) get tok: STRING([)
(l.433,c.13) get tok: STRING(])
(l.433,c.17) get tok: INT(CHAR[113])
(l.433,c.18) get tok: STRING())
(l.433,c.22) get tok: REF TAG(CPTR)
(l.433,c.36) get tok: REF TAG(posixopendir)
(l.433,c.38) get tok: CONTROL(/)
(l.434,c.1) get tok: STRING(=)
(l.434,c.7) get tok: INT(ALIEN[245])
(l.434,c.17) get tok: STRING("OPENDIR")
(l.434,c.19) get tok: CONTROL(/)
(l.435,c.21) get tok: STRING("#include <dirent.h>")
(l.435,c.23) get tok: CONTROL(/)
(l.436,c.68) get tok: STRING("#define OPENDIR(path) A_dirptr_DIRPTR(opendir(A_VC_charptr(path)))")
(l.436,c.69) get tok: STRING(;)
(l.438,c.4) get tok: INT(PROC[69])
(l.438,c.5) get tok: STRING(()
(l.438,c.9) get tok: REF TAG(CPTR)
(l.438,c.10) get tok: STRING())
(l.438,c.13) get tok: INT(INT[195])
(l.438,c.28) get tok: REF TAG(posixclosedir)
(l.438,c.30) get tok: CONTROL(/)
(l.439,c.1) get tok: STRING(=)
(l.439,c.7) get tok: INT(ALIEN[245])
(l.439,c.18) get tok: STRING("CLOSEDIR")
(l.439,c.20) get tok: CONTROL(/)
(l.440,c.65) get tok: STRING("#define CLOSEDIR(dir) A_int_INT(closedir(A_DIRPTR_dirptr(dir)))")
(l.440,c.66) get tok: STRING(;)
(l.442,c.4) get tok: INT(PROC[69])
(l.442,c.5) get tok: STRING(()
(l.442,c.9) get tok: REF TAG(CPTR)
(l.442,c.10) get tok: STRING())
(l.442,c.14) get tok: REF TAG(CSTR)
(l.442,c.29) get tok: REF TAG(posixreaddir)
(l.442,c.30) get tok: STRING(=)
(l.442,c.36) get tok: INT(ALIEN[245])
(l.443,c.0) get tok: STRING("READDIR")
(l.443,c.60) get tok: STRING("#define READDIR(dir) (void *)readdir(A_DIRPTR_dirptr(dir))")
(l.443,c.61) get tok: STRING(;)
(l.445,c.2) get tok: CONTROL(2)
(l.449,c.2) get tok: CONTROL(d)
(l.449,c.21) get tok: REF TAG(macroposixsleep)
(l.449,c.22) get tok: STRING(=)
(l.450,c.4) get tok: INT(PROC[69])
(l.450,c.5) get tok: STRING(()
(l.450,c.8) get tok: INT(INT[195])
(l.450,c.9) get tok: STRING())
(l.450,c.12) get tok: INT(INT[195])
(l.451,c.0) get tok: REF TAG(posixsleep)
(l.451,c.1) get tok: STRING(=)
(l.451,c.7) get tok: INT(ALIEN[245])
(l.452,c.0) get tok: STRING("SLEEP")
(l.454,c.0) get tok: STRING("#define SLEEP(secs) A_int_INT(sleep(A_INT_int(secs)))")
(l.454,c.2) get tok: CONTROL( )
(l.456,c.2) get tok: CONTROL(d)
(l.456,c.21) get tok: REF TAG(macroposixalarm)
(l.456,c.22) get tok: STRING(=)
(l.457,c.4) get tok: INT(PROC[69])
(l.457,c.5) get tok: STRING(()
(l.457,c.8) get tok: INT(INT[195])
(l.457,c.9) get tok: STRING())
(l.457,c.12) get tok: INT(INT[195])
(l.458,c.0) get tok: REF TAG(posixalarm)
(l.458,c.1) get tok: STRING(=)
(l.458,c.7) get tok: INT(ALIEN[245])
(l.459,c.0) get tok: STRING("ALARM")
(l.461,c.0) get tok: STRING("#define ALARM(secs) A_int_INT(alarm(A_INT_int(secs)))")
(l.461,c.2) get tok: CONTROL( )
(l.465,c.2) get tok: CONTROL(d)
(l.465,c.21) get tok: REF TAG(macroposixpause)
(l.465,c.22) get tok: STRING(=)
(l.466,c.4) get tok: INT(PROC[69])
(l.467,c.0) get tok: REF TAG(posixpause)
(l.467,c.1) get tok: STRING(=)
(l.467,c.5) get tok: INT(INT[195])
(l.467,c.6) get tok: STRING(:)
(l.467,c.10) get tok: INT(INT[195])
(l.467,c.15) get tok: INT(CODE[109])
(l.469,c.0) get tok: STRING("RESULT=pause();")
(l.469,c.2) get tok: CONTROL( )
(l.474,c.2) get tok: CONTROL(d)
(l.474,c.20) get tok: REF TAG(macroposixwait)
(l.474,c.21) get tok: STRING(=)
(l.475,c.4) get tok: INT(PROC[69])
(l.475,c.5) get tok: STRING(()
(l.475,c.8) get tok: INT(REF[53])
(l.475,c.12) get tok: INT(INT[195])
(l.475,c.13) get tok: STRING())
(l.475,c.16) get tok: INT(INT[195])
(l.475,c.28) get tok: REF TAG(posixwait)
(l.475,c.29) get tok: STRING(=)
(l.475,c.35) get tok: INT(ALIEN[245])
(l.476,c.0) get tok: STRING("WAIT")
(l.477,c.0) get tok: STRING("#include <sys/wait.h>")
(l.479,c.0) get tok: STRING("#define WAIT(status) A_int_INT(wait((int *)status))")
(l.479,c.2) get tok: CONTROL( )
(l.503,c.2) get tok: CONTROL(m)
(l.503,c.14) get tok: REF TAG(wnohang)
(l.503,c.15) get tok: STRING(=)
(l.503,c.21) get tok: STRING(8r1)
(l.504,c.2) get tok: CONTROL(m)
(l.504,c.14) get tok: REF TAG(wuntraced)
(l.504,c.15) get tok: STRING(=)
(l.504,c.21) get tok: STRING(8r2)
(l.506,c.2) get tok: CONTROL(d)
(l.506,c.24) get tok: REF TAG(macroposixwaitpid)
(l.506,c.25) get tok: STRING(=)
(l.507,c.4) get tok: INT(PROC[69])
(l.507,c.5) get tok: STRING(()
(l.507,c.8) get tok: INT(INT[195])
(l.507,c.9) get tok: STRING(,)
(l.507,c.12) get tok: INT(REF[53])
(l.507,c.16) get tok: INT(INT[195])
(l.507,c.17) get tok: STRING(,)
(l.507,c.20) get tok: INT(INT[195])
(l.507,c.21) get tok: STRING())
(l.507,c.24) get tok: INT(INT[195])
(l.507,c.40) get tok: REF TAG(posixwaitpid)
(l.507,c.41) get tok: STRING(=)
(l.507,c.47) get tok: INT(ALIEN[245])
(l.508,c.0) get tok: STRING("WAITPID")
(l.509,c.0) get tok: STRING("#define WAITPID(pid,status,options) \")
(l.511,c.0) get tok: STRING("  A_int_INT(waitpid(pid,(int *)status,options))")
(l.511,c.2) get tok: CONTROL( )
(l.514,c.2) get tok: CONTROL(d)
(l.514,c.21) get tok: REF TAG(macrowifexited)
(l.514,c.22) get tok: STRING(=)
(l.515,c.4) get tok: INT(PROC[69])
(l.515,c.19) get tok: REF TAG(wifexited)
(l.515,c.20) get tok: STRING(=)
(l.515,c.22) get tok: STRING(()
(l.515,c.25) get tok: INT(INT[195])
(l.515,c.32) get tok: REF TAG(status)
(l.515,c.33) get tok: STRING())
(l.515,c.37) get tok: INT(BOOL[184])
(l.516,c.0) get tok: STRING(:)
(l.516,c.1) get tok: STRING(()
(l.516,c.4) get tok: INT(BIN[275])
(l.516,c.12) get tok: REF TAG(status)
(l.516,c.13) get tok: STRING(&)
(l.516,c.19) get tok: STRING(16r7f)
(l.516,c.20) get tok: STRING())
(l.516,c.22) get tok: STRING(=)
(l.517,c.0) get tok: STRING(16r0)
(l.517,c.2) get tok: CONTROL(d)
(l.517,c.23) get tok: REF TAG(macrowexitstatus)
(l.517,c.24) get tok: STRING(=)
(l.518,c.4) get tok: INT(PROC[69])
(l.518,c.19) get tok: REF TAG(wexitstatus)
(l.518,c.20) get tok: STRING(=)
(l.518,c.22) get tok: STRING(()
(l.518,c.25) get tok: INT(INT[195])
(l.518,c.32) get tok: REF TAG(status)
(l.518,c.33) get tok: STRING())
(l.518,c.36) get tok: INT(INT[195])
(l.519,c.0) get tok: STRING(:)
(l.519,c.3) get tok: INT(ABS[226])
(l.519,c.4) get tok: STRING(()
(l.519,c.5) get tok: STRING(()
(l.519,c.8) get tok: INT(BIN[275])
(l.519,c.16) get tok: REF TAG(status)
(l.519,c.17) get tok: STRING(&)
(l.519,c.25) get tok: STRING(16rff00)
(l.519,c.26) get tok: STRING())
(l.519,c.30) get tok: REF TAG(SHR)
(l.519,c.32) get tok: STRING(8)
(l.519,c.33) get tok: STRING())
(l.520,c.2) get tok: CONTROL(d)
(l.520,c.24) get tok: REF TAG(macrowifsignalled)
(l.520,c.25) get tok: STRING(=)
(l.521,c.4) get tok: INT(PROC[69])
(l.521,c.19) get tok: REF TAG(wifsignalled)
(l.521,c.20) get tok: STRING(=)
(l.521,c.22) get tok: STRING(()
(l.521,c.25) get tok: INT(INT[195])
(l.521,c.32) get tok: REF TAG(status)
(l.521,c.33) get tok: STRING())
(l.521,c.37) get tok: INT(BOOL[184])
(l.522,c.0) get tok: STRING(:)
(l.522,c.1) get tok: STRING(()
(l.522,c.2) get tok: STRING(()
(l.522,c.5) get tok: INT(BIN[275])
(l.522,c.13) get tok: REF TAG(status)
(l.522,c.14) get tok: STRING(&)
(l.522,c.20) get tok: STRING(16rff)
(l.522,c.21) get tok: STRING())
(l.522,c.24) get tok: STRING(/=)
(l.522,c.30) get tok: STRING(16r7f)
(l.522,c.31) get tok: STRING())
(l.524,c.0) get tok: STRING(&)
(l.524,c.1) get tok: STRING(()
(l.524,c.2) get tok: STRING(()
(l.524,c.5) get tok: INT(BIN[275])
(l.524,c.13) get tok: REF TAG(status)
(l.524,c.14) get tok: STRING(&)
(l.524,c.20) get tok: STRING(16r7f)
(l.524,c.21) get tok: STRING())
(l.524,c.24) get tok: STRING(/=)
(l.524,c.29) get tok: STRING(16r0)
(l.524,c.30) get tok: STRING())
(l.525,c.2) get tok: CONTROL(d)
(l.525,c.20) get tok: REF TAG(macrowtermsig)
(l.525,c.21) get tok: STRING(=)
(l.526,c.4) get tok: INT(PROC[69])
(l.526,c.19) get tok: REF TAG(wtermsig)
(l.526,c.20) get tok: STRING(=)
(l.526,c.22) get tok: STRING(()
(l.526,c.25) get tok: INT(INT[195])
(l.526,c.32) get tok: REF TAG(status)
(l.526,c.33) get tok: STRING())
(l.526,c.36) get tok: INT(INT[195])
(l.527,c.0) get tok: STRING(:)
(l.527,c.3) get tok: INT(ABS[226])
(l.527,c.4) get tok: STRING(()
(l.527,c.7) get tok: INT(BIN[275])
(l.527,c.15) get tok: REF TAG(status)
(l.527,c.16) get tok: STRING(&)
(l.527,c.22) get tok: STRING(16r7f)
(l.527,c.23) get tok: STRING())
(l.528,c.2) get tok: CONTROL(d)
(l.528,c.22) get tok: REF TAG(macrowifstopped)
(l.528,c.23) get tok: STRING(=)
(l.529,c.4) get tok: INT(PROC[69])
(l.529,c.19) get tok: REF TAG(wifstopped)
(l.529,c.20) get tok: STRING(=)
(l.529,c.22) get tok: STRING(()
(l.529,c.25) get tok: INT(INT[195])
(l.529,c.32) get tok: REF TAG(status)
(l.529,c.33) get tok: STRING())
(l.529,c.37) get tok: INT(BOOL[184])
(l.530,c.0) get tok: STRING(:)
(l.530,c.1) get tok: STRING(()
(l.530,c.4) get tok: INT(BIN[275])
(l.530,c.12) get tok: REF TAG(status)
(l.530,c.13) get tok: STRING(&)
(l.530,c.19) get tok: STRING(16rff)
(l.530,c.20) get tok: STRING())
(l.530,c.22) get tok: STRING(=)
(l.531,c.0) get tok: STRING(16r7f)
(l.531,c.2) get tok: CONTROL(d)
(l.531,c.20) get tok: REF TAG(macrowstopsig)
(l.531,c.21) get tok: STRING(=)
(l.532,c.4) get tok: INT(PROC[69])
(l.532,c.5) get tok: STRING(()
(l.532,c.8) get tok: INT(INT[195])
(l.532,c.9) get tok: STRING())
(l.532,c.12) get tok: INT(INT[195])
(l.532,c.24) get tok: REF TAG(wstopsig)
(l.532,c.25) get tok: STRING(=)
(l.534,c.0) get tok: REF TAG(wexitstatus)
(l.534,c.2) get tok: CONTROL( )
(l.538,c.2) get tok: CONTROL(d)
(l.538,c.19) get tok: REF TAG(macroposixdup)
(l.538,c.20) get tok: STRING(=)
(l.539,c.4) get tok: INT(PROC[69])
(l.539,c.5) get tok: STRING(()
(l.539,c.8) get tok: INT(INT[195])
(l.539,c.9) get tok: STRING())
(l.539,c.12) get tok: INT(INT[195])
(l.540,c.0) get tok: REF TAG(posixdup)
(l.540,c.1) get tok: STRING(=)
(l.540,c.7) get tok: INT(ALIEN[245])
(l.541,c.0) get tok: STRING("DUP")
(l.542,c.0) get tok: STRING("#include <unistd.h>")
(l.544,c.0) get tok: STRING("#define DUP(fd) A_int_INT(dup(A_INT_int(fd)))")
(l.544,c.2) get tok: CONTROL(d)
(l.544,c.20) get tok: REF TAG(macroposixdup2)
(l.544,c.21) get tok: STRING(=)
(l.545,c.4) get tok: INT(PROC[69])
(l.545,c.5) get tok: STRING(()
(l.545,c.8) get tok: INT(INT[195])
(l.545,c.9) get tok: STRING(,)
(l.545,c.12) get tok: INT(INT[195])
(l.545,c.13) get tok: STRING())
(l.545,c.16) get tok: INT(INT[195])
(l.546,c.0) get tok: REF TAG(posixdup2)
(l.546,c.1) get tok: STRING(=)
(l.546,c.7) get tok: INT(ALIEN[245])
(l.547,c.0) get tok: STRING("DUP2")
(l.548,c.0) get tok: STRING("#define DUP2(ofd,nfd) \")
(l.550,c.0) get tok: STRING("   A_int_INT(dup2(A_INT_int(ofd),A_INT_int(nfd)))")
(l.550,c.2) get tok: CONTROL( )
(l.553,c.2) get tok: CONTROL(d)
(l.553,c.20) get tok: REF TAG(macroposixfork)
(l.553,c.21) get tok: STRING(=)
(l.554,c.4) get tok: INT(PROC[69])
(l.555,c.0) get tok: REF TAG(posixfork)
(l.555,c.1) get tok: STRING(=)
(l.555,c.5) get tok: INT(INT[195])
(l.555,c.6) get tok: STRING(:)
(l.555,c.10) get tok: INT(INT[195])
(l.555,c.15) get tok: INT(CODE[109])
(l.557,c.0) get tok: STRING("RESULT=fork();")
(l.557,c.2) get tok: CONTROL( )
(l.561,c.2) get tok: CONTROL(d)
(l.561,c.19) get tok: REF TAG(macromodepipe)
(l.561,c.20) get tok: STRING(=)
(l.562,c.4) get tok: INT(MODE[211])
(l.562,c.9) get tok: REF TAG(PIPE)
(l.562,c.10) get tok: STRING(=)
(l.562,c.16) get tok: INT(STRUCT[51])
(l.562,c.17) get tok: STRING(()
(l.562,c.20) get tok: INT(REF[53])
(l.562,c.25) get tok: INT(FILE[59])
(l.562,c.27) get tok: REF TAG(r)
(l.562,c.28) get tok: STRING(,)
(l.562,c.29) get tok: REF TAG(w)
(l.562,c.30) get tok: STRING(,)
(l.562,c.33) get tok: INT(INT[195])
(l.562,c.37) get tok: REF TAG(pid)
(l.562,c.38) get tok: STRING())
(l.564,c.2) get tok: CONTROL( )
(l.567,c.2) get tok: CONTROL(d)
(l.567,c.21) get tok: REF TAG(macrocreatepipe)
(l.567,c.22) get tok: STRING(=)
(l.568,c.15) get tok: REF TAG(macromodepipe)
(l.568,c.16) get tok: STRING(;)
(l.569,c.4) get tok: INT(PROC[69])
(l.569,c.17) get tok: REF TAG(createpipe)
(l.569,c.18) get tok: STRING(=)
(l.569,c.23) get tok: REF TAG(PIPE)
(l.570,c.0) get tok: STRING(:)
(l.570,c.2) get tok: INT(IF[62])
(l.570,c.7) get tok: INT(PROC[69])
(l.570,c.8) get tok: STRING(()
(l.570,c.11) get tok: INT(REF[53])
(l.570,c.18) get tok: INT(STRUCT[51])
(l.570,c.19) get tok: STRING(()
(l.570,c.22) get tok: INT(INT[195])
(l.570,c.24) get tok: REF TAG(r)
(l.570,c.25) get tok: STRING(,)
(l.570,c.26) get tok: REF TAG(w)
(l.570,c.27) get tok: STRING())
(l.570,c.28) get tok: STRING())
(l.570,c.31) get tok: INT(INT[195])
(l.570,c.43) get tok: REF TAG(posixpipe)
(l.570,c.44) get tok: STRING(=)
(l.570,c.50) get tok: INT(ALIEN[245])
(l.571,c.0) get tok: STRING("PIPE")
(l.571,c.45) get tok: STRING("#define PIPE(fd) A_int_INT(pipe((int *)fd))")
(l.571,c.46) get tok: STRING(;)
(l.572,c.6) get tok: INT(STRUCT[51])
(l.572,c.7) get tok: STRING(()
(l.572,c.10) get tok: INT(INT[195])
(l.572,c.12) get tok: REF TAG(r)
(l.572,c.13) get tok: STRING(,)
(l.572,c.14) get tok: REF TAG(w)
(l.572,c.15) get tok: STRING())
(l.572,c.18) get tok: REF TAG(fd)
(l.572,c.19) get tok: STRING(;)
(l.573,c.3) get tok: INT(INT[195])
(l.573,c.7) get tok: REF TAG(res)
(l.573,c.8) get tok: STRING(=)
(l.573,c.18) get tok: REF TAG(posixpipe)
(l.573,c.19) get tok: STRING(()
(l.573,c.21) get tok: REF TAG(fd)
(l.573,c.22) get tok: STRING())
(l.573,c.23) get tok: STRING(;)
(l.573,c.28) get tok: REF TAG(res)
(l.573,c.29) get tok: STRING(=)
(l.573,c.30) get tok: STRING(-)
(l.574,c.0) get tok: STRING(1)
(l.574,c.4) get tok: INT(THEN[190])
(l.574,c.6) get tok: STRING(()
(l.574,c.9) get tok: INT(NIL[180])
(l.574,c.10) get tok: STRING(,)
(l.574,c.13) get tok: INT(NIL[180])
(l.574,c.14) get tok: STRING(,)
(l.574,c.17) get tok: REF TAG(res)
(l.574,c.18) get tok: STRING())
(l.575,c.4) get tok: INT(ELSE[4])
(l.576,c.4) get tok: REF TAG(PIPE)
(l.576,c.9) get tok: REF TAG(pipe)
(l.577,c.0) get tok: STRING(:=)
(l.577,c.1) get tok: STRING(()
(l.577,c.5) get tok: INT(HEAP[48])
(l.577,c.10) get tok: INT(FILE[59])
(l.577,c.12) get tok: STRING(:=)
(l.577,c.13) get tok: STRING(()
(l.577,c.14) get tok: STRING(()
(l.577,c.21) get tok: REF TAG(MAKERVC)
(l.577,c.50) get tok: STRING("<read unbuffered internal>")
(l.577,c.51) get tok: STRING(,)
(l.578,c.7) get tok: REF TAG(MAKERVC)
(l.578,c.10) get tok: STRING("")
(l.578,c.11) get tok: STRING(,)
(l.578,c.16) get tok: REF TAG(type)
(l.578,c.18) get tok: INT(OF[97])
(l.578,c.24) get tok: REF TAG(book)
(l.578,c.26) get tok: INT(OF[97])
(l.578,c.35) get tok: REF TAG(standin)
(l.578,c.36) get tok: STRING())
(l.578,c.37) get tok: STRING(,)
(l.579,c.2) get tok: REF TAG(r)
(l.579,c.4) get tok: INT(OF[97])
(l.579,c.7) get tok: REF TAG(fd)
(l.579,c.8) get tok: STRING(,)
(l.580,c.4) get tok: REF TAG(sys)
(l.580,c.6) get tok: INT(OF[97])
(l.580,c.16) get tok: REF TAG(standerr)
(l.580,c.17) get tok: STRING(,)
(l.581,c.11) get tok: REF TAG(defaultio)
(l.581,c.13) get tok: INT(OF[97])
(l.581,c.30) get tok: REF TAG(standinchannel)
(l.581,c.31) get tok: STRING(,)
(l.582,c.1) get tok: STRING(()
(l.582,c.5) get tok: INT(TRUE[64])
(l.582,c.6) get tok: STRING(,)
(l.582,c.11) get tok: INT(FALSE[123])
(l.582,c.12) get tok: STRING(,)
(l.582,c.16) get tok: INT(TRUE[64])
(l.582,c.17) get tok: STRING(,)
(l.582,c.22) get tok: INT(FALSE[123])
(l.582,c.23) get tok: STRING(,)
(l.582,c.27) get tok: INT(TRUE[64])
(l.582,c.28) get tok: STRING(,)
(l.582,c.29) get tok: STRING(-)
(l.582,c.30) get tok: STRING(1)
(l.582,c.31) get tok: STRING(,)
(l.582,c.32) get tok: STRING(0)
(l.582,c.33) get tok: STRING(,)
(l.583,c.1) get tok: STRING(()
(l.583,c.5) get tok: INT(HEAP[48])
(l.583,c.12) get tok: REF TAG(VECTOR)
(l.583,c.13) get tok: STRING([)
(l.583,c.14) get tok: STRING(4)
(l.583,c.15) get tok: STRING(])
(l.583,c.19) get tok: INT(CHAR[113])
(l.583,c.20) get tok: STRING(,)
(l.583,c.21) get tok: STRING(4)
(l.583,c.22) get tok: STRING(,)
(l.583,c.23) get tok: STRING(0)
(l.583,c.24) get tok: STRING(,)
(l.583,c.25) get tok: STRING(0)
(l.583,c.26) get tok: STRING(,)
(l.583,c.31) get tok: INT(FALSE[123])
(l.583,c.32) get tok: STRING(,)
(l.583,c.36) get tok: INT(TRUE[64])
(l.583,c.37) get tok: STRING())
(l.583,c.38) get tok: STRING(,)
(l.583,c.39) get tok: STRING(0)
(l.583,c.40) get tok: STRING())
(l.583,c.41) get tok: STRING())
(l.583,c.42) get tok: STRING(,)
(l.584,c.4) get tok: INT(HEAP[48])
(l.584,c.9) get tok: INT(FILE[59])
(l.584,c.11) get tok: STRING(:=)
(l.584,c.12) get tok: STRING(()
(l.584,c.13) get tok: STRING(()
(l.584,c.20) get tok: REF TAG(MAKERVC)
(l.584,c.50) get tok: STRING("<write unbuffered internal>")
(l.584,c.51) get tok: STRING(,)
(l.585,c.7) get tok: REF TAG(MAKERVC)
(l.585,c.10) get tok: STRING("")
(l.585,c.11) get tok: STRING(,)
(l.585,c.16) get tok: REF TAG(type)
(l.585,c.18) get tok: INT(OF[97])
(l.585,c.24) get tok: REF TAG(book)
(l.585,c.26) get tok: INT(OF[97])
(l.585,c.36) get tok: REF TAG(standout)
(l.585,c.37) get tok: STRING())
(l.585,c.38) get tok: STRING(,)
(l.586,c.2) get tok: REF TAG(w)
(l.586,c.4) get tok: INT(OF[97])
(l.586,c.7) get tok: REF TAG(fd)
(l.586,c.8) get tok: STRING(,)
(l.587,c.4) get tok: REF TAG(sys)
(l.587,c.6) get tok: INT(OF[97])
(l.587,c.16) get tok: REF TAG(standerr)
(l.587,c.17) get tok: STRING(,)
(l.588,c.11) get tok: REF TAG(defaultio)
(l.588,c.13) get tok: INT(OF[97])
(l.588,c.31) get tok: REF TAG(standoutchannel)
(l.588,c.32) get tok: STRING(,)
(l.589,c.1) get tok: STRING(()
(l.589,c.5) get tok: INT(TRUE[64])
(l.589,c.6) get tok: STRING(,)
(l.589,c.11) get tok: INT(FALSE[123])
(l.589,c.12) get tok: STRING(,)
(l.589,c.16) get tok: INT(TRUE[64])
(l.589,c.17) get tok: STRING(,)
(l.589,c.22) get tok: INT(FALSE[123])
(l.589,c.23) get tok: STRING(,)
(l.589,c.27) get tok: INT(TRUE[64])
(l.589,c.28) get tok: STRING(,)
(l.589,c.29) get tok: STRING(-)
(l.589,c.30) get tok: STRING(1)
(l.589,c.31) get tok: STRING(,)
(l.589,c.32) get tok: STRING(0)
(l.589,c.33) get tok: STRING(,)
(l.590,c.1) get tok: STRING(()
(l.590,c.5) get tok: INT(HEAP[48])
(l.590,c.12) get tok: REF TAG(VECTOR)
(l.590,c.13) get tok: STRING([)
(l.590,c.14) get tok: STRING(4)
(l.590,c.15) get tok: STRING(])
(l.590,c.19) get tok: INT(CHAR[113])
(l.590,c.20) get tok: STRING(,)
(l.590,c.21) get tok: STRING(4)
(l.590,c.22) get tok: STRING(,)
(l.590,c.23) get tok: STRING(0)
(l.590,c.24) get tok: STRING(,)
(l.590,c.25) get tok: STRING(0)
(l.590,c.26) get tok: STRING(,)
(l.590,c.31) get tok: INT(FALSE[123])
(l.590,c.32) get tok: STRING(,)
(l.590,c.36) get tok: INT(TRUE[64])
(l.590,c.37) get tok: STRING())
(l.590,c.38) get tok: STRING(,)
(l.590,c.39) get tok: STRING(0)
(l.590,c.40) get tok: STRING())
(l.590,c.41) get tok: STRING())
(l.590,c.42) get tok: STRING(,)
(l.591,c.3) get tok: REF TAG(res)
(l.591,c.4) get tok: STRING())
(l.591,c.5) get tok: STRING(;)
(l.594,c.0) get tok: REF TAG(pipe)
(l.594,c.2) get tok: INT(FI[107])
(l.596,c.2) get tok: CONTROL( )
(l.604,c.2) get tok: CONTROL(d)
(l.604,c.16) get tok: REF TAG(macroexecvp)
(l.604,c.17) get tok: STRING(=)
(l.605,c.4) get tok: INT(PROC[69])
(l.605,c.12) get tok: REF TAG(execvp)
(l.605,c.13) get tok: STRING(=)
(l.605,c.15) get tok: STRING(()
(l.605,c.16) get tok: STRING([)
(l.605,c.17) get tok: STRING(])
(l.605,c.21) get tok: INT(CHAR[113])
(l.605,c.26) get tok: REF TAG(prog)
(l.605,c.27) get tok: STRING(,)
(l.605,c.29) get tok: STRING([)
(l.605,c.30) get tok: STRING(])
(l.605,c.31) get tok: STRING([)
(l.605,c.32) get tok: STRING(])
(l.605,c.36) get tok: INT(CHAR[113])
(l.605,c.43) get tok: REF TAG(params)
(l.605,c.44) get tok: STRING())
(l.605,c.47) get tok: INT(INT[195])
(l.606,c.0) get tok: STRING(:)
(l.606,c.5) get tok: INT(BEGIN[227])
(l.607,c.4) get tok: INT(PROC[69])
(l.607,c.5) get tok: STRING(()
(l.607,c.11) get tok: REF TAG(VECTOR)
(l.607,c.12) get tok: STRING([)
(l.607,c.13) get tok: STRING(])
(l.607,c.17) get tok: INT(CHAR[113])
(l.607,c.24) get tok: STRING(,)
(l.607,c.32) get tok: REF TAG(CCHARPTR)
(l.607,c.39) get tok: STRING())
(l.607,c.42) get tok: INT(INT[195])
(l.607,c.54) get tok: REF TAG(sysexecvp)
(l.607,c.55) get tok: STRING(=)
(l.607,c.61) get tok: INT(ALIEN[245])
(l.608,c.0) get tok: STRING("EXECVP")
(l.609,c.0) get tok: STRING("#define EXECVP(path,argv) \")
(l.609,c.56) get tok: STRING("   A_int_INT(execvp(A_VC_charptr(path),(char **)argv))")
(l.609,c.57) get tok: STRING(;)
(l.611,c.1) get tok: STRING([)
(l.611,c.4) get tok: INT(UPB[150])
(l.611,c.11) get tok: REF TAG(params)
(l.611,c.12) get tok: STRING(-)
(l.611,c.15) get tok: INT(LWB[148])
(l.611,c.22) get tok: REF TAG(params)
(l.611,c.23) get tok: STRING(+)
(l.611,c.24) get tok: STRING(1)
(l.611,c.25) get tok: STRING(])
(l.611,c.28) get tok: INT(REF[53])
(l.611,c.35) get tok: REF TAG(VECTOR)
(l.611,c.36) get tok: STRING([)
(l.611,c.37) get tok: STRING(])
(l.611,c.41) get tok: INT(CHAR[113])
(l.611,c.50) get tok: REF TAG(paramsz)
(l.611,c.51) get tok: STRING(;)
(l.612,c.2) get tok: CONTROL(<)
(l.612,c.77) get tok: STRING(;)
(l.613,c.2) get tok: CONTROL(<)
(l.613,c.46) get tok: STRING(;)
(l.615,c.6) get tok: REF TAG(VECTOR)
(l.615,c.7) get tok: STRING([)
(l.615,c.8) get tok: STRING(1)
(l.615,c.9) get tok: STRING(+)
(l.615,c.12) get tok: INT(UPB[150])
(l.615,c.21) get tok: REF TAG(paramsz)
(l.615,c.22) get tok: STRING(])
(l.615,c.30) get tok: REF TAG(CCHARPTR)
(l.615,c.35) get tok: REF TAG(ptrs)
(l.615,c.36) get tok: STRING(;)
(l.616,c.2) get tok: CONTROL(<)
(l.616,c.55) get tok: STRING(;)
(l.617,c.2) get tok: CONTROL(<)
(l.617,c.63) get tok: STRING(;)
(l.618,c.10) get tok: REF TAG(sysexecvp)
(l.618,c.11) get tok: STRING(()
(l.618,c.17) get tok: REF TAG(progz)
(l.618,c.18) get tok: STRING(,)
(l.618,c.24) get tok: REF TAG(data)
(l.618,c.26) get tok: INT(OF[97])
(l.618,c.34) get tok: REF TAG(TOVDESC)
(l.618,c.39) get tok: REF TAG(ptrs)
(l.618,c.40) get tok: STRING())
(l.619,c.3) get tok: INT(END[202])
(l.621,c.2) get tok: CONTROL( )
(l.621,c.4) get tok: CONTROL(<)
(l.622,c.3) get tok: INT(FOR[138])
(l.622,c.6) get tok: REF TAG(i)
(l.622,c.8) get tok: INT(TO[187])
(l.622,c.12) get tok: INT(UPB[150])
(l.622,c.19) get tok: REF TAG(params)
(l.622,c.20) get tok: STRING([)
(l.622,c.22) get tok: CONTROL(@)
(l.622,c.23) get tok: STRING(1)
(l.622,c.24) get tok: STRING(])
(l.623,c.2) get tok: INT(DO[244])
(l.624,c.8) get tok: REF TAG(paramsz)
(l.624,c.9) get tok: STRING([)
(l.624,c.10) get tok: REF TAG(i)
(l.624,c.11) get tok: STRING(])
(l.625,c.0) get tok: STRING(:=)
(l.625,c.4) get tok: INT(HEAP[48])
(l.625,c.11) get tok: REF TAG(VECTOR)
(l.625,c.12) get tok: STRING([)
(l.625,c.13) get tok: STRING(1)
(l.625,c.14) get tok: STRING(+)
(l.625,c.17) get tok: INT(UPB[150])
(l.625,c.24) get tok: REF TAG(params)
(l.625,c.25) get tok: STRING([)
(l.625,c.27) get tok: CONTROL(@)
(l.625,c.28) get tok: STRING(1)
(l.625,c.29) get tok: STRING(])
(l.625,c.30) get tok: STRING([)
(l.625,c.31) get tok: REF TAG(i)
(l.625,c.32) get tok: STRING(])
(l.625,c.33) get tok: STRING(])
(l.625,c.37) get tok: INT(CHAR[113])
(l.626,c.0) get tok: STRING(:=)
(l.626,c.1) get tok: REF TAG(Z)
(l.626,c.9) get tok: REF TAG(MAKERVC)
(l.626,c.16) get tok: REF TAG(params)
(l.626,c.17) get tok: STRING([)
(l.626,c.19) get tok: CONTROL(@)
(l.626,c.20) get tok: STRING(1)
(l.626,c.21) get tok: STRING(])
(l.626,c.22) get tok: STRING([)
(l.626,c.23) get tok: REF TAG(i)
(l.626,c.24) get tok: STRING(])
(l.627,c.2) get tok: INT(OD[231])
(l.629,c.2) get tok: CONTROL( )
(l.629,c.4) get tok: CONTROL(<)
(l.630,c.6) get tok: REF TAG(VECTOR)
(l.630,c.7) get tok: STRING([)
(l.630,c.10) get tok: INT(UPB[150])
(l.630,c.15) get tok: REF TAG(prog)
(l.630,c.16) get tok: STRING(-)
(l.630,c.19) get tok: INT(LWB[148])
(l.630,c.24) get tok: REF TAG(prog)
(l.630,c.25) get tok: STRING(+)
(l.630,c.26) get tok: STRING(2)
(l.630,c.27) get tok: STRING(])
(l.630,c.31) get tok: INT(CHAR[113])
(l.630,c.38) get tok: REF TAG(progz)
(l.630,c.40) get tok: STRING(:=)
(l.630,c.41) get tok: REF TAG(Z)
(l.630,c.49) get tok: REF TAG(MAKERVC)
(l.632,c.0) get tok: REF TAG(prog)
(l.632,c.2) get tok: CONTROL( )
(l.632,c.4) get tok: CONTROL(<)
(l.633,c.3) get tok: INT(FOR[138])
(l.633,c.6) get tok: REF TAG(i)
(l.633,c.8) get tok: INT(TO[187])
(l.633,c.12) get tok: INT(UPB[150])
(l.634,c.0) get tok: REF TAG(paramsz)
(l.634,c.2) get tok: INT(DO[244])
(l.635,c.4) get tok: REF TAG(ptrs)
(l.635,c.5) get tok: STRING([)
(l.635,c.6) get tok: REF TAG(i)
(l.635,c.7) get tok: STRING(])
(l.635,c.9) get tok: STRING(:=)
(l.635,c.20) get tok: REF TAG(VCTOCHARPTR)
(l.635,c.29) get tok: REF TAG(paramsz)
(l.635,c.30) get tok: STRING([)
(l.635,c.31) get tok: REF TAG(i)
(l.635,c.32) get tok: STRING(])
(l.636,c.2) get tok: INT(OD[231])
(l.636,c.3) get tok: STRING(;)
(l.637,c.4) get tok: REF TAG(ptrs)
(l.637,c.5) get tok: STRING([)
(l.637,c.8) get tok: INT(UPB[150])
(l.637,c.13) get tok: REF TAG(ptrs)
(l.637,c.14) get tok: STRING(])
(l.637,c.16) get tok: STRING(:=)
(l.637,c.30) get tok: REF TAG(CSTRTOCCHARPTR)
(l.637,c.37) get tok: REF TAG(TOCSTR)
(l.637,c.44) get tok: REF TAG(TOCPTR)
(l.639,c.0) get tok: STRING(0)
(l.639,c.2) get tok: CONTROL( )
(l.639,c.4) get tok: CONTROL(<)
(l.640,c.2) get tok: INT(OP[87])
(l.640,c.3) get tok: STRING(()
(l.640,c.9) get tok: REF TAG(VECTOR)
(l.640,c.10) get tok: STRING([)
(l.640,c.11) get tok: STRING(])
(l.640,c.19) get tok: REF TAG(CCHARPTR)
(l.640,c.20) get tok: STRING())
(l.640,c.25) get tok: REF TAG(VDESC)
(l.640,c.33) get tok: REF TAG(TOVDESC)
(l.640,c.35) get tok: STRING(=)
(l.640,c.40) get tok: REF TAG(BIOP)
(l.642,c.0) get tok: STRING(99)
(l.642,c.2) get tok: CONTROL( )
(l.647,c.2) get tok: CONTROL(d)
(l.647,c.28) get tok: REF TAG(macroexecpipedprogram)
(l.647,c.29) get tok: STRING(=)
(l.648,c.17) get tok: REF TAG(macrocreatepipe)
(l.648,c.18) get tok: STRING(;)
(l.649,c.12) get tok: REF TAG(macroexecvp)
(l.649,c.13) get tok: STRING(;)
(l.650,c.16) get tok: REF TAG(macroposixfork)
(l.650,c.17) get tok: STRING(;)
(l.651,c.4) get tok: INT(PROC[69])
(l.651,c.24) get tok: REF TAG(execpipedprogram)
(l.651,c.25) get tok: STRING(=)
(l.651,c.27) get tok: STRING(()
(l.651,c.28) get tok: STRING([)
(l.651,c.29) get tok: STRING(])
(l.651,c.33) get tok: INT(CHAR[113])
(l.651,c.38) get tok: REF TAG(prog)
(l.651,c.39) get tok: STRING(,)
(l.651,c.40) get tok: STRING([)
(l.651,c.41) get tok: STRING(])
(l.651,c.42) get tok: STRING([)
(l.651,c.43) get tok: STRING(])
(l.651,c.47) get tok: INT(CHAR[113])
(l.651,c.52) get tok: REF TAG(args)
(l.651,c.53) get tok: STRING())
(l.651,c.57) get tok: REF TAG(PIPE)
(l.652,c.0) get tok: STRING(:)
(l.652,c.2) get tok: INT(IF[62])
(l.652,c.7) get tok: REF TAG(PIPE)
(l.652,c.21) get tok: REF TAG(childinpipe)
(l.652,c.22) get tok: STRING(,)
(l.653,c.14) get tok: REF TAG(childoutpipe)
(l.653,c.15) get tok: STRING(;)
(l.654,c.3) get tok: INT(INT[195])
(l.654,c.7) get tok: REF TAG(res)
(l.654,c.8) get tok: STRING(;)
(l.655,c.2) get tok: INT(IF[62])
(l.655,c.7) get tok: REF TAG(pid)
(l.655,c.9) get tok: INT(OF[97])
(l.655,c.11) get tok: STRING(()
(l.655,c.24) get tok: REF TAG(childinpipe)
(l.655,c.26) get tok: STRING(:=)
(l.655,c.37) get tok: REF TAG(createpipe)
(l.655,c.38) get tok: STRING())
(l.655,c.40) get tok: STRING(=)
(l.655,c.42) get tok: STRING(-)
(l.656,c.0) get tok: STRING(1)
(l.656,c.2) get tok: INT(OR[177])
(l.657,c.4) get tok: REF TAG(pid)
(l.657,c.6) get tok: INT(OF[97])
(l.657,c.8) get tok: STRING(()
(l.657,c.22) get tok: REF TAG(childoutpipe)
(l.657,c.24) get tok: STRING(:=)
(l.657,c.35) get tok: REF TAG(createpipe)
(l.657,c.36) get tok: STRING())
(l.657,c.38) get tok: STRING(=)
(l.657,c.40) get tok: STRING(-)
(l.658,c.0) get tok: STRING(1)
(l.658,c.4) get tok: INT(THEN[190])
(l.658,c.8) get tok: REF TAG(res)
(l.658,c.11) get tok: STRING(:=-)
(l.658,c.12) get tok: STRING(2)
(l.658,c.13) get tok: STRING(;)
(l.658,c.19) get tok: INT(TRUE[64])
(l.659,c.4) get tok: INT(ELIF[9])
(l.659,c.6) get tok: STRING(()
(l.659,c.9) get tok: REF TAG(res)
(l.659,c.11) get tok: STRING(:=)
(l.659,c.21) get tok: REF TAG(posixfork)
(l.659,c.22) get tok: STRING())
(l.659,c.24) get tok: STRING(=)
(l.659,c.26) get tok: STRING(-)
(l.660,c.0) get tok: STRING(1)
(l.660,c.4) get tok: INT(THEN[190])
(l.660,c.9) get tok: INT(TRUE[64])
(l.661,c.4) get tok: INT(ELSE[4])
(l.661,c.10) get tok: INT(FALSE[123])
(l.662,c.2) get tok: INT(FI[107])
(l.663,c.4) get tok: INT(THEN[190])
(l.663,c.6) get tok: STRING(()
(l.663,c.9) get tok: INT(NIL[180])
(l.663,c.10) get tok: STRING(,)
(l.663,c.13) get tok: INT(NIL[180])
(l.663,c.14) get tok: STRING(,)
(l.663,c.17) get tok: REF TAG(res)
(l.663,c.18) get tok: STRING())
(l.664,c.4) get tok: INT(ELIF[9])
(l.664,c.8) get tok: REF TAG(res)
(l.664,c.9) get tok: STRING(=)
(l.665,c.0) get tok: STRING(0)
(l.665,c.4) get tok: INT(THEN[190])
(l.665,c.7) get tok: CONTROL(<)
(l.666,c.4) get tok: INT(ELSE[4])
(l.666,c.7) get tok: CONTROL(<)
(l.667,c.2) get tok: INT(FI[107])
(l.669,c.2) get tok: CONTROL( )
(l.674,c.2) get tok: CONTROL(<)
(l.675,c.5) get tok: REF TAG(close)
(l.675,c.6) get tok: STRING(()
(l.675,c.14) get tok: REF TAG(standin)
(l.675,c.15) get tok: STRING())
(l.675,c.16) get tok: STRING(;)
(l.676,c.9) get tok: REF TAG(posixdup)
(l.676,c.10) get tok: STRING(()
(l.676,c.19) get tok: REF TAG(sysfile)
(l.676,c.21) get tok: INT(OF[97])
(l.676,c.24) get tok: REF TAG(r)
(l.676,c.26) get tok: INT(OF[97])
(l.676,c.40) get tok: REF TAG(childinpipe)
(l.676,c.41) get tok: STRING())
(l.676,c.42) get tok: STRING(;)
(l.677,c.2) get tok: CONTROL(&)
(l.678,c.5) get tok: REF TAG(close)
(l.678,c.6) get tok: STRING(()
(l.678,c.8) get tok: REF TAG(r)
(l.678,c.10) get tok: INT(OF[97])
(l.678,c.24) get tok: REF TAG(childinpipe)
(l.678,c.25) get tok: STRING())
(l.678,c.26) get tok: STRING(;)
(l.679,c.5) get tok: REF TAG(close)
(l.679,c.6) get tok: STRING(()
(l.679,c.8) get tok: REF TAG(w)
(l.679,c.10) get tok: INT(OF[97])
(l.679,c.24) get tok: REF TAG(childinpipe)
(l.679,c.25) get tok: STRING())
(l.679,c.26) get tok: STRING(;)
(l.680,c.2) get tok: CONTROL(&)
(l.681,c.5) get tok: REF TAG(close)
(l.681,c.6) get tok: STRING(()
(l.681,c.15) get tok: REF TAG(standout)
(l.681,c.16) get tok: STRING())
(l.681,c.17) get tok: STRING(;)
(l.682,c.9) get tok: REF TAG(posixdup)
(l.682,c.10) get tok: STRING(()
(l.682,c.19) get tok: REF TAG(sysfile)
(l.682,c.21) get tok: INT(OF[97])
(l.682,c.24) get tok: REF TAG(w)
(l.682,c.26) get tok: INT(OF[97])
(l.682,c.41) get tok: REF TAG(childoutpipe)
(l.682,c.42) get tok: STRING())
(l.682,c.43) get tok: STRING(;)
(l.683,c.2) get tok: CONTROL(&)
(l.684,c.5) get tok: REF TAG(close)
(l.684,c.6) get tok: STRING(()
(l.684,c.8) get tok: REF TAG(r)
(l.684,c.10) get tok: INT(OF[97])
(l.684,c.25) get tok: REF TAG(childoutpipe)
(l.684,c.26) get tok: STRING())
(l.684,c.27) get tok: STRING(;)
(l.685,c.5) get tok: REF TAG(close)
(l.685,c.6) get tok: STRING(()
(l.685,c.8) get tok: REF TAG(w)
(l.685,c.10) get tok: INT(OF[97])
(l.685,c.25) get tok: REF TAG(childoutpipe)
(l.685,c.26) get tok: STRING())
(l.685,c.27) get tok: STRING(;)
(l.686,c.2) get tok: CONTROL(<)
(l.688,c.2) get tok: CONTROL( )
(l.691,c.2) get tok: CONTROL(<)
(l.692,c.6) get tok: REF TAG(execvp)
(l.692,c.7) get tok: STRING(()
(l.692,c.11) get tok: REF TAG(prog)
(l.692,c.12) get tok: STRING(,)
(l.692,c.16) get tok: REF TAG(args)
(l.692,c.17) get tok: STRING())
(l.692,c.18) get tok: STRING(;)
(l.693,c.1) get tok: STRING(()
(l.693,c.4) get tok: INT(NIL[180])
(l.693,c.5) get tok: STRING(,)
(l.693,c.8) get tok: INT(NIL[180])
(l.693,c.9) get tok: STRING(,)
(l.693,c.12) get tok: REF TAG(res)
(l.693,c.13) get tok: STRING())
(l.695,c.2) get tok: CONTROL( )
(l.700,c.2) get tok: CONTROL(<)
(l.701,c.5) get tok: REF TAG(close)
(l.701,c.6) get tok: STRING(()
(l.701,c.8) get tok: REF TAG(r)
(l.701,c.10) get tok: INT(OF[97])
(l.701,c.24) get tok: REF TAG(childinpipe)
(l.701,c.25) get tok: STRING())
(l.701,c.26) get tok: STRING(;)
(l.702,c.5) get tok: REF TAG(close)
(l.702,c.6) get tok: STRING(()
(l.702,c.8) get tok: REF TAG(w)
(l.702,c.10) get tok: INT(OF[97])
(l.702,c.25) get tok: REF TAG(childoutpipe)
(l.702,c.26) get tok: STRING())
(l.702,c.27) get tok: STRING(;)
(l.703,c.1) get tok: STRING(()
(l.703,c.3) get tok: REF TAG(r)
(l.703,c.5) get tok: INT(OF[97])
(l.703,c.20) get tok: REF TAG(childoutpipe)
(l.703,c.21) get tok: STRING(,)
(l.703,c.23) get tok: REF TAG(w)
(l.703,c.25) get tok: INT(OF[97])
(l.703,c.39) get tok: REF TAG(childinpipe)
(l.703,c.40) get tok: STRING(,)
(l.703,c.43) get tok: REF TAG(res)
(l.703,c.44) get tok: STRING())
(l.705,c.2) get tok: CONTROL( )
(l.709,c.2) get tok: CONTROL(d)
(l.709,c.19) get tok: REF TAG(macroforkexec)
(l.709,c.20) get tok: STRING(=)
(l.710,c.12) get tok: REF TAG(macroexecvp)
(l.710,c.13) get tok: STRING(;)
(l.711,c.16) get tok: REF TAG(macroposixfork)
(l.711,c.17) get tok: STRING(;)
(l.712,c.4) get tok: INT(PROC[69])
(l.712,c.15) get tok: REF TAG(forkexec)
(l.712,c.16) get tok: STRING(=)
(l.712,c.18) get tok: STRING(()
(l.712,c.19) get tok: STRING([)
(l.712,c.20) get tok: STRING(])
(l.712,c.24) get tok: INT(CHAR[113])
(l.712,c.29) get tok: REF TAG(prog)
(l.712,c.30) get tok: STRING(,)
(l.712,c.31) get tok: STRING([)
(l.712,c.32) get tok: STRING(])
(l.712,c.33) get tok: STRING([)
(l.712,c.34) get tok: STRING(])
(l.712,c.38) get tok: INT(CHAR[113])
(l.712,c.43) get tok: REF TAG(args)
(l.712,c.44) get tok: STRING())
(l.712,c.47) get tok: INT(INT[195])
(l.713,c.0) get tok: STRING(:)
(l.713,c.2) get tok: INT(IF[62])
(l.713,c.6) get tok: INT(INT[195])
(l.713,c.17) get tok: REF TAG(childpid)
(l.713,c.18) get tok: STRING(=)
(l.713,c.29) get tok: REF TAG(posixfork)
(l.713,c.30) get tok: STRING(;)
(l.713,c.42) get tok: REF TAG(childpid)
(l.713,c.43) get tok: STRING(=)
(l.713,c.45) get tok: STRING(-)
(l.714,c.0) get tok: STRING(1)
(l.714,c.4) get tok: INT(THEN[190])
(l.714,c.6) get tok: STRING(-)
(l.715,c.0) get tok: STRING(1)
(l.715,c.4) get tok: INT(ELIF[9])
(l.715,c.15) get tok: REF TAG(childpid)
(l.715,c.16) get tok: STRING(=)
(l.716,c.0) get tok: STRING(0)
(l.716,c.4) get tok: INT(THEN[190])
(l.716,c.11) get tok: REF TAG(execvp)
(l.716,c.12) get tok: STRING(()
(l.716,c.16) get tok: REF TAG(prog)
(l.716,c.17) get tok: STRING(,)
(l.716,c.21) get tok: REF TAG(args)
(l.716,c.22) get tok: STRING())
(l.716,c.23) get tok: STRING(;)
(l.717,c.0) get tok: STRING(0)
(l.717,c.4) get tok: INT(ELSE[4])
(l.718,c.0) get tok: REF TAG(childpid)
(l.718,c.2) get tok: INT(FI[107])
(l.720,c.2) get tok: CONTROL( )
(l.724,c.2) get tok: CONTROL(d)
(l.724,c.16) get tok: REF TAG(macrosystem)
(l.724,c.17) get tok: STRING(=)
(l.725,c.16) get tok: REF TAG(macroposixfork)
(l.725,c.17) get tok: STRING(;)
(l.726,c.12) get tok: REF TAG(macroexecvp)
(l.726,c.13) get tok: STRING(;)
(l.727,c.20) get tok: REF TAG(macroposixwaitpid)
(l.727,c.21) get tok: STRING(;)
(l.728,c.4) get tok: INT(PROC[69])
(l.728,c.12) get tok: REF TAG(system)
(l.728,c.13) get tok: STRING(=)
(l.728,c.15) get tok: STRING(()
(l.728,c.16) get tok: STRING([)
(l.728,c.17) get tok: STRING(])
(l.728,c.21) get tok: INT(CHAR[113])
(l.728,c.29) get tok: REF TAG(command)
(l.728,c.30) get tok: STRING())
(l.728,c.33) get tok: INT(INT[195])
(l.729,c.0) get tok: STRING(:)
(l.729,c.2) get tok: INT(IF[62])
(l.729,c.11) get tok: REF TAG(command)
(l.729,c.12) get tok: STRING(=)
(l.730,c.0) get tok: STRING("")
(l.730,c.4) get tok: INT(THEN[190])
(l.731,c.0) get tok: STRING(1)
(l.731,c.4) get tok: INT(ELIF[9])
(l.731,c.8) get tok: INT(INT[195])
(l.731,c.13) get tok: REF TAG(pid)
(l.731,c.14) get tok: STRING(=)
(l.731,c.25) get tok: REF TAG(posixfork)
(l.731,c.26) get tok: STRING(;)
(l.731,c.32) get tok: REF TAG(pid)
(l.731,c.33) get tok: STRING(=)
(l.731,c.35) get tok: STRING(-)
(l.732,c.0) get tok: STRING(1)
(l.732,c.4) get tok: INT(THEN[190])
(l.732,c.6) get tok: STRING(-)
(l.733,c.0) get tok: STRING(1)
(l.733,c.4) get tok: INT(ELIF[9])
(l.733,c.9) get tok: REF TAG(pid)
(l.733,c.10) get tok: STRING(=)
(l.734,c.0) get tok: STRING(0)
(l.734,c.4) get tok: INT(THEN[190])
(l.735,c.6) get tok: REF TAG(execvp)
(l.735,c.7) get tok: STRING(()
(l.735,c.18) get tok: STRING("/bin/bash")
(l.735,c.19) get tok: STRING(,)
(l.735,c.20) get tok: STRING(()
(l.735,c.26) get tok: STRING("bash")
(l.735,c.27) get tok: STRING(,)
(l.735,c.36) get tok: STRING("--login")
(l.735,c.37) get tok: STRING(,)
(l.735,c.41) get tok: STRING("-c")
(l.735,c.42) get tok: STRING(,)
(l.735,c.49) get tok: REF TAG(command)
(l.735,c.50) get tok: STRING())
(l.735,c.51) get tok: STRING())
(l.735,c.52) get tok: STRING(;)
(l.737,c.4) get tok: REF TAG(exit)
(l.737,c.5) get tok: STRING(()
(l.737,c.8) get tok: STRING(255)
(l.737,c.9) get tok: STRING())
(l.737,c.10) get tok: STRING(;)
(l.738,c.4) get tok: INT(SKIP[44])
(l.739,c.4) get tok: INT(ELSE[4])
(l.740,c.3) get tok: INT(INT[195])
(l.740,c.7) get tok: REF TAG(ret)
(l.740,c.9) get tok: STRING(:=)
(l.740,c.10) get tok: STRING(0)
(l.740,c.11) get tok: STRING(,)
(l.740,c.17) get tok: REF TAG(status)
(l.740,c.18) get tok: STRING(;)
(l.741,c.5) get tok: INT(WHILE[99])
(l.742,c.2) get tok: INT(IF[62])
(l.742,c.17) get tok: REF TAG(posixwaitpid)
(l.742,c.18) get tok: STRING(()
(l.742,c.21) get tok: REF TAG(pid)
(l.742,c.22) get tok: STRING(,)
(l.742,c.28) get tok: REF TAG(status)
(l.742,c.29) get tok: STRING(,)
(l.742,c.30) get tok: STRING(0)
(l.742,c.31) get tok: STRING())
(l.742,c.33) get tok: STRING(=)
(l.742,c.35) get tok: STRING(-)
(l.743,c.0) get tok: STRING(1)
(l.743,c.4) get tok: INT(THEN[190])
(l.744,c.11) get tok: REF TAG(macroeintr)
(l.744,c.12) get tok: STRING(;)
(l.745,c.2) get tok: INT(IF[62])
(l.745,c.9) get tok: REF TAG(errno)
(l.745,c.11) get tok: STRING(/=)
(l.746,c.0) get tok: REF TAG(eintr)
(l.746,c.4) get tok: INT(THEN[190])
(l.746,c.8) get tok: REF TAG(ret)
(l.746,c.11) get tok: STRING(:=-)
(l.746,c.12) get tok: STRING(1)
(l.746,c.13) get tok: STRING(;)
(l.746,c.18) get tok: INT(GOTO[294])
(l.747,c.0) get tok: REF TAG(end)
(l.747,c.2) get tok: INT(FI[107])
(l.748,c.4) get tok: INT(ELSE[4])
(l.748,c.8) get tok: REF TAG(ret)
(l.748,c.10) get tok: STRING(:=)
(l.748,c.16) get tok: REF TAG(status)
(l.748,c.17) get tok: STRING(;)
(l.748,c.22) get tok: INT(GOTO[294])
(l.749,c.0) get tok: REF TAG(end)
(l.749,c.2) get tok: INT(FI[107])
(l.749,c.3) get tok: STRING(;)
(l.750,c.4) get tok: REF TAG(ret)
(l.750,c.5) get tok: STRING(=)
(l.751,c.0) get tok: STRING(0)
(l.751,c.2) get tok: INT(DO[244])
(l.751,c.7) get tok: INT(SKIP[44])
(l.751,c.10) get tok: INT(OD[231])
(l.751,c.11) get tok: STRING(;)
(l.752,c.3) get tok: REF TAG(end)
(l.753,c.0) get tok: STRING(:)
(l.754,c.0) get tok: REF TAG(ret)
(l.754,c.2) get tok: INT(FI[107])
(l.756,c.2) get tok: CONTROL(2)
(l.761,c.2) get tok: CONTROL(d)
(l.761,c.20) get tok: REF TAG(macromodegroup)
(l.761,c.21) get tok: STRING(=)
(l.762,c.4) get tok: INT(MODE[211])
(l.762,c.10) get tok: REF TAG(GROUP)
(l.762,c.12) get tok: STRING(=)
(l.763,c.6) get tok: INT(STRUCT[51])
(l.763,c.7) get tok: STRING(()
(l.763,c.13) get tok: INT(STRING[156])
(l.763,c.21) get tok: REF TAG(grname)
(l.763,c.22) get tok: STRING(,)
(l.764,c.9) get tok: REF TAG(grpasswd)
(l.764,c.10) get tok: STRING(,)
(l.765,c.3) get tok: INT(INT[195])
(l.765,c.13) get tok: REF TAG(grgid)
(l.765,c.14) get tok: STRING(,)
(l.766,c.6) get tok: INT(STRING[156])
(l.766,c.13) get tok: REF TAG(grmem)
(l.766,c.14) get tok: STRING())
(l.768,c.2) get tok: CONTROL(d)
(l.768,c.21) get tok: REF TAG(macromodepasswd)
(l.768,c.22) get tok: STRING(=)
(l.769,c.4) get tok: INT(MODE[211])
(l.769,c.11) get tok: REF TAG(PASSWD)
(l.769,c.13) get tok: STRING(=)
(l.770,c.6) get tok: INT(STRUCT[51])
(l.770,c.7) get tok: STRING(()
(l.770,c.13) get tok: INT(STRING[156])
(l.770,c.21) get tok: REF TAG(pwname)
(l.770,c.22) get tok: STRING(,)
(l.771,c.9) get tok: REF TAG(pwpasswd)
(l.771,c.10) get tok: STRING(,)
(l.772,c.3) get tok: INT(INT[195])
(l.772,c.13) get tok: REF TAG(pwuid)
(l.772,c.14) get tok: STRING(,)
(l.773,c.6) get tok: REF TAG(pwgid)
(l.773,c.7) get tok: STRING(,)
(l.774,c.6) get tok: INT(STRING[156])
(l.774,c.15) get tok: REF TAG(pwgecos)
(l.774,c.16) get tok: STRING(,)
(l.775,c.6) get tok: REF TAG(pwdir)
(l.775,c.7) get tok: STRING(,)
(l.776,c.8) get tok: REF TAG(pwshell)
(l.776,c.9) get tok: STRING())
(l.778,c.2) get tok: CONTROL( )
(l.780,c.2) get tok: CONTROL(d)
(l.780,c.23) get tok: REF TAG(macroposixsetuid)
(l.780,c.24) get tok: STRING(=)
(l.781,c.4) get tok: INT(PROC[69])
(l.781,c.5) get tok: STRING(()
(l.781,c.8) get tok: INT(INT[195])
(l.781,c.9) get tok: STRING())
(l.781,c.12) get tok: INT(INT[195])
(l.782,c.0) get tok: REF TAG(posixsetuid)
(l.782,c.1) get tok: STRING(=)
(l.782,c.7) get tok: INT(ALIEN[245])
(l.782,c.16) get tok: STRING("SETUID")
(l.784,c.0) get tok: STRING("#include <unistd.h>")
(l.786,c.0) get tok: STRING("#define SETUID(u) A_int_INT(setuid(A_INT_int(u)))")
(l.786,c.2) get tok: CONTROL(d)
(l.786,c.23) get tok: REF TAG(macroposixsetgid)
(l.786,c.24) get tok: STRING(=)
(l.787,c.4) get tok: INT(PROC[69])
(l.787,c.5) get tok: STRING(()
(l.787,c.8) get tok: INT(INT[195])
(l.787,c.9) get tok: STRING())
(l.787,c.12) get tok: INT(INT[195])
(l.788,c.0) get tok: REF TAG(posixsetgid)
(l.788,c.1) get tok: STRING(=)
(l.788,c.7) get tok: INT(ALIEN[245])
(l.788,c.16) get tok: STRING("SETGID")
(l.790,c.0) get tok: STRING("#include <sys/types.h>")
(l.792,c.0) get tok: STRING("#define SETGID(g) A_int_INT(setgid(A_INT_int(g)))")
(l.792,c.2) get tok: CONTROL( )
(l.795,c.2) get tok: CONTROL(d)
(l.795,c.23) get tok: REF TAG(macroposixgetuid)
(l.795,c.24) get tok: STRING(=)
(l.796,c.4) get tok: INT(PROC[69])
(l.796,c.20) get tok: REF TAG(posixgetuid)
(l.796,c.21) get tok: STRING(=)
(l.796,c.25) get tok: INT(INT[195])
(l.796,c.26) get tok: STRING(:)
(l.796,c.30) get tok: INT(INT[195])
(l.796,c.35) get tok: INT(CODE[109])
(l.797,c.0) get tok: STRING("RESULT=getuid();")
(l.797,c.2) get tok: CONTROL(d)
(l.797,c.23) get tok: REF TAG(macroposixgeteuid)
(l.797,c.24) get tok: STRING(=)
(l.798,c.4) get tok: INT(PROC[69])
(l.798,c.20) get tok: REF TAG(posixgeteuid)
(l.798,c.21) get tok: STRING(=)
(l.798,c.25) get tok: INT(INT[195])
(l.798,c.26) get tok: STRING(:)
(l.798,c.30) get tok: INT(INT[195])
(l.798,c.35) get tok: INT(CODE[109])
(l.799,c.0) get tok: STRING("RESULT=geteuid();")
(l.799,c.2) get tok: CONTROL(d)
(l.799,c.23) get tok: REF TAG(macroposixgetgid)
(l.799,c.24) get tok: STRING(=)
(l.800,c.4) get tok: INT(PROC[69])
(l.800,c.20) get tok: REF TAG(posixgetgid)
(l.800,c.21) get tok: STRING(=)
(l.800,c.25) get tok: INT(INT[195])
(l.800,c.26) get tok: STRING(:)
(l.800,c.30) get tok: INT(INT[195])
(l.800,c.35) get tok: INT(CODE[109])
(l.801,c.0) get tok: STRING("RESULT=getgid();")
(l.801,c.2) get tok: CONTROL(d)
(l.801,c.23) get tok: REF TAG(macroposixgetegid)
(l.801,c.24) get tok: STRING(=)
(l.802,c.4) get tok: INT(PROC[69])
(l.802,c.20) get tok: REF TAG(posixgetegid)
(l.802,c.21) get tok: STRING(=)
(l.802,c.25) get tok: INT(INT[195])
(l.802,c.26) get tok: STRING(:)
(l.802,c.30) get tok: INT(INT[195])
(l.802,c.35) get tok: INT(CODE[109])
(l.803,c.0) get tok: STRING("RESULT=getegid();")
(l.803,c.2) get tok: CONTROL(d)
(l.803,c.23) get tok: REF TAG(macroposixgetppid)
(l.803,c.24) get tok: STRING(=)
(l.804,c.4) get tok: INT(PROC[69])
(l.804,c.20) get tok: REF TAG(posixgetppid)
(l.804,c.21) get tok: STRING(=)
(l.804,c.25) get tok: INT(INT[195])
(l.804,c.26) get tok: STRING(:)
(l.804,c.30) get tok: INT(INT[195])
(l.804,c.35) get tok: INT(CODE[109])
(l.805,c.0) get tok: STRING("RESULT=getppid();")
(l.805,c.2) get tok: CONTROL(d)
(l.805,c.23) get tok: REF TAG(macroposixgetpid)
(l.805,c.24) get tok: STRING(=)
(l.806,c.4) get tok: INT(PROC[69])
(l.806,c.19) get tok: REF TAG(posixgetpid)
(l.806,c.20) get tok: STRING(=)
(l.806,c.25) get tok: INT(INT[195])
(l.806,c.26) get tok: STRING(:)
(l.806,c.30) get tok: INT(INT[195])
(l.806,c.35) get tok: INT(CODE[109])
(l.808,c.0) get tok: STRING("RESULT=getpid();")
(l.808,c.2) get tok: CONTROL( )
(l.810,c.2) get tok: CONTROL(d)
(l.810,c.29) get tok: REF TAG(macrosysprocesspwline)
(l.810,c.30) get tok: STRING(=)
(l.811,c.17) get tok: REF TAG(macromodepasswd)
(l.811,c.18) get tok: STRING(;)
(l.812,c.4) get tok: INT(PROC[69])
(l.812,c.25) get tok: REF TAG(sysprocesspwline)
(l.812,c.26) get tok: STRING(=)
(l.812,c.28) get tok: STRING(()
(l.812,c.34) get tok: INT(STRING[156])
(l.812,c.39) get tok: REF TAG(line)
(l.812,c.40) get tok: STRING())
(l.812,c.43) get tok: INT(REF[53])
(l.812,c.50) get tok: REF TAG(PASSWD)
(l.813,c.0) get tok: STRING(:)
(l.813,c.2) get tok: INT(IF[62])
(l.813,c.7) get tok: INT(FILE[59])
(l.813,c.10) get tok: REF TAG(mf)
(l.813,c.11) get tok: STRING(;)
(l.814,c.4) get tok: REF TAG(open)
(l.814,c.5) get tok: STRING(()
(l.814,c.7) get tok: REF TAG(mf)
(l.814,c.8) get tok: STRING(,)
(l.814,c.15) get tok: REF TAG(MAKERVC)
(l.814,c.16) get tok: STRING(()
(l.814,c.20) get tok: REF TAG(line)
(l.814,c.21) get tok: STRING(+)
(l.814,c.24) get tok: STRING(":")
(l.814,c.25) get tok: STRING())
(l.814,c.26) get tok: STRING(,)
(l.814,c.37) get tok: REF TAG(memchannel)
(l.814,c.38) get tok: STRING())
(l.814,c.40) get tok: STRING(/=)
(l.815,c.0) get tok: STRING(0)
(l.815,c.4) get tok: INT(THEN[190])
(l.815,c.8) get tok: INT(NIL[180])
(l.816,c.4) get tok: INT(ELSE[4])
(l.817,c.4) get tok: INT(HEAP[48])
(l.817,c.11) get tok: REF TAG(PASSWD)
(l.817,c.13) get tok: REF TAG(p)
(l.817,c.14) get tok: STRING(;)
(l.818,c.19) get tok: REF TAG(onlogicalfileend)
(l.818,c.20) get tok: STRING(()
(l.818,c.22) get tok: REF TAG(mf)
(l.818,c.23) get tok: STRING(,)
(l.819,c.1) get tok: STRING(()
(l.819,c.4) get tok: INT(REF[53])
(l.819,c.9) get tok: INT(FILE[59])
(l.819,c.11) get tok: REF TAG(f)
(l.819,c.12) get tok: STRING())
(l.819,c.16) get tok: INT(BOOL[184])
(l.820,c.0) get tok: STRING(:)
(l.820,c.1) get tok: STRING(()
(l.821,c.5) get tok: REF TAG(close)
(l.821,c.6) get tok: STRING(()
(l.821,c.7) get tok: REF TAG(f)
(l.821,c.8) get tok: STRING())
(l.821,c.9) get tok: STRING(;)
(l.821,c.14) get tok: INT(GOTO[294])
(l.821,c.18) get tok: REF TAG(eof)
(l.821,c.19) get tok: STRING(;)
(l.821,c.24) get tok: INT(SKIP[44])
(l.822,c.1) get tok: STRING())
(l.822,c.2) get tok: STRING())
(l.822,c.3) get tok: STRING(;)
(l.823,c.9) get tok: REF TAG(maketerm)
(l.823,c.10) get tok: STRING(()
(l.823,c.12) get tok: REF TAG(mf)
(l.823,c.13) get tok: STRING(,)
(l.823,c.16) get tok: STRING(":")
(l.823,c.17) get tok: STRING())
(l.823,c.18) get tok: STRING(;)
(l.824,c.3) get tok: REF TAG(get)
(l.824,c.4) get tok: STRING(()
(l.824,c.6) get tok: REF TAG(mf)
(l.824,c.7) get tok: STRING(,)
(l.824,c.8) get tok: STRING(()
(l.824,c.16) get tok: REF TAG(pwname)
(l.824,c.18) get tok: INT(OF[97])
(l.824,c.20) get tok: REF TAG(p)
(l.824,c.21) get tok: STRING(,)
(l.824,c.25) get tok: INT(LOC[108])
(l.824,c.30) get tok: INT(CHAR[113])
(l.824,c.31) get tok: STRING(,)
(l.825,c.10) get tok: REF TAG(pwpasswd)
(l.825,c.12) get tok: INT(OF[97])
(l.825,c.14) get tok: REF TAG(p)
(l.825,c.15) get tok: STRING(,)
(l.825,c.19) get tok: INT(LOC[108])
(l.825,c.24) get tok: INT(CHAR[113])
(l.825,c.25) get tok: STRING(,)
(l.826,c.7) get tok: REF TAG(pwuid)
(l.826,c.9) get tok: INT(OF[97])
(l.826,c.11) get tok: REF TAG(p)
(l.826,c.12) get tok: STRING(,)
(l.826,c.16) get tok: INT(LOC[108])
(l.826,c.21) get tok: INT(CHAR[113])
(l.826,c.22) get tok: STRING(,)
(l.827,c.7) get tok: REF TAG(pwgid)
(l.827,c.9) get tok: INT(OF[97])
(l.827,c.11) get tok: REF TAG(p)
(l.827,c.12) get tok: STRING(,)
(l.827,c.16) get tok: INT(LOC[108])
(l.827,c.21) get tok: INT(CHAR[113])
(l.827,c.22) get tok: STRING(,)
(l.828,c.9) get tok: REF TAG(pwgecos)
(l.828,c.11) get tok: INT(OF[97])
(l.828,c.13) get tok: REF TAG(p)
(l.828,c.14) get tok: STRING(,)
(l.828,c.18) get tok: INT(LOC[108])
(l.828,c.23) get tok: INT(CHAR[113])
(l.828,c.24) get tok: STRING(,)
(l.829,c.7) get tok: REF TAG(pwdir)
(l.829,c.9) get tok: INT(OF[97])
(l.829,c.11) get tok: REF TAG(p)
(l.829,c.12) get tok: STRING(,)
(l.829,c.16) get tok: INT(LOC[108])
(l.829,c.21) get tok: INT(CHAR[113])
(l.829,c.22) get tok: STRING(,)
(l.830,c.9) get tok: REF TAG(pwshell)
(l.830,c.11) get tok: INT(OF[97])
(l.830,c.13) get tok: REF TAG(p)
(l.830,c.14) get tok: STRING())
(l.830,c.15) get tok: STRING())
(l.830,c.16) get tok: STRING(;)
(l.831,c.5) get tok: REF TAG(close)
(l.831,c.6) get tok: STRING(()
(l.831,c.8) get tok: REF TAG(mf)
(l.831,c.9) get tok: STRING())
(l.831,c.10) get tok: STRING(;)
(l.832,c.2) get tok: REF TAG(p)
(l.832,c.6) get tok: INT(EXIT[21])
(l.833,c.3) get tok: REF TAG(eof)
(l.834,c.0) get tok: STRING(:)
(l.834,c.3) get tok: INT(NIL[180])
(l.835,c.2) get tok: INT(FI[107])
(l.837,c.2) get tok: CONTROL( )
(l.840,c.2) get tok: CONTROL(d)
(l.840,c.24) get tok: REF TAG(macrosysgetpwnam)
(l.840,c.25) get tok: STRING(=)
(l.841,c.25) get tok: REF TAG(macrosysprocesspwline)
(l.841,c.26) get tok: STRING(;)
(l.842,c.4) get tok: INT(PROC[69])
(l.842,c.20) get tok: REF TAG(sysgetpwnam)
(l.842,c.21) get tok: STRING(=)
(l.842,c.23) get tok: STRING(()
(l.842,c.29) get tok: INT(STRING[156])
(l.842,c.34) get tok: REF TAG(name)
(l.842,c.35) get tok: STRING())
(l.842,c.38) get tok: INT(REF[53])
(l.842,c.45) get tok: REF TAG(PASSWD)
(l.843,c.0) get tok: STRING(:)
(l.843,c.2) get tok: INT(IF[62])
(l.843,c.7) get tok: INT(FILE[59])
(l.843,c.11) get tok: REF TAG(pwf)
(l.843,c.12) get tok: STRING(;)
(l.844,c.4) get tok: REF TAG(open)
(l.844,c.5) get tok: STRING(()
(l.844,c.8) get tok: REF TAG(pwf)
(l.844,c.9) get tok: STRING(,)
(l.844,c.22) get tok: STRING("/etc/passwd")
(l.844,c.23) get tok: STRING(,)
(l.844,c.39) get tok: REF TAG(standinchannel)
(l.844,c.40) get tok: STRING())
(l.844,c.42) get tok: STRING(/=)
(l.845,c.0) get tok: STRING(0)
(l.845,c.4) get tok: INT(THEN[190])
(l.845,c.8) get tok: INT(NIL[180])
(l.846,c.4) get tok: INT(ELSE[4])
(l.847,c.19) get tok: REF TAG(onlogicalfileend)
(l.847,c.20) get tok: STRING(()
(l.847,c.23) get tok: REF TAG(pwf)
(l.847,c.24) get tok: STRING(,)
(l.848,c.1) get tok: STRING(()
(l.848,c.4) get tok: INT(REF[53])
(l.848,c.9) get tok: INT(FILE[59])
(l.848,c.11) get tok: REF TAG(f)
(l.848,c.12) get tok: STRING())
(l.848,c.16) get tok: INT(BOOL[184])
(l.849,c.0) get tok: STRING(:)
(l.849,c.1) get tok: STRING(()
(l.850,c.5) get tok: REF TAG(close)
(l.850,c.6) get tok: STRING(()
(l.850,c.7) get tok: REF TAG(f)
(l.850,c.8) get tok: STRING())
(l.850,c.9) get tok: STRING(;)
(l.850,c.14) get tok: INT(GOTO[294])
(l.850,c.18) get tok: REF TAG(eof)
(l.850,c.19) get tok: STRING(;)
(l.850,c.24) get tok: INT(SKIP[44])
(l.851,c.1) get tok: STRING())
(l.851,c.2) get tok: STRING())
(l.851,c.3) get tok: STRING(;)
(l.852,c.6) get tok: INT(STRING[156])
(l.852,c.11) get tok: REF TAG(line)
(l.852,c.12) get tok: STRING(;)
(l.853,c.5) get tok: INT(WHILE[99])
(l.854,c.3) get tok: REF TAG(get)
(l.854,c.4) get tok: STRING(()
(l.854,c.7) get tok: REF TAG(pwf)
(l.854,c.8) get tok: STRING(,)
(l.854,c.9) get tok: STRING(()
(l.854,c.13) get tok: REF TAG(line)
(l.854,c.14) get tok: STRING(,)
(l.854,c.21) get tok: REF TAG(newline)
(l.854,c.22) get tok: STRING())
(l.854,c.23) get tok: STRING())
(l.854,c.24) get tok: STRING(;)
(l.855,c.5) get tok: REF TAG(line)
(l.855,c.9) get tok: REF TAG(UPTO)
(l.855,c.13) get tok: STRING(":")
(l.855,c.15) get tok: STRING(/=)
(l.856,c.0) get tok: REF TAG(name)
(l.856,c.2) get tok: INT(DO[244])
(l.856,c.7) get tok: INT(SKIP[44])
(l.856,c.10) get tok: INT(OD[231])
(l.856,c.11) get tok: STRING(;)
(l.857,c.5) get tok: REF TAG(close)
(l.857,c.6) get tok: STRING(()
(l.857,c.9) get tok: REF TAG(pwf)
(l.857,c.10) get tok: STRING())
(l.857,c.11) get tok: STRING(;)
(l.858,c.19) get tok: REF TAG(sysprocesspwline)
(l.858,c.20) get tok: STRING(()
(l.858,c.24) get tok: REF TAG(line)
(l.858,c.25) get tok: STRING())
(l.858,c.31) get tok: INT(EXIT[21])
(l.859,c.3) get tok: REF TAG(eof)
(l.860,c.0) get tok: STRING(:)
(l.860,c.3) get tok: INT(NIL[180])
(l.861,c.2) get tok: INT(FI[107])
(l.863,c.2) get tok: CONTROL(d)
(l.863,c.24) get tok: REF TAG(macrosysgetpwuid)
(l.863,c.25) get tok: STRING(=)
(l.864,c.25) get tok: REF TAG(macrosysprocesspwline)
(l.864,c.26) get tok: STRING(;)
(l.865,c.4) get tok: INT(PROC[69])
(l.865,c.20) get tok: REF TAG(sysgetpwuid)
(l.865,c.21) get tok: STRING(=)
(l.865,c.23) get tok: STRING(()
(l.865,c.26) get tok: INT(INT[195])
(l.865,c.30) get tok: REF TAG(uid)
(l.865,c.31) get tok: STRING())
(l.865,c.34) get tok: INT(REF[53])
(l.865,c.41) get tok: REF TAG(PASSWD)
(l.866,c.0) get tok: STRING(:)
(l.866,c.2) get tok: INT(IF[62])
(l.866,c.7) get tok: INT(FILE[59])
(l.866,c.11) get tok: REF TAG(pwf)
(l.866,c.12) get tok: STRING(;)
(l.867,c.4) get tok: REF TAG(open)
(l.867,c.5) get tok: STRING(()
(l.867,c.8) get tok: REF TAG(pwf)
(l.867,c.9) get tok: STRING(,)
(l.867,c.22) get tok: STRING("/etc/passwd")
(l.867,c.23) get tok: STRING(,)
(l.867,c.39) get tok: REF TAG(standinchannel)
(l.867,c.40) get tok: STRING())
(l.867,c.42) get tok: STRING(/=)
(l.868,c.0) get tok: STRING(0)
(l.868,c.4) get tok: INT(THEN[190])
(l.868,c.8) get tok: INT(NIL[180])
(l.869,c.4) get tok: INT(ELSE[4])
(l.870,c.19) get tok: REF TAG(onlogicalfileend)
(l.870,c.20) get tok: STRING(()
(l.870,c.23) get tok: REF TAG(pwf)
(l.870,c.24) get tok: STRING(,)
(l.871,c.1) get tok: STRING(()
(l.871,c.4) get tok: INT(REF[53])
(l.871,c.9) get tok: INT(FILE[59])
(l.871,c.11) get tok: REF TAG(f)
(l.871,c.12) get tok: STRING())
(l.871,c.16) get tok: INT(BOOL[184])
(l.872,c.0) get tok: STRING(:)
(l.872,c.1) get tok: STRING(()
(l.873,c.5) get tok: REF TAG(close)
(l.873,c.6) get tok: STRING(()
(l.873,c.7) get tok: REF TAG(f)
(l.873,c.8) get tok: STRING())
(l.873,c.9) get tok: STRING(;)
(l.873,c.14) get tok: INT(GOTO[294])
(l.873,c.18) get tok: REF TAG(eof)
(l.873,c.19) get tok: STRING(;)
(l.873,c.24) get tok: INT(SKIP[44])
(l.874,c.1) get tok: STRING())
(l.874,c.2) get tok: STRING())
(l.874,c.3) get tok: STRING(;)
(l.875,c.6) get tok: INT(STRING[156])
(l.875,c.11) get tok: REF TAG(line)
(l.875,c.12) get tok: STRING(;)
(l.875,c.17) get tok: INT(REF[53])
(l.875,c.24) get tok: REF TAG(PASSWD)
(l.875,c.27) get tok: REF TAG(pw)
(l.875,c.28) get tok: STRING(;)
(l.876,c.5) get tok: INT(WHILE[99])
(l.877,c.3) get tok: REF TAG(get)
(l.877,c.4) get tok: STRING(()
(l.877,c.7) get tok: REF TAG(pwf)
(l.877,c.8) get tok: STRING(,)
(l.877,c.9) get tok: STRING(()
(l.877,c.13) get tok: REF TAG(line)
(l.877,c.14) get tok: STRING(,)
(l.877,c.21) get tok: REF TAG(newline)
(l.877,c.22) get tok: STRING())
(l.877,c.23) get tok: STRING())
(l.877,c.24) get tok: STRING(;)
(l.878,c.2) get tok: INT(IF[62])
(l.878,c.6) get tok: INT(REF[53])
(l.878,c.13) get tok: REF TAG(PASSWD)
(l.878,c.14) get tok: STRING(()
(l.878,c.16) get tok: REF TAG(pw)
(l.878,c.18) get tok: STRING(:=)
(l.878,c.37) get tok: REF TAG(sysprocesspwline)
(l.878,c.38) get tok: STRING(()
(l.878,c.42) get tok: REF TAG(line)
(l.878,c.43) get tok: STRING())
(l.878,c.44) get tok: STRING())
(l.878,c.47) get tok: INT(IS[82])
(l.878,c.51) get tok: INT(NIL[180])
(l.879,c.4) get tok: INT(THEN[190])
(l.879,c.10) get tok: INT(FALSE[123])
(l.880,c.4) get tok: INT(ELSE[4])
(l.880,c.12) get tok: REF TAG(pwuid)
(l.880,c.14) get tok: INT(OF[97])
(l.880,c.18) get tok: REF TAG(pw)
(l.880,c.20) get tok: STRING(/=)
(l.881,c.0) get tok: REF TAG(uid)
(l.881,c.2) get tok: INT(FI[107])
(l.882,c.2) get tok: INT(DO[244])
(l.882,c.7) get tok: INT(SKIP[44])
(l.882,c.10) get tok: INT(OD[231])
(l.882,c.11) get tok: STRING(;)
(l.883,c.5) get tok: REF TAG(close)
(l.883,c.6) get tok: STRING(()
(l.883,c.9) get tok: REF TAG(pwf)
(l.883,c.10) get tok: STRING())
(l.883,c.11) get tok: STRING(;)
(l.884,c.3) get tok: REF TAG(pw)
(l.884,c.7) get tok: INT(EXIT[21])
(l.885,c.3) get tok: REF TAG(eof)
(l.886,c.0) get tok: STRING(:)
(l.886,c.3) get tok: INT(NIL[180])
(l.887,c.2) get tok: INT(FI[107])
(l.889,c.2) get tok: CONTROL( )
(l.891,c.2) get tok: CONTROL(d)
(l.891,c.29) get tok: REF TAG(macrosysprocessgrline)
(l.891,c.30) get tok: STRING(=)
(l.892,c.16) get tok: REF TAG(macromodegroup)
(l.892,c.17) get tok: STRING(;)
(l.893,c.4) get tok: INT(PROC[69])
(l.893,c.25) get tok: REF TAG(sysprocessgrline)
(l.893,c.26) get tok: STRING(=)
(l.893,c.28) get tok: STRING(()
(l.893,c.34) get tok: INT(STRING[156])
(l.893,c.39) get tok: REF TAG(line)
(l.893,c.40) get tok: STRING())
(l.893,c.43) get tok: INT(REF[53])
(l.893,c.49) get tok: REF TAG(GROUP)
(l.894,c.0) get tok: STRING(:)
(l.894,c.2) get tok: INT(IF[62])
(l.894,c.7) get tok: INT(FILE[59])
(l.894,c.10) get tok: REF TAG(gf)
(l.894,c.11) get tok: STRING(;)
(l.895,c.4) get tok: REF TAG(open)
(l.895,c.5) get tok: STRING(()
(l.895,c.7) get tok: REF TAG(gf)
(l.895,c.8) get tok: STRING(,)
(l.895,c.15) get tok: REF TAG(MAKERVC)
(l.895,c.16) get tok: STRING(()
(l.895,c.20) get tok: REF TAG(line)
(l.895,c.21) get tok: STRING(+)
(l.895,c.24) get tok: STRING(":")
(l.895,c.25) get tok: STRING())
(l.895,c.26) get tok: STRING(,)
(l.895,c.37) get tok: REF TAG(memchannel)
(l.895,c.38) get tok: STRING())
(l.895,c.40) get tok: STRING(/=)
(l.896,c.0) get tok: STRING(0)
(l.896,c.4) get tok: INT(THEN[190])
(l.896,c.8) get tok: INT(NIL[180])
(l.897,c.4) get tok: INT(ELSE[4])
(l.898,c.4) get tok: INT(HEAP[48])
(l.898,c.10) get tok: REF TAG(GROUP)
(l.898,c.16) get tok: REF TAG(group)
(l.898,c.17) get tok: STRING(;)
(l.899,c.19) get tok: REF TAG(onlogicalfileend)
(l.899,c.20) get tok: STRING(()
(l.899,c.22) get tok: REF TAG(gf)
(l.899,c.23) get tok: STRING(,)
(l.900,c.1) get tok: STRING(()
(l.900,c.4) get tok: INT(REF[53])
(l.900,c.9) get tok: INT(FILE[59])
(l.900,c.11) get tok: REF TAG(f)
(l.900,c.12) get tok: STRING())
(l.900,c.16) get tok: INT(BOOL[184])
(l.901,c.0) get tok: STRING(:)
(l.901,c.1) get tok: STRING(()
(l.902,c.5) get tok: REF TAG(close)
(l.902,c.6) get tok: STRING(()
(l.902,c.8) get tok: REF TAG(gf)
(l.902,c.9) get tok: STRING())
(l.902,c.10) get tok: STRING(;)
(l.902,c.15) get tok: INT(GOTO[294])
(l.902,c.19) get tok: REF TAG(eof)
(l.902,c.20) get tok: STRING(;)
(l.902,c.25) get tok: INT(SKIP[44])
(l.903,c.1) get tok: STRING())
(l.903,c.2) get tok: STRING())
(l.903,c.3) get tok: STRING(;)
(l.904,c.9) get tok: REF TAG(maketerm)
(l.904,c.10) get tok: STRING(()
(l.904,c.12) get tok: REF TAG(gf)
(l.904,c.13) get tok: STRING(,)
(l.904,c.16) get tok: STRING(":")
(l.904,c.17) get tok: STRING())
(l.904,c.18) get tok: STRING(;)
(l.905,c.3) get tok: REF TAG(get)
(l.905,c.4) get tok: STRING(()
(l.905,c.6) get tok: REF TAG(gf)
(l.905,c.7) get tok: STRING(,)
(l.905,c.8) get tok: STRING(()
(l.905,c.16) get tok: REF TAG(grname)
(l.905,c.18) get tok: INT(OF[97])
(l.905,c.24) get tok: REF TAG(group)
(l.905,c.25) get tok: STRING(,)
(l.905,c.28) get tok: INT(LOC[108])
(l.905,c.33) get tok: INT(CHAR[113])
(l.905,c.34) get tok: STRING(,)
(l.906,c.10) get tok: REF TAG(grpasswd)
(l.906,c.12) get tok: INT(OF[97])
(l.906,c.18) get tok: REF TAG(group)
(l.906,c.19) get tok: STRING(,)
(l.906,c.22) get tok: INT(LOC[108])
(l.906,c.27) get tok: INT(CHAR[113])
(l.906,c.28) get tok: STRING(,)
(l.907,c.7) get tok: REF TAG(grgid)
(l.907,c.9) get tok: INT(OF[97])
(l.907,c.15) get tok: REF TAG(group)
(l.907,c.16) get tok: STRING(,)
(l.907,c.19) get tok: INT(LOC[108])
(l.907,c.24) get tok: INT(CHAR[113])
(l.907,c.25) get tok: STRING(,)
(l.908,c.7) get tok: REF TAG(grmem)
(l.908,c.9) get tok: INT(OF[97])
(l.908,c.15) get tok: REF TAG(group)
(l.908,c.16) get tok: STRING())
(l.908,c.17) get tok: STRING())
(l.908,c.18) get tok: STRING(;)
(l.909,c.5) get tok: REF TAG(close)
(l.909,c.6) get tok: STRING(()
(l.909,c.8) get tok: REF TAG(gf)
(l.909,c.9) get tok: STRING())
(l.909,c.10) get tok: STRING(;)
(l.910,c.6) get tok: REF TAG(group)
(l.910,c.10) get tok: INT(EXIT[21])
(l.911,c.3) get tok: REF TAG(eof)
(l.912,c.0) get tok: STRING(:)
(l.912,c.3) get tok: INT(NIL[180])
(l.913,c.2) get tok: INT(FI[107])
(l.915,c.2) get tok: CONTROL( )
(l.918,c.2) get tok: CONTROL(d)
(l.918,c.24) get tok: REF TAG(macrosysgetgrnam)
(l.918,c.25) get tok: STRING(=)
(l.919,c.25) get tok: REF TAG(macrosysprocessgrline)
(l.919,c.26) get tok: STRING(;)
(l.920,c.4) get tok: INT(PROC[69])
(l.920,c.20) get tok: REF TAG(sysgetgrnam)
(l.920,c.21) get tok: STRING(=)
(l.920,c.23) get tok: STRING(()
(l.920,c.29) get tok: INT(STRING[156])
(l.920,c.34) get tok: REF TAG(name)
(l.920,c.35) get tok: STRING())
(l.920,c.38) get tok: INT(REF[53])
(l.920,c.44) get tok: REF TAG(GROUP)
(l.921,c.0) get tok: STRING(:)
(l.921,c.2) get tok: INT(IF[62])
(l.921,c.7) get tok: INT(FILE[59])
(l.921,c.12) get tok: REF TAG(grpf)
(l.921,c.13) get tok: STRING(;)
(l.922,c.4) get tok: REF TAG(open)
(l.922,c.5) get tok: STRING(()
(l.922,c.9) get tok: REF TAG(grpf)
(l.922,c.10) get tok: STRING(,)
(l.922,c.22) get tok: STRING("/etc/group")
(l.922,c.23) get tok: STRING(,)
(l.922,c.39) get tok: REF TAG(standinchannel)
(l.922,c.40) get tok: STRING())
(l.922,c.42) get tok: STRING(/=)
(l.923,c.0) get tok: STRING(0)
(l.923,c.4) get tok: INT(THEN[190])
(l.923,c.8) get tok: INT(NIL[180])
(l.924,c.4) get tok: INT(ELSE[4])
(l.925,c.6) get tok: INT(STRING[156])
(l.925,c.11) get tok: REF TAG(line)
(l.925,c.12) get tok: STRING(;)
(l.925,c.17) get tok: INT(REF[53])
(l.925,c.23) get tok: REF TAG(GROUP)
(l.925,c.29) get tok: REF TAG(group)
(l.925,c.30) get tok: STRING(;)
(l.926,c.19) get tok: REF TAG(onlogicalfileend)
(l.926,c.20) get tok: STRING(()
(l.926,c.24) get tok: REF TAG(grpf)
(l.926,c.25) get tok: STRING(,)
(l.927,c.1) get tok: STRING(()
(l.927,c.4) get tok: INT(REF[53])
(l.927,c.9) get tok: INT(FILE[59])
(l.927,c.11) get tok: REF TAG(f)
(l.927,c.12) get tok: STRING())
(l.927,c.16) get tok: INT(BOOL[184])
(l.928,c.0) get tok: STRING(:)
(l.928,c.1) get tok: STRING(()
(l.929,c.5) get tok: REF TAG(close)
(l.929,c.6) get tok: STRING(()
(l.929,c.7) get tok: REF TAG(f)
(l.929,c.8) get tok: STRING())
(l.929,c.9) get tok: STRING(;)
(l.929,c.14) get tok: INT(GOTO[294])
(l.929,c.18) get tok: REF TAG(eof)
(l.929,c.19) get tok: STRING(;)
(l.929,c.24) get tok: INT(SKIP[44])
(l.930,c.1) get tok: STRING())
(l.930,c.2) get tok: STRING())
(l.930,c.3) get tok: STRING(;)
(l.931,c.5) get tok: INT(WHILE[99])
(l.932,c.3) get tok: REF TAG(get)
(l.932,c.4) get tok: STRING(()
(l.932,c.8) get tok: REF TAG(grpf)
(l.932,c.9) get tok: STRING(,)
(l.932,c.10) get tok: STRING(()
(l.932,c.14) get tok: REF TAG(line)
(l.932,c.15) get tok: STRING(,)
(l.932,c.22) get tok: REF TAG(newline)
(l.932,c.23) get tok: STRING())
(l.932,c.24) get tok: STRING())
(l.932,c.25) get tok: STRING(;)
(l.933,c.5) get tok: REF TAG(group)
(l.933,c.7) get tok: STRING(:=)
(l.933,c.26) get tok: REF TAG(sysprocessgrline)
(l.933,c.27) get tok: STRING(()
(l.933,c.31) get tok: REF TAG(line)
(l.933,c.32) get tok: STRING())
(l.933,c.33) get tok: STRING(;)
(l.934,c.2) get tok: INT(IF[62])
(l.934,c.6) get tok: INT(REF[53])
(l.934,c.12) get tok: REF TAG(GROUP)
(l.934,c.13) get tok: STRING(()
(l.934,c.18) get tok: REF TAG(group)
(l.934,c.19) get tok: STRING())
(l.934,c.22) get tok: INT(IS[82])
(l.934,c.26) get tok: INT(NIL[180])
(l.935,c.4) get tok: INT(THEN[190])
(l.935,c.10) get tok: INT(FALSE[123])
(l.936,c.4) get tok: INT(ELSE[4])
(l.936,c.13) get tok: REF TAG(grname)
(l.936,c.15) get tok: INT(OF[97])
(l.936,c.21) get tok: REF TAG(group)
(l.936,c.23) get tok: STRING(/=)
(l.937,c.0) get tok: REF TAG(name)
(l.937,c.2) get tok: INT(FI[107])
(l.938,c.2) get tok: INT(DO[244])
(l.938,c.7) get tok: INT(SKIP[44])
(l.938,c.10) get tok: INT(OD[231])
(l.938,c.11) get tok: STRING(;)
(l.939,c.5) get tok: REF TAG(close)
(l.939,c.6) get tok: STRING(()
(l.939,c.10) get tok: REF TAG(grpf)
(l.939,c.11) get tok: STRING())
(l.939,c.12) get tok: STRING(;)
(l.940,c.6) get tok: REF TAG(group)
(l.940,c.10) get tok: INT(EXIT[21])
(l.941,c.3) get tok: REF TAG(eof)
(l.942,c.0) get tok: STRING(:)
(l.942,c.3) get tok: INT(NIL[180])
(l.943,c.2) get tok: INT(FI[107])
(l.945,c.2) get tok: CONTROL(d)
(l.945,c.24) get tok: REF TAG(macrosysgetgrgid)
(l.945,c.25) get tok: STRING(=)
(l.946,c.25) get tok: REF TAG(macrosysprocessgrline)
(l.946,c.26) get tok: STRING(;)
(l.947,c.4) get tok: INT(PROC[69])
(l.947,c.20) get tok: REF TAG(sysgetgrgid)
(l.947,c.21) get tok: STRING(=)
(l.947,c.23) get tok: STRING(()
(l.947,c.26) get tok: INT(INT[195])
(l.947,c.30) get tok: REF TAG(gid)
(l.947,c.31) get tok: STRING())
(l.947,c.34) get tok: INT(REF[53])
(l.947,c.40) get tok: REF TAG(GROUP)
(l.948,c.0) get tok: STRING(:)
(l.948,c.2) get tok: INT(IF[62])
(l.948,c.7) get tok: INT(FILE[59])
(l.948,c.12) get tok: REF TAG(grpf)
(l.948,c.13) get tok: STRING(;)
(l.949,c.4) get tok: REF TAG(open)
(l.949,c.5) get tok: STRING(()
(l.949,c.9) get tok: REF TAG(grpf)
(l.949,c.10) get tok: STRING(,)
(l.949,c.22) get tok: STRING("/etc/group")
(l.949,c.23) get tok: STRING(,)
(l.949,c.39) get tok: REF TAG(standinchannel)
(l.949,c.40) get tok: STRING())
(l.949,c.42) get tok: STRING(/=)
(l.950,c.0) get tok: STRING(0)
(l.950,c.4) get tok: INT(THEN[190])
(l.950,c.8) get tok: INT(NIL[180])
(l.951,c.4) get tok: INT(ELSE[4])
(l.952,c.6) get tok: INT(STRING[156])
(l.952,c.11) get tok: REF TAG(line)
(l.952,c.12) get tok: STRING(;)
(l.952,c.18) get tok: INT(HEAP[48])
(l.952,c.24) get tok: REF TAG(GROUP)
(l.952,c.30) get tok: REF TAG(group)
(l.952,c.31) get tok: STRING(;)
(l.953,c.19) get tok: REF TAG(onlogicalfileend)
(l.953,c.20) get tok: STRING(()
(l.953,c.24) get tok: REF TAG(grpf)
(l.953,c.25) get tok: STRING(,)
(l.954,c.1) get tok: STRING(()
(l.954,c.4) get tok: INT(REF[53])
(l.954,c.9) get tok: INT(FILE[59])
(l.954,c.11) get tok: REF TAG(f)
(l.954,c.12) get tok: STRING())
(l.954,c.16) get tok: INT(BOOL[184])
(l.955,c.0) get tok: STRING(:)
(l.955,c.1) get tok: STRING(()
(l.956,c.5) get tok: REF TAG(close)
(l.956,c.6) get tok: STRING(()
(l.956,c.7) get tok: REF TAG(f)
(l.956,c.8) get tok: STRING())
(l.956,c.9) get tok: STRING(;)
(l.956,c.14) get tok: INT(GOTO[294])
(l.956,c.18) get tok: REF TAG(eof)
(l.956,c.19) get tok: STRING(;)
(l.956,c.24) get tok: INT(SKIP[44])
(l.957,c.1) get tok: STRING())
(l.957,c.2) get tok: STRING())
(l.957,c.3) get tok: STRING(;)
(l.958,c.5) get tok: INT(WHILE[99])
(l.959,c.3) get tok: REF TAG(get)
(l.959,c.4) get tok: STRING(()
(l.959,c.8) get tok: REF TAG(grpf)
(l.959,c.9) get tok: STRING(,)
(l.959,c.10) get tok: STRING(()
(l.959,c.14) get tok: REF TAG(line)
(l.959,c.15) get tok: STRING(,)
(l.959,c.22) get tok: REF TAG(newline)
(l.959,c.23) get tok: STRING())
(l.959,c.24) get tok: STRING())
(l.959,c.25) get tok: STRING(;)
(l.960,c.5) get tok: REF TAG(group)
(l.960,c.7) get tok: STRING(:=)
(l.960,c.26) get tok: REF TAG(sysprocessgrline)
(l.960,c.27) get tok: STRING(()
(l.960,c.31) get tok: REF TAG(line)
(l.960,c.32) get tok: STRING())
(l.960,c.33) get tok: STRING(;)
(l.961,c.2) get tok: INT(IF[62])
(l.961,c.6) get tok: INT(REF[53])
(l.961,c.12) get tok: REF TAG(GROUP)
(l.961,c.13) get tok: STRING(()
(l.961,c.18) get tok: REF TAG(group)
(l.961,c.19) get tok: STRING())
(l.961,c.22) get tok: INT(IS[82])
(l.961,c.26) get tok: INT(NIL[180])
(l.962,c.4) get tok: INT(THEN[190])
(l.962,c.10) get tok: INT(FALSE[123])
(l.963,c.4) get tok: INT(ELSE[4])
(l.963,c.12) get tok: REF TAG(grgid)
(l.963,c.14) get tok: INT(OF[97])
(l.963,c.21) get tok: REF TAG(group)
(l.963,c.23) get tok: STRING(/=)
(l.964,c.0) get tok: REF TAG(gid)
(l.964,c.2) get tok: INT(FI[107])
(l.965,c.2) get tok: INT(DO[244])
(l.965,c.7) get tok: INT(SKIP[44])
(l.965,c.10) get tok: INT(OD[231])
(l.965,c.11) get tok: STRING(;)
(l.966,c.5) get tok: REF TAG(close)
(l.966,c.6) get tok: STRING(()
(l.966,c.10) get tok: REF TAG(grpf)
(l.966,c.11) get tok: STRING())
(l.966,c.12) get tok: STRING(;)
(l.967,c.6) get tok: REF TAG(group)
(l.967,c.10) get tok: INT(EXIT[21])
(l.968,c.3) get tok: REF TAG(eof)
(l.969,c.0) get tok: STRING(:)
(l.969,c.3) get tok: INT(NIL[180])
(l.970,c.2) get tok: INT(FI[107])
(l.972,c.2) get tok: CONTROL(2)
(l.976,c.2) get tok: CONTROL(d)
(l.976,c.19) get tok: REF TAG(macromodetime)
(l.976,c.20) get tok: STRING(=)
(l.977,c.4) get tok: INT(MODE[211])
(l.977,c.9) get tok: REF TAG(TIME)
(l.977,c.11) get tok: STRING(=)
(l.977,c.18) get tok: INT(STRUCT[51])
(l.977,c.19) get tok: STRING(()
(l.977,c.22) get tok: INT(INT[195])
(l.977,c.27) get tok: REF TAG(secs)
(l.977,c.28) get tok: STRING(,)
(l.977,c.33) get tok: REF TAG(mins)
(l.977,c.34) get tok: STRING(,)
(l.977,c.41) get tok: REF TAG(hours)
(l.977,c.42) get tok: STRING(,)
(l.978,c.3) get tok: REF TAG(day)
(l.978,c.4) get tok: STRING(,)
(l.978,c.11) get tok: REF TAG(month)
(l.978,c.12) get tok: STRING(,)
(l.978,c.17) get tok: REF TAG(year)
(l.978,c.18) get tok: STRING(,)
(l.979,c.4) get tok: REF TAG(wday)
(l.979,c.5) get tok: STRING(,)
(l.979,c.10) get tok: REF TAG(yday)
(l.979,c.11) get tok: STRING(,)
(l.979,c.18) get tok: REF TAG(isdst)
(l.979,c.19) get tok: STRING(,)
(l.979,c.27) get tok: REF TAG(gmtoff)
(l.979,c.28) get tok: STRING(,)
(l.980,c.3) get tok: INT(INT[195])
(l.980,c.13) get tok: REF TAG(zone)
(l.980,c.14) get tok: STRING())
(l.980,c.15) get tok: STRING(;)
(l.982,c.2) get tok: CONTROL(m)
(l.982,c.9) get tok: REF TAG(tmsz)
(l.982,c.10) get tok: STRING(=)
(l.984,c.0) get tok: STRING(44)
(l.984,c.2) get tok: CONTROL( )
(l.987,c.2) get tok: CONTROL(d)
(l.987,c.19) get tok: REF TAG(macrooptocptr)
(l.987,c.20) get tok: STRING(=)
(l.987,c.23) get tok: INT(OP[87])
(l.987,c.24) get tok: STRING(()
(l.987,c.28) get tok: REF TAG(CSTR)
(l.987,c.29) get tok: STRING())
(l.987,c.33) get tok: REF TAG(CPTR)
(l.987,c.40) get tok: REF TAG(TOCPTR)
(l.987,c.42) get tok: STRING(=)
(l.987,c.47) get tok: REF TAG(BIOP)
(l.989,c.0) get tok: STRING(99)
(l.989,c.2) get tok: CONTROL(d)
(l.989,c.20) get tok: REF TAG(macrooputcint)
(l.989,c.21) get tok: STRING(=)
(l.990,c.15) get tok: REF TAG(macromodetime)
(l.990,c.16) get tok: STRING(;)
(l.991,c.2) get tok: INT(OP[87])
(l.991,c.6) get tok: REF TAG(UTC)
(l.991,c.8) get tok: STRING(=)
(l.991,c.10) get tok: STRING(()
(l.991,c.13) get tok: INT(INT[195])
(l.991,c.15) get tok: REF TAG(t)
(l.991,c.16) get tok: STRING())
(l.991,c.20) get tok: REF TAG(TIME)
(l.992,c.0) get tok: STRING(:)
(l.992,c.5) get tok: INT(BEGIN[227])
(l.993,c.4) get tok: INT(PROC[69])
(l.993,c.5) get tok: STRING(()
(l.993,c.8) get tok: INT(REF[53])
(l.993,c.12) get tok: INT(INT[195])
(l.993,c.13) get tok: STRING())
(l.993,c.17) get tok: REF TAG(CSTR)
(l.994,c.0) get tok: REF TAG(linuxgmtime)
(l.994,c.1) get tok: STRING(=)
(l.994,c.7) get tok: INT(ALIEN[245])
(l.995,c.0) get tok: STRING("GMTIME")
(l.996,c.0) get tok: STRING("#include <time.h>")
(l.997,c.0) get tok: STRING("#define GMTIME(time) \")
(l.997,c.41) get tok: STRING("   (void *)gmtime(A_RI_time_tptr(time))")
(l.997,c.42) get tok: STRING(;)
(l.999,c.4) get tok: REF TAG(CSTR)
(l.999,c.7) get tok: REF TAG(tm)
(l.999,c.8) get tok: STRING(=)
(l.999,c.20) get tok: REF TAG(linuxgmtime)
(l.999,c.21) get tok: STRING(()
(l.999,c.24) get tok: INT(LOC[108])
(l.999,c.28) get tok: INT(INT[195])
(l.999,c.30) get tok: STRING(:=)
(l.999,c.31) get tok: REF TAG(t)
(l.999,c.32) get tok: STRING())
(l.999,c.33) get tok: STRING(;)
(l.1000,c.4) get tok: REF TAG(TIME)
(l.1000,c.7) get tok: REF TAG(ht)
(l.1000,c.8) get tok: STRING(;)
(l.1001,c.4) get tok: INT(FILE[59])
(l.1001,c.7) get tok: REF TAG(mf)
(l.1001,c.8) get tok: STRING(;)
(l.1001,c.14) get tok: REF TAG(open)
(l.1001,c.15) get tok: STRING(()
(l.1001,c.17) get tok: REF TAG(mf)
(l.1001,c.18) get tok: STRING(,)
(l.1001,c.20) get tok: REF TAG(tm)
(l.1001,c.21) get tok: STRING([)
(l.1001,c.22) get tok: STRING(:)
(l.1001,c.27) get tok: REF TAG(tmsz)
(l.1001,c.28) get tok: STRING(])
(l.1001,c.29) get tok: STRING(,)
(l.1001,c.40) get tok: REF TAG(memchannel)
(l.1001,c.41) get tok: STRING())
(l.1001,c.42) get tok: STRING(;)
(l.1002,c.7) get tok: REF TAG(getbin)
(l.1002,c.8) get tok: STRING(()
(l.1002,c.10) get tok: REF TAG(mf)
(l.1002,c.11) get tok: STRING(,)
(l.1002,c.13) get tok: REF TAG(ht)
(l.1002,c.14) get tok: STRING())
(l.1002,c.15) get tok: STRING(;)
(l.1003,c.5) get tok: REF TAG(close)
(l.1003,c.6) get tok: STRING(()
(l.1003,c.8) get tok: REF TAG(mf)
(l.1003,c.9) get tok: STRING())
(l.1003,c.10) get tok: STRING(;)
(l.1004,c.5) get tok: REF TAG(year)
(l.1004,c.7) get tok: INT(OF[97])
(l.1004,c.10) get tok: REF TAG(ht)
(l.1004,c.13) get tok: STRING(+:=)
(l.1004,c.17) get tok: STRING(1900)
(l.1004,c.18) get tok: STRING(;)
(l.1004,c.26) get tok: REF TAG(month)
(l.1004,c.28) get tok: INT(OF[97])
(l.1004,c.31) get tok: REF TAG(ht)
(l.1004,c.34) get tok: STRING(+:=)
(l.1004,c.35) get tok: STRING(1)
(l.1004,c.36) get tok: STRING(;)
(l.1006,c.0) get tok: REF TAG(ht)
(l.1006,c.3) get tok: INT(END[202])
(l.1008,c.2) get tok: CONTROL(d)
(l.1008,c.21) get tok: REF TAG(macrooputctime)
(l.1008,c.22) get tok: STRING(=)
(l.1009,c.15) get tok: REF TAG(macromodetime)
(l.1009,c.16) get tok: STRING(;)
(l.1010,c.2) get tok: INT(OP[87])
(l.1010,c.6) get tok: REF TAG(UTC)
(l.1010,c.8) get tok: STRING(=)
(l.1010,c.10) get tok: STRING(()
(l.1010,c.14) get tok: REF TAG(TIME)
(l.1010,c.16) get tok: REF TAG(t)
(l.1010,c.17) get tok: STRING())
(l.1010,c.20) get tok: INT(INT[195])
(l.1011,c.0) get tok: STRING(:)
(l.1011,c.5) get tok: INT(BEGIN[227])
(l.1012,c.4) get tok: INT(PROC[69])
(l.1012,c.5) get tok: STRING(()
(l.1012,c.9) get tok: REF TAG(CSTR)
(l.1012,c.10) get tok: STRING())
(l.1012,c.13) get tok: INT(INT[195])
(l.1013,c.0) get tok: REF TAG(linuxmktime)
(l.1013,c.1) get tok: STRING(=)
(l.1013,c.7) get tok: INT(ALIEN[245])
(l.1014,c.0) get tok: STRING("MKTIME")
(l.1014,c.61) get tok: STRING("#define MKTIME(time) A_time_t_INT(mktime((struct tm*)time))")
(l.1014,c.62) get tok: STRING(;)
(l.1016,c.4) get tok: REF TAG(TIME)
(l.1016,c.7) get tok: REF TAG(tt)
(l.1016,c.9) get tok: STRING(:=)
(l.1016,c.10) get tok: REF TAG(t)
(l.1016,c.11) get tok: STRING(;)
(l.1017,c.6) get tok: REF TAG(month)
(l.1017,c.8) get tok: INT(OF[97])
(l.1017,c.11) get tok: REF TAG(tt)
(l.1017,c.14) get tok: STRING(-:=)
(l.1017,c.15) get tok: STRING(1)
(l.1017,c.16) get tok: STRING(;)
(l.1017,c.23) get tok: REF TAG(year)
(l.1017,c.25) get tok: INT(OF[97])
(l.1017,c.28) get tok: REF TAG(tt)
(l.1017,c.31) get tok: STRING(-:=)
(l.1017,c.35) get tok: STRING(1900)
(l.1017,c.36) get tok: STRING(;)
(l.1018,c.4) get tok: INT(FILE[59])
(l.1018,c.7) get tok: REF TAG(mf)
(l.1018,c.8) get tok: STRING(;)
(l.1018,c.19) get tok: REF TAG(establish)
(l.1018,c.20) get tok: STRING(()
(l.1018,c.22) get tok: REF TAG(mf)
(l.1018,c.23) get tok: STRING(,)
(l.1018,c.25) get tok: STRING("")
(l.1018,c.26) get tok: STRING(,)
(l.1018,c.37) get tok: REF TAG(memchannel)
(l.1018,c.38) get tok: STRING(,)
(l.1018,c.39) get tok: STRING(1)
(l.1018,c.40) get tok: STRING(,)
(l.1018,c.41) get tok: STRING(1)
(l.1018,c.42) get tok: STRING(,)
(l.1018,c.47) get tok: REF TAG(tmsz)
(l.1018,c.48) get tok: STRING())
(l.1018,c.49) get tok: STRING(;)
(l.1019,c.7) get tok: REF TAG(putbin)
(l.1019,c.8) get tok: STRING(()
(l.1019,c.10) get tok: REF TAG(mf)
(l.1019,c.11) get tok: STRING(,)
(l.1019,c.13) get tok: REF TAG(tt)
(l.1019,c.14) get tok: STRING())
(l.1019,c.15) get tok: STRING(;)
(l.1020,c.3) get tok: INT(INT[195])
(l.1020,c.6) get tok: REF TAG(lt)
(l.1020,c.7) get tok: STRING(=)
(l.1020,c.19) get tok: REF TAG(linuxmktime)
(l.1020,c.20) get tok: STRING(()
(l.1020,c.29) get tok: REF TAG(STRTOCSTR)
(l.1020,c.41) get tok: REF TAG(filebuffer)
(l.1020,c.42) get tok: STRING(()
(l.1020,c.44) get tok: REF TAG(mf)
(l.1020,c.45) get tok: STRING())
(l.1020,c.46) get tok: STRING())
(l.1020,c.47) get tok: STRING(;)
(l.1021,c.5) get tok: REF TAG(close)
(l.1021,c.6) get tok: STRING(()
(l.1021,c.8) get tok: REF TAG(mf)
(l.1021,c.9) get tok: STRING())
(l.1021,c.10) get tok: STRING(;)
(l.1023,c.0) get tok: REF TAG(lt)
(l.1023,c.3) get tok: INT(END[202])
(l.1025,c.2) get tok: CONTROL(d)
(l.1025,c.22) get tok: REF TAG(macrosysgettime)
(l.1025,c.23) get tok: STRING(=)
(l.1026,c.15) get tok: REF TAG(macromodetime)
(l.1026,c.16) get tok: STRING(;)
(l.1027,c.16) get tok: REF TAG(macrooputcint)
(l.1027,c.17) get tok: STRING(;)
(l.1028,c.4) get tok: INT(PROC[69])
(l.1028,c.18) get tok: REF TAG(sysgettime)
(l.1028,c.19) get tok: STRING(=)
(l.1028,c.24) get tok: REF TAG(TIME)
(l.1028,c.25) get tok: STRING(:)
(l.1028,c.30) get tok: REF TAG(UTC)
(l.1028,c.41) get tok: REF TAG(posixtime)
(l.1028,c.42) get tok: STRING(()
(l.1028,c.45) get tok: INT(NIL[180])
(l.1028,c.46) get tok: STRING())
(l.1030,c.2) get tok: CONTROL(d)
(l.1030,c.15) get tok: REF TAG(macroctime)
(l.1030,c.16) get tok: STRING(=)
(l.1031,c.4) get tok: INT(PROC[69])
(l.1031,c.11) get tok: REF TAG(ctime)
(l.1031,c.12) get tok: STRING(=)
(l.1031,c.14) get tok: STRING(()
(l.1031,c.17) get tok: INT(REF[53])
(l.1031,c.21) get tok: INT(INT[195])
(l.1031,c.23) get tok: REF TAG(t)
(l.1031,c.24) get tok: STRING())
(l.1031,c.25) get tok: STRING([)
(l.1031,c.26) get tok: STRING(])
(l.1031,c.30) get tok: INT(CHAR[113])
(l.1032,c.0) get tok: STRING(:)
(l.1032,c.5) get tok: INT(BEGIN[227])
(l.1033,c.4) get tok: INT(PROC[69])
(l.1033,c.5) get tok: STRING(()
(l.1033,c.8) get tok: INT(REF[53])
(l.1033,c.12) get tok: INT(INT[195])
(l.1033,c.13) get tok: STRING())
(l.1033,c.17) get tok: REF TAG(CSTR)
(l.1034,c.0) get tok: REF TAG(linuxctime)
(l.1034,c.1) get tok: STRING(=)
(l.1034,c.7) get tok: INT(ALIEN[245])
(l.1035,c.0) get tok: STRING("CTIME")
(l.1036,c.0) get tok: STRING("#define CTIME(time) \")
(l.1036,c.40) get tok: STRING("   (void *)ctime(A_RI_time_tptr(time))")
(l.1036,c.41) get tok: STRING(;)
(l.1038,c.9) get tok: REF TAG(CSTRTORVC)
(l.1038,c.21) get tok: REF TAG(linuxctime)
(l.1038,c.22) get tok: STRING(()
(l.1038,c.23) get tok: REF TAG(t)
(l.1038,c.24) get tok: STRING())
(l.1039,c.3) get tok: INT(END[202])
(l.1041,c.2) get tok: CONTROL(2)
(l.1045,c.2) get tok: CONTROL(d)
(l.1045,c.19) get tok: REF TAG(macromodestat)
(l.1045,c.20) get tok: STRING(=)
(l.1046,c.4) get tok: INT(MODE[211])
(l.1046,c.9) get tok: REF TAG(STAT)
(l.1046,c.11) get tok: STRING(=)
(l.1046,c.18) get tok: INT(STRUCT[51])
(l.1046,c.19) get tok: STRING(()
(l.1046,c.23) get tok: INT(LONG[209])
(l.1046,c.27) get tok: INT(INT[195])
(l.1046,c.35) get tok: REF TAG(stdev)
(l.1046,c.36) get tok: STRING(,)
(l.1047,c.5) get tok: INT(SHORT[79])
(l.1047,c.9) get tok: INT(INT[195])
(l.1047,c.14) get tok: REF TAG(pad1)
(l.1047,c.15) get tok: STRING(,)
(l.1048,c.3) get tok: INT(INT[195])
(l.1048,c.17) get tok: REF TAG(stino)
(l.1048,c.18) get tok: STRING(,)
(l.1049,c.4) get tok: INT(BITS[164])
(l.1049,c.18) get tok: REF TAG(stmode)
(l.1049,c.19) get tok: STRING(,)
(l.1050,c.3) get tok: INT(INT[195])
(l.1050,c.19) get tok: REF TAG(stnlink)
(l.1050,c.20) get tok: STRING(,)
(l.1051,c.6) get tok: REF TAG(stuid)
(l.1051,c.7) get tok: STRING(,)
(l.1052,c.6) get tok: REF TAG(stgid)
(l.1052,c.7) get tok: STRING(,)
(l.1053,c.4) get tok: INT(LONG[209])
(l.1053,c.8) get tok: INT(INT[195])
(l.1053,c.17) get tok: REF TAG(strdev)
(l.1053,c.18) get tok: STRING(,)
(l.1054,c.5) get tok: INT(SHORT[79])
(l.1054,c.9) get tok: INT(INT[195])
(l.1054,c.14) get tok: REF TAG(pad2)
(l.1054,c.15) get tok: STRING(,)
(l.1055,c.3) get tok: INT(INT[195])
(l.1055,c.18) get tok: REF TAG(stsize)
(l.1055,c.19) get tok: STRING(,)
(l.1056,c.10) get tok: REF TAG(stblksize)
(l.1056,c.11) get tok: STRING(,)
(l.1057,c.9) get tok: REF TAG(stblocks)
(l.1057,c.10) get tok: STRING(,)
(l.1058,c.8) get tok: REF TAG(statime)
(l.1058,c.9) get tok: STRING(,)
(l.1059,c.3) get tok: INT(INT[195])
(l.1059,c.17) get tok: REF TAG(unused1)
(l.1059,c.18) get tok: STRING(,)
(l.1060,c.3) get tok: INT(INT[195])
(l.1060,c.19) get tok: REF TAG(stmtime)
(l.1060,c.20) get tok: STRING(,)
(l.1061,c.3) get tok: INT(INT[195])
(l.1061,c.17) get tok: REF TAG(unused2)
(l.1061,c.18) get tok: STRING(,)
(l.1062,c.3) get tok: INT(INT[195])
(l.1062,c.19) get tok: REF TAG(stctime)
(l.1062,c.20) get tok: STRING(,)
(l.1063,c.3) get tok: INT(INT[195])
(l.1063,c.17) get tok: REF TAG(unused3)
(l.1063,c.18) get tok: STRING(,)
(l.1063,c.26) get tok: REF TAG(unused4)
(l.1063,c.27) get tok: STRING(,)
(l.1063,c.35) get tok: REF TAG(unused5)
(l.1063,c.36) get tok: STRING())
(l.1065,c.2) get tok: CONTROL( )
(l.1067,c.2) get tok: CONTROL(d)
(l.1067,c.17) get tok: REF TAG(macronostat)
(l.1067,c.18) get tok: STRING(=)
(l.1068,c.15) get tok: REF TAG(macromodestat)
(l.1068,c.16) get tok: STRING(;)
(l.1069,c.3) get tok: INT(REF[53])
(l.1069,c.8) get tok: REF TAG(STAT)
(l.1069,c.17) get tok: REF TAG(nostat)
(l.1069,c.18) get tok: STRING(=)
(l.1069,c.22) get tok: INT(NIL[180])
(l.1071,c.2) get tok: CONTROL( )
(l.1074,c.2) get tok: CONTROL(m)
(l.1074,c.12) get tok: REF TAG(sifmt)
(l.1074,c.13) get tok: STRING(=)
(l.1074,c.22) get tok: STRING(16rf000)
(l.1076,c.2) get tok: CONTROL(m)
(l.1076,c.12) get tok: REF TAG(sifsock)
(l.1076,c.13) get tok: STRING(=)
(l.1076,c.22) get tok: STRING(16rc000)
(l.1077,c.2) get tok: CONTROL(m)
(l.1077,c.12) get tok: REF TAG(siflnk)
(l.1077,c.13) get tok: STRING(=)
(l.1077,c.22) get tok: STRING(16ra000)
(l.1078,c.2) get tok: CONTROL(m)
(l.1078,c.12) get tok: REF TAG(sifnor)
(l.1078,c.13) get tok: STRING(=)
(l.1078,c.22) get tok: STRING(16r8000)
(l.1079,c.2) get tok: CONTROL(m)
(l.1079,c.12) get tok: REF TAG(sifblk)
(l.1079,c.13) get tok: STRING(=)
(l.1079,c.22) get tok: STRING(16r6000)
(l.1080,c.2) get tok: CONTROL(m)
(l.1080,c.12) get tok: REF TAG(sifdir)
(l.1080,c.13) get tok: STRING(=)
(l.1080,c.22) get tok: STRING(16r4000)
(l.1081,c.2) get tok: CONTROL(m)
(l.1081,c.12) get tok: REF TAG(sifchr)
(l.1081,c.13) get tok: STRING(=)
(l.1081,c.22) get tok: STRING(16r2000)
(l.1082,c.2) get tok: CONTROL(m)
(l.1082,c.12) get tok: REF TAG(sififo)
(l.1082,c.13) get tok: STRING(=)
(l.1082,c.22) get tok: STRING(16r1000)
(l.1084,c.2) get tok: CONTROL(m)
(l.1084,c.11) get tok: REF TAG(sisuid)
(l.1084,c.12) get tok: STRING(=)
(l.1084,c.16) get tok: STRING(21)
(l.1085,c.2) get tok: CONTROL(m)
(l.1085,c.11) get tok: REF TAG(sisgid)
(l.1085,c.12) get tok: STRING(=)
(l.1085,c.16) get tok: STRING(22)
(l.1086,c.2) get tok: CONTROL(m)
(l.1086,c.11) get tok: REF TAG(sisvtx)
(l.1086,c.12) get tok: STRING(=)
(l.1086,c.16) get tok: STRING(23)
(l.1088,c.2) get tok: CONTROL(m)
(l.1088,c.11) get tok: REF TAG(sirusr)
(l.1088,c.12) get tok: STRING(=)
(l.1088,c.16) get tok: STRING(24)
(l.1089,c.2) get tok: CONTROL(m)
(l.1089,c.11) get tok: REF TAG(siwusr)
(l.1089,c.12) get tok: STRING(=)
(l.1089,c.16) get tok: STRING(25)
(l.1090,c.2) get tok: CONTROL(m)
(l.1090,c.11) get tok: REF TAG(sixusr)
(l.1090,c.12) get tok: STRING(=)
(l.1090,c.16) get tok: STRING(26)
(l.1092,c.2) get tok: CONTROL(m)
(l.1092,c.11) get tok: REF TAG(sirgrp)
(l.1092,c.12) get tok: STRING(=)
(l.1092,c.16) get tok: STRING(27)
(l.1093,c.2) get tok: CONTROL(m)
(l.1093,c.11) get tok: REF TAG(siwgrp)
(l.1093,c.12) get tok: STRING(=)
(l.1093,c.16) get tok: STRING(28)
(l.1094,c.2) get tok: CONTROL(m)
(l.1094,c.11) get tok: REF TAG(sixgrp)
(l.1094,c.12) get tok: STRING(=)
(l.1094,c.16) get tok: STRING(29)
(l.1096,c.2) get tok: CONTROL(m)
(l.1096,c.11) get tok: REF TAG(siroth)
(l.1096,c.12) get tok: STRING(=)
(l.1096,c.16) get tok: STRING(30)
(l.1097,c.2) get tok: CONTROL(m)
(l.1097,c.11) get tok: REF TAG(siwoth)
(l.1097,c.12) get tok: STRING(=)
(l.1097,c.16) get tok: STRING(31)
(l.1098,c.2) get tok: CONTROL(m)
(l.1098,c.11) get tok: REF TAG(sixoth)
(l.1098,c.12) get tok: STRING(=)
(l.1098,c.16) get tok: STRING(32)
(l.1100,c.2) get tok: CONTROL( )
(l.1103,c.2) get tok: CONTROL(d)
(l.1103,c.15) get tok: REF TAG(macroislnk)
(l.1103,c.16) get tok: STRING(=)
(l.1104,c.15) get tok: REF TAG(macromodestat)
(l.1104,c.16) get tok: STRING(;)
(l.1105,c.4) get tok: INT(PROC[69])
(l.1105,c.12) get tok: REF TAG(islnk)
(l.1105,c.13) get tok: STRING(=)
(l.1105,c.15) get tok: STRING(()
(l.1105,c.18) get tok: INT(REF[53])
(l.1105,c.23) get tok: REF TAG(STAT)
(l.1105,c.26) get tok: REF TAG(st)
(l.1105,c.27) get tok: STRING())
(l.1105,c.31) get tok: INT(BOOL[184])
(l.1105,c.32) get tok: STRING(:)
(l.1105,c.34) get tok: STRING(()
(l.1105,c.42) get tok: REF TAG(stmode)
(l.1105,c.44) get tok: INT(OF[97])
(l.1105,c.48) get tok: REF TAG(st)
(l.1105,c.49) get tok: STRING(&)
(l.1105,c.56) get tok: REF TAG(sifmt)
(l.1105,c.57) get tok: STRING())
(l.1105,c.59) get tok: STRING(=)
(l.1107,c.0) get tok: REF TAG(siflnk)
(l.1107,c.2) get tok: CONTROL(d)
(l.1107,c.15) get tok: REF TAG(macroisnor)
(l.1107,c.16) get tok: STRING(=)
(l.1108,c.15) get tok: REF TAG(macromodestat)
(l.1108,c.16) get tok: STRING(;)
(l.1109,c.4) get tok: INT(PROC[69])
(l.1109,c.12) get tok: REF TAG(isnor)
(l.1109,c.13) get tok: STRING(=)
(l.1110,c.1) get tok: STRING(()
(l.1110,c.4) get tok: INT(REF[53])
(l.1110,c.9) get tok: REF TAG(STAT)
(l.1110,c.12) get tok: REF TAG(st)
(l.1110,c.13) get tok: STRING())
(l.1110,c.17) get tok: INT(BOOL[184])
(l.1110,c.18) get tok: STRING(:)
(l.1110,c.20) get tok: STRING(()
(l.1110,c.28) get tok: REF TAG(stmode)
(l.1110,c.30) get tok: INT(OF[97])
(l.1110,c.34) get tok: REF TAG(st)
(l.1110,c.35) get tok: STRING(&)
(l.1110,c.42) get tok: REF TAG(sifmt)
(l.1110,c.43) get tok: STRING())
(l.1110,c.45) get tok: STRING(=)
(l.1112,c.0) get tok: REF TAG(sifnor)
(l.1112,c.2) get tok: CONTROL(d)
(l.1112,c.15) get tok: REF TAG(macroisdir)
(l.1112,c.16) get tok: STRING(=)
(l.1113,c.15) get tok: REF TAG(macromodestat)
(l.1113,c.16) get tok: STRING(;)
(l.1114,c.4) get tok: INT(PROC[69])
(l.1114,c.12) get tok: REF TAG(isdir)
(l.1114,c.13) get tok: STRING(=)
(l.1115,c.1) get tok: STRING(()
(l.1115,c.4) get tok: INT(REF[53])
(l.1115,c.9) get tok: REF TAG(STAT)
(l.1115,c.12) get tok: REF TAG(st)
(l.1115,c.13) get tok: STRING())
(l.1115,c.17) get tok: INT(BOOL[184])
(l.1115,c.18) get tok: STRING(:)
(l.1115,c.20) get tok: STRING(()
(l.1115,c.28) get tok: REF TAG(stmode)
(l.1115,c.30) get tok: INT(OF[97])
(l.1115,c.34) get tok: REF TAG(st)
(l.1115,c.35) get tok: STRING(&)
(l.1115,c.42) get tok: REF TAG(sifmt)
(l.1115,c.43) get tok: STRING())
(l.1115,c.45) get tok: STRING(=)
(l.1117,c.0) get tok: REF TAG(sifdir)
(l.1117,c.2) get tok: CONTROL(d)
(l.1117,c.15) get tok: REF TAG(macroischr)
(l.1117,c.16) get tok: STRING(=)
(l.1118,c.15) get tok: REF TAG(macromodestat)
(l.1118,c.16) get tok: STRING(;)
(l.1119,c.4) get tok: INT(PROC[69])
(l.1119,c.12) get tok: REF TAG(ischr)
(l.1119,c.13) get tok: STRING(=)
(l.1120,c.1) get tok: STRING(()
(l.1120,c.4) get tok: INT(REF[53])
(l.1120,c.9) get tok: REF TAG(STAT)
(l.1120,c.12) get tok: REF TAG(st)
(l.1120,c.13) get tok: STRING())
(l.1120,c.17) get tok: INT(BOOL[184])
(l.1120,c.18) get tok: STRING(:)
(l.1120,c.20) get tok: STRING(()
(l.1120,c.28) get tok: REF TAG(stmode)
(l.1120,c.30) get tok: INT(OF[97])
(l.1120,c.34) get tok: REF TAG(st)
(l.1120,c.35) get tok: STRING(&)
(l.1120,c.42) get tok: REF TAG(sifmt)
(l.1120,c.43) get tok: STRING())
(l.1120,c.45) get tok: STRING(=)
(l.1122,c.0) get tok: REF TAG(sifchr)
(l.1122,c.2) get tok: CONTROL(d)
(l.1122,c.15) get tok: REF TAG(macroisblk)
(l.1122,c.16) get tok: STRING(=)
(l.1123,c.15) get tok: REF TAG(macromodestat)
(l.1123,c.16) get tok: STRING(;)
(l.1124,c.4) get tok: INT(PROC[69])
(l.1124,c.12) get tok: REF TAG(isblk)
(l.1124,c.13) get tok: STRING(=)
(l.1125,c.1) get tok: STRING(()
(l.1125,c.4) get tok: INT(REF[53])
(l.1125,c.9) get tok: REF TAG(STAT)
(l.1125,c.12) get tok: REF TAG(st)
(l.1125,c.13) get tok: STRING())
(l.1125,c.17) get tok: INT(BOOL[184])
(l.1125,c.18) get tok: STRING(:)
(l.1125,c.20) get tok: STRING(()
(l.1125,c.28) get tok: REF TAG(stmode)
(l.1125,c.30) get tok: INT(OF[97])
(l.1125,c.34) get tok: REF TAG(st)
(l.1125,c.35) get tok: STRING(&)
(l.1125,c.42) get tok: REF TAG(sifmt)
(l.1125,c.43) get tok: STRING())
(l.1125,c.45) get tok: STRING(=)
(l.1127,c.0) get tok: REF TAG(sifblk)
(l.1127,c.2) get tok: CONTROL(d)
(l.1127,c.15) get tok: REF TAG(macroisfifo)
(l.1127,c.16) get tok: STRING(=)
(l.1128,c.15) get tok: REF TAG(macromodestat)
(l.1128,c.16) get tok: STRING(;)
(l.1129,c.4) get tok: INT(PROC[69])
(l.1129,c.12) get tok: REF TAG(isfifo)
(l.1129,c.13) get tok: STRING(=)
(l.1130,c.1) get tok: STRING(()
(l.1130,c.4) get tok: INT(REF[53])
(l.1130,c.9) get tok: REF TAG(STAT)
(l.1130,c.12) get tok: REF TAG(st)
(l.1130,c.13) get tok: STRING())
(l.1130,c.17) get tok: INT(BOOL[184])
(l.1130,c.18) get tok: STRING(:)
(l.1130,c.20) get tok: STRING(()
(l.1130,c.28) get tok: REF TAG(stmode)
(l.1130,c.30) get tok: INT(OF[97])
(l.1130,c.34) get tok: REF TAG(st)
(l.1130,c.35) get tok: STRING(&)
(l.1130,c.42) get tok: REF TAG(sifmt)
(l.1130,c.43) get tok: STRING())
(l.1130,c.45) get tok: STRING(=)
(l.1132,c.0) get tok: REF TAG(sififo)
(l.1132,c.2) get tok: CONTROL(d)
(l.1132,c.15) get tok: REF TAG(macroissock)
(l.1132,c.16) get tok: STRING(=)
(l.1133,c.15) get tok: REF TAG(macromodestat)
(l.1133,c.16) get tok: STRING(;)
(l.1134,c.4) get tok: INT(PROC[69])
(l.1134,c.12) get tok: REF TAG(issock)
(l.1134,c.13) get tok: STRING(=)
(l.1135,c.1) get tok: STRING(()
(l.1135,c.4) get tok: INT(REF[53])
(l.1135,c.9) get tok: REF TAG(STAT)
(l.1135,c.12) get tok: REF TAG(st)
(l.1135,c.13) get tok: STRING())
(l.1135,c.17) get tok: INT(BOOL[184])
(l.1135,c.18) get tok: STRING(:)
(l.1135,c.20) get tok: STRING(()
(l.1135,c.28) get tok: REF TAG(stmode)
(l.1135,c.30) get tok: INT(OF[97])
(l.1135,c.34) get tok: REF TAG(st)
(l.1135,c.35) get tok: STRING(&)
(l.1135,c.42) get tok: REF TAG(sifmt)
(l.1135,c.43) get tok: STRING())
(l.1135,c.45) get tok: STRING(=)
(l.1137,c.0) get tok: REF TAG(sifsock)
(l.1137,c.2) get tok: CONTROL( )
(l.1139,c.2) get tok: CONTROL(d)
(l.1139,c.14) get tok: REF TAG(macrostat)
(l.1139,c.15) get tok: STRING(=)
(l.1140,c.15) get tok: REF TAG(macromodestat)
(l.1140,c.16) get tok: STRING(;)
(l.1141,c.4) get tok: INT(PROC[69])
(l.1141,c.10) get tok: REF TAG(stat)
(l.1141,c.11) get tok: STRING(=)
(l.1141,c.13) get tok: STRING(()
(l.1141,c.19) get tok: INT(STRING[156])
(l.1141,c.22) get tok: REF TAG(fn)
(l.1141,c.23) get tok: STRING())
(l.1141,c.26) get tok: INT(REF[53])
(l.1141,c.31) get tok: REF TAG(STAT)
(l.1142,c.0) get tok: STRING(:)
(l.1142,c.2) get tok: INT(IF[62])
(l.1142,c.7) get tok: INT(HEAP[48])
(l.1142,c.12) get tok: REF TAG(STAT)
(l.1142,c.15) get tok: REF TAG(st)
(l.1142,c.16) get tok: STRING(;)
(l.1143,c.4) get tok: INT(PROC[69])
(l.1143,c.5) get tok: STRING(()
(l.1143,c.11) get tok: REF TAG(VECTOR)
(l.1143,c.12) get tok: STRING([)
(l.1143,c.13) get tok: STRING(])
(l.1143,c.17) get tok: INT(CHAR[113])
(l.1143,c.22) get tok: STRING(,)
(l.1143,c.25) get tok: INT(REF[53])
(l.1143,c.30) get tok: REF TAG(STAT)
(l.1143,c.31) get tok: STRING())
(l.1143,c.34) get tok: INT(INT[195])
(l.1144,c.0) get tok: REF TAG(linuxstat)
(l.1144,c.1) get tok: STRING(=)
(l.1144,c.7) get tok: INT(ALIEN[245])
(l.1145,c.0) get tok: STRING("STAT")
(l.1146,c.0) get tok: STRING("#include <sys/stat.h>")
(l.1147,c.0) get tok: STRING("#define STAT(fn,buff) \")
(l.1147,c.51) get tok: STRING("   A_int_INT(stat(A_VC_charptr(fn),(void *)buff))")
(l.1147,c.52) get tok: STRING(;)
(l.1149,c.10) get tok: REF TAG(linuxstat)
(l.1149,c.11) get tok: STRING(()
(l.1149,c.12) get tok: REF TAG(Z)
(l.1149,c.20) get tok: REF TAG(MAKERVC)
(l.1149,c.23) get tok: REF TAG(fn)
(l.1149,c.24) get tok: STRING(,)
(l.1149,c.26) get tok: REF TAG(st)
(l.1149,c.27) get tok: STRING())
(l.1149,c.30) get tok: STRING(/=)
(l.1150,c.0) get tok: STRING(0)
(l.1150,c.4) get tok: INT(THEN[190])
(l.1150,c.8) get tok: INT(NIL[180])
(l.1151,c.4) get tok: INT(ELSE[4])
(l.1152,c.0) get tok: REF TAG(st)
(l.1152,c.2) get tok: INT(FI[107])
(l.1154,c.2) get tok: CONTROL( )
(l.1156,c.2) get tok: CONTROL(d)
(l.1156,c.15) get tok: REF TAG(macrolstat)
(l.1156,c.16) get tok: STRING(=)
(l.1157,c.15) get tok: REF TAG(macromodestat)
(l.1157,c.16) get tok: STRING(;)
(l.1158,c.4) get tok: INT(PROC[69])
(l.1158,c.11) get tok: REF TAG(lstat)
(l.1158,c.12) get tok: STRING(=)
(l.1158,c.14) get tok: STRING(()
(l.1158,c.20) get tok: INT(STRING[156])
(l.1158,c.23) get tok: REF TAG(fn)
(l.1158,c.24) get tok: STRING())
(l.1158,c.27) get tok: INT(REF[53])
(l.1158,c.32) get tok: REF TAG(STAT)
(l.1159,c.0) get tok: STRING(:)
(l.1159,c.2) get tok: INT(IF[62])
(l.1159,c.7) get tok: INT(HEAP[48])
(l.1159,c.12) get tok: REF TAG(STAT)
(l.1159,c.15) get tok: REF TAG(st)
(l.1159,c.16) get tok: STRING(;)
(l.1160,c.4) get tok: INT(PROC[69])
(l.1160,c.5) get tok: STRING(()
(l.1160,c.11) get tok: REF TAG(VECTOR)
(l.1160,c.12) get tok: STRING([)
(l.1160,c.13) get tok: STRING(])
(l.1160,c.17) get tok: INT(CHAR[113])
(l.1160,c.22) get tok: STRING(,)
(l.1160,c.25) get tok: INT(REF[53])
(l.1160,c.30) get tok: REF TAG(STAT)
(l.1160,c.31) get tok: STRING())
(l.1160,c.34) get tok: INT(INT[195])
(l.1161,c.0) get tok: REF TAG(linuxlstat)
(l.1161,c.1) get tok: STRING(=)
(l.1161,c.7) get tok: INT(ALIEN[245])
(l.1162,c.0) get tok: STRING("LSTAT")
(l.1163,c.0) get tok: STRING("#define LSTAT(fn,buff) \")
(l.1163,c.52) get tok: STRING("   A_int_INT(lstat(A_VC_charptr(fn),(void *)buff))")
(l.1163,c.53) get tok: STRING(;)
(l.1165,c.11) get tok: REF TAG(linuxlstat)
(l.1165,c.12) get tok: STRING(()
(l.1165,c.13) get tok: REF TAG(Z)
(l.1165,c.21) get tok: REF TAG(MAKERVC)
(l.1165,c.24) get tok: REF TAG(fn)
(l.1165,c.25) get tok: STRING(,)
(l.1165,c.27) get tok: REF TAG(st)
(l.1165,c.28) get tok: STRING())
(l.1165,c.31) get tok: STRING(/=)
(l.1166,c.0) get tok: STRING(0)
(l.1166,c.4) get tok: INT(THEN[190])
(l.1166,c.8) get tok: INT(NIL[180])
(l.1167,c.4) get tok: INT(ELSE[4])
(l.1168,c.0) get tok: REF TAG(st)
(l.1168,c.2) get tok: INT(FI[107])
(l.1170,c.2) get tok: CONTROL( )
(l.1172,c.2) get tok: CONTROL(d)
(l.1172,c.15) get tok: REF TAG(macrofstat)
(l.1172,c.16) get tok: STRING(=)
(l.1173,c.15) get tok: REF TAG(macromodestat)
(l.1173,c.16) get tok: STRING(;)
(l.1174,c.4) get tok: INT(PROC[69])
(l.1174,c.11) get tok: REF TAG(fstat)
(l.1174,c.12) get tok: STRING(=)
(l.1174,c.14) get tok: STRING(()
(l.1174,c.18) get tok: INT(FILE[59])
(l.1174,c.20) get tok: REF TAG(f)
(l.1174,c.21) get tok: STRING())
(l.1174,c.24) get tok: INT(REF[53])
(l.1174,c.29) get tok: REF TAG(STAT)
(l.1175,c.0) get tok: STRING(:)
(l.1175,c.2) get tok: INT(IF[62])
(l.1175,c.7) get tok: INT(HEAP[48])
(l.1175,c.12) get tok: REF TAG(STAT)
(l.1175,c.15) get tok: REF TAG(st)
(l.1175,c.16) get tok: STRING(;)
(l.1176,c.4) get tok: INT(PROC[69])
(l.1176,c.5) get tok: STRING(()
(l.1176,c.8) get tok: INT(INT[195])
(l.1176,c.13) get tok: STRING(,)
(l.1176,c.16) get tok: INT(REF[53])
(l.1176,c.21) get tok: REF TAG(STAT)
(l.1176,c.22) get tok: STRING())
(l.1176,c.25) get tok: INT(INT[195])
(l.1177,c.0) get tok: REF TAG(linuxfstat)
(l.1177,c.1) get tok: STRING(=)
(l.1177,c.7) get tok: INT(ALIEN[245])
(l.1178,c.0) get tok: STRING("FSTAT")
(l.1179,c.0) get tok: STRING("#define FSTAT(fd,buff) \")
(l.1179,c.38) get tok: STRING("   A_int_INT(fstat(fd,(void *)buff))")
(l.1179,c.39) get tok: STRING(;)
(l.1181,c.11) get tok: REF TAG(linuxfstat)
(l.1181,c.12) get tok: STRING(()
(l.1181,c.21) get tok: REF TAG(sysfile)
(l.1181,c.23) get tok: INT(OF[97])
(l.1181,c.25) get tok: REF TAG(f)
(l.1181,c.26) get tok: STRING(,)
(l.1181,c.28) get tok: REF TAG(st)
(l.1181,c.29) get tok: STRING())
(l.1181,c.32) get tok: STRING(/=)
(l.1182,c.0) get tok: STRING(0)
(l.1182,c.4) get tok: INT(THEN[190])
(l.1182,c.8) get tok: INT(NIL[180])
(l.1183,c.4) get tok: INT(ELSE[4])
(l.1184,c.0) get tok: REF TAG(st)
(l.1184,c.2) get tok: INT(FI[107])
(l.1186,c.2) get tok: CONTROL( )
(l.1189,c.2) get tok: CONTROL(d)
(l.1189,c.21) get tok: REF TAG(macroopftypelet)
(l.1189,c.22) get tok: STRING(=)
(l.1190,c.2) get tok: INT(OP[87])
(l.1190,c.11) get tok: REF TAG(FTYPELET)
(l.1190,c.13) get tok: STRING(=)
(l.1190,c.15) get tok: STRING(()
(l.1190,c.19) get tok: INT(BITS[164])
(l.1190,c.24) get tok: REF TAG(mode)
(l.1190,c.25) get tok: STRING())
(l.1190,c.29) get tok: INT(CHAR[113])
(l.1191,c.0) get tok: STRING(:)
(l.1191,c.2) get tok: INT(IF[62])
(l.1191,c.6) get tok: STRING(()
(l.1191,c.11) get tok: REF TAG(mode)
(l.1191,c.12) get tok: STRING(&)
(l.1191,c.19) get tok: REF TAG(sifmt)
(l.1191,c.20) get tok: STRING())
(l.1191,c.22) get tok: STRING(=)
(l.1191,c.31) get tok: REF TAG(sifblk)
(l.1191,c.35) get tok: INT(THEN[190])
(l.1192,c.0) get tok: STRING("b")
(l.1192,c.4) get tok: INT(ELIF[9])
(l.1192,c.6) get tok: STRING(()
(l.1192,c.11) get tok: REF TAG(mode)
(l.1192,c.12) get tok: STRING(&)
(l.1192,c.19) get tok: REF TAG(sifmt)
(l.1192,c.20) get tok: STRING())
(l.1192,c.22) get tok: STRING(=)
(l.1192,c.31) get tok: REF TAG(sifchr)
(l.1192,c.35) get tok: INT(THEN[190])
(l.1193,c.0) get tok: STRING("c")
(l.1193,c.4) get tok: INT(ELIF[9])
(l.1193,c.6) get tok: STRING(()
(l.1193,c.11) get tok: REF TAG(mode)
(l.1193,c.12) get tok: STRING(&)
(l.1193,c.19) get tok: REF TAG(sifmt)
(l.1193,c.20) get tok: STRING())
(l.1193,c.22) get tok: STRING(=)
(l.1193,c.31) get tok: REF TAG(sifdir)
(l.1193,c.35) get tok: INT(THEN[190])
(l.1194,c.0) get tok: STRING("d")
(l.1194,c.4) get tok: INT(ELIF[9])
(l.1194,c.6) get tok: STRING(()
(l.1194,c.11) get tok: REF TAG(mode)
(l.1194,c.12) get tok: STRING(&)
(l.1194,c.19) get tok: REF TAG(sifmt)
(l.1194,c.20) get tok: STRING())
(l.1194,c.22) get tok: STRING(=)
(l.1194,c.31) get tok: REF TAG(sifnor)
(l.1194,c.35) get tok: INT(THEN[190])
(l.1195,c.0) get tok: STRING("-")
(l.1195,c.4) get tok: INT(ELIF[9])
(l.1195,c.6) get tok: STRING(()
(l.1195,c.11) get tok: REF TAG(mode)
(l.1195,c.12) get tok: STRING(&)
(l.1195,c.19) get tok: REF TAG(sifmt)
(l.1195,c.20) get tok: STRING())
(l.1195,c.22) get tok: STRING(=)
(l.1195,c.31) get tok: REF TAG(sififo)
(l.1195,c.35) get tok: INT(THEN[190])
(l.1196,c.0) get tok: STRING("p")
(l.1196,c.4) get tok: INT(ELIF[9])
(l.1196,c.6) get tok: STRING(()
(l.1196,c.11) get tok: REF TAG(mode)
(l.1196,c.12) get tok: STRING(&)
(l.1196,c.19) get tok: REF TAG(sifmt)
(l.1196,c.20) get tok: STRING())
(l.1196,c.22) get tok: STRING(=)
(l.1196,c.31) get tok: REF TAG(sifsock)
(l.1196,c.35) get tok: INT(THEN[190])
(l.1197,c.0) get tok: STRING("s")
(l.1197,c.4) get tok: INT(ELIF[9])
(l.1197,c.6) get tok: STRING(()
(l.1197,c.11) get tok: REF TAG(mode)
(l.1197,c.12) get tok: STRING(&)
(l.1197,c.19) get tok: REF TAG(sifmt)
(l.1197,c.20) get tok: STRING())
(l.1197,c.22) get tok: STRING(=)
(l.1197,c.31) get tok: REF TAG(siflnk)
(l.1197,c.35) get tok: INT(THEN[190])
(l.1198,c.0) get tok: STRING("l")
(l.1198,c.4) get tok: INT(ELSE[4])
(l.1199,c.0) get tok: STRING("?")
(l.1199,c.2) get tok: INT(FI[107])
(l.1201,c.2) get tok: CONTROL( )
(l.1204,c.2) get tok: CONTROL(d)
(l.1204,c.21) get tok: REF TAG(macromodestring)
(l.1204,c.22) get tok: STRING(=)
(l.1205,c.17) get tok: REF TAG(macroopftypelet)
(l.1205,c.18) get tok: STRING(;)
(l.1206,c.4) get tok: INT(PROC[69])
(l.1206,c.17) get tok: REF TAG(modestring)
(l.1206,c.18) get tok: STRING(=)
(l.1206,c.20) get tok: STRING(()
(l.1206,c.24) get tok: INT(BITS[164])
(l.1206,c.29) get tok: REF TAG(mode)
(l.1206,c.30) get tok: STRING())
(l.1206,c.31) get tok: STRING([)
(l.1206,c.32) get tok: STRING(])
(l.1206,c.36) get tok: INT(CHAR[113])
(l.1207,c.0) get tok: STRING(:)
(l.1207,c.1) get tok: STRING(()
(l.1207,c.9) get tok: REF TAG(FTYPELET)
(l.1207,c.14) get tok: REF TAG(mode)
(l.1207,c.15) get tok: STRING(,)
(l.1208,c.1) get tok: STRING(()
(l.1208,c.9) get tok: REF TAG(sirusr)
(l.1208,c.13) get tok: INT(ELEM[126])
(l.1208,c.18) get tok: REF TAG(mode)
(l.1208,c.19) get tok: STRING(|)
(l.1208,c.22) get tok: STRING("r")
(l.1208,c.23) get tok: STRING(|)
(l.1208,c.26) get tok: STRING("-")
(l.1208,c.27) get tok: STRING())
(l.1208,c.28) get tok: STRING(,)
(l.1209,c.1) get tok: STRING(()
(l.1209,c.9) get tok: REF TAG(siwusr)
(l.1209,c.13) get tok: INT(ELEM[126])
(l.1209,c.18) get tok: REF TAG(mode)
(l.1209,c.19) get tok: STRING(|)
(l.1209,c.22) get tok: STRING("w")
(l.1209,c.23) get tok: STRING(|)
(l.1209,c.26) get tok: STRING("-")
(l.1209,c.27) get tok: STRING())
(l.1209,c.28) get tok: STRING(,)
(l.1210,c.1) get tok: STRING(()
(l.1210,c.9) get tok: REF TAG(sixusr)
(l.1210,c.13) get tok: INT(ELEM[126])
(l.1210,c.18) get tok: REF TAG(mode)
(l.1210,c.19) get tok: STRING(|)
(l.1210,c.22) get tok: STRING("x")
(l.1210,c.23) get tok: STRING(|)
(l.1210,c.26) get tok: STRING("-")
(l.1210,c.27) get tok: STRING())
(l.1210,c.28) get tok: STRING(,)
(l.1211,c.1) get tok: STRING(()
(l.1211,c.9) get tok: REF TAG(sirgrp)
(l.1211,c.13) get tok: INT(ELEM[126])
(l.1211,c.18) get tok: REF TAG(mode)
(l.1211,c.19) get tok: STRING(|)
(l.1211,c.22) get tok: STRING("r")
(l.1211,c.23) get tok: STRING(|)
(l.1211,c.26) get tok: STRING("-")
(l.1211,c.27) get tok: STRING())
(l.1211,c.28) get tok: STRING(,)
(l.1212,c.1) get tok: STRING(()
(l.1212,c.9) get tok: REF TAG(siwgrp)
(l.1212,c.13) get tok: INT(ELEM[126])
(l.1212,c.18) get tok: REF TAG(mode)
(l.1212,c.19) get tok: STRING(|)
(l.1212,c.22) get tok: STRING("w")
(l.1212,c.23) get tok: STRING(|)
(l.1212,c.26) get tok: STRING("-")
(l.1212,c.27) get tok: STRING())
(l.1212,c.28) get tok: STRING(,)
(l.1213,c.1) get tok: STRING(()
(l.1213,c.9) get tok: REF TAG(sixgrp)
(l.1213,c.13) get tok: INT(ELEM[126])
(l.1213,c.18) get tok: REF TAG(mode)
(l.1213,c.19) get tok: STRING(|)
(l.1213,c.22) get tok: STRING("x")
(l.1213,c.23) get tok: STRING(|)
(l.1213,c.26) get tok: STRING("-")
(l.1213,c.27) get tok: STRING())
(l.1213,c.28) get tok: STRING(,)
(l.1214,c.1) get tok: STRING(()
(l.1214,c.9) get tok: REF TAG(siroth)
(l.1214,c.13) get tok: INT(ELEM[126])
(l.1214,c.18) get tok: REF TAG(mode)
(l.1214,c.19) get tok: STRING(|)
(l.1214,c.22) get tok: STRING("r")
(l.1214,c.23) get tok: STRING(|)
(l.1214,c.26) get tok: STRING("-")
(l.1214,c.27) get tok: STRING())
(l.1214,c.28) get tok: STRING(,)
(l.1215,c.1) get tok: STRING(()
(l.1215,c.9) get tok: REF TAG(siwoth)
(l.1215,c.13) get tok: INT(ELEM[126])
(l.1215,c.18) get tok: REF TAG(mode)
(l.1215,c.19) get tok: STRING(|)
(l.1215,c.22) get tok: STRING("w")
(l.1215,c.23) get tok: STRING(|)
(l.1215,c.26) get tok: STRING("-")
(l.1215,c.27) get tok: STRING())
(l.1215,c.28) get tok: STRING(,)
(l.1216,c.1) get tok: STRING(()
(l.1216,c.9) get tok: REF TAG(sixoth)
(l.1216,c.13) get tok: INT(ELEM[126])
(l.1216,c.18) get tok: REF TAG(mode)
(l.1216,c.19) get tok: STRING(|)
(l.1216,c.22) get tok: STRING("x")
(l.1216,c.23) get tok: STRING(|)
(l.1216,c.26) get tok: STRING("-")
(l.1216,c.27) get tok: STRING())
(l.1216,c.28) get tok: STRING())
(l.1218,c.2) get tok: CONTROL(2)
(l.1225,c.2) get tok: CONTROL(d)
(l.1225,c.25) get tok: REF TAG(macroposixterminate)
(l.1225,c.26) get tok: STRING(=)
(l.1226,c.4) get tok: INT(PROC[69])
(l.1226,c.5) get tok: STRING(()
(l.1226,c.8) get tok: INT(INT[195])
(l.1226,c.9) get tok: STRING(,)
(l.1226,c.12) get tok: INT(INT[195])
(l.1226,c.13) get tok: STRING())
(l.1226,c.16) get tok: INT(INT[195])
(l.1227,c.0) get tok: REF TAG(posixterminate)
(l.1227,c.1) get tok: STRING(=)
(l.1227,c.7) get tok: INT(ALIEN[245])
(l.1228,c.0) get tok: STRING("TERMINATE")
(l.1229,c.0) get tok: STRING("#include <sys/types.h>")
(l.1230,c.0) get tok: STRING("#include <signal.h>")
(l.1232,c.0) get tok: STRING("#define TERMINATE(pid,sig) kill(pid,sig)")
(l.1232,c.2) get tok: CONTROL( )
(l.1236,c.2) get tok: CONTROL(d)
(l.1236,c.26) get tok: REF TAG(macrobsdterminatepg)
(l.1236,c.27) get tok: STRING(=)
(l.1237,c.4) get tok: INT(PROC[69])
(l.1237,c.5) get tok: STRING(()
(l.1237,c.8) get tok: INT(INT[195])
(l.1237,c.9) get tok: STRING(,)
(l.1237,c.12) get tok: INT(INT[195])
(l.1237,c.13) get tok: STRING())
(l.1237,c.16) get tok: INT(INT[195])
(l.1238,c.0) get tok: REF TAG(bsdterminatepg)
(l.1238,c.1) get tok: STRING(=)
(l.1238,c.7) get tok: INT(ALIEN[245])
(l.1239,c.0) get tok: STRING("TERMINATEPG")
(l.1240,c.0) get tok: STRING("#define TERMINATEPG(pgrp,sig) \")
(l.1242,c.0) get tok: STRING("  A_int_INT(killpg(A_INT_int(pgrp),A_INT_int(sig)))")
(l.1242,c.2) get tok: CONTROL( )
(l.1246,c.2) get tok: CONTROL(d)
(l.1246,c.21) get tok: REF TAG(macromodesigset)
(l.1246,c.22) get tok: STRING(=)
(l.1247,c.4) get tok: INT(MODE[211])
(l.1247,c.11) get tok: REF TAG(SIGSET)
(l.1247,c.16) get tok: STRING(=)
(l.1247,c.23) get tok: INT(STRUCT[51])
(l.1247,c.24) get tok: STRING(()
(l.1247,c.30) get tok: INT(STRUCT[51])
(l.1247,c.34) get tok: STRING(32)
(l.1247,c.38) get tok: INT(BITS[164])
(l.1247,c.42) get tok: REF TAG(sig)
(l.1247,c.43) get tok: STRING())
(l.1249,c.2) get tok: CONTROL(d)
(l.1249,c.24) get tok: REF TAG(macromodesigaction)
(l.1249,c.25) get tok: STRING(=)
(l.1250,c.4) get tok: INT(MODE[211])
(l.1250,c.14) get tok: REF TAG(SIGACTION)
(l.1250,c.16) get tok: STRING(=)
(l.1251,c.6) get tok: INT(STRUCT[51])
(l.1251,c.7) get tok: STRING(()
(l.1251,c.11) get tok: REF TAG(CPTR)
(l.1251,c.24) get tok: REF TAG(sa_sigaction)
(l.1251,c.25) get tok: STRING(,)
(l.1252,c.6) get tok: INT(STRUCT[51])
(l.1252,c.10) get tok: STRING(32)
(l.1252,c.14) get tok: INT(BITS[164])
(l.1252,c.22) get tok: REF TAG(sa_mask)
(l.1252,c.23) get tok: STRING(,)
(l.1253,c.4) get tok: INT(BITS[164])
(l.1253,c.13) get tok: REF TAG(sa_flags)
(l.1253,c.14) get tok: STRING())
(l.1255,c.2) get tok: CONTROL(d)
(l.1255,c.22) get tok: REF TAG(macromodesiginfo)
(l.1255,c.23) get tok: STRING(=)
(l.1256,c.4) get tok: INT(MODE[211])
(l.1256,c.12) get tok: REF TAG(SIGINFO)
(l.1256,c.16) get tok: STRING(=)
(l.1256,c.23) get tok: INT(STRUCT[51])
(l.1256,c.24) get tok: STRING(()
(l.1256,c.27) get tok: INT(INT[195])
(l.1257,c.8) get tok: REF TAG(si_signo)
(l.1257,c.9) get tok: STRING(,)
(l.1258,c.8) get tok: REF TAG(si_errno)
(l.1258,c.9) get tok: STRING(,)
(l.1259,c.7) get tok: REF TAG(si_code)
(l.1259,c.8) get tok: STRING(,)
(l.1260,c.7) get tok: REF TAG(si_band)
(l.1260,c.8) get tok: STRING(,)
(l.1261,c.5) get tok: REF TAG(si_fd)
(l.1261,c.6) get tok: STRING())
(l.1263,c.2) get tok: CONTROL( )
(l.1266,c.2) get tok: CONTROL(d)
(l.1266,c.46) get tok: REF TAG(macrooptopdescprocintrefsiginfocptr)
(l.1266,c.47) get tok: STRING(=)
(l.1267,c.18) get tok: REF TAG(macromodesiginfo)
(l.1267,c.19) get tok: STRING(;)
(l.1268,c.2) get tok: INT(OP[87])
(l.1268,c.3) get tok: STRING(()
(l.1268,c.7) get tok: INT(PROC[69])
(l.1268,c.8) get tok: STRING(()
(l.1268,c.11) get tok: INT(INT[195])
(l.1268,c.12) get tok: STRING(,)
(l.1268,c.15) get tok: INT(REF[53])
(l.1268,c.23) get tok: REF TAG(SIGINFO)
(l.1268,c.24) get tok: STRING(,)
(l.1268,c.28) get tok: REF TAG(CPTR)
(l.1268,c.29) get tok: STRING())
(l.1268,c.33) get tok: INT(VOID[181])
(l.1268,c.34) get tok: STRING())
(l.1268,c.39) get tok: REF TAG(PDESC)
(l.1268,c.47) get tok: REF TAG(TOPDESC)
(l.1268,c.49) get tok: STRING(=)
(l.1268,c.54) get tok: REF TAG(BIOP)
(l.1270,c.0) get tok: STRING(99)
(l.1270,c.2) get tok: CONTROL(d)
(l.1270,c.45) get tok: REF TAG(macrooptocptrprocintrefsiginfocptr)
(l.1270,c.46) get tok: STRING(=)
(l.1271,c.18) get tok: REF TAG(macromodesiginfo)
(l.1271,c.19) get tok: STRING(;)
(l.1272,c.2) get tok: INT(OP[87])
(l.1272,c.9) get tok: REF TAG(TOCPTR)
(l.1272,c.11) get tok: STRING(=)
(l.1272,c.13) get tok: STRING(()
(l.1272,c.17) get tok: INT(PROC[69])
(l.1272,c.18) get tok: STRING(()
(l.1272,c.21) get tok: INT(INT[195])
(l.1272,c.22) get tok: STRING(,)
(l.1272,c.25) get tok: INT(REF[53])
(l.1272,c.33) get tok: REF TAG(SIGINFO)
(l.1272,c.34) get tok: STRING(,)
(l.1272,c.38) get tok: REF TAG(CPTR)
(l.1272,c.39) get tok: STRING())
(l.1272,c.43) get tok: INT(VOID[181])
(l.1272,c.45) get tok: REF TAG(p)
(l.1272,c.46) get tok: STRING())
(l.1272,c.50) get tok: REF TAG(CPTR)
(l.1273,c.0) get tok: STRING(:)
(l.1273,c.3) get tok: REF TAG(cp)
(l.1273,c.5) get tok: INT(OF[97])
(l.1273,c.13) get tok: REF TAG(TOPDESC)
(l.1275,c.0) get tok: REF TAG(p)
(l.1275,c.2) get tok: CONTROL( )
(l.1278,c.2) get tok: CONTROL(d)
(l.1278,c.25) get tok: REF TAG(macroposixsigaction)
(l.1278,c.26) get tok: STRING(=)
(l.1279,c.20) get tok: REF TAG(macromodesigaction)
(l.1279,c.21) get tok: STRING(;)
(l.1280,c.4) get tok: INT(PROC[69])
(l.1280,c.5) get tok: STRING(()
(l.1280,c.8) get tok: INT(INT[195])
(l.1280,c.9) get tok: STRING(,)
(l.1280,c.12) get tok: INT(REF[53])
(l.1280,c.22) get tok: REF TAG(SIGACTION)
(l.1280,c.23) get tok: STRING(,)
(l.1280,c.26) get tok: INT(REF[53])
(l.1280,c.36) get tok: REF TAG(SIGACTION)
(l.1280,c.37) get tok: STRING())
(l.1280,c.40) get tok: INT(INT[195])
(l.1281,c.0) get tok: REF TAG(posixsigaction)
(l.1281,c.1) get tok: STRING(=)
(l.1281,c.7) get tok: INT(ALIEN[245])
(l.1282,c.0) get tok: STRING("SIGACTION")
(l.1283,c.0) get tok: STRING("#include <signal.h>")
(l.1284,c.0) get tok: STRING("#define SIGACTION(signum,act,oact) \")
(l.1286,c.0) get tok: STRING("        sigaction(signum,act,oact)")
(l.1286,c.2) get tok: CONTROL( )
(l.1288,c.2) get tok: CONTROL(d)
(l.1288,c.22) get tok: REF TAG(macronosigaction)
(l.1288,c.23) get tok: STRING(=)
(l.1288,c.27) get tok: INT(REF[53])
(l.1288,c.37) get tok: REF TAG(SIGACTION)
(l.1288,c.51) get tok: REF TAG(nosigaction)
(l.1288,c.52) get tok: STRING(=)
(l.1288,c.56) get tok: INT(NIL[180])
(l.1290,c.2) get tok: CONTROL( )
(l.1293,c.2) get tok: CONTROL(m)
(l.1293,c.11) get tok: REF TAG(sigerr)
(l.1293,c.12) get tok: STRING(=)
(l.1293,c.19) get tok: REF TAG(TOCPTR)
(l.1293,c.21) get tok: STRING(-)
(l.1293,c.24) get tok: STRING(1)
(l.1294,c.2) get tok: CONTROL(m)
(l.1294,c.11) get tok: REF TAG(sigdfl)
(l.1294,c.12) get tok: STRING(=)
(l.1294,c.19) get tok: REF TAG(TOCPTR)
(l.1294,c.24) get tok: STRING(0)
(l.1295,c.2) get tok: CONTROL(m)
(l.1295,c.11) get tok: REF TAG(sigign)
(l.1295,c.12) get tok: STRING(=)
(l.1295,c.19) get tok: REF TAG(TOCPTR)
(l.1295,c.24) get tok: STRING(1)
(l.1297,c.2) get tok: CONTROL( )
(l.1300,c.2) get tok: CONTROL(m)
(l.1300,c.16) get tok: REF TAG(sanocldstop)
(l.1300,c.17) get tok: STRING(=)
(l.1300,c.31) get tok: STRING(16r00000001)
(l.1301,c.2) get tok: CONTROL(m)
(l.1301,c.16) get tok: REF TAG(sasiginfo)
(l.1301,c.17) get tok: STRING(=)
(l.1301,c.31) get tok: STRING(16r00000004)
(l.1302,c.2) get tok: CONTROL(m)
(l.1302,c.16) get tok: REF TAG(sastack)
(l.1302,c.17) get tok: STRING(=)
(l.1302,c.31) get tok: STRING(16r08000000)
(l.1303,c.2) get tok: CONTROL(m)
(l.1303,c.16) get tok: REF TAG(sarestart)
(l.1303,c.17) get tok: STRING(=)
(l.1303,c.31) get tok: STRING(16r10000000)
(l.1304,c.2) get tok: CONTROL(m)
(l.1304,c.16) get tok: REF TAG(sainterrupt)
(l.1304,c.17) get tok: STRING(=)
(l.1304,c.31) get tok: STRING(16r20000000)
(l.1305,c.2) get tok: CONTROL(m)
(l.1305,c.16) get tok: REF TAG(sanodefer)
(l.1305,c.17) get tok: STRING(=)
(l.1305,c.31) get tok: STRING(16r40000000)
(l.1307,c.2) get tok: CONTROL(m)
(l.1307,c.16) get tok: REF TAG(saresethand)
(l.1307,c.17) get tok: STRING(=)
(l.1307,c.31) get tok: STRING(16r80000000)
(l.1308,c.2) get tok: CONTROL(m)
(l.1308,c.16) get tok: REF TAG(sanomask)
(l.1308,c.17) get tok: STRING(=)
(l.1309,c.0) get tok: REF TAG(sanodefer)
(l.1309,c.2) get tok: CONTROL(m)
(l.1309,c.16) get tok: REF TAG(saoneshot)
(l.1309,c.17) get tok: STRING(=)
(l.1311,c.0) get tok: REF TAG(saresethand)
(l.1311,c.2) get tok: CONTROL( )
(l.1313,c.2) get tok: CONTROL(m)
(l.1313,c.16) get tok: REF TAG(si_user)
(l.1313,c.17) get tok: STRING(=)
(l.1313,c.19) get tok: STRING(0)
(l.1313,c.20) get tok: STRING(;)
(l.1314,c.2) get tok: CONTROL(m)
(l.1314,c.13) get tok: REF TAG(si_kernel)
(l.1314,c.14) get tok: STRING(=)
(l.1314,c.18) get tok: INT(ABS[226])
(l.1314,c.24) get tok: STRING(16r80)
(l.1314,c.25) get tok: STRING(;)
(l.1315,c.2) get tok: CONTROL(m)
(l.1315,c.16) get tok: REF TAG(si_queue)
(l.1315,c.17) get tok: STRING(=)
(l.1315,c.19) get tok: STRING(-)
(l.1315,c.20) get tok: STRING(1)
(l.1315,c.21) get tok: STRING(;)
(l.1316,c.2) get tok: CONTROL(m)
(l.1316,c.16) get tok: REF TAG(si_timer)
(l.1316,c.17) get tok: STRING(=)
(l.1316,c.19) get tok: STRING(-)
(l.1316,c.20) get tok: STRING(2)
(l.1316,c.21) get tok: STRING(;)
(l.1317,c.2) get tok: CONTROL(m)
(l.1317,c.16) get tok: REF TAG(si_mesgq)
(l.1317,c.17) get tok: STRING(=)
(l.1317,c.19) get tok: STRING(-)
(l.1317,c.20) get tok: STRING(3)
(l.1317,c.21) get tok: STRING(;)
(l.1318,c.2) get tok: CONTROL(m)
(l.1318,c.16) get tok: REF TAG(si_asyncio)
(l.1318,c.17) get tok: STRING(=)
(l.1318,c.19) get tok: STRING(-)
(l.1318,c.20) get tok: STRING(4)
(l.1318,c.21) get tok: STRING(;)
(l.1319,c.2) get tok: CONTROL(m)
(l.1319,c.16) get tok: REF TAG(si_sigio)
(l.1319,c.17) get tok: STRING(=)
(l.1319,c.19) get tok: STRING(-)
(l.1319,c.20) get tok: STRING(5)
(l.1319,c.21) get tok: STRING(;)
(l.1321,c.2) get tok: CONTROL( )
(l.1323,c.2) get tok: CONTROL(d)
(l.1323,c.21) get tok: REF TAG(macrosifromuser)
(l.1323,c.22) get tok: STRING(=)
(l.1324,c.18) get tok: REF TAG(macromodesiginfo)
(l.1324,c.19) get tok: STRING(;)
(l.1325,c.4) get tok: INT(PROC[69])
(l.1325,c.19) get tok: REF TAG(si_fromuser)
(l.1325,c.20) get tok: STRING(=)
(l.1325,c.22) get tok: STRING(()
(l.1325,c.29) get tok: REF TAG(SIGINFO)
(l.1325,c.32) get tok: REF TAG(si)
(l.1325,c.33) get tok: STRING())
(l.1325,c.37) get tok: INT(BOOL[184])
(l.1325,c.38) get tok: STRING(:)
(l.1325,c.47) get tok: REF TAG(si_code)
(l.1325,c.49) get tok: INT(OF[97])
(l.1325,c.53) get tok: REF TAG(si)
(l.1325,c.55) get tok: STRING(<=)
(l.1327,c.0) get tok: STRING(0)
(l.1327,c.2) get tok: CONTROL(d)
(l.1327,c.23) get tok: REF TAG(macrosifromkernel)
(l.1327,c.24) get tok: STRING(=)
(l.1328,c.18) get tok: REF TAG(macromodesiginfo)
(l.1328,c.19) get tok: STRING(;)
(l.1329,c.4) get tok: INT(PROC[69])
(l.1329,c.19) get tok: REF TAG(si_fromkernel)
(l.1329,c.20) get tok: STRING(=)
(l.1329,c.22) get tok: STRING(()
(l.1329,c.29) get tok: REF TAG(SIGINFO)
(l.1329,c.32) get tok: REF TAG(si)
(l.1329,c.33) get tok: STRING())
(l.1329,c.37) get tok: INT(BOOL[184])
(l.1329,c.38) get tok: STRING(:)
(l.1329,c.47) get tok: REF TAG(si_code)
(l.1329,c.49) get tok: INT(OF[97])
(l.1329,c.53) get tok: REF TAG(si)
(l.1329,c.54) get tok: STRING(>)
(l.1331,c.0) get tok: STRING(0)
(l.1331,c.2) get tok: CONTROL( )
(l.1334,c.2) get tok: CONTROL(m)
(l.1334,c.14) get tok: REF TAG(ill_illopc)
(l.1334,c.15) get tok: STRING(=)
(l.1334,c.20) get tok: STRING(1)
(l.1335,c.2) get tok: CONTROL(m)
(l.1335,c.14) get tok: REF TAG(ill_illopn)
(l.1335,c.15) get tok: STRING(=)
(l.1335,c.20) get tok: STRING(2)
(l.1336,c.2) get tok: CONTROL(m)
(l.1336,c.14) get tok: REF TAG(ill_illadr)
(l.1336,c.15) get tok: STRING(=)
(l.1336,c.20) get tok: STRING(3)
(l.1337,c.2) get tok: CONTROL(m)
(l.1337,c.14) get tok: REF TAG(ill_illtrp)
(l.1337,c.15) get tok: STRING(=)
(l.1337,c.20) get tok: STRING(4)
(l.1338,c.2) get tok: CONTROL(m)
(l.1338,c.14) get tok: REF TAG(ill_prvopc)
(l.1338,c.15) get tok: STRING(=)
(l.1338,c.20) get tok: STRING(5)
(l.1339,c.2) get tok: CONTROL(m)
(l.1339,c.14) get tok: REF TAG(ill_prvreg)
(l.1339,c.15) get tok: STRING(=)
(l.1339,c.20) get tok: STRING(6)
(l.1340,c.2) get tok: CONTROL(m)
(l.1340,c.14) get tok: REF TAG(ill_coproc)
(l.1340,c.15) get tok: STRING(=)
(l.1340,c.20) get tok: STRING(7)
(l.1341,c.2) get tok: CONTROL(m)
(l.1341,c.14) get tok: REF TAG(ill_badstk)
(l.1341,c.15) get tok: STRING(=)
(l.1341,c.20) get tok: STRING(8)
(l.1342,c.2) get tok: CONTROL(m)
(l.1342,c.11) get tok: REF TAG(nsigill)
(l.1342,c.12) get tok: STRING(=)
(l.1344,c.0) get tok: STRING(8)
(l.1344,c.2) get tok: CONTROL( )
(l.1347,c.2) get tok: CONTROL(m)
(l.1347,c.14) get tok: REF TAG(fpe_intdiv)
(l.1347,c.15) get tok: STRING(=)
(l.1347,c.20) get tok: STRING(1)
(l.1348,c.2) get tok: CONTROL(m)
(l.1348,c.14) get tok: REF TAG(fpe_intovf)
(l.1348,c.15) get tok: STRING(=)
(l.1348,c.20) get tok: STRING(2)
(l.1349,c.2) get tok: CONTROL(m)
(l.1349,c.14) get tok: REF TAG(fpe_fltdiv)
(l.1349,c.15) get tok: STRING(=)
(l.1349,c.20) get tok: STRING(3)
(l.1350,c.2) get tok: CONTROL(m)
(l.1350,c.14) get tok: REF TAG(fpe_fltovf)
(l.1350,c.15) get tok: STRING(=)
(l.1350,c.20) get tok: STRING(4)
(l.1351,c.2) get tok: CONTROL(m)
(l.1351,c.14) get tok: REF TAG(fpe_fltund)
(l.1351,c.15) get tok: STRING(=)
(l.1351,c.20) get tok: STRING(5)
(l.1352,c.2) get tok: CONTROL(m)
(l.1352,c.14) get tok: REF TAG(fpe_fltres)
(l.1352,c.15) get tok: STRING(=)
(l.1352,c.20) get tok: STRING(6)
(l.1353,c.2) get tok: CONTROL(m)
(l.1353,c.14) get tok: REF TAG(fpe_fltinv)
(l.1353,c.15) get tok: STRING(=)
(l.1353,c.20) get tok: STRING(7)
(l.1354,c.2) get tok: CONTROL(m)
(l.1354,c.14) get tok: REF TAG(fpe_fltsub)
(l.1354,c.15) get tok: STRING(=)
(l.1354,c.20) get tok: STRING(8)
(l.1355,c.2) get tok: CONTROL(m)
(l.1355,c.11) get tok: REF TAG(nsigfpe)
(l.1355,c.12) get tok: STRING(=)
(l.1357,c.0) get tok: STRING(8)
(l.1357,c.2) get tok: CONTROL( )
(l.1360,c.2) get tok: CONTROL(m)
(l.1360,c.15) get tok: REF TAG(segv_maperr)
(l.1360,c.16) get tok: STRING(=)
(l.1360,c.21) get tok: STRING(1)
(l.1361,c.2) get tok: CONTROL(m)
(l.1361,c.15) get tok: REF TAG(segv_accerr)
(l.1361,c.16) get tok: STRING(=)
(l.1361,c.21) get tok: STRING(2)
(l.1362,c.2) get tok: CONTROL(m)
(l.1362,c.12) get tok: REF TAG(nsigsegv)
(l.1362,c.13) get tok: STRING(=)
(l.1364,c.0) get tok: STRING(2)
(l.1364,c.2) get tok: CONTROL( )
(l.1367,c.2) get tok: CONTROL(m)
(l.1367,c.14) get tok: REF TAG(bus_adraln)
(l.1367,c.15) get tok: STRING(=)
(l.1367,c.20) get tok: STRING(1)
(l.1368,c.2) get tok: CONTROL(m)
(l.1368,c.14) get tok: REF TAG(bus_adrerr)
(l.1368,c.15) get tok: STRING(=)
(l.1368,c.20) get tok: STRING(2)
(l.1369,c.2) get tok: CONTROL(m)
(l.1369,c.14) get tok: REF TAG(bus_objerr)
(l.1369,c.15) get tok: STRING(=)
(l.1369,c.20) get tok: STRING(3)
(l.1370,c.2) get tok: CONTROL(m)
(l.1370,c.11) get tok: REF TAG(nsigbus)
(l.1370,c.12) get tok: STRING(=)
(l.1372,c.0) get tok: STRING(3)
(l.1372,c.2) get tok: CONTROL( )
(l.1375,c.2) get tok: CONTROL(m)
(l.1375,c.14) get tok: REF TAG(trap_brkpt)
(l.1375,c.15) get tok: STRING(=)
(l.1375,c.20) get tok: STRING(1)
(l.1376,c.2) get tok: CONTROL(m)
(l.1376,c.14) get tok: REF TAG(trap_trace)
(l.1376,c.15) get tok: STRING(=)
(l.1376,c.20) get tok: STRING(2)
(l.1377,c.2) get tok: CONTROL(m)
(l.1377,c.12) get tok: REF TAG(nsigtrap)
(l.1377,c.13) get tok: STRING(=)
(l.1379,c.0) get tok: STRING(2)
(l.1379,c.2) get tok: CONTROL( )
(l.1382,c.2) get tok: CONTROL(m)
(l.1382,c.15) get tok: REF TAG(cld_exited)
(l.1382,c.16) get tok: STRING(=)
(l.1382,c.21) get tok: STRING(1)
(l.1383,c.2) get tok: CONTROL(m)
(l.1383,c.15) get tok: REF TAG(cld_killed)
(l.1383,c.16) get tok: STRING(=)
(l.1383,c.21) get tok: STRING(2)
(l.1384,c.2) get tok: CONTROL(m)
(l.1384,c.15) get tok: REF TAG(cld_dumped)
(l.1384,c.16) get tok: STRING(=)
(l.1384,c.21) get tok: STRING(3)
(l.1385,c.2) get tok: CONTROL(m)
(l.1385,c.15) get tok: REF TAG(cld_trapped)
(l.1385,c.16) get tok: STRING(=)
(l.1385,c.21) get tok: STRING(4)
(l.1386,c.2) get tok: CONTROL(m)
(l.1386,c.15) get tok: REF TAG(cld_stopped)
(l.1386,c.16) get tok: STRING(=)
(l.1386,c.21) get tok: STRING(5)
(l.1387,c.2) get tok: CONTROL(m)
(l.1387,c.17) get tok: REF TAG(cld_continued)
(l.1387,c.18) get tok: STRING(=)
(l.1387,c.21) get tok: STRING(6)
(l.1388,c.2) get tok: CONTROL(m)
(l.1388,c.12) get tok: REF TAG(nsigchld)
(l.1388,c.13) get tok: STRING(=)
(l.1390,c.0) get tok: STRING(6)
(l.1390,c.2) get tok: CONTROL( )
(l.1393,c.2) get tok: CONTROL(m)
(l.1393,c.12) get tok: REF TAG(poll_in)
(l.1393,c.13) get tok: STRING(=)
(l.1393,c.18) get tok: STRING(1)
(l.1394,c.2) get tok: CONTROL(m)
(l.1394,c.12) get tok: REF TAG(poll_out)
(l.1394,c.13) get tok: STRING(=)
(l.1394,c.18) get tok: STRING(2)
(l.1395,c.2) get tok: CONTROL(m)
(l.1395,c.12) get tok: REF TAG(poll_msg)
(l.1395,c.13) get tok: STRING(=)
(l.1395,c.18) get tok: STRING(3)
(l.1396,c.2) get tok: CONTROL(m)
(l.1396,c.12) get tok: REF TAG(poll_err)
(l.1396,c.13) get tok: STRING(=)
(l.1396,c.18) get tok: STRING(4)
(l.1397,c.2) get tok: CONTROL(m)
(l.1397,c.12) get tok: REF TAG(poll_pri)
(l.1397,c.13) get tok: STRING(=)
(l.1397,c.18) get tok: STRING(5)
(l.1398,c.2) get tok: CONTROL(m)
(l.1398,c.12) get tok: REF TAG(poll_hup)
(l.1398,c.13) get tok: STRING(=)
(l.1398,c.18) get tok: STRING(6)
(l.1399,c.2) get tok: CONTROL(m)
(l.1399,c.12) get tok: REF TAG(nsigpoll)
(l.1399,c.13) get tok: STRING(=)
(l.1401,c.0) get tok: STRING(6)
(l.1401,c.2) get tok: CONTROL( )
(l.1404,c.2) get tok: CONTROL(d)
(l.1404,c.27) get tok: REF TAG(macroposixsigprocmask)
(l.1404,c.28) get tok: STRING(=)
(l.1405,c.17) get tok: REF TAG(macromodesigset)
(l.1405,c.18) get tok: STRING(;)
(l.1406,c.4) get tok: INT(PROC[69])
(l.1406,c.5) get tok: STRING(()
(l.1406,c.8) get tok: INT(INT[195])
(l.1406,c.9) get tok: STRING(,)
(l.1406,c.12) get tok: INT(REF[53])
(l.1406,c.19) get tok: REF TAG(SIGSET)
(l.1406,c.20) get tok: STRING(,)
(l.1406,c.23) get tok: INT(REF[53])
(l.1406,c.30) get tok: REF TAG(SIGSET)
(l.1406,c.31) get tok: STRING())
(l.1406,c.34) get tok: INT(INT[195])
(l.1406,c.53) get tok: REF TAG(posixsigprocmask)
(l.1406,c.54) get tok: STRING(=)
(l.1407,c.5) get tok: INT(ALIEN[245])
(l.1408,c.0) get tok: STRING("SIGPROCMASK")
(l.1409,c.0) get tok: STRING("#define SIGPROCMASK(how,set,oldset) \")
(l.1410,c.0) get tok: STRING("  sigprocmask(how,(sigset_t *)set,\")
(l.1412,c.0) get tok: STRING("                  (sigset_t *)oldset)")
(l.1412,c.2) get tok: CONTROL( )
(l.1414,c.2) get tok: CONTROL(m)
(l.1414,c.17) get tok: REF TAG(sigblock)
(l.1414,c.18) get tok: STRING(=)
(l.1414,c.22) get tok: STRING(0)
(l.1415,c.2) get tok: CONTROL(m)
(l.1415,c.17) get tok: REF TAG(sigunblock)
(l.1415,c.18) get tok: STRING(=)
(l.1415,c.22) get tok: STRING(1)
(l.1416,c.2) get tok: CONTROL(m)
(l.1416,c.17) get tok: REF TAG(sigsetmask)
(l.1416,c.18) get tok: STRING(=)
(l.1416,c.22) get tok: STRING(2)
(l.1418,c.2) get tok: CONTROL( )
(l.1421,c.2) get tok: CONTROL(d)
(l.1421,c.26) get tok: REF TAG(macroposixsigpending)
(l.1421,c.27) get tok: STRING(=)
(l.1422,c.17) get tok: REF TAG(macromodesigset)
(l.1422,c.18) get tok: STRING(;)
(l.1423,c.4) get tok: INT(PROC[69])
(l.1423,c.5) get tok: STRING(()
(l.1423,c.8) get tok: INT(REF[53])
(l.1423,c.15) get tok: REF TAG(SIGSET)
(l.1423,c.21) get tok: STRING())
(l.1423,c.24) get tok: INT(INT[195])
(l.1423,c.42) get tok: REF TAG(posixsigpending)
(l.1423,c.43) get tok: STRING(=)
(l.1424,c.5) get tok: INT(ALIEN[245])
(l.1425,c.0) get tok: STRING("SIGPENDING")
(l.1427,c.0) get tok: STRING("#define SIGPENDING(set) sigpending(set)")
(l.1427,c.2) get tok: CONTROL( )
(l.1431,c.2) get tok: CONTROL(d)
(l.1431,c.26) get tok: REF TAG(macroposixsigsuspend)
(l.1431,c.27) get tok: STRING(=)
(l.1432,c.17) get tok: REF TAG(macromodesigset)
(l.1432,c.18) get tok: STRING(;)
(l.1433,c.4) get tok: INT(PROC[69])
(l.1433,c.5) get tok: STRING(()
(l.1433,c.8) get tok: INT(REF[53])
(l.1433,c.15) get tok: REF TAG(SIGSET)
(l.1433,c.21) get tok: STRING())
(l.1433,c.24) get tok: INT(INT[195])
(l.1433,c.42) get tok: REF TAG(posixsigsuspend)
(l.1433,c.43) get tok: STRING(=)
(l.1434,c.5) get tok: INT(ALIEN[245])
(l.1435,c.0) get tok: STRING("SIGSUSPEND")
(l.1437,c.0) get tok: STRING("#define SIGSUSPEND(set) sigsuspend((sigset_t *)set)")
(l.1437,c.2) get tok: CONTROL( )
(l.1440,c.2) get tok: CONTROL(d)
(l.1440,c.23) get tok: REF TAG(macrosigemptyset)
(l.1440,c.24) get tok: STRING(=)
(l.1441,c.17) get tok: REF TAG(macromodesigset)
(l.1441,c.18) get tok: STRING(;)
(l.1442,c.4) get tok: INT(PROC[69])
(l.1442,c.5) get tok: STRING(()
(l.1442,c.8) get tok: INT(REF[53])
(l.1442,c.15) get tok: REF TAG(SIGSET)
(l.1442,c.16) get tok: STRING())
(l.1442,c.19) get tok: INT(INT[195])
(l.1442,c.34) get tok: REF TAG(sigemptyset)
(l.1442,c.35) get tok: STRING(=)
(l.1442,c.41) get tok: INT(ALIEN[245])
(l.1443,c.0) get tok: STRING("SIGEMPTYSET")
(l.1445,c.0) get tok: STRING("#define SIGEMPTYSET(set) sigemptyset((sigset_t *)set)")
(l.1445,c.2) get tok: CONTROL(d)
(l.1445,c.22) get tok: REF TAG(macrosigfillset)
(l.1445,c.23) get tok: STRING(=)
(l.1446,c.17) get tok: REF TAG(macromodesigset)
(l.1446,c.18) get tok: STRING(;)
(l.1447,c.4) get tok: INT(PROC[69])
(l.1447,c.5) get tok: STRING(()
(l.1447,c.8) get tok: INT(REF[53])
(l.1447,c.15) get tok: REF TAG(SIGSET)
(l.1447,c.16) get tok: STRING())
(l.1447,c.19) get tok: INT(INT[195])
(l.1447,c.33) get tok: REF TAG(sigfillset)
(l.1447,c.34) get tok: STRING(=)
(l.1447,c.40) get tok: INT(ALIEN[245])
(l.1448,c.0) get tok: STRING("SIGFILLSET")
(l.1450,c.0) get tok: STRING("#define SIGFILLSET(set) sigfillset((sigset_t *)set)")
(l.1450,c.2) get tok: CONTROL(d)
(l.1450,c.26) get tok: REF TAG(macrosigisemptyset)
(l.1450,c.27) get tok: STRING(=)
(l.1451,c.17) get tok: REF TAG(macromodesigset)
(l.1451,c.18) get tok: STRING(;)
(l.1452,c.4) get tok: INT(PROC[69])
(l.1452,c.5) get tok: STRING(()
(l.1452,c.8) get tok: INT(REF[53])
(l.1452,c.15) get tok: REF TAG(SIGSET)
(l.1452,c.16) get tok: STRING())
(l.1452,c.19) get tok: INT(INT[195])
(l.1452,c.37) get tok: REF TAG(sigisemptyset)
(l.1452,c.38) get tok: STRING(=)
(l.1453,c.5) get tok: INT(ALIEN[245])
(l.1454,c.0) get tok: STRING("SIGISEMPTYSET")
(l.1455,c.0) get tok: STRING("#define SIGISEMPTYSET(set) \")
(l.1457,c.0) get tok: STRING("   sigisemptyset((sigset_t *)set)")
(l.1457,c.2) get tok: CONTROL(d)
(l.1457,c.21) get tok: REF TAG(macrosigaddset)
(l.1457,c.22) get tok: STRING(=)
(l.1458,c.17) get tok: REF TAG(macromodesigset)
(l.1458,c.18) get tok: STRING(;)
(l.1459,c.4) get tok: INT(PROC[69])
(l.1459,c.5) get tok: STRING(()
(l.1459,c.8) get tok: INT(REF[53])
(l.1459,c.15) get tok: REF TAG(SIGSET)
(l.1459,c.16) get tok: STRING(,)
(l.1459,c.19) get tok: INT(INT[195])
(l.1459,c.20) get tok: STRING())
(l.1459,c.23) get tok: INT(INT[195])
(l.1459,c.36) get tok: REF TAG(sigaddset)
(l.1459,c.37) get tok: STRING(=)
(l.1459,c.43) get tok: INT(ALIEN[245])
(l.1460,c.0) get tok: STRING("SIGADDSET")
(l.1461,c.0) get tok: STRING("#define SIGADDSET(set,sig) \")
(l.1463,c.0) get tok: STRING("   sigaddset((sigset_t *)set,sig)")
(l.1463,c.2) get tok: CONTROL(d)
(l.1463,c.21) get tok: REF TAG(macrosigdelset)
(l.1463,c.22) get tok: STRING(=)
(l.1464,c.17) get tok: REF TAG(macromodesigset)
(l.1464,c.18) get tok: STRING(;)
(l.1465,c.4) get tok: INT(PROC[69])
(l.1465,c.5) get tok: STRING(()
(l.1465,c.8) get tok: INT(REF[53])
(l.1465,c.15) get tok: REF TAG(SIGSET)
(l.1465,c.16) get tok: STRING(,)
(l.1465,c.19) get tok: INT(INT[195])
(l.1465,c.20) get tok: STRING())
(l.1465,c.23) get tok: INT(INT[195])
(l.1465,c.36) get tok: REF TAG(sigdelset)
(l.1465,c.37) get tok: STRING(=)
(l.1465,c.43) get tok: INT(ALIEN[245])
(l.1466,c.0) get tok: STRING("SIGDELSET")
(l.1467,c.0) get tok: STRING("#define SIGDELSET(set,sig) \")
(l.1469,c.0) get tok: STRING("   sigdelset((sigset_t *)set,sig)")
(l.1469,c.2) get tok: CONTROL(d)
(l.1469,c.23) get tok: REF TAG(macrosigismember)
(l.1469,c.24) get tok: STRING(=)
(l.1470,c.17) get tok: REF TAG(macromodesigset)
(l.1470,c.18) get tok: STRING(;)
(l.1471,c.4) get tok: INT(PROC[69])
(l.1471,c.5) get tok: STRING(()
(l.1471,c.8) get tok: INT(REF[53])
(l.1471,c.15) get tok: REF TAG(SIGSET)
(l.1471,c.16) get tok: STRING(,)
(l.1471,c.19) get tok: INT(INT[195])
(l.1471,c.20) get tok: STRING())
(l.1471,c.23) get tok: INT(INT[195])
(l.1471,c.38) get tok: REF TAG(sigismember)
(l.1471,c.39) get tok: STRING(=)
(l.1471,c.45) get tok: INT(ALIEN[245])
(l.1472,c.0) get tok: STRING("SIGISMEMBER")
(l.1473,c.0) get tok: STRING("#define SIGISMEMBER(set,sig) \")
(l.1475,c.0) get tok: STRING("   sigismember((sigset_t *)set,sig)")
(l.1475,c.2) get tok: CONTROL(d)
(l.1475,c.21) get tok: REF TAG(macrosigandset)
(l.1475,c.22) get tok: STRING(=)
(l.1476,c.17) get tok: REF TAG(macromodesigset)
(l.1476,c.18) get tok: STRING(;)
(l.1477,c.4) get tok: INT(PROC[69])
(l.1477,c.5) get tok: STRING(()
(l.1477,c.8) get tok: INT(REF[53])
(l.1477,c.15) get tok: REF TAG(SIGSET)
(l.1477,c.16) get tok: STRING(,)
(l.1477,c.19) get tok: INT(REF[53])
(l.1477,c.26) get tok: REF TAG(SIGSET)
(l.1477,c.27) get tok: STRING(,)
(l.1477,c.30) get tok: INT(REF[53])
(l.1477,c.37) get tok: REF TAG(SIGSET)
(l.1477,c.38) get tok: STRING())
(l.1477,c.41) get tok: INT(INT[195])
(l.1477,c.54) get tok: REF TAG(sigandset)
(l.1477,c.55) get tok: STRING(=)
(l.1478,c.5) get tok: INT(ALIEN[245])
(l.1479,c.0) get tok: STRING("SIGANDSET")
(l.1480,c.0) get tok: STRING("#define SIGANDSET(set,left,right) \")
(l.1481,c.0) get tok: STRING("   sigandset((sigset_t *)set,\")
(l.1482,c.0) get tok: STRING("             (sigset_t *)left,\")
(l.1484,c.0) get tok: STRING("             (sigset_t *)right)")
(l.1484,c.2) get tok: CONTROL(d)
(l.1484,c.20) get tok: REF TAG(macrosigorset)
(l.1484,c.21) get tok: STRING(=)
(l.1485,c.17) get tok: REF TAG(macromodesigset)
(l.1485,c.18) get tok: STRING(;)
(l.1486,c.4) get tok: INT(PROC[69])
(l.1486,c.5) get tok: STRING(()
(l.1486,c.8) get tok: INT(REF[53])
(l.1486,c.15) get tok: REF TAG(SIGSET)
(l.1486,c.16) get tok: STRING(,)
(l.1486,c.19) get tok: INT(REF[53])
(l.1486,c.26) get tok: REF TAG(SIGSET)
(l.1486,c.27) get tok: STRING(,)
(l.1486,c.30) get tok: INT(REF[53])
(l.1486,c.37) get tok: REF TAG(SIGSET)
(l.1486,c.38) get tok: STRING())
(l.1486,c.41) get tok: INT(INT[195])
(l.1486,c.53) get tok: REF TAG(sigorset)
(l.1486,c.54) get tok: STRING(=)
(l.1487,c.5) get tok: INT(ALIEN[245])
(l.1488,c.0) get tok: STRING("SIGORSET")
(l.1489,c.0) get tok: STRING("#define SIGORSET(set,left,right) \")
(l.1490,c.0) get tok: STRING("   sigorset((sigset_t *)set,(sigset_t *)left,\")
(l.1492,c.0) get tok: STRING("   (sigset_t *)right)")
(l.1492,c.2) get tok: CONTROL(2)
(l.1495,c.2) get tok: CONTROL(m)
(l.1495,c.12) get tok: REF TAG(fdsetsz)
(l.1495,c.13) get tok: STRING(=)
(l.1496,c.0) get tok: STRING(32)
(l.1496,c.2) get tok: CONTROL(d)
(l.1496,c.20) get tok: REF TAG(macromodefdset)
(l.1496,c.21) get tok: STRING(=)
(l.1497,c.4) get tok: INT(MODE[211])
(l.1497,c.10) get tok: REF TAG(FDSET)
(l.1497,c.12) get tok: STRING(=)
(l.1497,c.19) get tok: INT(STRUCT[51])
(l.1497,c.20) get tok: STRING(()
(l.1497,c.26) get tok: INT(STRUCT[51])
(l.1497,c.36) get tok: REF TAG(fdsetsz)
(l.1497,c.40) get tok: INT(BITS[164])
(l.1497,c.49) get tok: REF TAG(fdsbits)
(l.1497,c.50) get tok: STRING())
(l.1499,c.2) get tok: CONTROL( )
(l.1501,c.2) get tok: CONTROL(d)
(l.1501,c.22) get tok: REF TAG(macromodetimeval)
(l.1501,c.23) get tok: STRING(=)
(l.1502,c.4) get tok: INT(MODE[211])
(l.1502,c.12) get tok: REF TAG(TIMEVAL)
(l.1502,c.14) get tok: STRING(=)
(l.1502,c.21) get tok: INT(STRUCT[51])
(l.1502,c.22) get tok: STRING(()
(l.1502,c.25) get tok: INT(INT[195])
(l.1502,c.32) get tok: REF TAG(tvsec)
(l.1502,c.33) get tok: STRING(,)
(l.1502,c.40) get tok: REF TAG(tvusec)
(l.1502,c.41) get tok: STRING())
(l.1504,c.2) get tok: CONTROL( )
(l.1506,c.2) get tok: CONTROL(d)
(l.1506,c.16) get tok: REF TAG(macroopset)
(l.1506,c.17) get tok: STRING(=)
(l.1507,c.2) get tok: INT(OP[87])
(l.1507,c.6) get tok: REF TAG(SET)
(l.1507,c.8) get tok: STRING(=)
(l.1507,c.10) get tok: STRING(()
(l.1507,c.13) get tok: INT(INT[195])
(l.1507,c.15) get tok: REF TAG(n)
(l.1507,c.16) get tok: STRING(,)
(l.1507,c.20) get tok: INT(BITS[164])
(l.1507,c.22) get tok: REF TAG(b)
(l.1507,c.23) get tok: STRING())
(l.1507,c.27) get tok: INT(BITS[164])
(l.1507,c.28) get tok: STRING(:)
(l.1507,c.30) get tok: STRING(()
(l.1507,c.32) get tok: REF TAG(b)
(l.1507,c.34) get tok: INT(OR[177])
(l.1507,c.39) get tok: INT(ELEM[126])
(l.1507,c.41) get tok: REF TAG(n)
(l.1507,c.42) get tok: STRING())
(l.1509,c.2) get tok: CONTROL(d)
(l.1509,c.18) get tok: REF TAG(macroopclear)
(l.1509,c.19) get tok: STRING(=)
(l.1510,c.2) get tok: INT(OP[87])
(l.1510,c.8) get tok: REF TAG(CLEAR)
(l.1510,c.10) get tok: STRING(=)
(l.1510,c.12) get tok: STRING(()
(l.1510,c.15) get tok: INT(INT[195])
(l.1510,c.17) get tok: REF TAG(n)
(l.1510,c.18) get tok: STRING(,)
(l.1510,c.22) get tok: INT(BITS[164])
(l.1510,c.24) get tok: REF TAG(b)
(l.1510,c.25) get tok: STRING())
(l.1510,c.29) get tok: INT(BITS[164])
(l.1510,c.30) get tok: STRING(:)
(l.1510,c.32) get tok: STRING(()
(l.1510,c.34) get tok: REF TAG(b)
(l.1510,c.37) get tok: INT(AND[315])
(l.1510,c.41) get tok: INT(NOT[230])
(l.1510,c.46) get tok: INT(ELEM[126])
(l.1510,c.48) get tok: REF TAG(n)
(l.1510,c.49) get tok: STRING())
(l.1512,c.2) get tok: CONTROL( )
(l.1515,c.2) get tok: CONTROL(d)
(l.1515,c.17) get tok: REF TAG(macrofdzero)
(l.1515,c.18) get tok: STRING(=)
(l.1516,c.16) get tok: REF TAG(macromodefdset)
(l.1516,c.17) get tok: STRING(;)
(l.1517,c.4) get tok: INT(PROC[69])
(l.1517,c.13) get tok: REF TAG(fdzero)
(l.1517,c.14) get tok: STRING(=)
(l.1517,c.16) get tok: STRING(()
(l.1517,c.19) get tok: INT(REF[53])
(l.1517,c.25) get tok: REF TAG(FDSET)
(l.1517,c.29) get tok: REF TAG(fds)
(l.1517,c.30) get tok: STRING())
(l.1517,c.33) get tok: INT(REF[53])
(l.1517,c.39) get tok: REF TAG(FDSET)
(l.1518,c.0) get tok: STRING(:)
(l.1518,c.1) get tok: STRING(()
(l.1519,c.3) get tok: INT(FOR[138])
(l.1519,c.6) get tok: REF TAG(i)
(l.1519,c.8) get tok: INT(TO[187])
(l.1519,c.18) get tok: REF TAG(fdsetsz)
(l.1519,c.20) get tok: INT(DO[244])
(l.1519,c.22) get tok: STRING(()
(l.1519,c.31) get tok: REF TAG(fdsbits)
(l.1519,c.33) get tok: INT(OF[97])
(l.1519,c.37) get tok: REF TAG(fds)
(l.1519,c.38) get tok: STRING())
(l.1519,c.39) get tok: STRING([)
(l.1519,c.40) get tok: REF TAG(i)
(l.1519,c.41) get tok: STRING(])
(l.1519,c.43) get tok: STRING(:=)
(l.1519,c.47) get tok: STRING(2r0)
(l.1519,c.49) get tok: INT(OD[231])
(l.1519,c.50) get tok: STRING(;)
(l.1521,c.0) get tok: REF TAG(fds)
(l.1521,c.1) get tok: STRING())
(l.1523,c.2) get tok: CONTROL( )
(l.1528,c.2) get tok: CONTROL(d)
(l.1528,c.16) get tok: REF TAG(macrofdset)
(l.1528,c.17) get tok: STRING(=)
(l.1529,c.16) get tok: REF TAG(macromodefdset)
(l.1529,c.17) get tok: STRING(;)
(l.1530,c.12) get tok: REF TAG(macroopset)
(l.1530,c.13) get tok: STRING(;)
(l.1531,c.4) get tok: INT(PROC[69])
(l.1531,c.12) get tok: REF TAG(fdset)
(l.1531,c.13) get tok: STRING(=)
(l.1531,c.15) get tok: STRING(()
(l.1531,c.18) get tok: INT(INT[195])
(l.1531,c.20) get tok: REF TAG(n)
(l.1531,c.21) get tok: STRING(,)
(l.1531,c.24) get tok: INT(REF[53])
(l.1531,c.30) get tok: REF TAG(FDSET)
(l.1531,c.34) get tok: REF TAG(fds)
(l.1531,c.35) get tok: STRING())
(l.1531,c.38) get tok: INT(REF[53])
(l.1531,c.44) get tok: REF TAG(FDSET)
(l.1532,c.0) get tok: STRING(:)
(l.1532,c.1) get tok: STRING(()
(l.1533,c.3) get tok: INT(REF[53])
(l.1533,c.8) get tok: INT(BITS[164])
(l.1533,c.10) get tok: REF TAG(b)
(l.1533,c.11) get tok: STRING(=)
(l.1533,c.12) get tok: STRING(()
(l.1533,c.21) get tok: REF TAG(fdsbits)
(l.1533,c.23) get tok: INT(OF[97])
(l.1533,c.27) get tok: REF TAG(fds)
(l.1533,c.28) get tok: STRING())
(l.1533,c.29) get tok: STRING([)
(l.1533,c.30) get tok: STRING(1)
(l.1533,c.31) get tok: STRING(+)
(l.1533,c.32) get tok: STRING(()
(l.1533,c.33) get tok: REF TAG(n)
(l.1533,c.34) get tok: STRING(-)
(l.1533,c.35) get tok: STRING(1)
(l.1533,c.36) get tok: STRING())
(l.1533,c.37) get tok: STRING(%)
(l.1533,c.45) get tok: REF TAG(fdsetsz)
(l.1533,c.46) get tok: STRING(])
(l.1533,c.47) get tok: STRING(;)
(l.1534,c.1) get tok: REF TAG(b)
(l.1534,c.3) get tok: STRING(:=)
(l.1534,c.4) get tok: STRING(()
(l.1534,c.14) get tok: REF TAG(bitswidth)
(l.1534,c.15) get tok: STRING(-)
(l.1534,c.17) get tok: REF TAG(n)
(l.1534,c.20) get tok: INT(MOD[282])
(l.1534,c.31) get tok: REF TAG(bitswidth)
(l.1534,c.32) get tok: STRING())
(l.1534,c.36) get tok: REF TAG(SET)
(l.1534,c.38) get tok: REF TAG(b)
(l.1534,c.39) get tok: STRING(;)
(l.1536,c.0) get tok: REF TAG(fds)
(l.1536,c.1) get tok: STRING())
(l.1538,c.2) get tok: CONTROL(d)
(l.1538,c.16) get tok: REF TAG(macrofdclr)
(l.1538,c.17) get tok: STRING(=)
(l.1539,c.16) get tok: REF TAG(macromodefdset)
(l.1539,c.17) get tok: STRING(;)
(l.1540,c.14) get tok: REF TAG(macroopclear)
(l.1540,c.15) get tok: STRING(;)
(l.1541,c.4) get tok: INT(PROC[69])
(l.1541,c.12) get tok: REF TAG(fdclr)
(l.1541,c.13) get tok: STRING(=)
(l.1541,c.15) get tok: STRING(()
(l.1541,c.18) get tok: INT(INT[195])
(l.1541,c.20) get tok: REF TAG(n)
(l.1541,c.21) get tok: STRING(,)
(l.1541,c.24) get tok: INT(REF[53])
(l.1541,c.30) get tok: REF TAG(FDSET)
(l.1541,c.34) get tok: REF TAG(fds)
(l.1541,c.35) get tok: STRING())
(l.1541,c.38) get tok: INT(REF[53])
(l.1541,c.44) get tok: REF TAG(FDSET)
(l.1542,c.0) get tok: STRING(:)
(l.1542,c.1) get tok: STRING(()
(l.1543,c.3) get tok: INT(REF[53])
(l.1543,c.8) get tok: INT(BITS[164])
(l.1543,c.10) get tok: REF TAG(b)
(l.1543,c.11) get tok: STRING(=)
(l.1543,c.12) get tok: STRING(()
(l.1543,c.21) get tok: REF TAG(fdsbits)
(l.1543,c.23) get tok: INT(OF[97])
(l.1543,c.27) get tok: REF TAG(fds)
(l.1543,c.28) get tok: STRING())
(l.1543,c.29) get tok: STRING([)
(l.1543,c.30) get tok: STRING(1)
(l.1543,c.31) get tok: STRING(+)
(l.1543,c.32) get tok: STRING(()
(l.1543,c.33) get tok: REF TAG(n)
(l.1543,c.34) get tok: STRING(-)
(l.1543,c.35) get tok: STRING(1)
(l.1543,c.36) get tok: STRING())
(l.1543,c.37) get tok: STRING(%)
(l.1543,c.45) get tok: REF TAG(fdsetsz)
(l.1543,c.46) get tok: STRING(])
(l.1543,c.47) get tok: STRING(;)
(l.1544,c.1) get tok: REF TAG(b)
(l.1544,c.3) get tok: STRING(:=)
(l.1544,c.4) get tok: STRING(()
(l.1544,c.14) get tok: REF TAG(bitswidth)
(l.1544,c.15) get tok: STRING(-)
(l.1544,c.17) get tok: REF TAG(n)
(l.1544,c.20) get tok: INT(MOD[282])
(l.1544,c.31) get tok: REF TAG(bitswidth)
(l.1544,c.32) get tok: STRING())
(l.1544,c.38) get tok: REF TAG(CLEAR)
(l.1544,c.40) get tok: REF TAG(b)
(l.1544,c.41) get tok: STRING(;)
(l.1546,c.0) get tok: REF TAG(fds)
(l.1546,c.1) get tok: STRING())
(l.1548,c.2) get tok: CONTROL(d)
(l.1548,c.19) get tok: REF TAG(macrofdisset)
(l.1548,c.20) get tok: STRING(=)
(l.1549,c.16) get tok: REF TAG(macromodefdset)
(l.1549,c.17) get tok: STRING(;)
(l.1550,c.4) get tok: INT(PROC[69])
(l.1550,c.15) get tok: REF TAG(fdisset)
(l.1550,c.16) get tok: STRING(=)
(l.1550,c.18) get tok: STRING(()
(l.1550,c.21) get tok: INT(INT[195])
(l.1550,c.23) get tok: REF TAG(n)
(l.1550,c.24) get tok: STRING(,)
(l.1550,c.27) get tok: INT(REF[53])
(l.1550,c.33) get tok: REF TAG(FDSET)
(l.1550,c.37) get tok: REF TAG(fds)
(l.1550,c.38) get tok: STRING())
(l.1550,c.42) get tok: INT(BOOL[184])
(l.1551,c.0) get tok: STRING(:)
(l.1551,c.1) get tok: STRING(()
(l.1552,c.1) get tok: STRING(()
(l.1552,c.11) get tok: REF TAG(bitswidth)
(l.1552,c.12) get tok: STRING(-)
(l.1552,c.14) get tok: REF TAG(n)
(l.1552,c.17) get tok: INT(MOD[282])
(l.1552,c.28) get tok: REF TAG(bitswidth)
(l.1552,c.29) get tok: STRING())
(l.1552,c.34) get tok: INT(ELEM[126])
(l.1553,c.1) get tok: STRING(()
(l.1553,c.10) get tok: REF TAG(fdsbits)
(l.1553,c.12) get tok: INT(OF[97])
(l.1553,c.16) get tok: REF TAG(fds)
(l.1553,c.17) get tok: STRING())
(l.1553,c.18) get tok: STRING([)
(l.1553,c.19) get tok: STRING(1)
(l.1553,c.20) get tok: STRING(+)
(l.1553,c.21) get tok: STRING(()
(l.1553,c.22) get tok: REF TAG(n)
(l.1553,c.23) get tok: STRING(-)
(l.1553,c.24) get tok: STRING(1)
(l.1553,c.25) get tok: STRING())
(l.1553,c.26) get tok: STRING(%)
(l.1553,c.34) get tok: REF TAG(fdsetsz)
(l.1553,c.35) get tok: STRING(])
(l.1554,c.1) get tok: STRING())
(l.1556,c.2) get tok: CONTROL( )
(l.1565,c.2) get tok: CONTROL(d)
(l.1565,c.22) get tok: REF TAG(macroposixselect)
(l.1565,c.23) get tok: STRING(=)
(l.1566,c.16) get tok: REF TAG(macromodefdset)
(l.1566,c.17) get tok: STRING(;)
(l.1567,c.18) get tok: REF TAG(macromodetimeval)
(l.1567,c.19) get tok: STRING(;)
(l.1568,c.4) get tok: INT(PROC[69])
(l.1568,c.5) get tok: STRING(()
(l.1568,c.8) get tok: INT(INT[195])
(l.1568,c.9) get tok: STRING(,)
(l.1569,c.3) get tok: INT(REF[53])
(l.1569,c.9) get tok: REF TAG(FDSET)
(l.1569,c.10) get tok: STRING(,)
(l.1569,c.13) get tok: INT(REF[53])
(l.1569,c.19) get tok: REF TAG(FDSET)
(l.1569,c.20) get tok: STRING(,)
(l.1569,c.23) get tok: INT(REF[53])
(l.1569,c.29) get tok: REF TAG(FDSET)
(l.1569,c.30) get tok: STRING(,)
(l.1570,c.3) get tok: INT(REF[53])
(l.1570,c.11) get tok: REF TAG(TIMEVAL)
(l.1570,c.12) get tok: STRING())
(l.1570,c.15) get tok: INT(INT[195])
(l.1571,c.0) get tok: REF TAG(posixselect)
(l.1571,c.1) get tok: STRING(=)
(l.1571,c.7) get tok: INT(ALIEN[245])
(l.1572,c.0) get tok: STRING("SELECT")
(l.1573,c.0) get tok: STRING("#define SELECT(nfds,readfds,writefds,exceptfds,timeout) \")
(l.1574,c.0) get tok: STRING("   select(nfds,(void *)readfds,(void *)writefds,\")
(l.1576,c.0) get tok: STRING("          (void *)exceptfds,(void *)timeout)")
(l.1576,c.2) get tok: CONTROL( )
(l.78,c.2) get tok: CONTROL(1)
(l.89,c.2) get tok: CONTROL(<)
(l.90,c.4) get tok: INT(BOOL[184])
(l.90,c.10) get tok: REF TAG(debug)
(l.90,c.12) get tok: STRING(:=)
(l.90,c.17) get tok: INT(FALSE[123])
(l.90,c.18) get tok: STRING(;)
(l.92,c.2) get tok: CONTROL( )
(l.96,c.2) get tok: CONTROL(<)
(l.97,c.4) get tok: INT(PROC[69])
(l.97,c.5) get tok: STRING(()
(l.97,c.11) get tok: INT(STRING[156])
(l.97,c.12) get tok: STRING(,)
(l.97,c.17) get tok: REF TAG(TOKEN)
(l.97,c.18) get tok: STRING())
(l.97,c.22) get tok: INT(VOID[181])
(l.97,c.40) get tok: REF TAG(debugprinttoken)
(l.97,c.42) get tok: STRING(:=)
(l.97,c.44) get tok: CONTROL(/)
(l.98,c.2) get tok: CONTROL(+)
(l.98,c.3) get tok: STRING(()
(l.98,c.9) get tok: INT(STRING[156])
(l.98,c.12) get tok: CONTROL(!)
(l.98,c.13) get tok: REF TAG(s)
(l.98,c.14) get tok: STRING(,)
(l.98,c.20) get tok: REF TAG(TOKEN)
(l.98,c.23) get tok: CONTROL(!)
(l.98,c.24) get tok: REF TAG(t)
(l.98,c.25) get tok: STRING())
(l.98,c.29) get tok: INT(VOID[181])
(l.98,c.30) get tok: STRING(:)
(l.98,c.35) get tok: INT(SKIP[44])
(l.98,c.36) get tok: STRING(;)
(l.98,c.38) get tok: CONTROL(#)
(l.99,c.4) get tok: INT(PROC[69])
(l.99,c.5) get tok: STRING(()
(l.99,c.11) get tok: INT(STRING[156])
(l.99,c.12) get tok: STRING(,)
(l.99,c.16) get tok: REF TAG(TEXT)
(l.99,c.17) get tok: STRING())
(l.99,c.21) get tok: INT(VOID[181])
(l.99,c.38) get tok: REF TAG(debugprinttext)
(l.99,c.40) get tok: STRING(:=)
(l.99,c.42) get tok: CONTROL(/)
(l.100,c.2) get tok: CONTROL(+)
(l.100,c.3) get tok: STRING(()
(l.100,c.9) get tok: INT(STRING[156])
(l.100,c.12) get tok: CONTROL(!)
(l.100,c.13) get tok: REF TAG(s)
(l.100,c.14) get tok: STRING(,)
(l.100,c.19) get tok: REF TAG(TEXT)
(l.100,c.22) get tok: CONTROL(!)
(l.100,c.23) get tok: REF TAG(t)
(l.100,c.24) get tok: STRING())
(l.100,c.28) get tok: INT(VOID[181])
(l.100,c.29) get tok: STRING(:)
(l.100,c.34) get tok: INT(SKIP[44])
(l.100,c.35) get tok: STRING(;)
(l.100,c.37) get tok: CONTROL(#)
(l.101,c.4) get tok: INT(PROC[69])
(l.101,c.5) get tok: STRING(()
(l.101,c.11) get tok: INT(STRING[156])
(l.101,c.12) get tok: STRING(,)
(l.101,c.18) get tok: INT(STRING[156])
(l.101,c.19) get tok: STRING())
(l.101,c.23) get tok: INT(VOID[181])
(l.101,c.42) get tok: REF TAG(debugprintstring)
(l.101,c.44) get tok: STRING(:=)
(l.101,c.46) get tok: CONTROL(/)
(l.102,c.2) get tok: CONTROL(h)
(l.102,c.17) get tok: STRING(()
(l.102,c.23) get tok: INT(STRING[156])
(l.102,c.26) get tok: CONTROL(!)
(l.102,c.27) get tok: REF TAG(s)
(l.102,c.28) get tok: STRING(,)
(l.102,c.30) get tok: CONTROL(!)
(l.102,c.31) get tok: REF TAG(t)
(l.102,c.32) get tok: STRING())
(l.102,c.36) get tok: INT(VOID[181])
(l.102,c.37) get tok: STRING(:)
(l.102,c.42) get tok: INT(SKIP[44])
(l.102,c.43) get tok: STRING(;)
(l.104,c.2) get tok: CONTROL( )
(l.106,c.2) get tok: CONTROL(<)
(l.107,c.13) get tok: REF TAG(macromonitor)
(l.107,c.14) get tok: STRING(;)
(l.108,c.19) get tok: REF TAG(macrostartmonitor)
(l.108,c.20) get tok: STRING(;)
(l.110,c.2) get tok: CONTROL( )
(l.114,c.2) get tok: CONTROL(<)
(l.115,c.4) get tok: INT(PROC[69])
(l.115,c.25) get tok: REF TAG(monitorprinttoken)
(l.115,c.26) get tok: STRING(=)
(l.115,c.28) get tok: STRING(()
(l.115,c.34) get tok: INT(STRING[156])
(l.115,c.37) get tok: CONTROL(!)
(l.115,c.38) get tok: REF TAG(s)
(l.115,c.39) get tok: STRING(,)
(l.115,c.45) get tok: REF TAG(TOKEN)
(l.115,c.48) get tok: CONTROL(!)
(l.115,c.49) get tok: REF TAG(t)
(l.115,c.50) get tok: STRING())
(l.115,c.54) get tok: INT(VOID[181])
(l.116,c.0) get tok: STRING(:)
(l.116,c.7) get tok: REF TAG(monitor)
(l.116,c.8) get tok: STRING(()
(l.117,c.1) get tok: STRING(()
(l.117,c.2) get tok: REF TAG(s)
(l.117,c.3) get tok: STRING(,)
(l.118,c.4) get tok: INT(CASE[137])
(l.119,c.0) get tok: REF TAG(t)
(l.119,c.2) get tok: INT(IN[306])
(l.120,c.1) get tok: STRING(()
(l.120,c.4) get tok: INT(INT[195])
(l.120,c.7) get tok: CONTROL(!)
(l.120,c.8) get tok: REF TAG(n)
(l.120,c.9) get tok: STRING())
(l.121,c.0) get tok: STRING(:)
(l.121,c.6) get tok: STRING("INT(")
(l.121,c.7) get tok: STRING(+)
(l.121,c.9) get tok: INT(IF[62])
(l.121,c.11) get tok: REF TAG(n)
(l.121,c.12) get tok: STRING(<)
(l.122,c.0) get tok: STRING(0)
(l.122,c.4) get tok: INT(THEN[190])
(l.122,c.13) get tok: REF TAG(boldsym)
(l.122,c.14) get tok: STRING([)
(l.122,c.17) get tok: INT(ABS[226])
(l.122,c.19) get tok: REF TAG(n)
(l.122,c.20) get tok: STRING(])
(l.122,c.21) get tok: STRING(+)
(l.122,c.24) get tok: STRING("[")
(l.122,c.25) get tok: STRING(+)
(l.122,c.30) get tok: REF TAG(whole)
(l.122,c.31) get tok: STRING(()
(l.122,c.34) get tok: INT(ABS[226])
(l.122,c.36) get tok: REF TAG(n)
(l.122,c.37) get tok: STRING(,)
(l.122,c.38) get tok: STRING(0)
(l.122,c.39) get tok: STRING())
(l.122,c.40) get tok: STRING(+)
(l.123,c.0) get tok: STRING("]")
(l.123,c.4) get tok: INT(ELSE[4])
(l.123,c.10) get tok: REF TAG(whole)
(l.123,c.11) get tok: STRING(()
(l.123,c.12) get tok: REF TAG(n)
(l.123,c.13) get tok: STRING(,)
(l.123,c.14) get tok: STRING(0)
(l.123,c.15) get tok: STRING())
(l.124,c.2) get tok: INT(FI[107])
(l.124,c.3) get tok: STRING(+)
(l.124,c.6) get tok: STRING(")")
(l.124,c.7) get tok: STRING(,)
(l.125,c.1) get tok: STRING(()
(l.125,c.8) get tok: REF TAG(CONTROL)
(l.125,c.11) get tok: CONTROL(!)
(l.125,c.12) get tok: REF TAG(c)
(l.125,c.13) get tok: STRING())
(l.125,c.14) get tok: STRING(:)
(l.125,c.25) get tok: STRING("CONTROL(")
(l.125,c.26) get tok: STRING(+)
(l.125,c.29) get tok: REF TAG(cs)
(l.125,c.31) get tok: INT(OF[97])
(l.125,c.33) get tok: REF TAG(c)
(l.125,c.34) get tok: STRING(+)
(l.125,c.37) get tok: STRING(")")
(l.125,c.38) get tok: STRING(,)
(l.126,c.1) get tok: STRING(()
(l.126,c.7) get tok: INT(STRING[156])
(l.126,c.10) get tok: REF TAG(st)
(l.126,c.11) get tok: STRING())
(l.126,c.12) get tok: STRING(:)
(l.126,c.22) get tok: STRING("STRING(")
(l.126,c.23) get tok: STRING(+)
(l.126,c.25) get tok: REF TAG(st)
(l.126,c.26) get tok: STRING(+)
(l.126,c.29) get tok: STRING(")")
(l.126,c.30) get tok: STRING(,)
(l.127,c.1) get tok: STRING(()
(l.127,c.5) get tok: INT(VOID[181])
(l.127,c.6) get tok: STRING())
(l.127,c.7) get tok: STRING(:)
(l.127,c.14) get tok: STRING("VOID")
(l.127,c.15) get tok: STRING(,)
(l.128,c.1) get tok: STRING(()
(l.128,c.4) get tok: INT(REF[53])
(l.128,c.8) get tok: REF TAG(TAG)
(l.128,c.11) get tok: REF TAG(rt)
(l.128,c.12) get tok: STRING())
(l.128,c.13) get tok: STRING(:)
(l.128,c.24) get tok: STRING("REF TAG(")
(l.128,c.25) get tok: STRING(+)
(l.128,c.27) get tok: REF TAG(s)
(l.128,c.29) get tok: INT(OF[97])
(l.128,c.32) get tok: REF TAG(rt)
(l.128,c.33) get tok: STRING(+)
(l.129,c.0) get tok: STRING(")")
(l.129,c.4) get tok: INT(ESAC[39])
(l.129,c.5) get tok: STRING(,)
(l.129,c.12) get tok: REF TAG(newline)
(l.129,c.13) get tok: STRING())
(l.129,c.14) get tok: STRING())
(l.129,c.15) get tok: STRING(;)
(l.131,c.2) get tok: CONTROL( )
(l.134,c.2) get tok: CONTROL(<)
(l.135,c.4) get tok: INT(PROC[69])
(l.135,c.24) get tok: REF TAG(monitorprinttext)
(l.135,c.25) get tok: STRING(=)
(l.135,c.27) get tok: STRING(()
(l.135,c.33) get tok: INT(STRING[156])
(l.135,c.36) get tok: CONTROL(!)
(l.135,c.37) get tok: REF TAG(s)
(l.135,c.38) get tok: STRING(,)
(l.135,c.43) get tok: REF TAG(TEXT)
(l.135,c.46) get tok: CONTROL(!)
(l.135,c.47) get tok: REF TAG(t)
(l.135,c.48) get tok: STRING())
(l.135,c.52) get tok: INT(VOID[181])
(l.136,c.0) get tok: STRING(:)
(l.136,c.7) get tok: REF TAG(monitor)
(l.136,c.8) get tok: STRING(()
(l.137,c.1) get tok: STRING(()
(l.137,c.2) get tok: REF TAG(s)
(l.137,c.3) get tok: STRING(,)
(l.137,c.4) get tok: STRING(()
(l.137,c.6) get tok: CONTROL({)
(l.137,c.11) get tok: REF TAG(text)
(l.137,c.13) get tok: INT(OF[97])
(l.137,c.15) get tok: REF TAG(t)
(l.137,c.16) get tok: STRING(|)
(l.138,c.1) get tok: STRING(()
(l.138,c.4) get tok: INT(INT[195])
(l.138,c.7) get tok: CONTROL(!)
(l.138,c.8) get tok: REF TAG(n)
(l.138,c.9) get tok: STRING())
(l.138,c.10) get tok: STRING(:)
(l.138,c.17) get tok: STRING("INT(")
(l.138,c.18) get tok: STRING(+)
(l.138,c.19) get tok: STRING(()
(l.138,c.20) get tok: REF TAG(n)
(l.138,c.21) get tok: STRING(<)
(l.138,c.22) get tok: STRING(0)
(l.138,c.23) get tok: STRING(|)
(l.138,c.31) get tok: REF TAG(boldsym)
(l.138,c.32) get tok: STRING([)
(l.138,c.35) get tok: INT(ABS[226])
(l.138,c.37) get tok: REF TAG(n)
(l.138,c.38) get tok: STRING(])
(l.138,c.39) get tok: STRING(|)
(l.138,c.44) get tok: REF TAG(whole)
(l.138,c.45) get tok: STRING(()
(l.138,c.46) get tok: REF TAG(n)
(l.138,c.47) get tok: STRING(,)
(l.138,c.48) get tok: STRING(0)
(l.138,c.49) get tok: STRING())
(l.138,c.50) get tok: STRING())
(l.138,c.51) get tok: STRING(+)
(l.138,c.54) get tok: STRING(")")
(l.138,c.55) get tok: STRING(,)
(l.139,c.1) get tok: STRING(()
(l.139,c.2) get tok: STRING([)
(l.139,c.3) get tok: STRING(])
(l.139,c.6) get tok: INT(INT[195])
(l.139,c.9) get tok: CONTROL(!)
(l.139,c.10) get tok: REF TAG(r)
(l.139,c.11) get tok: STRING())
(l.139,c.12) get tok: STRING(:)
(l.140,c.0) get tok: STRING("[]INT(")
(l.140,c.1) get tok: STRING(+)
(l.140,c.6) get tok: REF TAG(whole)
(l.140,c.7) get tok: STRING(()
(l.140,c.8) get tok: REF TAG(r)
(l.140,c.9) get tok: STRING([)
(l.140,c.10) get tok: STRING(1)
(l.140,c.11) get tok: STRING(])
(l.140,c.12) get tok: STRING(,)
(l.140,c.13) get tok: STRING(0)
(l.140,c.14) get tok: STRING())
(l.141,c.1) get tok: STRING(+)
(l.141,c.4) get tok: STRING(".")
(l.141,c.5) get tok: STRING(+)
(l.141,c.10) get tok: REF TAG(whole)
(l.141,c.11) get tok: STRING(()
(l.141,c.12) get tok: REF TAG(r)
(l.141,c.13) get tok: STRING([)
(l.141,c.14) get tok: STRING(2)
(l.141,c.15) get tok: STRING(])
(l.141,c.16) get tok: STRING(,)
(l.141,c.17) get tok: STRING(0)
(l.141,c.18) get tok: STRING())
(l.142,c.1) get tok: STRING(+)
(l.142,c.4) get tok: STRING(".")
(l.142,c.5) get tok: STRING(+)
(l.142,c.10) get tok: REF TAG(whole)
(l.142,c.11) get tok: STRING(()
(l.142,c.12) get tok: REF TAG(r)
(l.142,c.13) get tok: STRING([)
(l.142,c.14) get tok: STRING(3)
(l.142,c.15) get tok: STRING(])
(l.142,c.16) get tok: STRING(,)
(l.142,c.17) get tok: STRING(0)
(l.142,c.18) get tok: STRING())
(l.143,c.1) get tok: STRING(+)
(l.143,c.4) get tok: STRING(".")
(l.143,c.5) get tok: STRING(+)
(l.143,c.10) get tok: REF TAG(whole)
(l.143,c.11) get tok: STRING(()
(l.143,c.12) get tok: REF TAG(r)
(l.143,c.13) get tok: STRING([)
(l.143,c.14) get tok: STRING(4)
(l.143,c.15) get tok: STRING(])
(l.143,c.16) get tok: STRING(,)
(l.143,c.17) get tok: STRING(0)
(l.143,c.18) get tok: STRING())
(l.143,c.19) get tok: STRING(+)
(l.143,c.22) get tok: STRING(")")
(l.143,c.23) get tok: STRING(,)
(l.144,c.1) get tok: STRING(()
(l.144,c.7) get tok: INT(STRING[156])
(l.144,c.10) get tok: REF TAG(st)
(l.144,c.11) get tok: STRING())
(l.144,c.12) get tok: STRING(:)
(l.144,c.24) get tok: STRING("STRING(")
(l.144,c.25) get tok: STRING(+)
(l.144,c.27) get tok: REF TAG(st)
(l.144,c.28) get tok: STRING(+)
(l.144,c.31) get tok: STRING(")")
(l.144,c.32) get tok: STRING(,)
(l.145,c.1) get tok: STRING(()
(l.145,c.4) get tok: INT(REF[53])
(l.145,c.8) get tok: REF TAG(TAG)
(l.145,c.11) get tok: REF TAG(tg)
(l.145,c.12) get tok: STRING())
(l.145,c.13) get tok: STRING(:)
(l.145,c.26) get tok: STRING("REF TAG(")
(l.145,c.27) get tok: STRING(+)
(l.145,c.29) get tok: REF TAG(s)
(l.145,c.31) get tok: INT(OF[97])
(l.145,c.34) get tok: REF TAG(tg)
(l.145,c.35) get tok: STRING(+)
(l.145,c.38) get tok: STRING(")")
(l.145,c.39) get tok: STRING(,)
(l.146,c.1) get tok: STRING(()
(l.146,c.4) get tok: INT(REF[53])
(l.146,c.10) get tok: REF TAG(MACRO)
(l.146,c.13) get tok: REF TAG(mc)
(l.146,c.14) get tok: STRING())
(l.146,c.15) get tok: STRING(:)
(l.146,c.28) get tok: STRING("REF MACRO(")
(l.146,c.29) get tok: STRING(+)
(l.146,c.31) get tok: REF TAG(s)
(l.146,c.33) get tok: INT(OF[97])
(l.146,c.37) get tok: REF TAG(id)
(l.146,c.39) get tok: INT(OF[97])
(l.146,c.42) get tok: REF TAG(mc)
(l.146,c.43) get tok: STRING(+)
(l.146,c.46) get tok: STRING(")")
(l.146,c.47) get tok: STRING(,)
(l.147,c.1) get tok: STRING(()
(l.147,c.4) get tok: INT(REF[53])
(l.147,c.11) get tok: REF TAG(MODULE)
(l.147,c.14) get tok: REF TAG(md)
(l.147,c.15) get tok: STRING())
(l.147,c.16) get tok: STRING(:)
(l.147,c.29) get tok: STRING("REF MODULE(")
(l.147,c.30) get tok: STRING(+)
(l.147,c.33) get tok: REF TAG(id)
(l.147,c.35) get tok: INT(OF[97])
(l.147,c.38) get tok: REF TAG(md)
(l.147,c.39) get tok: STRING(+)
(l.147,c.42) get tok: STRING(")")
(l.147,c.43) get tok: STRING(,)
(l.148,c.1) get tok: STRING(()
(l.148,c.5) get tok: INT(VOID[181])
(l.148,c.6) get tok: STRING())
(l.148,c.7) get tok: STRING(:)
(l.148,c.19) get tok: STRING("VOID")
(l.148,c.20) get tok: STRING(,)
(l.149,c.1) get tok: STRING(()
(l.149,c.8) get tok: REF TAG(CONTROL)
(l.149,c.11) get tok: CONTROL(!)
(l.149,c.12) get tok: REF TAG(c)
(l.149,c.13) get tok: STRING())
(l.149,c.14) get tok: STRING(:)
(l.149,c.26) get tok: STRING("CONTROL(")
(l.149,c.27) get tok: STRING(+)
(l.149,c.30) get tok: REF TAG(cs)
(l.149,c.32) get tok: INT(OF[97])
(l.149,c.34) get tok: REF TAG(c)
(l.149,c.35) get tok: STRING(+)
(l.149,c.38) get tok: STRING(")")
(l.149,c.39) get tok: STRING())
(l.149,c.40) get tok: STRING(,)
(l.149,c.47) get tok: REF TAG(newline)
(l.149,c.48) get tok: STRING())
(l.149,c.49) get tok: STRING())
(l.149,c.51) get tok: CONTROL(})
(l.149,c.52) get tok: STRING(;)
(l.151,c.2) get tok: CONTROL( )
(l.153,c.2) get tok: CONTROL(<)
(l.154,c.4) get tok: INT(PROC[69])
(l.154,c.26) get tok: REF TAG(monitorprintstring)
(l.154,c.27) get tok: STRING(=)
(l.154,c.29) get tok: STRING(()
(l.154,c.35) get tok: INT(STRING[156])
(l.154,c.37) get tok: REF TAG(s)
(l.154,c.38) get tok: STRING(,)
(l.154,c.39) get tok: REF TAG(t)
(l.154,c.40) get tok: STRING())
(l.154,c.44) get tok: INT(VOID[181])
(l.154,c.45) get tok: STRING(:)
(l.154,c.53) get tok: REF TAG(monitor)
(l.154,c.54) get tok: STRING(()
(l.154,c.55) get tok: STRING(()
(l.154,c.56) get tok: REF TAG(s)
(l.154,c.57) get tok: STRING(,)
(l.154,c.58) get tok: REF TAG(t)
(l.154,c.59) get tok: STRING(,)
(l.154,c.66) get tok: REF TAG(newline)
(l.154,c.67) get tok: STRING())
(l.154,c.68) get tok: STRING())
(l.154,c.69) get tok: STRING(;)
(l.156,c.2) get tok: CONTROL(1)
(l.160,c.2) get tok: CONTROL(m)
(l.160,c.12) get tok: REF TAG(spotless)
(l.160,c.13) get tok: STRING(=)
(l.161,c.0) get tok: STRING(0)
(l.161,c.2) get tok: CONTROL(m)
(l.161,c.12) get tok: REF TAG(warnings)
(l.161,c.13) get tok: STRING(=)
(l.162,c.0) get tok: STRING(1)
(l.162,c.2) get tok: CONTROL(m)
(l.162,c.10) get tok: REF TAG(errors)
(l.162,c.11) get tok: STRING(=)
(l.164,c.0) get tok: STRING(2)
(l.164,c.2) get tok: CONTROL(<)
(l.165,c.3) get tok: INT(INT[195])
(l.165,c.11) get tok: REF TAG(history)
(l.165,c.13) get tok: STRING(:=)
(l.165,c.21) get tok: REF TAG(spotless)
(l.165,c.22) get tok: STRING(;)
(l.167,c.2) get tok: CONTROL( )
(l.171,c.2) get tok: CONTROL(m)
(l.171,c.12) get tok: REF TAG(printnl)
(l.171,c.13) get tok: STRING(=)
(l.171,c.19) get tok: REF TAG(print)
(l.171,c.20) get tok: STRING(()
(l.171,c.27) get tok: REF TAG(newline)
(l.171,c.28) get tok: STRING())
(l.171,c.29) get tok: STRING(;)
(l.171,c.32) get tok: CONTROL(&)
(l.171,c.43) get tok: REF TAG(consolepos)
(l.171,c.45) get tok: STRING(:=)
(l.173,c.0) get tok: STRING(0)
(l.173,c.2) get tok: CONTROL(<)
(l.174,c.3) get tok: INT(INT[195])
(l.174,c.15) get tok: REF TAG(consolepos)
(l.174,c.17) get tok: STRING(:=)
(l.174,c.18) get tok: STRING(0)
(l.174,c.19) get tok: STRING(;)
(l.176,c.2) get tok: CONTROL( )
(l.182,c.2) get tok: CONTROL(m)
(l.182,c.24) get tok: REF TAG(maxoutputlineleng)
(l.182,c.25) get tok: STRING(=)
(l.184,c.0) get tok: STRING(80)
(l.184,c.2) get tok: CONTROL(<)
(l.185,c.4) get tok: INT(PROC[69])
(l.185,c.14) get tok: REF TAG(printout)
(l.185,c.15) get tok: STRING(=)
(l.185,c.16) get tok: STRING(()
(l.185,c.17) get tok: STRING([)
(l.185,c.18) get tok: STRING(])
(l.185,c.23) get tok: INT(UNION[311])
(l.185,c.24) get tok: STRING(()
(l.185,c.30) get tok: INT(STRING[156])
(l.185,c.31) get tok: STRING(,)
(l.185,c.35) get tok: INT(CHAR[113])
(l.185,c.36) get tok: STRING(,)
(l.185,c.39) get tok: INT(INT[195])
(l.185,c.40) get tok: STRING(,)
(l.185,c.44) get tok: INT(VOID[181])
(l.185,c.45) get tok: STRING())
(l.185,c.48) get tok: CONTROL(!)
(l.185,c.49) get tok: REF TAG(s)
(l.185,c.50) get tok: STRING())
(l.185,c.54) get tok: INT(VOID[181])
(l.186,c.0) get tok: STRING(:)
(l.186,c.3) get tok: INT(FOR[138])
(l.186,c.6) get tok: REF TAG(i)
(l.186,c.10) get tok: INT(FROM[176])
(l.186,c.14) get tok: INT(LWB[148])
(l.186,c.17) get tok: REF TAG(s)
(l.186,c.19) get tok: INT(TO[187])
(l.186,c.23) get tok: INT(UPB[150])
(l.187,c.0) get tok: REF TAG(s)
(l.187,c.2) get tok: INT(DO[244])
(l.188,c.6) get tok: INT(STRING[156])
(l.188,c.11) get tok: REF TAG(outs)
(l.188,c.12) get tok: STRING(=)
(l.188,c.14) get tok: CONTROL({)
(l.188,c.18) get tok: INT(CASE[137])
(l.188,c.20) get tok: REF TAG(s)
(l.188,c.21) get tok: STRING([)
(l.188,c.22) get tok: REF TAG(i)
(l.188,c.23) get tok: STRING(])
(l.189,c.2) get tok: INT(IN[306])
(l.190,c.1) get tok: STRING(()
(l.190,c.7) get tok: INT(STRING[156])
(l.190,c.10) get tok: REF TAG(si)
(l.190,c.11) get tok: STRING())
(l.190,c.12) get tok: STRING(:)
(l.190,c.15) get tok: REF TAG(si)
(l.190,c.16) get tok: STRING(,)
(l.191,c.1) get tok: STRING(()
(l.191,c.5) get tok: INT(CHAR[113])
(l.191,c.8) get tok: REF TAG(ci)
(l.191,c.9) get tok: STRING())
(l.191,c.10) get tok: STRING(:)
(l.191,c.14) get tok: REF TAG(ci)
(l.191,c.15) get tok: STRING(,)
(l.192,c.1) get tok: STRING(()
(l.192,c.4) get tok: INT(INT[195])
(l.192,c.7) get tok: REF TAG(ni)
(l.192,c.8) get tok: STRING())
(l.192,c.9) get tok: STRING(:)
(l.192,c.17) get tok: REF TAG(whole)
(l.192,c.18) get tok: STRING(()
(l.192,c.20) get tok: REF TAG(ni)
(l.192,c.21) get tok: STRING(,)
(l.192,c.22) get tok: STRING(0)
(l.192,c.23) get tok: STRING())
(l.192,c.24) get tok: STRING(,)
(l.193,c.1) get tok: STRING(()
(l.193,c.5) get tok: INT(VOID[181])
(l.193,c.6) get tok: STRING())
(l.193,c.7) get tok: STRING(:)
(l.193,c.12) get tok: STRING(()
(l.193,c.20) get tok: REF TAG(printnl)
(l.193,c.21) get tok: STRING(;)
(l.193,c.24) get tok: STRING("")
(l.193,c.25) get tok: STRING())
(l.194,c.4) get tok: INT(ESAC[39])
(l.194,c.6) get tok: CONTROL(})
(l.194,c.7) get tok: STRING(;)
(l.195,c.2) get tok: INT(IF[62])
(l.195,c.15) get tok: REF TAG(consolepos)
(l.195,c.16) get tok: STRING(+)
(l.195,c.20) get tok: INT(UPB[150])
(l.195,c.26) get tok: REF TAG(outs)
(l.195,c.27) get tok: STRING(>)
(l.196,c.0) get tok: REF TAG(maxoutputlineleng)
(l.196,c.4) get tok: INT(THEN[190])
(l.197,c.0) get tok: REF TAG(printnl)
(l.197,c.2) get tok: INT(FI[107])
(l.197,c.3) get tok: STRING(;)
(l.198,c.5) get tok: REF TAG(print)
(l.198,c.6) get tok: STRING(()
(l.198,c.10) get tok: REF TAG(outs)
(l.198,c.11) get tok: STRING())
(l.198,c.12) get tok: STRING(;)
(l.198,c.24) get tok: REF TAG(consolepos)
(l.198,c.27) get tok: STRING(+:=)
(l.198,c.30) get tok: INT(UPB[150])
(l.199,c.0) get tok: REF TAG(outs)
(l.199,c.2) get tok: INT(OD[231])
(l.199,c.3) get tok: STRING(;)
(l.201,c.2) get tok: CONTROL( )
(l.207,c.2) get tok: CONTROL(<)
(l.208,c.4) get tok: INT(BOOL[184])
(l.208,c.14) get tok: REF TAG(phaseone)
(l.208,c.16) get tok: STRING(:=)
(l.208,c.20) get tok: INT(TRUE[64])
(l.208,c.21) get tok: STRING(;)
(l.210,c.2) get tok: CONTROL( )
(l.224,c.2) get tok: CONTROL(m)
(l.224,c.12) get tok: REF TAG(errprint)
(l.224,c.13) get tok: STRING(()
(l.224,c.16) get tok: REF TAG(msg)
(l.224,c.17) get tok: STRING())
(l.224,c.18) get tok: STRING(=)
(l.224,c.19) get tok: STRING(()
(l.224,c.27) get tok: REF TAG(printnl)
(l.224,c.28) get tok: STRING(;)
(l.225,c.9) get tok: REF TAG(printout)
(l.225,c.10) get tok: STRING(()
(l.225,c.11) get tok: STRING(()
(l.225,c.22) get tok: STRING("! Error: ")
(l.225,c.23) get tok: STRING(,)
(l.225,c.26) get tok: REF TAG(msg)
(l.225,c.27) get tok: STRING())
(l.225,c.28) get tok: STRING())
(l.225,c.29) get tok: STRING(;)
(l.226,c.5) get tok: REF TAG(error)
(l.226,c.6) get tok: STRING(()
(l.226,c.12) get tok: REF TAG(errors)
(l.226,c.13) get tok: STRING())
(l.226,c.14) get tok: STRING())
(l.228,c.2) get tok: CONTROL(<)
(l.229,c.4) get tok: INT(PROC[69])
(l.229,c.10) get tok: REF TAG(error)
(l.229,c.11) get tok: STRING(=)
(l.229,c.12) get tok: STRING(()
(l.229,c.15) get tok: INT(INT[195])
(l.229,c.22) get tok: REF TAG(status)
(l.229,c.23) get tok: STRING())
(l.229,c.27) get tok: INT(VOID[181])
(l.229,c.28) get tok: STRING(:)
(l.230,c.2) get tok: INT(IF[62])
(l.230,c.6) get tok: INT(IF[62])
(l.230,c.15) get tok: REF TAG(history)
(l.230,c.16) get tok: STRING(<)
(l.230,c.24) get tok: REF TAG(status)
(l.230,c.26) get tok: CONTROL(&)
(l.230,c.30) get tok: INT(THEN[190])
(l.230,c.38) get tok: REF TAG(history)
(l.230,c.40) get tok: STRING(:=)
(l.230,c.47) get tok: REF TAG(status)
(l.230,c.49) get tok: CONTROL(&)
(l.230,c.51) get tok: INT(FI[107])
(l.230,c.52) get tok: STRING(;)
(l.232,c.0) get tok: REF TAG(phaseone)
(l.232,c.4) get tok: INT(THEN[190])
(l.232,c.7) get tok: CONTROL(<)
(l.233,c.4) get tok: INT(ELSE[4])
(l.233,c.7) get tok: CONTROL(<)
(l.234,c.2) get tok: INT(FI[107])
(l.234,c.3) get tok: STRING(;)
(l.236,c.2) get tok: CONTROL( )
(l.243,c.2) get tok: CONTROL(<)
(l.244,c.9) get tok: REF TAG(printout)
(l.244,c.10) get tok: STRING(()
(l.244,c.11) get tok: STRING(()
(l.244,c.16) get tok: STRING(". (")
(l.244,c.17) get tok: STRING(,)
(l.244,c.20) get tok: REF TAG(idf)
(l.244,c.21) get tok: STRING(()
(l.244,c.23) get tok: REF TAG(f)
(l.244,c.25) get tok: INT(OF[97])
(l.244,c.29) get tok: REF TAG(web)
(l.244,c.30) get tok: STRING())
(l.244,c.31) get tok: STRING(,)
(l.244,c.37) get tok: STRING(", l.")
(l.244,c.38) get tok: STRING(,)
(l.244,c.40) get tok: REF TAG(n)
(l.244,c.42) get tok: INT(OF[97])
(l.244,c.46) get tok: REF TAG(web)
(l.244,c.47) get tok: STRING(,)
(l.244,c.50) get tok: STRING(")")
(l.244,c.51) get tok: STRING(,)
(l.244,c.56) get tok: INT(EMPTY[197])
(l.244,c.57) get tok: STRING())
(l.244,c.58) get tok: STRING())
(l.244,c.59) get tok: STRING(;)
(l.246,c.3) get tok: INT(FOR[138])
(l.246,c.6) get tok: REF TAG(k)
(l.246,c.8) get tok: INT(TO[187])
(l.246,c.13) get tok: REF TAG(loc)
(l.246,c.15) get tok: INT(OF[97])
(l.247,c.0) get tok: REF TAG(web)
(l.247,c.2) get tok: INT(DO[244])
(l.248,c.9) get tok: REF TAG(printout)
(l.248,c.10) get tok: STRING(()
(l.248,c.11) get tok: STRING(()
(l.248,c.15) get tok: INT(CHAR[113])
(l.248,c.18) get tok: REF TAG(bk)
(l.248,c.19) get tok: STRING(=)
(l.248,c.20) get tok: STRING(()
(l.248,c.22) get tok: REF TAG(b)
(l.248,c.24) get tok: INT(OF[97])
(l.248,c.28) get tok: REF TAG(web)
(l.248,c.29) get tok: STRING())
(l.248,c.30) get tok: STRING([)
(l.248,c.31) get tok: REF TAG(k)
(l.248,c.32) get tok: STRING(])
(l.248,c.33) get tok: STRING(;)
(l.248,c.36) get tok: REF TAG(bk)
(l.248,c.37) get tok: STRING(=)
(l.248,c.43) get tok: REF TAG(tabch)
(l.248,c.44) get tok: STRING(|)
(l.248,c.49) get tok: REF TAG(blank)
(l.248,c.50) get tok: STRING(|)
(l.248,c.52) get tok: REF TAG(bk)
(l.248,c.53) get tok: STRING())
(l.248,c.54) get tok: STRING())
(l.249,c.2) get tok: INT(OD[231])
(l.249,c.3) get tok: STRING(;)
(l.251,c.9) get tok: REF TAG(printout)
(l.251,c.10) get tok: STRING(()
(l.251,c.11) get tok: STRING(()
(l.251,c.16) get tok: INT(EMPTY[197])
(l.251,c.17) get tok: STRING(,)
(l.251,c.21) get tok: REF TAG(loc)
(l.251,c.23) get tok: INT(OF[97])
(l.251,c.27) get tok: REF TAG(web)
(l.251,c.28) get tok: STRING(*)
(l.251,c.33) get tok: REF TAG(blank)
(l.251,c.34) get tok: STRING(,)
(l.252,c.1) get tok: STRING(()
(l.252,c.5) get tok: REF TAG(loc)
(l.252,c.7) get tok: INT(OF[97])
(l.252,c.11) get tok: REF TAG(web)
(l.252,c.12) get tok: STRING(<)
(l.252,c.16) get tok: REF TAG(upb)
(l.252,c.18) get tok: INT(OF[97])
(l.252,c.22) get tok: REF TAG(web)
(l.252,c.23) get tok: STRING(|)
(l.252,c.24) get tok: STRING(()
(l.252,c.26) get tok: REF TAG(b)
(l.252,c.28) get tok: INT(OF[97])
(l.252,c.32) get tok: REF TAG(web)
(l.252,c.33) get tok: STRING())
(l.252,c.34) get tok: STRING([)
(l.252,c.38) get tok: REF TAG(loc)
(l.252,c.40) get tok: INT(OF[97])
(l.252,c.44) get tok: REF TAG(web)
(l.252,c.45) get tok: STRING(+)
(l.252,c.46) get tok: STRING(1)
(l.252,c.47) get tok: STRING(:)
(l.252,c.51) get tok: REF TAG(upb)
(l.252,c.53) get tok: INT(OF[97])
(l.252,c.57) get tok: REF TAG(web)
(l.252,c.58) get tok: STRING(])
(l.252,c.59) get tok: STRING(|)
(l.252,c.61) get tok: STRING("")
(l.252,c.62) get tok: STRING())
(l.252,c.63) get tok: STRING())
(l.252,c.64) get tok: STRING())
(l.252,c.65) get tok: STRING(;)
(l.253,c.9) get tok: REF TAG(printout)
(l.253,c.10) get tok: STRING(()
(l.253,c.15) get tok: REF TAG(blank)
(l.253,c.16) get tok: STRING())
(l.255,c.2) get tok: CONTROL( )
(l.258,c.2) get tok: CONTROL(<)
(l.259,c.9) get tok: REF TAG(printout)
(l.259,c.10) get tok: STRING(()
(l.259,c.11) get tok: STRING(()
(l.259,c.18) get tok: STRING(". (l.")
(l.259,c.19) get tok: STRING(,)
(l.259,c.21) get tok: REF TAG(n)
(l.259,c.23) get tok: INT(OF[97])
(l.259,c.30) get tok: REF TAG(output)
(l.259,c.31) get tok: STRING(,)
(l.259,c.34) get tok: STRING(")")
(l.259,c.35) get tok: STRING(,)
(l.259,c.40) get tok: INT(EMPTY[197])
(l.259,c.41) get tok: STRING(,)
(l.260,c.1) get tok: STRING(()
(l.260,c.3) get tok: REF TAG(b)
(l.260,c.5) get tok: INT(OF[97])
(l.260,c.12) get tok: REF TAG(output)
(l.260,c.13) get tok: STRING())
(l.260,c.14) get tok: STRING([)
(l.260,c.18) get tok: REF TAG(upb)
(l.260,c.20) get tok: INT(OF[97])
(l.260,c.27) get tok: REF TAG(output)
(l.260,c.28) get tok: STRING(])
(l.260,c.29) get tok: STRING(,)
(l.260,c.35) get tok: STRING("... ")
(l.260,c.36) get tok: STRING(,)
(l.260,c.41) get tok: INT(EMPTY[197])
(l.260,c.42) get tok: STRING())
(l.260,c.43) get tok: STRING())
(l.262,c.2) get tok: CONTROL( )
(l.266,c.2) get tok: CONTROL(m)
(l.266,c.14) get tok: REF TAG(fatalerror)
(l.266,c.15) get tok: STRING(()
(l.266,c.18) get tok: REF TAG(err)
(l.266,c.19) get tok: STRING())
(l.266,c.20) get tok: STRING(=)
(l.266,c.21) get tok: STRING(()
(l.266,c.30) get tok: REF TAG(printout)
(l.266,c.31) get tok: STRING(()
(l.266,c.32) get tok: STRING(()
(l.266,c.37) get tok: INT(EMPTY[197])
(l.266,c.38) get tok: STRING(,)
(l.266,c.41) get tok: REF TAG(err)
(l.266,c.42) get tok: STRING())
(l.266,c.43) get tok: STRING())
(l.266,c.44) get tok: STRING(;)
(l.267,c.5) get tok: REF TAG(error)
(l.267,c.6) get tok: STRING(()
(l.267,c.12) get tok: REF TAG(errors)
(l.267,c.13) get tok: STRING())
(l.267,c.14) get tok: STRING(;)
(l.268,c.5) get tok: REF TAG(close)
(l.268,c.6) get tok: STRING(()
(l.268,c.8) get tok: REF TAG(f)
(l.268,c.10) get tok: INT(OF[97])
(l.268,c.17) get tok: REF TAG(output)
(l.268,c.18) get tok: STRING())
(l.268,c.19) get tok: STRING(;)
(l.269,c.4) get tok: REF TAG(exit)
(l.269,c.5) get tok: STRING(()
(l.269,c.6) get tok: STRING(-)
(l.269,c.7) get tok: STRING(1)
(l.269,c.8) get tok: STRING())
(l.269,c.9) get tok: STRING())
(l.271,c.2) get tok: CONTROL( )
(l.274,c.2) get tok: CONTROL(<)
(l.275,c.4) get tok: INT(PROC[69])
(l.275,c.17) get tok: REF TAG(simpleerror)
(l.275,c.18) get tok: STRING(=)
(l.275,c.19) get tok: STRING(()
(l.275,c.25) get tok: INT(STRING[156])
(l.275,c.28) get tok: CONTROL(!)
(l.275,c.29) get tok: REF TAG(s)
(l.275,c.30) get tok: STRING(,)
(l.275,c.33) get tok: INT(INT[195])
(l.275,c.38) get tok: REF TAG(halt)
(l.275,c.39) get tok: STRING())
(l.275,c.43) get tok: INT(VOID[181])
(l.276,c.0) get tok: STRING(:)
(l.276,c.1) get tok: STRING(()
(l.276,c.6) get tok: REF TAG(print)
(l.276,c.7) get tok: STRING(()
(l.276,c.8) get tok: STRING(()
(l.276,c.15) get tok: REF TAG(newline)
(l.276,c.16) get tok: STRING(,)
(l.276,c.27) get tok: STRING("! Error: ")
(l.276,c.28) get tok: STRING(,)
(l.276,c.29) get tok: REF TAG(s)
(l.276,c.30) get tok: STRING())
(l.276,c.31) get tok: STRING())
(l.276,c.32) get tok: STRING(;)
(l.276,c.37) get tok: REF TAG(exit)
(l.276,c.38) get tok: STRING(()
(l.276,c.42) get tok: REF TAG(halt)
(l.276,c.43) get tok: STRING())
(l.276,c.44) get tok: STRING())
(l.276,c.45) get tok: STRING(;)
(l.278,c.2) get tok: CONTROL( )
(l.281,c.2) get tok: CONTROL(m)
(l.281,c.13) get tok: REF TAG(warnprint)
(l.281,c.14) get tok: STRING(()
(l.281,c.17) get tok: REF TAG(msg)
(l.281,c.18) get tok: STRING())
(l.281,c.20) get tok: STRING(=)
(l.281,c.22) get tok: STRING(()
(l.281,c.30) get tok: REF TAG(printnl)
(l.281,c.31) get tok: STRING(;)
(l.281,c.41) get tok: REF TAG(printout)
(l.281,c.42) get tok: STRING(()
(l.281,c.45) get tok: REF TAG(msg)
(l.281,c.46) get tok: STRING())
(l.281,c.47) get tok: STRING(;)
(l.281,c.53) get tok: REF TAG(error)
(l.281,c.54) get tok: STRING(()
(l.281,c.62) get tok: REF TAG(warnings)
(l.281,c.63) get tok: STRING())
(l.281,c.64) get tok: STRING())
(l.283,c.2) get tok: CONTROL(1)
(l.297,c.2) get tok: CONTROL(m)
(l.297,c.15) get tok: REF TAG(strbuffsz)
(l.297,c.16) get tok: STRING(=)
(l.299,c.0) get tok: STRING(256)
(l.299,c.2) get tok: CONTROL(<)
(l.300,c.4) get tok: INT(MODE[211])
(l.300,c.11) get tok: REF TAG(STREAM)
(l.300,c.12) get tok: STRING(=)
(l.300,c.18) get tok: INT(STRUCT[51])
(l.300,c.19) get tok: STRING(()
(l.300,c.22) get tok: INT(REF[53])
(l.300,c.27) get tok: INT(FILE[59])
(l.300,c.29) get tok: REF TAG(f)
(l.300,c.30) get tok: STRING(,)
(l.301,c.4) get tok: INT(BOOL[184])
(l.301,c.10) get tok: REF TAG(ended)
(l.301,c.11) get tok: STRING(,)
(l.302,c.3) get tok: INT(INT[195])
(l.302,c.6) get tok: CONTROL({)
(l.302,c.10) get tok: REF TAG(fnum)
(l.302,c.11) get tok: STRING(,)
(l.303,c.1) get tok: REF TAG(n)
(l.303,c.2) get tok: STRING(,)
(l.304,c.3) get tok: REF TAG(loc)
(l.304,c.4) get tok: STRING(,)
(l.305,c.3) get tok: REF TAG(upb)
(l.305,c.4) get tok: STRING(,)
(l.305,c.6) get tok: CONTROL(})
(l.306,c.1) get tok: STRING([)
(l.306,c.2) get tok: STRING(4)
(l.306,c.3) get tok: STRING(])
(l.306,c.6) get tok: INT(INT[195])
(l.306,c.10) get tok: REF TAG(sec)
(l.306,c.11) get tok: STRING(,)
(l.307,c.1) get tok: STRING([)
(l.307,c.12) get tok: REF TAG(strbuffsz)
(l.307,c.13) get tok: STRING(])
(l.307,c.17) get tok: INT(CHAR[113])
(l.307,c.19) get tok: REF TAG(b)
(l.307,c.20) get tok: STRING(,)
(l.308,c.3) get tok: INT(REF[53])
(l.308,c.10) get tok: REF TAG(STREAM)
(l.308,c.15) get tok: REF TAG(next)
(l.308,c.16) get tok: STRING())
(l.308,c.17) get tok: STRING(;)
(l.310,c.2) get tok: CONTROL( )
(l.312,c.2) get tok: CONTROL(<)
(l.313,c.3) get tok: INT(REF[53])
(l.313,c.10) get tok: REF TAG(STREAM)
(l.313,c.21) get tok: REF TAG(nostream)
(l.313,c.22) get tok: STRING(=)
(l.313,c.26) get tok: INT(NIL[180])
(l.313,c.27) get tok: STRING(;)
(l.315,c.2) get tok: CONTROL( )
(l.317,c.2) get tok: CONTROL(<)
(l.318,c.4) get tok: INT(PROC[69])
(l.318,c.22) get tok: REF TAG(addfiletotree)
(l.318,c.23) get tok: STRING(=)
(l.318,c.25) get tok: STRING(()
(l.318,c.28) get tok: INT(REF[53])
(l.318,c.32) get tok: INT(REF[53])
(l.318,c.41) get tok: REF TAG(INCLUDED)
(l.318,c.44) get tok: REF TAG(tr)
(l.318,c.45) get tok: STRING(,)
(l.318,c.51) get tok: INT(STRING[156])
(l.318,c.54) get tok: REF TAG(fn)
(l.318,c.55) get tok: STRING())
(l.318,c.59) get tok: INT(VOID[181])
(l.319,c.0) get tok: STRING(:)
(l.319,c.2) get tok: INT(IF[62])
(l.319,c.6) get tok: REF TAG(tr)
(l.319,c.8) get tok: INT(IS[82])
(l.320,c.0) get tok: REF TAG(noinc)
(l.320,c.4) get tok: INT(THEN[190])
(l.320,c.7) get tok: REF TAG(tr)
(l.320,c.9) get tok: STRING(:=)
(l.320,c.13) get tok: INT(HEAP[48])
(l.320,c.22) get tok: REF TAG(INCLUDED)
(l.320,c.24) get tok: STRING(:=)
(l.320,c.25) get tok: STRING(()
(l.320,c.27) get tok: REF TAG(fn)
(l.320,c.28) get tok: STRING(,)
(l.320,c.34) get tok: REF TAG(noinc)
(l.320,c.35) get tok: STRING(,)
(l.320,c.41) get tok: REF TAG(noinc)
(l.320,c.42) get tok: STRING())
(l.321,c.4) get tok: INT(ELIF[9])
(l.321,c.8) get tok: REF TAG(fn)
(l.321,c.9) get tok: STRING(<)
(l.321,c.12) get tok: REF TAG(s)
(l.321,c.14) get tok: INT(OF[97])
(l.322,c.0) get tok: REF TAG(tr)
(l.322,c.4) get tok: INT(THEN[190])
(l.322,c.21) get tok: REF TAG(addfiletotree)
(l.322,c.22) get tok: STRING(()
(l.322,c.27) get tok: REF TAG(left)
(l.322,c.29) get tok: INT(OF[97])
(l.322,c.32) get tok: REF TAG(tr)
(l.322,c.33) get tok: STRING(,)
(l.322,c.35) get tok: REF TAG(fn)
(l.322,c.36) get tok: STRING())
(l.323,c.4) get tok: INT(ELIF[9])
(l.323,c.8) get tok: REF TAG(fn)
(l.323,c.9) get tok: STRING(>)
(l.323,c.12) get tok: REF TAG(s)
(l.323,c.14) get tok: INT(OF[97])
(l.324,c.0) get tok: REF TAG(tr)
(l.324,c.4) get tok: INT(THEN[190])
(l.324,c.21) get tok: REF TAG(addfiletotree)
(l.324,c.22) get tok: STRING(()
(l.324,c.28) get tok: REF TAG(right)
(l.324,c.30) get tok: INT(OF[97])
(l.324,c.33) get tok: REF TAG(tr)
(l.324,c.34) get tok: STRING(,)
(l.324,c.36) get tok: REF TAG(fn)
(l.324,c.37) get tok: STRING())
(l.325,c.4) get tok: INT(ELSE[4])
(l.325,c.15) get tok: REF TAG(warnprint)
(l.325,c.16) get tok: STRING(()
(l.325,c.23) get tok: STRING("file ")
(l.325,c.24) get tok: STRING(+)
(l.325,c.26) get tok: REF TAG(fn)
(l.325,c.27) get tok: STRING(+)
(l.325,c.51) get tok: STRING(" has already been read")
(l.325,c.52) get tok: STRING())
(l.326,c.2) get tok: INT(FI[107])
(l.326,c.3) get tok: STRING(;)
(l.328,c.2) get tok: CONTROL( )
(l.333,c.2) get tok: CONTROL(<)
(l.334,c.4) get tok: INT(PROC[69])
(l.334,c.22) get tok: REF TAG(addincludefile)
(l.334,c.23) get tok: STRING(=)
(l.334,c.25) get tok: STRING(()
(l.334,c.28) get tok: INT(REF[53])
(l.334,c.32) get tok: INT(REF[53])
(l.334,c.39) get tok: REF TAG(STREAM)
(l.334,c.43) get tok: REF TAG(web)
(l.334,c.44) get tok: STRING(,)
(l.334,c.51) get tok: INT(STRING[156])
(l.334,c.58) get tok: REF TAG(incfn)
(l.334,c.59) get tok: STRING())
(l.334,c.63) get tok: INT(BOOL[184])
(l.335,c.0) get tok: STRING(:)
(l.335,c.2) get tok: INT(IF[62])
(l.335,c.7) get tok: INT(HEAP[48])
(l.335,c.12) get tok: INT(FILE[59])
(l.335,c.18) get tok: REF TAG(incf)
(l.335,c.19) get tok: STRING(;)
(l.336,c.4) get tok: REF TAG(open)
(l.336,c.5) get tok: STRING(()
(l.336,c.10) get tok: REF TAG(incf)
(l.336,c.11) get tok: STRING(,)
(l.336,c.17) get tok: REF TAG(incfn)
(l.336,c.18) get tok: STRING(,)
(l.336,c.34) get tok: REF TAG(standinchannel)
(l.336,c.35) get tok: STRING())
(l.336,c.36) get tok: STRING(=)
(l.337,c.0) get tok: STRING(0)
(l.337,c.4) get tok: INT(THEN[190])
(l.337,c.6) get tok: CONTROL(/)
(l.338,c.11) get tok: REF TAG(filenumber)
(l.338,c.14) get tok: STRING(+:=)
(l.338,c.15) get tok: STRING(1)
(l.338,c.16) get tok: STRING(;)
(l.339,c.2) get tok: CONTROL(<)
(l.340,c.16) get tok: REF TAG(addfiletotree)
(l.340,c.17) get tok: STRING(()
(l.340,c.25) get tok: REF TAG(inctree)
(l.340,c.26) get tok: STRING(,)
(l.340,c.32) get tok: REF TAG(incfn)
(l.340,c.33) get tok: STRING())
(l.340,c.34) get tok: STRING(;)
(l.341,c.4) get tok: INT(TRUE[64])
(l.342,c.4) get tok: INT(ELSE[4])
(l.342,c.7) get tok: CONTROL(<)
(l.343,c.2) get tok: INT(FI[107])
(l.343,c.3) get tok: STRING(;)
(l.345,c.2) get tok: CONTROL( )
(l.347,c.2) get tok: CONTROL(<)
(l.348,c.3) get tok: REF TAG(web)
(l.348,c.5) get tok: STRING(:=)
(l.348,c.9) get tok: INT(HEAP[48])
(l.348,c.16) get tok: REF TAG(STREAM)
(l.348,c.18) get tok: STRING(:=)
(l.348,c.20) get tok: CONTROL(/)
(l.349,c.1) get tok: STRING(()
(l.349,c.6) get tok: REF TAG(incf)
(l.349,c.7) get tok: STRING(,)
(l.349,c.12) get tok: INT(FALSE[123])
(l.349,c.13) get tok: STRING(,)
(l.349,c.24) get tok: REF TAG(filenumber)
(l.349,c.25) get tok: STRING(,)
(l.349,c.26) get tok: STRING(0)
(l.349,c.27) get tok: STRING(,)
(l.349,c.28) get tok: STRING(0)
(l.349,c.29) get tok: STRING(,)
(l.349,c.30) get tok: STRING(0)
(l.349,c.31) get tok: STRING(,)
(l.350,c.1) get tok: STRING(()
(l.350,c.12) get tok: REF TAG(filenumber)
(l.350,c.13) get tok: STRING(,)
(l.350,c.14) get tok: STRING(0)
(l.350,c.15) get tok: STRING(,)
(l.350,c.16) get tok: STRING(0)
(l.350,c.17) get tok: STRING(,)
(l.350,c.18) get tok: STRING(0)
(l.350,c.19) get tok: STRING())
(l.350,c.20) get tok: STRING(,)
(l.350,c.31) get tok: REF TAG(strbuffsz)
(l.350,c.32) get tok: STRING(*)
(l.350,c.37) get tok: REF TAG(blank)
(l.350,c.38) get tok: STRING(,)
(l.350,c.41) get tok: REF TAG(web)
(l.350,c.42) get tok: STRING())
(l.350,c.43) get tok: STRING(;)
(l.352,c.2) get tok: CONTROL( )
(l.354,c.2) get tok: CONTROL(<)
(l.355,c.3) get tok: INT(INT[195])
(l.355,c.15) get tok: REF TAG(filenumber)
(l.355,c.17) get tok: STRING(:=)
(l.355,c.18) get tok: STRING(0)
(l.355,c.19) get tok: STRING(;)
(l.357,c.2) get tok: CONTROL( )
(l.362,c.2) get tok: CONTROL(<)
(l.363,c.4) get tok: INT(FILE[59])
(l.363,c.7) get tok: REF TAG(pf)
(l.363,c.8) get tok: STRING(;)
(l.364,c.6) get tok: INT(STRING[156])
(l.364,c.11) get tok: REF TAG(path)
(l.364,c.12) get tok: STRING(;)
(l.365,c.4) get tok: REF TAG(open)
(l.365,c.5) get tok: STRING(()
(l.365,c.7) get tok: REF TAG(pf)
(l.365,c.8) get tok: STRING(,)
(l.365,c.15) get tok: REF TAG(MAKERVC)
(l.365,c.29) get tok: REF TAG(includepaths)
(l.365,c.30) get tok: STRING(,)
(l.365,c.41) get tok: REF TAG(memchannel)
(l.365,c.42) get tok: STRING())
(l.365,c.43) get tok: STRING(;)
(l.366,c.9) get tok: REF TAG(maketerm)
(l.366,c.10) get tok: STRING(()
(l.366,c.12) get tok: REF TAG(pf)
(l.366,c.13) get tok: STRING(,)
(l.366,c.16) get tok: STRING(":")
(l.366,c.17) get tok: STRING())
(l.366,c.18) get tok: STRING(;)
(l.367,c.19) get tok: REF TAG(onlogicalfileend)
(l.367,c.20) get tok: STRING(()
(l.367,c.22) get tok: REF TAG(pf)
(l.367,c.23) get tok: STRING(,)
(l.367,c.24) get tok: STRING(()
(l.367,c.27) get tok: INT(REF[53])
(l.367,c.32) get tok: INT(FILE[59])
(l.367,c.34) get tok: REF TAG(f)
(l.367,c.35) get tok: STRING())
(l.367,c.39) get tok: INT(BOOL[184])
(l.367,c.40) get tok: STRING(:)
(l.367,c.42) get tok: STRING(()
(l.367,c.47) get tok: REF TAG(close)
(l.367,c.48) get tok: STRING(()
(l.367,c.49) get tok: REF TAG(f)
(l.367,c.50) get tok: STRING())
(l.367,c.51) get tok: STRING(;)
(l.367,c.54) get tok: CONTROL(&)
(l.367,c.58) get tok: INT(GOTO[294])
(l.367,c.62) get tok: REF TAG(eof)
(l.367,c.63) get tok: STRING(;)
(l.367,c.68) get tok: INT(SKIP[44])
(l.367,c.69) get tok: STRING())
(l.367,c.70) get tok: STRING())
(l.367,c.71) get tok: STRING(;)
(l.368,c.2) get tok: INT(DO[244])
(l.369,c.3) get tok: REF TAG(get)
(l.369,c.4) get tok: STRING(()
(l.369,c.6) get tok: REF TAG(pf)
(l.369,c.7) get tok: STRING(,)
(l.369,c.8) get tok: STRING(()
(l.369,c.24) get tok: REF TAG(skipterminators)
(l.369,c.25) get tok: STRING(,)
(l.369,c.29) get tok: REF TAG(path)
(l.369,c.30) get tok: STRING())
(l.369,c.31) get tok: STRING())
(l.369,c.32) get tok: STRING(;)
(l.370,c.2) get tok: INT(IF[62])
(l.370,c.7) get tok: REF TAG(path)
(l.370,c.8) get tok: STRING([)
(l.370,c.11) get tok: INT(UPB[150])
(l.370,c.16) get tok: REF TAG(path)
(l.370,c.17) get tok: STRING(])
(l.370,c.19) get tok: STRING(/=)
(l.370,c.22) get tok: STRING("/")
(l.370,c.25) get tok: CONTROL(&)
(l.370,c.29) get tok: INT(THEN[190])
(l.370,c.34) get tok: REF TAG(path)
(l.370,c.37) get tok: STRING(+:=)
(l.370,c.40) get tok: STRING("/")
(l.370,c.43) get tok: CONTROL(&)
(l.370,c.45) get tok: INT(FI[107])
(l.370,c.46) get tok: STRING(;)
(l.371,c.2) get tok: INT(IF[62])
(l.371,c.7) get tok: REF TAG(open)
(l.371,c.8) get tok: STRING(()
(l.371,c.13) get tok: REF TAG(incf)
(l.371,c.14) get tok: STRING(,)
(l.371,c.18) get tok: REF TAG(path)
(l.371,c.19) get tok: STRING(+)
(l.371,c.25) get tok: REF TAG(incfn)
(l.371,c.26) get tok: STRING(,)
(l.371,c.42) get tok: REF TAG(standinchannel)
(l.371,c.43) get tok: STRING())
(l.371,c.44) get tok: STRING(=)
(l.372,c.0) get tok: STRING(0)
(l.372,c.4) get tok: INT(THEN[190])
(l.372,c.6) get tok: CONTROL(/)
(l.373,c.11) get tok: REF TAG(filenumber)
(l.373,c.14) get tok: STRING(+:=)
(l.373,c.15) get tok: STRING(1)
(l.373,c.16) get tok: STRING(;)
(l.374,c.2) get tok: CONTROL(<)
(l.375,c.5) get tok: REF TAG(close)
(l.375,c.6) get tok: STRING(()
(l.375,c.8) get tok: REF TAG(pf)
(l.375,c.9) get tok: STRING())
(l.375,c.10) get tok: STRING(;)
(l.376,c.16) get tok: REF TAG(addfiletotree)
(l.376,c.17) get tok: STRING(()
(l.376,c.25) get tok: REF TAG(inctree)
(l.376,c.26) get tok: STRING(,)
(l.376,c.32) get tok: REF TAG(incfn)
(l.376,c.33) get tok: STRING())
(l.376,c.34) get tok: STRING(;)
(l.377,c.4) get tok: INT(GOTO[294])
(l.378,c.0) get tok: REF TAG(found)
(l.378,c.4) get tok: INT(ELSE[4])
(l.378,c.23) get tok: REF TAG(debugprintstring)
(l.378,c.24) get tok: STRING(()
(l.378,c.51) get tok: STRING("looking for include file ")
(l.378,c.52) get tok: STRING(,)
(l.378,c.56) get tok: REF TAG(path)
(l.378,c.57) get tok: STRING(+)
(l.378,c.63) get tok: REF TAG(incfn)
(l.378,c.64) get tok: STRING())
(l.379,c.2) get tok: INT(FI[107])
(l.380,c.2) get tok: INT(OD[231])
(l.380,c.3) get tok: STRING(;)
(l.381,c.3) get tok: REF TAG(eof)
(l.382,c.0) get tok: STRING(:)
(l.382,c.5) get tok: INT(FALSE[123])
(l.382,c.10) get tok: INT(EXIT[21])
(l.383,c.5) get tok: REF TAG(found)
(l.383,c.6) get tok: STRING(:)
(l.383,c.11) get tok: INT(TRUE[64])
(l.385,c.2) get tok: CONTROL( )
(l.398,c.2) get tok: CONTROL(<)
(l.399,c.4) get tok: INT(PROC[69])
(l.399,c.24) get tok: REF TAG(scanincludedtree)
(l.399,c.25) get tok: STRING(=)
(l.399,c.27) get tok: STRING(()
(l.399,c.30) get tok: INT(REF[53])
(l.399,c.34) get tok: INT(REF[53])
(l.399,c.43) get tok: REF TAG(INCLUDED)
(l.399,c.46) get tok: REF TAG(tr)
(l.399,c.47) get tok: STRING(,)
(l.399,c.54) get tok: INT(STRING[156])
(l.399,c.57) get tok: REF TAG(fn)
(l.399,c.58) get tok: STRING())
(l.399,c.62) get tok: INT(BOOL[184])
(l.400,c.0) get tok: STRING(:)
(l.400,c.2) get tok: INT(IF[62])
(l.400,c.6) get tok: REF TAG(tr)
(l.400,c.8) get tok: INT(IS[82])
(l.401,c.0) get tok: REF TAG(noinc)
(l.401,c.4) get tok: INT(THEN[190])
(l.401,c.10) get tok: INT(FALSE[123])
(l.402,c.4) get tok: INT(ELIF[9])
(l.402,c.8) get tok: REF TAG(fn)
(l.402,c.9) get tok: STRING(=)
(l.402,c.12) get tok: REF TAG(s)
(l.402,c.14) get tok: INT(OF[97])
(l.403,c.0) get tok: REF TAG(tr)
(l.403,c.4) get tok: INT(THEN[190])
(l.403,c.9) get tok: INT(TRUE[64])
(l.404,c.4) get tok: INT(ELIF[9])
(l.404,c.8) get tok: REF TAG(fn)
(l.404,c.9) get tok: STRING(<)
(l.404,c.12) get tok: REF TAG(s)
(l.404,c.14) get tok: INT(OF[97])
(l.405,c.0) get tok: REF TAG(tr)
(l.405,c.4) get tok: INT(THEN[190])
(l.405,c.23) get tok: REF TAG(scanincludedtree)
(l.405,c.24) get tok: STRING(()
(l.405,c.29) get tok: REF TAG(left)
(l.405,c.31) get tok: INT(OF[97])
(l.405,c.34) get tok: REF TAG(tr)
(l.405,c.35) get tok: STRING(,)
(l.405,c.37) get tok: REF TAG(fn)
(l.405,c.38) get tok: STRING())
(l.406,c.4) get tok: INT(ELSE[4])
(l.406,c.23) get tok: REF TAG(scanincludedtree)
(l.406,c.24) get tok: STRING(()
(l.406,c.30) get tok: REF TAG(right)
(l.406,c.32) get tok: INT(OF[97])
(l.406,c.35) get tok: REF TAG(tr)
(l.406,c.36) get tok: STRING(,)
(l.406,c.38) get tok: REF TAG(fn)
(l.406,c.39) get tok: STRING())
(l.407,c.2) get tok: INT(FI[107])
(l.407,c.3) get tok: STRING(;)
(l.409,c.2) get tok: CONTROL( )
(l.411,c.2) get tok: CONTROL(<)
(l.412,c.4) get tok: INT(MODE[211])
(l.412,c.13) get tok: REF TAG(INCLUDED)
(l.412,c.15) get tok: STRING(=)
(l.412,c.22) get tok: INT(STRUCT[51])
(l.412,c.23) get tok: STRING(()
(l.412,c.29) get tok: INT(STRING[156])
(l.412,c.31) get tok: REF TAG(s)
(l.412,c.32) get tok: STRING(,)
(l.412,c.35) get tok: INT(REF[53])
(l.412,c.44) get tok: REF TAG(INCLUDED)
(l.412,c.49) get tok: REF TAG(left)
(l.412,c.50) get tok: STRING(,)
(l.412,c.55) get tok: REF TAG(right)
(l.412,c.56) get tok: STRING())
(l.412,c.57) get tok: STRING(;)
(l.414,c.2) get tok: CONTROL( )
(l.416,c.2) get tok: CONTROL(<)
(l.417,c.3) get tok: INT(REF[53])
(l.417,c.12) get tok: REF TAG(INCLUDED)
(l.417,c.20) get tok: REF TAG(noinc)
(l.417,c.21) get tok: STRING(=)
(l.417,c.25) get tok: INT(NIL[180])
(l.417,c.26) get tok: STRING(;)
(l.419,c.2) get tok: CONTROL( )
(l.421,c.2) get tok: CONTROL(<)
(l.422,c.3) get tok: INT(REF[53])
(l.422,c.12) get tok: REF TAG(INCLUDED)
(l.422,c.21) get tok: REF TAG(inctree)
(l.422,c.23) get tok: STRING(:=)
(l.422,c.29) get tok: REF TAG(noinc)
(l.422,c.30) get tok: STRING(;)
(l.424,c.2) get tok: CONTROL( )
(l.429,c.2) get tok: CONTROL(<)
(l.430,c.2) get tok: INT(IF[62])
(l.430,c.8) get tok: REF TAG(next)
(l.430,c.10) get tok: INT(OF[97])
(l.430,c.15) get tok: REF TAG(web)
(l.430,c.19) get tok: INT(ISNT[84])
(l.431,c.0) get tok: REF TAG(nostream)
(l.431,c.4) get tok: INT(THEN[190])
(l.431,c.10) get tok: REF TAG(close)
(l.431,c.11) get tok: STRING(()
(l.431,c.13) get tok: REF TAG(f)
(l.431,c.15) get tok: INT(OF[97])
(l.431,c.19) get tok: REF TAG(web)
(l.431,c.20) get tok: STRING())
(l.431,c.21) get tok: STRING(;)
(l.432,c.3) get tok: REF TAG(web)
(l.432,c.5) get tok: STRING(:=)
(l.432,c.10) get tok: REF TAG(next)
(l.432,c.12) get tok: INT(OF[97])
(l.433,c.0) get tok: REF TAG(web)
(l.433,c.2) get tok: INT(FI[107])
(l.435,c.2) get tok: CONTROL( )
(l.438,c.2) get tok: CONTROL(m)
(l.438,c.15) get tok: REF TAG(inputended)
(l.438,c.16) get tok: STRING(=)
(l.438,c.23) get tok: REF TAG(ended)
(l.438,c.25) get tok: INT(OF[97])
(l.440,c.0) get tok: REF TAG(web)
(l.440,c.2) get tok: CONTROL(<)
(l.441,c.3) get tok: INT(REF[53])
(l.441,c.10) get tok: REF TAG(STREAM)
(l.441,c.14) get tok: REF TAG(web)
(l.441,c.16) get tok: STRING(:=)
(l.441,c.20) get tok: INT(HEAP[48])
(l.441,c.27) get tok: REF TAG(STREAM)
(l.441,c.29) get tok: STRING(:=)
(l.441,c.31) get tok: CONTROL(/)
(l.442,c.1) get tok: STRING(()
(l.442,c.5) get tok: INT(HEAP[48])
(l.442,c.10) get tok: INT(FILE[59])
(l.442,c.11) get tok: STRING(,)
(l.442,c.17) get tok: INT(FALSE[123])
(l.442,c.18) get tok: STRING(,)
(l.442,c.19) get tok: STRING(0)
(l.442,c.20) get tok: STRING(,)
(l.442,c.21) get tok: STRING(0)
(l.442,c.22) get tok: STRING(,)
(l.442,c.23) get tok: STRING(0)
(l.442,c.24) get tok: STRING(,)
(l.442,c.25) get tok: STRING(0)
(l.442,c.26) get tok: STRING(,)
(l.442,c.27) get tok: STRING(()
(l.442,c.28) get tok: STRING(0)
(l.442,c.29) get tok: STRING(,)
(l.442,c.30) get tok: STRING(0)
(l.442,c.31) get tok: STRING(,)
(l.442,c.32) get tok: STRING(0)
(l.442,c.33) get tok: STRING(,)
(l.442,c.34) get tok: STRING(0)
(l.442,c.35) get tok: STRING())
(l.442,c.36) get tok: STRING(,)
(l.442,c.47) get tok: REF TAG(strbuffsz)
(l.442,c.48) get tok: STRING(*)
(l.442,c.53) get tok: REF TAG(blank)
(l.442,c.54) get tok: STRING(,)
(l.442,c.64) get tok: REF TAG(nostream)
(l.442,c.65) get tok: STRING())
(l.442,c.66) get tok: STRING(;)
(l.443,c.6) get tok: REF TAG(STREAM)
(l.443,c.13) get tok: REF TAG(output)
(l.443,c.15) get tok: STRING(:=)
(l.443,c.17) get tok: CONTROL(/)
(l.444,c.1) get tok: STRING(()
(l.444,c.5) get tok: INT(HEAP[48])
(l.444,c.10) get tok: INT(FILE[59])
(l.444,c.11) get tok: STRING(,)
(l.444,c.16) get tok: INT(FALSE[123])
(l.444,c.17) get tok: STRING(,)
(l.444,c.18) get tok: STRING(0)
(l.444,c.19) get tok: STRING(,)
(l.444,c.20) get tok: STRING(0)
(l.444,c.21) get tok: STRING(,)
(l.444,c.22) get tok: STRING(0)
(l.444,c.23) get tok: STRING(,)
(l.444,c.24) get tok: STRING(0)
(l.444,c.25) get tok: STRING(,)
(l.444,c.26) get tok: STRING(()
(l.444,c.27) get tok: STRING(0)
(l.444,c.28) get tok: STRING(,)
(l.444,c.29) get tok: STRING(0)
(l.444,c.30) get tok: STRING(,)
(l.444,c.31) get tok: STRING(0)
(l.444,c.32) get tok: STRING(,)
(l.444,c.33) get tok: STRING(0)
(l.444,c.34) get tok: STRING())
(l.444,c.35) get tok: STRING(,)
(l.444,c.46) get tok: REF TAG(strbuffsz)
(l.444,c.47) get tok: STRING(*)
(l.444,c.52) get tok: REF TAG(blank)
(l.444,c.53) get tok: STRING(,)
(l.444,c.62) get tok: REF TAG(nostream)
(l.444,c.63) get tok: STRING())
(l.444,c.64) get tok: STRING(;)
(l.446,c.2) get tok: CONTROL(2)
(l.472,c.2) get tok: CONTROL(<)
(l.473,c.6) get tok: INT(STRING[156])
(l.473,c.14) get tok: REF TAG(tangfn)
(l.473,c.15) get tok: STRING(;)
(l.475,c.2) get tok: CONTROL( )
(l.478,c.2) get tok: CONTROL(<)
(l.479,c.4) get tok: INT(FILE[59])
(l.479,c.9) get tok: REF TAG(argf)
(l.479,c.10) get tok: STRING(;)
(l.481,c.2) get tok: CONTROL( )
(l.483,c.2) get tok: CONTROL(a)
(l.484,c.2) get tok: CONTROL(<)
(l.485,c.2) get tok: CONTROL(<)
(l.486,c.2) get tok: CONTROL(<)
(l.488,c.2) get tok: CONTROL( )
(l.492,c.2) get tok: CONTROL(m)
(l.492,c.15) get tok: REF TAG(helpstatus)
(l.492,c.16) get tok: STRING(=)
(l.493,c.0) get tok: STRING(1)
(l.493,c.2) get tok: CONTROL(m)
(l.493,c.22) get tok: REF TAG(nowebfilestatus)
(l.493,c.23) get tok: STRING(=)
(l.494,c.0) get tok: STRING(2)
(l.494,c.2) get tok: CONTROL(m)
(l.494,c.25) get tok: REF TAG(nooutputfilestatus)
(l.494,c.26) get tok: STRING(=)
(l.495,c.0) get tok: STRING(3)
(l.495,c.2) get tok: CONTROL(m)
(l.495,c.31) get tok: REF TAG(invalidincludepathstatus)
(l.495,c.32) get tok: STRING(=)
(l.496,c.0) get tok: STRING(4)
(l.496,c.2) get tok: CONTROL(m)
(l.496,c.16) get tok: REF TAG(errorstatus)
(l.496,c.17) get tok: STRING(=)
(l.498,c.0) get tok: STRING(5)
(l.498,c.2) get tok: CONTROL(<)
(l.499,c.2) get tok: INT(IF[62])
(l.499,c.7) get tok: INT(FILE[59])
(l.499,c.10) get tok: REF TAG(hf)
(l.499,c.11) get tok: STRING(;)
(l.499,c.16) get tok: REF TAG(open)
(l.499,c.17) get tok: STRING(()
(l.499,c.19) get tok: REF TAG(hf)
(l.499,c.20) get tok: STRING(,)
(l.499,c.26) get tok: STRING("HOME")
(l.499,c.27) get tok: STRING(,)
(l.499,c.38) get tok: REF TAG(envchannel)
(l.499,c.39) get tok: STRING())
(l.499,c.41) get tok: STRING(/=)
(l.500,c.0) get tok: STRING(0)
(l.500,c.4) get tok: INT(THEN[190])
(l.500,c.17) get tok: REF TAG(simpleerror)
(l.500,c.18) get tok: STRING(()
(l.500,c.34) get tok: STRING("HOME undefined")
(l.500,c.35) get tok: STRING(,)
(l.500,c.47) get tok: REF TAG(errorstatus)
(l.500,c.48) get tok: STRING())
(l.502,c.4) get tok: INT(ELSE[4])
(l.502,c.8) get tok: REF TAG(get)
(l.502,c.9) get tok: STRING(()
(l.502,c.11) get tok: REF TAG(hf)
(l.502,c.12) get tok: STRING(,)
(l.502,c.21) get tok: REF TAG(homedir)
(l.502,c.22) get tok: STRING())
(l.502,c.23) get tok: STRING(;)
(l.502,c.25) get tok: CONTROL(&)
(l.502,c.31) get tok: REF TAG(close)
(l.502,c.32) get tok: STRING(()
(l.502,c.34) get tok: REF TAG(hf)
(l.502,c.35) get tok: STRING())
(l.503,c.2) get tok: INT(FI[107])
(l.503,c.3) get tok: STRING(;)
(l.505,c.2) get tok: CONTROL( )
(l.507,c.2) get tok: CONTROL(<)
(l.508,c.6) get tok: INT(STRING[156])
(l.508,c.15) get tok: REF TAG(homedir)
(l.508,c.16) get tok: STRING(;)
(l.510,c.2) get tok: CONTROL( )
(l.513,c.2) get tok: CONTROL(<)
(l.514,c.2) get tok: INT(IF[62])
(l.514,c.7) get tok: REF TAG(open)
(l.514,c.8) get tok: STRING(()
(l.514,c.12) get tok: REF TAG(argf)
(l.514,c.13) get tok: STRING(,)
(l.514,c.15) get tok: STRING("")
(l.514,c.16) get tok: STRING(,)
(l.514,c.27) get tok: REF TAG(argchannel)
(l.514,c.28) get tok: STRING())
(l.514,c.30) get tok: STRING(/=)
(l.515,c.0) get tok: STRING(0)
(l.515,c.4) get tok: INT(THEN[190])
(l.515,c.17) get tok: REF TAG(simpleerror)
(l.515,c.18) get tok: STRING(()
(l.515,c.52) get tok: STRING("program's arguments inaccessible")
(l.515,c.53) get tok: STRING(,)
(l.515,c.65) get tok: REF TAG(errorstatus)
(l.515,c.66) get tok: STRING())
(l.517,c.4) get tok: INT(ELSE[4])
(l.518,c.19) get tok: REF TAG(onlogicalfileend)
(l.518,c.20) get tok: STRING(()
(l.518,c.24) get tok: REF TAG(argf)
(l.518,c.25) get tok: STRING(,)
(l.519,c.1) get tok: STRING(()
(l.519,c.4) get tok: INT(REF[53])
(l.519,c.9) get tok: INT(FILE[59])
(l.519,c.11) get tok: REF TAG(f)
(l.519,c.12) get tok: STRING())
(l.519,c.16) get tok: INT(BOOL[184])
(l.519,c.17) get tok: STRING(:)
(l.519,c.19) get tok: CONTROL(/)
(l.520,c.1) get tok: STRING(()
(l.520,c.6) get tok: REF TAG(close)
(l.520,c.7) get tok: STRING(()
(l.520,c.8) get tok: REF TAG(f)
(l.520,c.9) get tok: STRING())
(l.520,c.10) get tok: STRING(;)
(l.521,c.5) get tok: REF TAG(usage)
(l.521,c.6) get tok: STRING(;)
(l.522,c.4) get tok: INT(TRUE[64])
(l.522,c.5) get tok: STRING())
(l.522,c.6) get tok: STRING())
(l.523,c.2) get tok: INT(FI[107])
(l.523,c.3) get tok: STRING(;)
(l.525,c.2) get tok: CONTROL( )
(l.530,c.2) get tok: CONTROL(<)
(l.531,c.4) get tok: INT(CASE[137])
(l.531,c.14) get tok: REF TAG(getparam)
(l.531,c.15) get tok: STRING(()
(l.531,c.19) get tok: REF TAG(argf)
(l.531,c.20) get tok: STRING())
(l.532,c.2) get tok: INT(IN[306])
(l.533,c.1) get tok: STRING(()
(l.533,c.4) get tok: INT(REF[53])
(l.533,c.10) get tok: REF TAG(PARAM)
(l.533,c.13) get tok: REF TAG(rp)
(l.533,c.14) get tok: STRING())
(l.534,c.0) get tok: STRING(:)
(l.534,c.2) get tok: INT(IF[62])
(l.534,c.5) get tok: INT(IF[62])
(l.534,c.9) get tok: REF TAG(rp)
(l.534,c.11) get tok: INT(IS[82])
(l.535,c.0) get tok: REF TAG(noparam)
(l.535,c.4) get tok: INT(THEN[190])
(l.535,c.9) get tok: INT(TRUE[64])
(l.536,c.4) get tok: INT(ELSE[4])
(l.536,c.8) get tok: INT(UPB[150])
(l.536,c.13) get tok: REF TAG(val)
(l.536,c.15) get tok: INT(OF[97])
(l.536,c.19) get tok: REF TAG(rp)
(l.536,c.20) get tok: STRING(=)
(l.537,c.0) get tok: STRING(0)
(l.537,c.2) get tok: INT(FI[107])
(l.538,c.4) get tok: INT(THEN[190])
(l.539,c.0) get tok: REF TAG(usage)
(l.539,c.4) get tok: INT(ELSE[4])
(l.539,c.7) get tok: CONTROL(<)
(l.540,c.2) get tok: INT(FI[107])
(l.541,c.3) get tok: INT(OUT[155])
(l.541,c.16) get tok: REF TAG(simpleerror)
(l.541,c.17) get tok: STRING(()
(l.541,c.43) get tok: STRING("unknown parameter format")
(l.541,c.44) get tok: STRING(,)
(l.541,c.56) get tok: REF TAG(errorstatus)
(l.541,c.57) get tok: STRING())
(l.543,c.4) get tok: INT(ESAC[39])
(l.543,c.5) get tok: STRING(;)
(l.545,c.2) get tok: CONTROL( )
(l.547,c.2) get tok: CONTROL(<)
(l.548,c.3) get tok: INT(FOR[138])
(l.548,c.6) get tok: REF TAG(i)
(l.548,c.10) get tok: INT(FROM[176])
(l.548,c.14) get tok: INT(LWB[148])
(l.548,c.19) get tok: REF TAG(val)
(l.548,c.21) get tok: INT(OF[97])
(l.548,c.25) get tok: REF TAG(rp)
(l.548,c.27) get tok: INT(TO[187])
(l.548,c.31) get tok: INT(UPB[150])
(l.548,c.36) get tok: REF TAG(val)
(l.548,c.38) get tok: INT(OF[97])
(l.549,c.0) get tok: REF TAG(rp)
(l.549,c.2) get tok: INT(DO[244])
(l.550,c.4) get tok: INT(CASE[137])
(l.550,c.6) get tok: STRING(()
(l.550,c.10) get tok: REF TAG(val)
(l.550,c.12) get tok: INT(OF[97])
(l.550,c.15) get tok: REF TAG(rp)
(l.550,c.16) get tok: STRING())
(l.550,c.17) get tok: STRING([)
(l.550,c.18) get tok: REF TAG(i)
(l.550,c.19) get tok: STRING(])
(l.551,c.2) get tok: INT(IN[306])
(l.552,c.1) get tok: STRING(()
(l.552,c.4) get tok: INT(REF[53])
(l.552,c.10) get tok: REF TAG(PARAM)
(l.552,c.14) get tok: REF TAG(rp1)
(l.552,c.15) get tok: STRING())
(l.553,c.0) get tok: STRING(:)
(l.553,c.2) get tok: INT(IF[62])
(l.553,c.5) get tok: INT(IF[62])
(l.553,c.10) get tok: REF TAG(rp1)
(l.553,c.12) get tok: INT(IS[82])
(l.554,c.0) get tok: REF TAG(noparam)
(l.554,c.4) get tok: INT(THEN[190])
(l.554,c.9) get tok: INT(TRUE[64])
(l.555,c.4) get tok: INT(ELSE[4])
(l.555,c.10) get tok: REF TAG(prog)
(l.555,c.12) get tok: INT(OF[97])
(l.555,c.16) get tok: REF TAG(rp1)
(l.555,c.17) get tok: STRING(=)
(l.556,c.0) get tok: STRING("")
(l.556,c.2) get tok: INT(FI[107])
(l.557,c.4) get tok: INT(THEN[190])
(l.557,c.17) get tok: REF TAG(simpleerror)
(l.557,c.18) get tok: STRING(()
(l.557,c.37) get tok: STRING("missing parameter")
(l.557,c.38) get tok: STRING(,)
(l.557,c.50) get tok: REF TAG(errorstatus)
(l.557,c.51) get tok: STRING())
(l.559,c.4) get tok: INT(ELIF[9])
(l.560,c.3) get tok: INT(INT[195])
(l.560,c.5) get tok: REF TAG(p)
(l.560,c.6) get tok: STRING(;)
(l.561,c.14) get tok: REF TAG(charinstring)
(l.561,c.15) get tok: STRING(()
(l.561,c.16) get tok: STRING(()
(l.561,c.21) get tok: REF TAG(prog)
(l.561,c.23) get tok: INT(OF[97])
(l.561,c.27) get tok: REF TAG(rp1)
(l.561,c.28) get tok: STRING())
(l.561,c.29) get tok: STRING([)
(l.561,c.32) get tok: INT(LWB[148])
(l.561,c.38) get tok: REF TAG(prog)
(l.561,c.40) get tok: INT(OF[97])
(l.561,c.44) get tok: REF TAG(rp1)
(l.561,c.45) get tok: STRING(])
(l.561,c.46) get tok: STRING(,)
(l.561,c.47) get tok: REF TAG(p)
(l.561,c.48) get tok: STRING(,)
(l.561,c.55) get tok: STRING("dfhvw")
(l.561,c.56) get tok: STRING())
(l.562,c.4) get tok: INT(THEN[190])
(l.563,c.4) get tok: INT(CASE[137])
(l.564,c.0) get tok: REF TAG(p)
(l.564,c.2) get tok: INT(IN[306])
(l.565,c.16) get tok: REF TAG(debug)
(l.565,c.18) get tok: STRING(:=)
(l.565,c.22) get tok: INT(TRUE[64])
(l.566,c.1) get tok: STRING(,)
(l.567,c.13) get tok: CONTROL(<)
(l.568,c.1) get tok: STRING(,)
(l.570,c.0) get tok: REF TAG(usage)
(l.570,c.1) get tok: STRING(,)
(l.571,c.12) get tok: STRING(()
(l.572,c.3) get tok: INT(INT[195])
(l.572,c.9) get tok: REF TAG(vpos)
(l.572,c.10) get tok: STRING(=)
(l.572,c.14) get tok: STRING("v")
(l.572,c.19) get tok: INT(FIND[131])
(l.572,c.28) get tok: REF TAG(cvstang)
(l.572,c.29) get tok: STRING(;)
(l.573,c.3) get tok: REF TAG(put)
(l.573,c.4) get tok: STRING(()
(l.573,c.15) get tok: REF TAG(standerror)
(l.573,c.16) get tok: STRING(,)
(l.573,c.18) get tok: CONTROL(/)
(l.574,c.1) get tok: STRING(()
(l.574,c.25) get tok: STRING("This is tang, version ")
(l.574,c.26) get tok: STRING(,)
(l.575,c.1) get tok: STRING(()
(l.575,c.9) get tok: REF TAG(cvstang)
(l.575,c.10) get tok: STRING([)
(l.575,c.14) get tok: REF TAG(vpos)
(l.575,c.15) get tok: STRING(+)
(l.575,c.16) get tok: STRING(2)
(l.575,c.17) get tok: STRING(:)
(l.575,c.18) get tok: STRING(])
(l.575,c.19) get tok: STRING())
(l.575,c.24) get tok: REF TAG(UPTO)
(l.575,c.30) get tok: REF TAG(blank)
(l.575,c.31) get tok: STRING(,)
(l.576,c.40) get tok: STRING(" (C) BP64,65,66,67 Phoenix Engineering")
(l.576,c.41) get tok: STRING(,)
(l.576,c.48) get tok: REF TAG(newline)
(l.576,c.49) get tok: STRING())
(l.576,c.50) get tok: STRING())
(l.576,c.51) get tok: STRING(;)
(l.577,c.4) get tok: REF TAG(exit)
(l.577,c.5) get tok: STRING(()
(l.577,c.16) get tok: REF TAG(helpstatus)
(l.577,c.17) get tok: STRING())
(l.578,c.1) get tok: STRING())
(l.579,c.1) get tok: STRING(,)
(l.580,c.13) get tok: CONTROL(<)
(l.581,c.4) get tok: INT(ESAC[39])
(l.582,c.4) get tok: INT(ELSE[4])
(l.582,c.17) get tok: REF TAG(simpleerror)
(l.582,c.18) get tok: STRING(()
(l.582,c.37) get tok: STRING("unknown parameter")
(l.582,c.38) get tok: STRING(,)
(l.582,c.50) get tok: REF TAG(errorstatus)
(l.582,c.51) get tok: STRING())
(l.583,c.2) get tok: INT(FI[107])
(l.584,c.1) get tok: STRING(,)
(l.585,c.1) get tok: STRING(()
(l.585,c.7) get tok: INT(STRING[156])
(l.585,c.10) get tok: CONTROL(!)
(l.585,c.11) get tok: REF TAG(s)
(l.585,c.12) get tok: STRING())
(l.586,c.0) get tok: STRING(:)
(l.586,c.2) get tok: INT(IF[62])
(l.586,c.4) get tok: REF TAG(s)
(l.586,c.5) get tok: STRING(=)
(l.587,c.0) get tok: STRING("")
(l.587,c.4) get tok: INT(THEN[190])
(l.587,c.17) get tok: REF TAG(simpleerror)
(l.587,c.18) get tok: STRING(()
(l.587,c.36) get tok: STRING("missing filename")
(l.587,c.37) get tok: STRING(,)
(l.587,c.49) get tok: REF TAG(errorstatus)
(l.587,c.50) get tok: STRING())
(l.589,c.4) get tok: INT(ELSE[4])
(l.589,c.12) get tok: REF TAG(tangfn)
(l.589,c.14) get tok: STRING(:=)
(l.590,c.0) get tok: REF TAG(s)
(l.590,c.2) get tok: INT(FI[107])
(l.591,c.3) get tok: INT(OUT[155])
(l.591,c.16) get tok: REF TAG(simpleerror)
(l.591,c.17) get tok: STRING(()
(l.591,c.43) get tok: STRING("unknown parameter format")
(l.591,c.44) get tok: STRING(,)
(l.591,c.56) get tok: REF TAG(errorstatus)
(l.591,c.57) get tok: STRING())
(l.593,c.4) get tok: INT(ESAC[39])
(l.594,c.2) get tok: INT(OD[231])
(l.596,c.2) get tok: CONTROL( )
(l.599,c.2) get tok: CONTROL(<)
(l.600,c.30) get tok: REF TAG(macrogpopfindcharrowchar)
(l.600,c.31) get tok: STRING(;)
(l.601,c.16) get tok: REF TAG(macrogpopupto)
(l.601,c.17) get tok: STRING(;)
(l.603,c.2) get tok: CONTROL( )
(l.605,c.2) get tok: CONTROL(<)
(l.606,c.4) get tok: INT(PROC[69])
(l.606,c.11) get tok: REF TAG(usage)
(l.606,c.12) get tok: STRING(=)
(l.606,c.17) get tok: INT(VOID[181])
(l.607,c.0) get tok: STRING(:)
(l.607,c.5) get tok: INT(BEGIN[227])
(l.608,c.3) get tok: REF TAG(put)
(l.608,c.4) get tok: STRING(()
(l.608,c.15) get tok: REF TAG(standerror)
(l.608,c.16) get tok: STRING(,)
(l.609,c.1) get tok: STRING(()
(l.609,c.44) get tok: STRING("Usage: tang (d,h,v,w(paths),f(tang-file))")
(l.609,c.45) get tok: STRING(,)
(l.609,c.52) get tok: REF TAG(newline)
(l.609,c.53) get tok: STRING(,)
(l.610,c.39) get tok: STRING(" d: output debugging data to tang.dbg")
(l.610,c.40) get tok: STRING(,)
(l.610,c.47) get tok: REF TAG(newline)
(l.610,c.48) get tok: STRING(,)
(l.611,c.18) get tok: STRING(" f: (input file)")
(l.611,c.19) get tok: STRING(,)
(l.611,c.26) get tok: REF TAG(newline)
(l.611,c.27) get tok: STRING(,)
(l.612,c.18) get tok: STRING(" h: this message")
(l.612,c.19) get tok: STRING(,)
(l.612,c.26) get tok: REF TAG(newline)
(l.612,c.27) get tok: STRING(,)
(l.613,c.13) get tok: STRING(" v: version")
(l.613,c.14) get tok: STRING(,)
(l.613,c.21) get tok: REF TAG(newline)
(l.613,c.22) get tok: STRING(,)
(l.614,c.43) get tok: STRING(" w: comma-separated include path(s) to be")
(l.614,c.44) get tok: STRING(,)
(l.614,c.51) get tok: REF TAG(newline)
(l.614,c.52) get tok: STRING(,)
(l.615,c.37) get tok: STRING("     added to /usr/share/algol68toc")
(l.615,c.38) get tok: STRING(,)
(l.615,c.45) get tok: REF TAG(newline)
(l.615,c.46) get tok: STRING())
(l.615,c.47) get tok: STRING())
(l.615,c.48) get tok: STRING(;)
(l.617,c.4) get tok: REF TAG(exit)
(l.617,c.5) get tok: STRING(()
(l.617,c.16) get tok: REF TAG(helpstatus)
(l.617,c.17) get tok: STRING())
(l.618,c.3) get tok: INT(END[202])
(l.618,c.4) get tok: STRING(;)
(l.620,c.2) get tok: CONTROL( )
(l.623,c.2) get tok: CONTROL(<)
(l.624,c.2) get tok: INT(IF[62])
(l.624,c.6) get tok: INT(UPB[150])
(l.624,c.11) get tok: REF TAG(val)
(l.624,c.13) get tok: INT(OF[97])
(l.624,c.18) get tok: REF TAG(rp1)
(l.624,c.20) get tok: STRING(/=)
(l.625,c.0) get tok: STRING(1)
(l.625,c.4) get tok: INT(THEN[190])
(l.625,c.17) get tok: REF TAG(simpleerror)
(l.625,c.18) get tok: STRING(()
(l.625,c.45) get tok: STRING("wrong number of filenames")
(l.625,c.46) get tok: STRING(,)
(l.625,c.58) get tok: REF TAG(errorstatus)
(l.625,c.59) get tok: STRING())
(l.627,c.4) get tok: INT(ELSE[4])
(l.628,c.4) get tok: INT(CASE[137])
(l.628,c.6) get tok: STRING(()
(l.628,c.10) get tok: REF TAG(val)
(l.628,c.12) get tok: INT(OF[97])
(l.628,c.16) get tok: REF TAG(rp1)
(l.628,c.17) get tok: STRING())
(l.628,c.18) get tok: STRING([)
(l.628,c.21) get tok: INT(LWB[148])
(l.628,c.26) get tok: REF TAG(val)
(l.628,c.28) get tok: INT(OF[97])
(l.628,c.32) get tok: REF TAG(rp1)
(l.628,c.33) get tok: STRING(])
(l.629,c.2) get tok: INT(IN[306])
(l.630,c.1) get tok: STRING(()
(l.630,c.4) get tok: INT(REF[53])
(l.630,c.10) get tok: REF TAG(PARAM)
(l.630,c.14) get tok: REF TAG(rp2)
(l.630,c.15) get tok: STRING())
(l.631,c.0) get tok: STRING(:)
(l.631,c.2) get tok: INT(IF[62])
(l.631,c.5) get tok: INT(IF[62])
(l.631,c.10) get tok: REF TAG(rp2)
(l.631,c.12) get tok: INT(IS[82])
(l.632,c.0) get tok: REF TAG(noparam)
(l.632,c.4) get tok: INT(THEN[190])
(l.632,c.9) get tok: INT(TRUE[64])
(l.633,c.4) get tok: INT(ELSE[4])
(l.633,c.10) get tok: REF TAG(prog)
(l.633,c.12) get tok: INT(OF[97])
(l.633,c.16) get tok: REF TAG(rp2)
(l.633,c.17) get tok: STRING(=)
(l.634,c.0) get tok: STRING("")
(l.634,c.2) get tok: INT(FI[107])
(l.635,c.4) get tok: INT(THEN[190])
(l.635,c.17) get tok: REF TAG(simpleerror)
(l.635,c.18) get tok: STRING(()
(l.635,c.36) get tok: STRING("missing filename")
(l.635,c.37) get tok: STRING(,)
(l.635,c.49) get tok: REF TAG(errorstatus)
(l.635,c.50) get tok: STRING())
(l.637,c.4) get tok: INT(ELSE[4])
(l.637,c.12) get tok: REF TAG(tangfn)
(l.637,c.14) get tok: STRING(:=)
(l.637,c.19) get tok: REF TAG(prog)
(l.637,c.21) get tok: INT(OF[97])
(l.638,c.0) get tok: REF TAG(rp2)
(l.638,c.2) get tok: INT(FI[107])
(l.639,c.1) get tok: STRING(,)
(l.640,c.1) get tok: STRING(()
(l.640,c.7) get tok: INT(STRING[156])
(l.640,c.10) get tok: REF TAG(fn)
(l.640,c.11) get tok: STRING())
(l.640,c.12) get tok: STRING(:)
(l.640,c.20) get tok: REF TAG(tangfn)
(l.640,c.22) get tok: STRING(:=)
(l.641,c.0) get tok: REF TAG(fn)
(l.641,c.3) get tok: INT(OUT[155])
(l.641,c.16) get tok: REF TAG(simpleerror)
(l.641,c.17) get tok: STRING(()
(l.641,c.43) get tok: STRING("unknown parameter format")
(l.641,c.44) get tok: STRING(,)
(l.641,c.56) get tok: REF TAG(errorstatus)
(l.641,c.57) get tok: STRING())
(l.643,c.4) get tok: INT(ESAC[39])
(l.644,c.2) get tok: INT(FI[107])
(l.646,c.2) get tok: CONTROL( )
(l.651,c.2) get tok: CONTROL(<)
(l.652,c.6) get tok: INT(STRING[156])
(l.652,c.20) get tok: REF TAG(includepaths)
(l.652,c.22) get tok: STRING(:=)
(l.652,c.46) get tok: STRING("/usr/share/algol68toc:")
(l.652,c.47) get tok: STRING(;)
(l.654,c.2) get tok: CONTROL( )
(l.657,c.2) get tok: CONTROL(<)
(l.658,c.2) get tok: INT(IF[62])
(l.658,c.6) get tok: INT(UPB[150])
(l.658,c.11) get tok: REF TAG(val)
(l.658,c.13) get tok: INT(OF[97])
(l.658,c.18) get tok: REF TAG(rp1)
(l.658,c.19) get tok: STRING(=)
(l.659,c.0) get tok: STRING(0)
(l.659,c.4) get tok: INT(THEN[190])
(l.659,c.17) get tok: REF TAG(simpleerror)
(l.659,c.18) get tok: STRING(()
(l.659,c.32) get tok: STRING("missing path")
(l.659,c.33) get tok: STRING(,)
(l.659,c.45) get tok: REF TAG(errorstatus)
(l.659,c.46) get tok: STRING())
(l.661,c.4) get tok: INT(ELSE[4])
(l.662,c.3) get tok: INT(FOR[138])
(l.662,c.6) get tok: REF TAG(j)
(l.662,c.10) get tok: INT(FROM[176])
(l.662,c.14) get tok: INT(LWB[148])
(l.662,c.19) get tok: REF TAG(val)
(l.662,c.21) get tok: INT(OF[97])
(l.662,c.26) get tok: REF TAG(rp1)
(l.662,c.28) get tok: INT(TO[187])
(l.662,c.32) get tok: INT(UPB[150])
(l.662,c.37) get tok: REF TAG(val)
(l.662,c.39) get tok: INT(OF[97])
(l.663,c.0) get tok: REF TAG(rp1)
(l.663,c.2) get tok: INT(DO[244])
(l.664,c.4) get tok: INT(CASE[137])
(l.664,c.6) get tok: STRING(()
(l.664,c.10) get tok: REF TAG(val)
(l.664,c.12) get tok: INT(OF[97])
(l.664,c.16) get tok: REF TAG(rp1)
(l.664,c.17) get tok: STRING())
(l.664,c.18) get tok: STRING([)
(l.664,c.19) get tok: REF TAG(j)
(l.664,c.20) get tok: STRING(])
(l.665,c.2) get tok: INT(IN[306])
(l.666,c.1) get tok: STRING(()
(l.666,c.4) get tok: INT(REF[53])
(l.666,c.10) get tok: REF TAG(PARAM)
(l.666,c.14) get tok: REF TAG(rp2)
(l.666,c.15) get tok: STRING())
(l.667,c.0) get tok: STRING(:)
(l.667,c.2) get tok: INT(IF[62])
(l.667,c.5) get tok: INT(IF[62])
(l.667,c.10) get tok: REF TAG(rp2)
(l.667,c.12) get tok: INT(IS[82])
(l.668,c.0) get tok: REF TAG(noparam)
(l.668,c.4) get tok: INT(THEN[190])
(l.668,c.9) get tok: INT(TRUE[64])
(l.669,c.4) get tok: INT(ELSE[4])
(l.669,c.10) get tok: REF TAG(prog)
(l.669,c.12) get tok: INT(OF[97])
(l.669,c.16) get tok: REF TAG(rp2)
(l.669,c.17) get tok: STRING(=)
(l.670,c.0) get tok: STRING("")
(l.670,c.2) get tok: INT(FI[107])
(l.671,c.4) get tok: INT(THEN[190])
(l.671,c.17) get tok: REF TAG(simpleerror)
(l.671,c.18) get tok: STRING(()
(l.671,c.32) get tok: STRING("missing path")
(l.671,c.33) get tok: STRING(,)
(l.671,c.45) get tok: REF TAG(errorstatus)
(l.671,c.46) get tok: STRING())
(l.673,c.4) get tok: INT(ELSE[4])
(l.674,c.6) get tok: INT(STRING[156])
(l.674,c.11) get tok: REF TAG(path)
(l.674,c.13) get tok: STRING(:=)
(l.674,c.18) get tok: REF TAG(prog)
(l.674,c.20) get tok: INT(OF[97])
(l.674,c.24) get tok: REF TAG(rp2)
(l.674,c.25) get tok: STRING(;)
(l.675,c.2) get tok: CONTROL(<)
(l.675,c.42) get tok: STRING(;)
(l.676,c.2) get tok: CONTROL(<)
(l.677,c.2) get tok: INT(FI[107])
(l.678,c.1) get tok: STRING(,)
(l.679,c.1) get tok: STRING(()
(l.679,c.7) get tok: INT(STRING[156])
(l.679,c.11) get tok: REF TAG(dir)
(l.679,c.12) get tok: STRING())
(l.680,c.0) get tok: STRING(:)
(l.680,c.5) get tok: INT(BEGIN[227])
(l.681,c.6) get tok: INT(STRING[156])
(l.681,c.11) get tok: REF TAG(path)
(l.681,c.12) get tok: STRING(;)
(l.682,c.2) get tok: CONTROL(<)
(l.682,c.31) get tok: STRING(;)
(l.683,c.2) get tok: CONTROL(<)
(l.684,c.3) get tok: INT(END[202])
(l.685,c.3) get tok: INT(OUT[155])
(l.685,c.16) get tok: REF TAG(simpleerror)
(l.685,c.17) get tok: STRING(()
(l.685,c.43) get tok: STRING("unknown parameter format")
(l.685,c.44) get tok: STRING(,)
(l.685,c.56) get tok: REF TAG(errorstatus)
(l.685,c.57) get tok: STRING())
(l.687,c.4) get tok: INT(ESAC[39])
(l.688,c.2) get tok: INT(OD[231])
(l.689,c.2) get tok: INT(FI[107])
(l.691,c.2) get tok: CONTROL( )
(l.694,c.2) get tok: CONTROL(<)
(l.695,c.5) get tok: INT(WHILE[99])
(l.695,c.9) get tok: INT(INT[195])
(l.695,c.13) get tok: REF TAG(pos)
(l.695,c.14) get tok: STRING(;)
(l.695,c.29) get tok: REF TAG(charinstring)
(l.695,c.30) get tok: STRING(()
(l.695,c.33) get tok: STRING("~")
(l.695,c.34) get tok: STRING(,)
(l.695,c.37) get tok: REF TAG(pos)
(l.695,c.38) get tok: STRING(,)
(l.695,c.42) get tok: REF TAG(path)
(l.695,c.43) get tok: STRING())
(l.696,c.2) get tok: INT(DO[244])
(l.697,c.4) get tok: REF TAG(path)
(l.697,c.6) get tok: STRING(:=)
(l.697,c.10) get tok: REF TAG(path)
(l.697,c.11) get tok: STRING([)
(l.697,c.12) get tok: STRING(:)
(l.697,c.15) get tok: REF TAG(pos)
(l.697,c.16) get tok: STRING(-)
(l.697,c.17) get tok: STRING(1)
(l.697,c.18) get tok: STRING(])
(l.697,c.19) get tok: STRING(+)
(l.697,c.27) get tok: REF TAG(homedir)
(l.697,c.28) get tok: STRING(+)
(l.697,c.32) get tok: REF TAG(path)
(l.697,c.33) get tok: STRING([)
(l.697,c.36) get tok: REF TAG(pos)
(l.697,c.37) get tok: STRING(+)
(l.697,c.38) get tok: STRING(1)
(l.697,c.39) get tok: STRING(:)
(l.697,c.40) get tok: STRING(])
(l.698,c.2) get tok: INT(OD[231])
(l.700,c.2) get tok: CONTROL( )
(l.702,c.2) get tok: CONTROL(<)
(l.703,c.1) get tok: STRING(()
(l.703,c.5) get tok: REF TAG(path)
(l.703,c.6) get tok: STRING(+)
(l.703,c.9) get tok: STRING(":")
(l.703,c.10) get tok: STRING())
(l.703,c.17) get tok: INT(PLUSTO[91])
(l.705,c.0) get tok: REF TAG(includepaths)
(l.705,c.2) get tok: CONTROL(2)
(l.708,c.2) get tok: CONTROL(<)
(l.709,c.1) get tok: STRING([)
(l.709,c.2) get tok: STRING(])
(l.709,c.6) get tok: INT(CHAR[113])
(l.709,c.14) get tok: REF TAG(webext)
(l.709,c.15) get tok: STRING(=)
(l.709,c.21) get tok: STRING(".w68")
(l.709,c.22) get tok: STRING(,)
(l.709,c.29) get tok: REF TAG(outext)
(l.709,c.30) get tok: STRING(=)
(l.709,c.36) get tok: STRING(".a68")
(l.709,c.37) get tok: STRING(;)
(l.711,c.2) get tok: CONTROL( )
(l.715,c.2) get tok: CONTROL(a)
(l.716,c.2) get tok: INT(IF[62])
(l.717,c.2) get tok: INT(IF[62])
(l.717,c.6) get tok: INT(UPB[150])
(l.717,c.14) get tok: REF TAG(tangfn)
(l.717,c.16) get tok: STRING(>=)
(l.718,c.0) get tok: STRING(5)
(l.718,c.4) get tok: INT(THEN[190])
(l.719,c.2) get tok: INT(IF[62])
(l.719,c.10) get tok: REF TAG(tangfn)
(l.719,c.11) get tok: STRING([)
(l.719,c.14) get tok: INT(UPB[150])
(l.719,c.22) get tok: REF TAG(tangfn)
(l.719,c.23) get tok: STRING(-)
(l.719,c.26) get tok: INT(UPB[150])
(l.719,c.34) get tok: REF TAG(webext)
(l.719,c.35) get tok: STRING(+)
(l.719,c.36) get tok: STRING(1)
(l.719,c.37) get tok: STRING(:)
(l.719,c.38) get tok: STRING(])
(l.719,c.40) get tok: STRING(/=)
(l.720,c.0) get tok: REF TAG(webext)
(l.720,c.4) get tok: INT(THEN[190])
(l.720,c.12) get tok: REF TAG(tangfn)
(l.720,c.15) get tok: STRING(+:=)
(l.721,c.0) get tok: REF TAG(webext)
(l.721,c.2) get tok: INT(FI[107])
(l.722,c.4) get tok: INT(ELSE[4])
(l.722,c.12) get tok: REF TAG(tangfn)
(l.722,c.15) get tok: STRING(+:=)
(l.723,c.0) get tok: REF TAG(webext)
(l.723,c.2) get tok: INT(FI[107])
(l.723,c.3) get tok: STRING(;)
(l.724,c.4) get tok: REF TAG(open)
(l.724,c.5) get tok: STRING(()
(l.724,c.7) get tok: REF TAG(f)
(l.724,c.9) get tok: INT(OF[97])
(l.724,c.13) get tok: REF TAG(web)
(l.724,c.14) get tok: STRING(,)
(l.724,c.21) get tok: REF TAG(tangfn)
(l.724,c.22) get tok: STRING(,)
(l.724,c.38) get tok: REF TAG(standinchannel)
(l.724,c.39) get tok: STRING())
(l.724,c.41) get tok: STRING(/=)
(l.725,c.0) get tok: STRING(0)
(l.725,c.4) get tok: INT(THEN[190])
(l.725,c.17) get tok: REF TAG(simpleerror)
(l.725,c.18) get tok: STRING(()
(l.725,c.44) get tok: STRING("cannot open web 68 file ")
(l.725,c.45) get tok: STRING(+)
(l.725,c.52) get tok: REF TAG(tangfn)
(l.725,c.53) get tok: STRING(,)
(l.725,c.71) get tok: REF TAG(nowebfilestatus)
(l.725,c.72) get tok: STRING())
(l.727,c.2) get tok: INT(FI[107])
(l.727,c.3) get tok: STRING(;)
(l.729,c.2) get tok: CONTROL( )
(l.733,c.2) get tok: CONTROL(a)
(l.733,c.6) get tok: REF TAG(arg)
(l.733,c.8) get tok: STRING(:=)
(l.733,c.9) get tok: STRING(()
(l.733,c.17) get tok: REF TAG(tangfn)
(l.733,c.21) get tok: REF TAG(UPTO)
(l.733,c.25) get tok: STRING(".")
(l.733,c.26) get tok: STRING())
(l.733,c.27) get tok: STRING(+)
(l.733,c.34) get tok: REF TAG(outext)
(l.733,c.35) get tok: STRING(;)
(l.734,c.2) get tok: INT(IF[62])
(l.734,c.12) get tok: REF TAG(establish)
(l.734,c.13) get tok: STRING(()
(l.734,c.15) get tok: REF TAG(f)
(l.734,c.17) get tok: INT(OF[97])
(l.734,c.24) get tok: REF TAG(output)
(l.734,c.25) get tok: STRING(,)
(l.734,c.28) get tok: REF TAG(arg)
(l.734,c.29) get tok: STRING(,)
(l.734,c.46) get tok: REF TAG(standoutchannel)
(l.734,c.47) get tok: STRING(,)
(l.734,c.48) get tok: STRING(0)
(l.734,c.49) get tok: STRING(,)
(l.734,c.50) get tok: STRING(0)
(l.734,c.51) get tok: STRING(,)
(l.734,c.52) get tok: STRING(0)
(l.734,c.53) get tok: STRING())
(l.734,c.55) get tok: STRING(/=)
(l.735,c.0) get tok: STRING(0)
(l.735,c.4) get tok: INT(THEN[190])
(l.735,c.6) get tok: CONTROL(/)
(l.736,c.12) get tok: REF TAG(simpleerror)
(l.736,c.13) get tok: STRING(()
(l.736,c.48) get tok: STRING("cannot establish the output file ")
(l.736,c.49) get tok: STRING(+)
(l.736,c.52) get tok: REF TAG(arg)
(l.736,c.53) get tok: STRING(,)
(l.736,c.74) get tok: REF TAG(nooutputfilestatus)
(l.736,c.75) get tok: STRING())
(l.738,c.4) get tok: INT(ELSE[4])
(l.739,c.20) get tok: REF TAG(onphysicalfileend)
(l.739,c.21) get tok: STRING(()
(l.739,c.23) get tok: REF TAG(f)
(l.739,c.25) get tok: INT(OF[97])
(l.739,c.32) get tok: REF TAG(output)
(l.739,c.33) get tok: STRING(,)
(l.740,c.1) get tok: STRING(()
(l.740,c.4) get tok: INT(REF[53])
(l.740,c.9) get tok: INT(FILE[59])
(l.740,c.11) get tok: REF TAG(f)
(l.740,c.12) get tok: STRING())
(l.740,c.16) get tok: INT(BOOL[184])
(l.741,c.0) get tok: STRING(:)
(l.741,c.1) get tok: STRING(()
(l.741,c.10) get tok: REF TAG(errprint)
(l.741,c.11) get tok: STRING(()
(l.741,c.31) get tok: STRING("output medium full")
(l.741,c.32) get tok: STRING())
(l.741,c.33) get tok: STRING(;)
(l.741,c.36) get tok: CONTROL(&)
(l.741,c.40) get tok: REF TAG(exit)
(l.741,c.41) get tok: STRING(()
(l.741,c.42) get tok: STRING(-)
(l.741,c.43) get tok: STRING(1)
(l.741,c.44) get tok: STRING())
(l.741,c.45) get tok: STRING(;)
(l.741,c.48) get tok: CONTROL(&)
(l.741,c.52) get tok: INT(TRUE[64])
(l.741,c.53) get tok: STRING())
(l.741,c.54) get tok: STRING())
(l.741,c.55) get tok: STRING(;)
(l.743,c.2) get tok: REF TAG(n)
(l.743,c.4) get tok: INT(OF[97])
(l.743,c.11) get tok: REF TAG(output)
(l.743,c.13) get tok: STRING(:=)
(l.743,c.14) get tok: STRING(1)
(l.743,c.15) get tok: STRING(;)
(l.743,c.20) get tok: REF TAG(loc)
(l.743,c.22) get tok: INT(OF[97])
(l.743,c.29) get tok: REF TAG(output)
(l.743,c.31) get tok: STRING(:=)
(l.744,c.0) get tok: STRING(0)
(l.744,c.2) get tok: INT(FI[107])
(l.744,c.3) get tok: STRING(;)
(l.746,c.2) get tok: CONTROL( )
(l.748,c.2) get tok: CONTROL(<)
(l.749,c.6) get tok: INT(STRING[156])
(l.749,c.10) get tok: REF TAG(arg)
(l.749,c.11) get tok: STRING(;)
(l.751,c.2) get tok: CONTROL( )
(l.754,c.2) get tok: CONTROL(a)
(l.754,c.5) get tok: INT(IF[62])
(l.755,c.0) get tok: REF TAG(debug)
(l.755,c.4) get tok: INT(THEN[190])
(l.755,c.6) get tok: CONTROL(/)
(l.756,c.13) get tok: REF TAG(startmonitor)
(l.756,c.14) get tok: STRING(()
(l.756,c.24) get tok: STRING("tang.dbg")
(l.756,c.25) get tok: STRING())
(l.756,c.26) get tok: STRING(;)
(l.757,c.17) get tok: REF TAG(debugprinttoken)
(l.757,c.19) get tok: STRING(:=)
(l.757,c.38) get tok: REF TAG(monitorprinttoken)
(l.757,c.39) get tok: STRING(;)
(l.758,c.16) get tok: REF TAG(debugprinttext)
(l.758,c.18) get tok: STRING(:=)
(l.758,c.36) get tok: REF TAG(monitorprinttext)
(l.758,c.37) get tok: STRING(;)
(l.759,c.18) get tok: REF TAG(debugprintstring)
(l.759,c.20) get tok: STRING(:=)
(l.760,c.0) get tok: REF TAG(monitorprintstring)
(l.760,c.2) get tok: INT(FI[107])
(l.760,c.3) get tok: STRING(;)
(l.762,c.2) get tok: CONTROL(1)
(l.779,c.2) get tok: CONTROL(m)
(l.779,c.14) get tok: REF TAG(limbomood)
(l.779,c.15) get tok: STRING(=)
(l.780,c.0) get tok: STRING(0)
(l.780,c.2) get tok: CONTROL(m)
(l.780,c.13) get tok: REF TAG(htmlmood)
(l.780,c.14) get tok: STRING(=)
(l.781,c.0) get tok: STRING(1)
(l.781,c.2) get tok: CONTROL(m)
(l.781,c.17) get tok: REF TAG(macroidmood)
(l.781,c.18) get tok: STRING(=)
(l.782,c.0) get tok: STRING(2)
(l.782,c.2) get tok: CONTROL(m)
(l.782,c.21) get tok: REF TAG(macroheadermood)
(l.782,c.22) get tok: STRING(=)
(l.783,c.0) get tok: STRING(3)
(l.783,c.2) get tok: CONTROL(m)
(l.783,c.19) get tok: REF TAG(macrobodymood)
(l.783,c.20) get tok: STRING(=)
(l.784,c.0) get tok: STRING(4)
(l.784,c.2) get tok: CONTROL(m)
(l.784,c.20) get tok: REF TAG(modulebodymood)
(l.784,c.21) get tok: STRING(=)
(l.786,c.0) get tok: STRING(5)
(l.786,c.2) get tok: CONTROL(<)
(l.787,c.3) get tok: INT(INT[195])
(l.787,c.12) get tok: REF TAG(curmood)
(l.787,c.14) get tok: STRING(:=)
(l.787,c.24) get tok: REF TAG(limbomood)
(l.787,c.25) get tok: STRING(;)
(l.789,c.2) get tok: CONTROL( )
(l.799,c.2) get tok: CONTROL(m)
(l.799,c.19) get tok: REF TAG(backspaceinput)
(l.799,c.20) get tok: STRING(=)
(l.799,c.22) get tok: STRING(()
(l.799,c.26) get tok: REF TAG(loc)
(l.799,c.28) get tok: INT(OF[97])
(l.799,c.32) get tok: REF TAG(web)
(l.799,c.34) get tok: STRING(>=)
(l.799,c.37) get tok: INT(LWB[148])
(l.799,c.40) get tok: REF TAG(b)
(l.799,c.42) get tok: INT(OF[97])
(l.799,c.46) get tok: REF TAG(web)
(l.799,c.47) get tok: STRING(|)
(l.799,c.51) get tok: REF TAG(loc)
(l.799,c.53) get tok: INT(OF[97])
(l.799,c.57) get tok: REF TAG(web)
(l.799,c.60) get tok: STRING(-:=)
(l.799,c.61) get tok: STRING(1)
(l.799,c.62) get tok: STRING())
(l.800,c.2) get tok: CONTROL(m)
(l.800,c.9) get tok: REF TAG(bksp2)
(l.800,c.10) get tok: STRING(=)
(l.800,c.12) get tok: STRING(()
(l.800,c.15) get tok: INT(NOT[230])
(l.800,c.27) get tok: REF TAG(inputended)
(l.800,c.28) get tok: STRING(|)
(l.800,c.30) get tok: INT(TO[187])
(l.800,c.33) get tok: STRING(2)
(l.800,c.35) get tok: INT(DO[244])
(l.800,c.52) get tok: REF TAG(backspaceinput)
(l.800,c.54) get tok: INT(OD[231])
(l.800,c.55) get tok: STRING())
(l.802,c.2) get tok: CONTROL(a)
(l.802,c.5) get tok: CONTROL(<)
(l.802,c.27) get tok: STRING(;)
(l.803,c.8) get tok: REF TAG(curmood)
(l.803,c.10) get tok: STRING(:=)
(l.803,c.19) get tok: REF TAG(htmlmood)
(l.803,c.20) get tok: STRING(;)
(l.803,c.26) get tok: REF TAG(bksp2)
(l.803,c.27) get tok: STRING(;)
(l.805,c.2) get tok: INT(DO[244])
(l.806,c.2) get tok: INT(IF[62])
(l.806,c.12) get tok: REF TAG(curmood)
(l.806,c.13) get tok: STRING(=)
(l.807,c.0) get tok: REF TAG(htmlmood)
(l.807,c.4) get tok: INT(THEN[190])
(l.807,c.15) get tok: REF TAG(skiptocs)
(l.807,c.16) get tok: STRING(()
(l.807,c.28) get tok: STRING(" 123<ADFIM")
(l.807,c.29) get tok: STRING())
(l.807,c.30) get tok: STRING(;)
(l.807,c.33) get tok: CONTROL(&)
(l.808,c.0) get tok: REF TAG(bksp2)
(l.808,c.2) get tok: INT(FI[107])
(l.808,c.3) get tok: STRING(;)
(l.810,c.4) get tok: INT(HEAP[48])
(l.810,c.10) get tok: REF TAG(TOKEN)
(l.810,c.18) get tok: REF TAG(curtok)
(l.810,c.20) get tok: STRING(:=)
(l.810,c.27) get tok: REF TAG(gettok)
(l.810,c.28) get tok: STRING(;)
(l.812,c.2) get tok: CONTROL(<)
(l.813,c.2) get tok: INT(OD[231])
(l.814,c.3) get tok: INT(END[202])
(l.815,c.2) get tok: CONTROL(<)
(l.817,c.2) get tok: CONTROL( )
(l.828,c.2) get tok: CONTROL(<)
(l.829,c.5) get tok: INT(WHILE[99])
(l.829,c.16) get tok: REF TAG(skiptocs)
(l.829,c.17) get tok: STRING(()
(l.829,c.26) get tok: STRING("=\ *123")
(l.829,c.27) get tok: STRING())
(l.829,c.28) get tok: STRING(;)
(l.829,c.30) get tok: CONTROL(&)
(l.829,c.46) get tok: REF TAG(backspaceinput)
(l.829,c.47) get tok: STRING(;)
(l.830,c.4) get tok: INT(CHAR[113])
(l.830,c.7) get tok: REF TAG(ch)
(l.830,c.8) get tok: STRING(=)
(l.830,c.17) get tok: REF TAG(nextchar)
(l.830,c.18) get tok: STRING(;)
(l.831,c.3) get tok: INT(NOT[230])
(l.831,c.18) get tok: REF TAG(charinstring)
(l.831,c.19) get tok: STRING(()
(l.831,c.21) get tok: REF TAG(ch)
(l.831,c.22) get tok: STRING(,)
(l.831,c.25) get tok: INT(LOC[108])
(l.831,c.29) get tok: INT(INT[195])
(l.831,c.30) get tok: STRING(,)
(l.831,c.37) get tok: STRING(" *123")
(l.831,c.38) get tok: STRING())
(l.832,c.2) get tok: INT(DO[244])
(l.833,c.2) get tok: INT(IF[62])
(l.833,c.5) get tok: REF TAG(ch)
(l.833,c.6) get tok: STRING(=)
(l.834,c.0) get tok: STRING("\")
(l.834,c.4) get tok: INT(THEN[190])
(l.834,c.12) get tok: REF TAG(putout)
(l.834,c.13) get tok: STRING(()
(l.834,c.19) get tok: REF TAG(output)
(l.834,c.20) get tok: STRING(,)
(l.834,c.21) get tok: STRING(0)
(l.834,c.22) get tok: STRING())
(l.835,c.4) get tok: INT(ELIF[9])
(l.835,c.6) get tok: CONTROL(/)
(l.836,c.6) get tok: INT(STRING[156])
(l.836,c.9) get tok: CONTROL(!)
(l.836,c.10) get tok: REF TAG(s)
(l.836,c.11) get tok: STRING(;)
(l.836,c.26) get tok: REF TAG(gathertochar)
(l.836,c.27) get tok: STRING(()
(l.836,c.28) get tok: REF TAG(s)
(l.836,c.29) get tok: STRING(,)
(l.836,c.33) get tok: STRING("@")
(l.836,c.34) get tok: STRING())
(l.836,c.35) get tok: STRING(;)
(l.837,c.9) get tok: REF TAG(nextchar)
(l.837,c.11) get tok: STRING(/=)
(l.838,c.0) get tok: STRING(">")
(l.838,c.4) get tok: INT(THEN[190])
(l.838,c.14) get tok: REF TAG(errprint)
(l.838,c.15) get tok: STRING(()
(l.838,c.58) get tok: STRING("no control sequences allowed in @=...@>")
(l.838,c.59) get tok: STRING())
(l.841,c.4) get tok: INT(ELSE[4])
(l.841,c.12) get tok: REF TAG(putout)
(l.841,c.13) get tok: STRING(()
(l.841,c.19) get tok: REF TAG(output)
(l.841,c.20) get tok: STRING(,)
(l.841,c.21) get tok: REF TAG(s)
(l.841,c.22) get tok: STRING([)
(l.841,c.23) get tok: STRING(:)
(l.841,c.26) get tok: INT(UPB[150])
(l.841,c.28) get tok: REF TAG(s)
(l.841,c.29) get tok: STRING(-)
(l.841,c.30) get tok: STRING(1)
(l.841,c.31) get tok: STRING(])
(l.841,c.32) get tok: STRING())
(l.842,c.2) get tok: INT(FI[107])
(l.843,c.2) get tok: INT(OD[231])
(l.843,c.3) get tok: STRING(;)
(l.847,c.0) get tok: REF TAG(bksp2)
(l.847,c.2) get tok: CONTROL( )
(l.849,c.2) get tok: CONTROL(<)
(l.850,c.2) get tok: INT(IF[62])
(l.850,c.11) get tok: REF TAG(history)
(l.850,c.12) get tok: STRING(>)
(l.851,c.0) get tok: REF TAG(warnings)
(l.851,c.4) get tok: INT(THEN[190])
(l.852,c.5) get tok: REF TAG(print)
(l.852,c.6) get tok: STRING(()
(l.852,c.7) get tok: STRING(()
(l.852,c.14) get tok: REF TAG(newline)
(l.852,c.15) get tok: STRING(,)
(l.852,c.47) get tok: STRING("! Did we find something wrong?")
(l.852,c.48) get tok: STRING(,)
(l.852,c.55) get tok: REF TAG(newline)
(l.852,c.56) get tok: STRING())
(l.852,c.57) get tok: STRING())
(l.852,c.58) get tok: STRING(;)
(l.853,c.2) get tok: CONTROL(<)
(l.853,c.26) get tok: STRING(;)
(l.854,c.4) get tok: REF TAG(exit)
(l.854,c.5) get tok: STRING(()
(l.854,c.17) get tok: REF TAG(errorstatus)
(l.854,c.18) get tok: STRING())
(l.855,c.4) get tok: INT(ELSE[4])
(l.855,c.10) get tok: REF TAG(print)
(l.855,c.11) get tok: STRING(()
(l.855,c.18) get tok: REF TAG(newline)
(l.855,c.19) get tok: STRING())
(l.856,c.2) get tok: INT(FI[107])
(l.856,c.3) get tok: STRING(;)
(l.857,c.2) get tok: CONTROL(#)
(l.858,c.9) get tok: REF TAG(phaseone)
(l.858,c.11) get tok: STRING(:=)
(l.858,c.16) get tok: INT(FALSE[123])
(l.858,c.17) get tok: STRING(;)
(l.859,c.2) get tok: CONTROL(#)
(l.860,c.2) get tok: CONTROL(<)
(l.860,c.27) get tok: STRING(;)
(l.861,c.2) get tok: CONTROL(<)
(l.861,c.17) get tok: STRING(;)
(l.862,c.4) get tok: REF TAG(exit)
(l.862,c.5) get tok: STRING(()
(l.862,c.6) get tok: STRING(0)
(l.862,c.7) get tok: STRING())
(l.864,c.2) get tok: CONTROL(2)
(l.895,c.2) get tok: CONTROL(m)
(l.895,c.18) get tok: REF TAG(totalkeywords)
(l.895,c.19) get tok: STRING(=)
(l.895,c.24) get tok: STRING(109)
(l.896,c.2) get tok: CONTROL(m)
(l.896,c.19) get tok: REF TAG(minwordlength)
(l.896,c.20) get tok: STRING(=)
(l.897,c.0) get tok: STRING(2)
(l.897,c.2) get tok: CONTROL(m)
(l.897,c.19) get tok: REF TAG(maxwordlength)
(l.897,c.20) get tok: STRING(=)
(l.898,c.0) get tok: STRING(7)
(l.898,c.2) get tok: CONTROL(m)
(l.898,c.18) get tok: REF TAG(minhashvalue)
(l.898,c.19) get tok: STRING(=)
(l.898,c.23) get tok: STRING(2)
(l.899,c.2) get tok: CONTROL(m)
(l.899,c.18) get tok: REF TAG(maxhashvalue)
(l.899,c.19) get tok: STRING(=)
(l.901,c.0) get tok: STRING(315)
(l.901,c.2) get tok: CONTROL(<)
(l.902,c.4) get tok: INT(HEAP[48])
(l.902,c.5) get tok: STRING([)
(l.902,c.6) get tok: STRING(0)
(l.902,c.7) get tok: STRING(:)
(l.902,c.21) get tok: REF TAG(maxhashvalue)
(l.902,c.22) get tok: STRING(])
(l.902,c.28) get tok: INT(STRING[156])
(l.902,c.37) get tok: REF TAG(boldsym)
(l.902,c.39) get tok: STRING(:=)
(l.902,c.40) get tok: STRING([)
(l.902,c.41) get tok: STRING(])
(l.902,c.47) get tok: INT(STRING[156])
(l.903,c.1) get tok: STRING(()
(l.904,c.2) get tok: STRING("")
(l.904,c.3) get tok: STRING(,)
(l.904,c.5) get tok: STRING("")
(l.904,c.6) get tok: STRING(,)
(l.904,c.10) get tok: STRING("LE")
(l.904,c.11) get tok: STRING(,)
(l.904,c.13) get tok: STRING("")
(l.904,c.14) get tok: STRING(,)
(l.904,c.20) get tok: STRING("ELSE")
(l.904,c.21) get tok: STRING(,)
(l.904,c.28) get tok: STRING("LEVEL")
(l.904,c.29) get tok: STRING(,)
(l.904,c.31) get tok: STRING("")
(l.904,c.32) get tok: STRING(,)
(l.904,c.34) get tok: STRING("")
(l.904,c.35) get tok: STRING(,)
(l.904,c.37) get tok: STRING("")
(l.904,c.38) get tok: STRING(,)
(l.904,c.44) get tok: STRING("ELIF")
(l.904,c.45) get tok: STRING(,)
(l.905,c.2) get tok: STRING("")
(l.905,c.3) get tok: STRING(,)
(l.905,c.9) get tok: STRING("FLEX")
(l.905,c.10) get tok: STRING(,)
(l.905,c.14) get tok: STRING("EQ")
(l.905,c.15) get tok: STRING(,)
(l.905,c.17) get tok: STRING("")
(l.905,c.18) get tok: STRING(,)
(l.905,c.20) get tok: STRING("")
(l.905,c.21) get tok: STRING(,)
(l.905,c.23) get tok: STRING("")
(l.905,c.24) get tok: STRING(,)
(l.905,c.26) get tok: STRING("")
(l.905,c.27) get tok: STRING(,)
(l.905,c.29) get tok: STRING("")
(l.905,c.30) get tok: STRING(,)
(l.905,c.32) get tok: STRING("")
(l.905,c.33) get tok: STRING(,)
(l.905,c.35) get tok: STRING("")
(l.905,c.36) get tok: STRING(,)
(l.906,c.2) get tok: STRING("")
(l.906,c.3) get tok: STRING(,)
(l.906,c.9) get tok: STRING("EXIT")
(l.906,c.10) get tok: STRING(,)
(l.906,c.12) get tok: STRING("")
(l.906,c.13) get tok: STRING(,)
(l.906,c.15) get tok: STRING("")
(l.906,c.16) get tok: STRING(,)
(l.906,c.18) get tok: STRING("")
(l.906,c.19) get tok: STRING(,)
(l.906,c.21) get tok: STRING("")
(l.906,c.22) get tok: STRING(,)
(l.906,c.24) get tok: STRING("")
(l.906,c.25) get tok: STRING(,)
(l.906,c.27) get tok: STRING("")
(l.906,c.28) get tok: STRING(,)
(l.906,c.30) get tok: STRING("")
(l.906,c.31) get tok: STRING(,)
(l.906,c.37) get tok: STRING("KEEP")
(l.906,c.38) get tok: STRING(,)
(l.907,c.2) get tok: STRING("")
(l.907,c.3) get tok: STRING(,)
(l.907,c.5) get tok: STRING("")
(l.907,c.6) get tok: STRING(,)
(l.907,c.10) get tok: STRING("LT")
(l.907,c.11) get tok: STRING(,)
(l.907,c.13) get tok: STRING("")
(l.907,c.14) get tok: STRING(,)
(l.907,c.16) get tok: STRING("")
(l.907,c.17) get tok: STRING(,)
(l.907,c.19) get tok: STRING("")
(l.907,c.20) get tok: STRING(,)
(l.907,c.22) get tok: STRING("")
(l.907,c.23) get tok: STRING(,)
(l.907,c.25) get tok: STRING("")
(l.907,c.26) get tok: STRING(,)
(l.907,c.28) get tok: STRING("")
(l.907,c.29) get tok: STRING(,)
(l.907,c.35) get tok: STRING("ESAC")
(l.907,c.36) get tok: STRING(,)
(l.908,c.2) get tok: STRING("")
(l.908,c.3) get tok: STRING(,)
(l.908,c.5) get tok: STRING("")
(l.908,c.6) get tok: STRING(,)
(l.908,c.8) get tok: STRING("")
(l.908,c.9) get tok: STRING(,)
(l.908,c.11) get tok: STRING("")
(l.908,c.12) get tok: STRING(,)
(l.908,c.18) get tok: STRING("SKIP")
(l.908,c.19) get tok: STRING(,)
(l.908,c.21) get tok: STRING("")
(l.908,c.22) get tok: STRING(,)
(l.908,c.24) get tok: STRING("")
(l.908,c.25) get tok: STRING(,)
(l.908,c.29) get tok: STRING("RE")
(l.908,c.30) get tok: STRING(,)
(l.908,c.36) get tok: STRING("HEAP")
(l.908,c.37) get tok: STRING(,)
(l.908,c.43) get tok: STRING("REAL")
(l.908,c.44) get tok: STRING(,)
(l.909,c.2) get tok: STRING("")
(l.909,c.3) get tok: STRING(,)
(l.909,c.11) get tok: STRING("STRUCT")
(l.909,c.12) get tok: STRING(,)
(l.909,c.14) get tok: STRING("")
(l.909,c.15) get tok: STRING(,)
(l.909,c.20) get tok: STRING("REF")
(l.909,c.21) get tok: STRING(,)
(l.909,c.25) get tok: STRING("UP")
(l.909,c.26) get tok: STRING(,)
(l.909,c.28) get tok: STRING("")
(l.909,c.29) get tok: STRING(,)
(l.909,c.31) get tok: STRING("")
(l.909,c.32) get tok: STRING(,)
(l.909,c.34) get tok: STRING("")
(l.909,c.35) get tok: STRING(,)
(l.909,c.37) get tok: STRING("")
(l.909,c.38) get tok: STRING(,)
(l.909,c.44) get tok: STRING("FILE")
(l.909,c.45) get tok: STRING(,)
(l.910,c.2) get tok: STRING("")
(l.910,c.3) get tok: STRING(,)
(l.910,c.5) get tok: STRING("")
(l.910,c.6) get tok: STRING(,)
(l.910,c.10) get tok: STRING("IF")
(l.910,c.11) get tok: STRING(,)
(l.910,c.13) get tok: STRING("")
(l.910,c.14) get tok: STRING(,)
(l.910,c.20) get tok: STRING("TRUE")
(l.910,c.21) get tok: STRING(,)
(l.910,c.23) get tok: STRING("")
(l.910,c.24) get tok: STRING(,)
(l.910,c.26) get tok: STRING("")
(l.910,c.27) get tok: STRING(,)
(l.910,c.36) get tok: STRING("PRAGMAT")
(l.910,c.37) get tok: STRING(,)
(l.910,c.39) get tok: STRING("")
(l.910,c.40) get tok: STRING(,)
(l.910,c.46) get tok: STRING("PROC")
(l.910,c.47) get tok: STRING(,)
(l.911,c.5) get tok: STRING("USE")
(l.911,c.6) get tok: STRING(,)
(l.911,c.15) get tok: STRING("CHANNEL")
(l.911,c.16) get tok: STRING(,)
(l.911,c.18) get tok: STRING("")
(l.911,c.19) get tok: STRING(,)
(l.911,c.21) get tok: STRING("")
(l.911,c.22) get tok: STRING(,)
(l.911,c.24) get tok: STRING("")
(l.911,c.25) get tok: STRING(,)
(l.911,c.27) get tok: STRING("")
(l.911,c.28) get tok: STRING(,)
(l.911,c.30) get tok: STRING("")
(l.911,c.31) get tok: STRING(,)
(l.911,c.33) get tok: STRING("")
(l.911,c.34) get tok: STRING(,)
(l.911,c.36) get tok: STRING("")
(l.911,c.37) get tok: STRING(,)
(l.911,c.44) get tok: STRING("SHORT")
(l.911,c.45) get tok: STRING(,)
(l.912,c.2) get tok: STRING("")
(l.912,c.3) get tok: STRING(,)
(l.912,c.5) get tok: STRING("")
(l.912,c.6) get tok: STRING(,)
(l.912,c.10) get tok: STRING("IS")
(l.912,c.11) get tok: STRING(,)
(l.912,c.13) get tok: STRING("")
(l.912,c.14) get tok: STRING(,)
(l.912,c.20) get tok: STRING("ISNT")
(l.912,c.21) get tok: STRING(,)
(l.912,c.23) get tok: STRING("")
(l.912,c.24) get tok: STRING(,)
(l.912,c.26) get tok: STRING("")
(l.912,c.27) get tok: STRING(,)
(l.912,c.31) get tok: STRING("OP")
(l.912,c.32) get tok: STRING(,)
(l.912,c.34) get tok: STRING("")
(l.912,c.35) get tok: STRING(,)
(l.912,c.37) get tok: STRING("")
(l.912,c.38) get tok: STRING(,)
(l.913,c.2) get tok: STRING("")
(l.913,c.3) get tok: STRING(,)
(l.913,c.11) get tok: STRING("PLUSTO")
(l.913,c.12) get tok: STRING(,)
(l.913,c.16) get tok: STRING("PR")
(l.913,c.17) get tok: STRING(,)
(l.913,c.19) get tok: STRING("")
(l.913,c.20) get tok: STRING(,)
(l.913,c.26) get tok: STRING("REPR")
(l.913,c.27) get tok: STRING(,)
(l.913,c.29) get tok: STRING("")
(l.913,c.30) get tok: STRING(,)
(l.913,c.36) get tok: STRING("EDOC")
(l.913,c.37) get tok: STRING(,)
(l.913,c.41) get tok: STRING("OF")
(l.913,c.42) get tok: STRING(,)
(l.913,c.44) get tok: STRING("")
(l.913,c.45) get tok: STRING(,)
(l.913,c.52) get tok: STRING("WHILE")
(l.913,c.53) get tok: STRING(,)
(l.914,c.8) get tok: STRING("")
(l.914,c.9) get tok: STRING(,)
(l.914,c.17) get tok: STRING("PLUSAB")
(l.914,c.18) get tok: STRING(,)
(l.914,c.20) get tok: STRING("")
(l.914,c.21) get tok: STRING(,)
(l.914,c.23) get tok: STRING("")
(l.914,c.24) get tok: STRING(,)
(l.914,c.26) get tok: STRING("")
(l.914,c.27) get tok: STRING(,)
(l.914,c.35) get tok: STRING("FINISH")
(l.914,c.36) get tok: STRING(,)
(l.914,c.38) get tok: STRING("")
(l.914,c.39) get tok: STRING(,)
(l.914,c.43) get tok: STRING("FI")
(l.914,c.44) get tok: STRING(,)
(l.914,c.49) get tok: STRING("LOC")
(l.914,c.50) get tok: STRING(,)
(l.914,c.56) get tok: STRING("CODE")
(l.914,c.57) get tok: STRING(,)
(l.915,c.7) get tok: STRING("COMPL")
(l.915,c.8) get tok: STRING(,)
(l.915,c.16) get tok: STRING("FORMAT")
(l.915,c.17) get tok: STRING(,)
(l.915,c.19) get tok: STRING("")
(l.915,c.20) get tok: STRING(,)
(l.915,c.26) get tok: STRING("CHAR")
(l.915,c.27) get tok: STRING(,)
(l.915,c.29) get tok: STRING("")
(l.915,c.30) get tok: STRING(,)
(l.915,c.32) get tok: STRING("")
(l.915,c.33) get tok: STRING(,)
(l.915,c.35) get tok: STRING("")
(l.915,c.36) get tok: STRING(,)
(l.915,c.38) get tok: STRING("")
(l.915,c.39) get tok: STRING(,)
(l.915,c.41) get tok: STRING("")
(l.915,c.42) get tok: STRING(,)
(l.915,c.44) get tok: STRING("")
(l.915,c.45) get tok: STRING(,)
(l.916,c.2) get tok: STRING("")
(l.916,c.3) get tok: STRING(,)
(l.916,c.5) get tok: STRING("")
(l.916,c.6) get tok: STRING(,)
(l.916,c.10) get tok: STRING("GE")
(l.916,c.11) get tok: STRING(,)
(l.916,c.18) get tok: STRING("FALSE")
(l.916,c.19) get tok: STRING(,)
(l.916,c.25) get tok: STRING("LENG")
(l.916,c.26) get tok: STRING(,)
(l.916,c.28) get tok: STRING("")
(l.916,c.29) get tok: STRING(,)
(l.916,c.35) get tok: STRING("ELEM")
(l.916,c.36) get tok: STRING(,)
(l.916,c.45) get tok: STRING("COMMENT")
(l.916,c.46) get tok: STRING(,)
(l.916,c.48) get tok: STRING("")
(l.916,c.49) get tok: STRING(,)
(l.916,c.53) get tok: STRING("NE")
(l.916,c.54) get tok: STRING(,)
(l.917,c.2) get tok: STRING("")
(l.917,c.3) get tok: STRING(,)
(l.917,c.9) get tok: STRING("FIND")
(l.917,c.10) get tok: STRING(,)
(l.917,c.16) get tok: STRING("SEMA")
(l.917,c.17) get tok: STRING(,)
(l.917,c.19) get tok: STRING("")
(l.917,c.20) get tok: STRING(,)
(l.917,c.26) get tok: STRING("PRIO")
(l.917,c.27) get tok: STRING(,)
(l.917,c.29) get tok: STRING("")
(l.917,c.30) get tok: STRING(,)
(l.917,c.32) get tok: STRING("")
(l.917,c.33) get tok: STRING(,)
(l.917,c.39) get tok: STRING("CASE")
(l.917,c.40) get tok: STRING(,)
(l.917,c.45) get tok: STRING("FOR")
(l.917,c.46) get tok: STRING(,)
(l.917,c.52) get tok: STRING("CONJ")
(l.917,c.53) get tok: STRING(,)
(l.918,c.2) get tok: STRING("")
(l.918,c.3) get tok: STRING(,)
(l.918,c.9) get tok: STRING("OUSE")
(l.918,c.10) get tok: STRING(,)
(l.918,c.12) get tok: STRING("")
(l.918,c.13) get tok: STRING(,)
(l.918,c.15) get tok: STRING("")
(l.918,c.16) get tok: STRING(,)
(l.918,c.25) get tok: STRING("OUTTYPE")
(l.918,c.26) get tok: STRING(,)
(l.918,c.30) get tok: STRING("AT")
(l.918,c.31) get tok: STRING(,)
(l.918,c.33) get tok: STRING("")
(l.918,c.34) get tok: STRING(,)
(l.918,c.36) get tok: STRING("")
(l.918,c.37) get tok: STRING(,)
(l.918,c.42) get tok: STRING("LWB")
(l.918,c.43) get tok: STRING(,)
(l.918,c.45) get tok: STRING("")
(l.918,c.46) get tok: STRING(,)
(l.919,c.5) get tok: STRING("UPB")
(l.919,c.6) get tok: STRING(,)
(l.919,c.8) get tok: STRING("")
(l.919,c.9) get tok: STRING(,)
(l.919,c.13) get tok: STRING("GT")
(l.919,c.14) get tok: STRING(,)
(l.919,c.16) get tok: STRING("")
(l.919,c.17) get tok: STRING(,)
(l.919,c.23) get tok: STRING("OVER")
(l.919,c.24) get tok: STRING(,)
(l.919,c.29) get tok: STRING("OUT")
(l.919,c.30) get tok: STRING(,)
(l.919,c.38) get tok: STRING("STRING")
(l.919,c.39) get tok: STRING(,)
(l.919,c.41) get tok: STRING("")
(l.919,c.42) get tok: STRING(,)
(l.919,c.44) get tok: STRING("")
(l.919,c.45) get tok: STRING(,)
(l.919,c.47) get tok: STRING("")
(l.919,c.48) get tok: STRING(,)
(l.920,c.2) get tok: STRING("")
(l.920,c.3) get tok: STRING(,)
(l.920,c.8) get tok: STRING("PAR")
(l.920,c.9) get tok: STRING(,)
(l.920,c.11) get tok: STRING("")
(l.920,c.12) get tok: STRING(,)
(l.920,c.14) get tok: STRING("")
(l.920,c.15) get tok: STRING(,)
(l.920,c.21) get tok: STRING("BITS")
(l.920,c.22) get tok: STRING(,)
(l.920,c.24) get tok: STRING("")
(l.920,c.25) get tok: STRING(,)
(l.920,c.27) get tok: STRING("")
(l.920,c.28) get tok: STRING(,)
(l.920,c.37) get tok: STRING("TIMESAB")
(l.920,c.38) get tok: STRING(,)
(l.920,c.45) get tok: STRING("AFTER")
(l.920,c.46) get tok: STRING(,)
(l.920,c.48) get tok: STRING("")
(l.920,c.49) get tok: STRING(,)
(l.921,c.2) get tok: STRING("")
(l.921,c.3) get tok: STRING(,)
(l.921,c.5) get tok: STRING("")
(l.921,c.6) get tok: STRING(,)
(l.921,c.8) get tok: STRING("")
(l.921,c.9) get tok: STRING(,)
(l.921,c.11) get tok: STRING("")
(l.921,c.12) get tok: STRING(,)
(l.921,c.21) get tok: STRING("PROGRAM")
(l.921,c.22) get tok: STRING(,)
(l.921,c.24) get tok: STRING("")
(l.921,c.25) get tok: STRING(,)
(l.921,c.31) get tok: STRING("FROM")
(l.921,c.32) get tok: STRING(,)
(l.921,c.36) get tok: STRING("OR")
(l.921,c.37) get tok: STRING(,)
(l.921,c.45) get tok: STRING("ENTIER")
(l.921,c.46) get tok: STRING(,)
(l.921,c.48) get tok: STRING("")
(l.921,c.49) get tok: STRING(,)
(l.922,c.5) get tok: STRING("NIL")
(l.922,c.6) get tok: STRING(,)
(l.922,c.12) get tok: STRING("VOID")
(l.922,c.13) get tok: STRING(,)
(l.922,c.15) get tok: STRING("")
(l.922,c.16) get tok: STRING(,)
(l.922,c.24) get tok: STRING("INTYPE")
(l.922,c.25) get tok: STRING(,)
(l.922,c.31) get tok: STRING("BOOL")
(l.922,c.32) get tok: STRING(,)
(l.922,c.39) get tok: STRING("BYTES")
(l.922,c.40) get tok: STRING(,)
(l.922,c.42) get tok: STRING("")
(l.922,c.43) get tok: STRING(,)
(l.922,c.47) get tok: STRING("TO")
(l.922,c.48) get tok: STRING(,)
(l.922,c.50) get tok: STRING("")
(l.922,c.51) get tok: STRING(,)
(l.922,c.53) get tok: STRING("")
(l.922,c.54) get tok: STRING(,)
(l.923,c.6) get tok: STRING("THEN")
(l.923,c.7) get tok: STRING(,)
(l.923,c.9) get tok: STRING("")
(l.923,c.10) get tok: STRING(,)
(l.923,c.14) get tok: STRING("CO")
(l.923,c.15) get tok: STRING(,)
(l.923,c.24) get tok: STRING("SHORTEN")
(l.923,c.25) get tok: STRING(,)
(l.923,c.27) get tok: STRING("")
(l.923,c.28) get tok: STRING(,)
(l.923,c.33) get tok: STRING("INT")
(l.923,c.34) get tok: STRING(,)
(l.923,c.40) get tok: STRING("SIGN")
(l.923,c.41) get tok: STRING(,)
(l.923,c.48) get tok: STRING("EMPTY")
(l.923,c.49) get tok: STRING(,)
(l.923,c.51) get tok: STRING("")
(l.923,c.52) get tok: STRING(,)
(l.923,c.54) get tok: STRING("")
(l.923,c.55) get tok: STRING(,)
(l.924,c.8) get tok: STRING("")
(l.924,c.9) get tok: STRING(,)
(l.924,c.11) get tok: STRING("")
(l.924,c.12) get tok: STRING(,)
(l.924,c.17) get tok: STRING("END")
(l.924,c.18) get tok: STRING(,)
(l.924,c.20) get tok: STRING("")
(l.924,c.21) get tok: STRING(,)
(l.924,c.23) get tok: STRING("")
(l.924,c.24) get tok: STRING(,)
(l.924,c.26) get tok: STRING("")
(l.924,c.27) get tok: STRING(,)
(l.924,c.35) get tok: STRING("OVERAB")
(l.924,c.36) get tok: STRING(,)
(l.924,c.43) get tok: STRING("ROUND")
(l.924,c.44) get tok: STRING(,)
(l.924,c.46) get tok: STRING("")
(l.924,c.47) get tok: STRING(,)
(l.924,c.53) get tok: STRING("LONG")
(l.924,c.54) get tok: STRING(,)
(l.925,c.2) get tok: STRING("")
(l.925,c.3) get tok: STRING(,)
(l.925,c.9) get tok: STRING("MODE")
(l.925,c.10) get tok: STRING(,)
(l.925,c.12) get tok: STRING("")
(l.925,c.13) get tok: STRING(,)
(l.925,c.15) get tok: STRING("")
(l.925,c.16) get tok: STRING(,)
(l.925,c.18) get tok: STRING("")
(l.925,c.19) get tok: STRING(,)
(l.925,c.21) get tok: STRING("")
(l.925,c.22) get tok: STRING(,)
(l.925,c.24) get tok: STRING("")
(l.925,c.25) get tok: STRING(,)
(l.925,c.27) get tok: STRING("")
(l.925,c.28) get tok: STRING(,)
(l.925,c.30) get tok: STRING("")
(l.925,c.31) get tok: STRING(,)
(l.925,c.33) get tok: STRING("")
(l.925,c.34) get tok: STRING(,)
(l.926,c.2) get tok: STRING("")
(l.926,c.3) get tok: STRING(,)
(l.926,c.5) get tok: STRING("")
(l.926,c.6) get tok: STRING(,)
(l.926,c.13) get tok: STRING("DIVAB")
(l.926,c.14) get tok: STRING(,)
(l.926,c.16) get tok: STRING("")
(l.926,c.17) get tok: STRING(,)
(l.926,c.19) get tok: STRING("")
(l.926,c.20) get tok: STRING(,)
(l.926,c.22) get tok: STRING("")
(l.926,c.23) get tok: STRING(,)
(l.926,c.28) get tok: STRING("ABS")
(l.926,c.29) get tok: STRING(,)
(l.926,c.36) get tok: STRING("BEGIN")
(l.926,c.37) get tok: STRING(,)
(l.926,c.39) get tok: STRING("")
(l.926,c.40) get tok: STRING(,)
(l.926,c.42) get tok: STRING("")
(l.926,c.43) get tok: STRING(,)
(l.927,c.5) get tok: STRING("NOT")
(l.927,c.6) get tok: STRING(,)
(l.927,c.10) get tok: STRING("OD")
(l.927,c.11) get tok: STRING(,)
(l.927,c.16) get tok: STRING("ODD")
(l.927,c.17) get tok: STRING(,)
(l.927,c.19) get tok: STRING("")
(l.927,c.20) get tok: STRING(,)
(l.927,c.22) get tok: STRING("")
(l.927,c.23) get tok: STRING(,)
(l.927,c.25) get tok: STRING("")
(l.927,c.26) get tok: STRING(,)
(l.927,c.28) get tok: STRING("")
(l.927,c.29) get tok: STRING(,)
(l.927,c.33) get tok: STRING("BY")
(l.927,c.34) get tok: STRING(,)
(l.927,c.36) get tok: STRING("")
(l.927,c.37) get tok: STRING(,)
(l.927,c.39) get tok: STRING("")
(l.927,c.40) get tok: STRING(,)
(l.928,c.2) get tok: STRING("")
(l.928,c.3) get tok: STRING(,)
(l.928,c.5) get tok: STRING("")
(l.928,c.6) get tok: STRING(,)
(l.928,c.8) get tok: STRING("")
(l.928,c.9) get tok: STRING(,)
(l.928,c.11) get tok: STRING("")
(l.928,c.12) get tok: STRING(,)
(l.928,c.16) get tok: STRING("DO")
(l.928,c.17) get tok: STRING(,)
(l.928,c.24) get tok: STRING("ALIEN")
(l.928,c.25) get tok: STRING(,)
(l.928,c.27) get tok: STRING("")
(l.928,c.28) get tok: STRING(,)
(l.928,c.30) get tok: STRING("")
(l.928,c.31) get tok: STRING(,)
(l.928,c.33) get tok: STRING("")
(l.928,c.34) get tok: STRING(,)
(l.928,c.36) get tok: STRING("")
(l.928,c.37) get tok: STRING(,)
(l.929,c.2) get tok: STRING("")
(l.929,c.3) get tok: STRING(,)
(l.929,c.5) get tok: STRING("")
(l.929,c.6) get tok: STRING(,)
(l.929,c.8) get tok: STRING("")
(l.929,c.9) get tok: STRING(,)
(l.929,c.11) get tok: STRING("")
(l.929,c.12) get tok: STRING(,)
(l.929,c.14) get tok: STRING("")
(l.929,c.15) get tok: STRING(,)
(l.929,c.17) get tok: STRING("")
(l.929,c.18) get tok: STRING(,)
(l.929,c.20) get tok: STRING("")
(l.929,c.21) get tok: STRING(,)
(l.929,c.23) get tok: STRING("")
(l.929,c.24) get tok: STRING(,)
(l.929,c.26) get tok: STRING("")
(l.929,c.27) get tok: STRING(,)
(l.929,c.29) get tok: STRING("")
(l.929,c.30) get tok: STRING(,)
(l.930,c.2) get tok: STRING("")
(l.930,c.3) get tok: STRING(,)
(l.930,c.5) get tok: STRING("")
(l.930,c.6) get tok: STRING(,)
(l.930,c.8) get tok: STRING("")
(l.930,c.9) get tok: STRING(,)
(l.930,c.11) get tok: STRING("")
(l.930,c.12) get tok: STRING(,)
(l.930,c.14) get tok: STRING("")
(l.930,c.15) get tok: STRING(,)
(l.930,c.17) get tok: STRING("")
(l.930,c.18) get tok: STRING(,)
(l.930,c.20) get tok: STRING("")
(l.930,c.21) get tok: STRING(,)
(l.930,c.23) get tok: STRING("")
(l.930,c.24) get tok: STRING(,)
(l.930,c.26) get tok: STRING("")
(l.930,c.27) get tok: STRING(,)
(l.930,c.29) get tok: STRING("")
(l.930,c.30) get tok: STRING(,)
(l.931,c.2) get tok: STRING("")
(l.931,c.3) get tok: STRING(,)
(l.931,c.5) get tok: STRING("")
(l.931,c.6) get tok: STRING(,)
(l.931,c.8) get tok: STRING("")
(l.931,c.9) get tok: STRING(,)
(l.931,c.11) get tok: STRING("")
(l.931,c.12) get tok: STRING(,)
(l.931,c.21) get tok: STRING("MINUSAB")
(l.931,c.22) get tok: STRING(,)
(l.931,c.27) get tok: STRING("BIN")
(l.931,c.28) get tok: STRING(,)
(l.931,c.30) get tok: STRING("")
(l.931,c.31) get tok: STRING(,)
(l.931,c.33) get tok: STRING("")
(l.931,c.34) get tok: STRING(,)
(l.931,c.36) get tok: STRING("")
(l.931,c.37) get tok: STRING(,)
(l.931,c.39) get tok: STRING("")
(l.931,c.40) get tok: STRING(,)
(l.932,c.2) get tok: STRING("")
(l.932,c.3) get tok: STRING(,)
(l.932,c.8) get tok: STRING("ARG")
(l.932,c.9) get tok: STRING(,)
(l.932,c.14) get tok: STRING("MOD")
(l.932,c.15) get tok: STRING(,)
(l.932,c.17) get tok: STRING("")
(l.932,c.18) get tok: STRING(,)
(l.932,c.20) get tok: STRING("")
(l.932,c.21) get tok: STRING(,)
(l.932,c.23) get tok: STRING("")
(l.932,c.24) get tok: STRING(,)
(l.932,c.26) get tok: STRING("")
(l.932,c.27) get tok: STRING(,)
(l.932,c.29) get tok: STRING("")
(l.932,c.30) get tok: STRING(,)
(l.932,c.36) get tok: STRING("DOWN")
(l.932,c.37) get tok: STRING(,)
(l.932,c.39) get tok: STRING("")
(l.932,c.40) get tok: STRING(,)
(l.933,c.2) get tok: STRING("")
(l.933,c.3) get tok: STRING(,)
(l.933,c.5) get tok: STRING("")
(l.933,c.6) get tok: STRING(,)
(l.933,c.10) get tok: STRING("GO")
(l.933,c.11) get tok: STRING(,)
(l.933,c.13) get tok: STRING("")
(l.933,c.14) get tok: STRING(,)
(l.933,c.20) get tok: STRING("GOTO")
(l.933,c.21) get tok: STRING(,)
(l.933,c.23) get tok: STRING("")
(l.933,c.24) get tok: STRING(,)
(l.933,c.28) get tok: STRING("IM")
(l.933,c.29) get tok: STRING(,)
(l.933,c.31) get tok: STRING("")
(l.933,c.32) get tok: STRING(,)
(l.933,c.34) get tok: STRING("")
(l.933,c.35) get tok: STRING(,)
(l.933,c.37) get tok: STRING("")
(l.933,c.38) get tok: STRING(,)
(l.934,c.8) get tok: STRING("")
(l.934,c.9) get tok: STRING(,)
(l.934,c.11) get tok: STRING("")
(l.934,c.12) get tok: STRING(,)
(l.934,c.14) get tok: STRING("")
(l.934,c.15) get tok: STRING(,)
(l.934,c.17) get tok: STRING("")
(l.934,c.18) get tok: STRING(,)
(l.934,c.20) get tok: STRING("")
(l.934,c.21) get tok: STRING(,)
(l.934,c.23) get tok: STRING("")
(l.934,c.24) get tok: STRING(,)
(l.934,c.28) get tok: STRING("IN")
(l.934,c.29) get tok: STRING(,)
(l.934,c.36) get tok: STRING("MODAB")
(l.934,c.37) get tok: STRING(,)
(l.934,c.39) get tok: STRING("")
(l.934,c.40) get tok: STRING(,)
(l.934,c.42) get tok: STRING("")
(l.934,c.43) get tok: STRING(,)
(l.935,c.2) get tok: STRING("")
(l.935,c.3) get tok: STRING(,)
(l.935,c.10) get tok: STRING("UNION")
(l.935,c.11) get tok: STRING(,)
(l.935,c.13) get tok: STRING("")
(l.935,c.14) get tok: STRING(,)
(l.935,c.16) get tok: STRING("")
(l.935,c.17) get tok: STRING(,)
(l.935,c.19) get tok: STRING("")
(l.935,c.20) get tok: STRING(,)
(l.936,c.0) get tok: STRING("AND")
(l.936,c.1) get tok: STRING())
(l.936,c.2) get tok: STRING(;)
(l.938,c.2) get tok: CONTROL( )
(l.946,c.2) get tok: CONTROL(<)
(l.947,c.2) get tok: INT(OP[87])
(l.947,c.9) get tok: REF TAG(LOOKUP)
(l.947,c.11) get tok: STRING(=)
(l.947,c.13) get tok: STRING(()
(l.947,c.19) get tok: INT(STRING[156])
(l.947,c.23) get tok: REF TAG(str)
(l.947,c.24) get tok: STRING())
(l.947,c.27) get tok: INT(INT[195])
(l.948,c.0) get tok: STRING(:)
(l.948,c.2) get tok: INT(IF[62])
(l.948,c.6) get tok: INT(UPB[150])
(l.948,c.11) get tok: REF TAG(str)
(l.948,c.13) get tok: STRING(>=)
(l.948,c.30) get tok: REF TAG(minwordlength)
(l.948,c.31) get tok: STRING(&)
(l.948,c.35) get tok: INT(UPB[150])
(l.948,c.40) get tok: REF TAG(str)
(l.948,c.42) get tok: STRING(<=)
(l.949,c.0) get tok: REF TAG(maxwordlength)
(l.949,c.4) get tok: INT(THEN[190])
(l.950,c.4) get tok: INT(PROC[69])
(l.950,c.10) get tok: REF TAG(hash)
(l.950,c.11) get tok: STRING(=)
(l.950,c.13) get tok: STRING(()
(l.950,c.19) get tok: INT(STRING[156])
(l.950,c.22) get tok: CONTROL(!)
(l.950,c.23) get tok: REF TAG(s)
(l.950,c.24) get tok: STRING())
(l.950,c.27) get tok: INT(INT[195])
(l.951,c.0) get tok: STRING(:)
(l.951,c.1) get tok: STRING(()
(l.952,c.1) get tok: STRING([)
(l.952,c.2) get tok: STRING(])
(l.952,c.5) get tok: INT(INT[195])
(l.952,c.18) get tok: REF TAG(assovalues)
(l.952,c.19) get tok: STRING(=)
(l.952,c.21) get tok: STRING([)
(l.952,c.22) get tok: STRING(])
(l.952,c.25) get tok: INT(INT[195])
(l.953,c.1) get tok: STRING(()
(l.953,c.4) get tok: STRING(316)
(l.953,c.5) get tok: STRING(,)
(l.953,c.9) get tok: STRING(316)
(l.953,c.10) get tok: STRING(,)
(l.953,c.14) get tok: STRING(316)
(l.953,c.15) get tok: STRING(,)
(l.953,c.19) get tok: STRING(316)
(l.953,c.20) get tok: STRING(,)
(l.953,c.24) get tok: STRING(316)
(l.953,c.25) get tok: STRING(,)
(l.953,c.29) get tok: STRING(316)
(l.953,c.30) get tok: STRING(,)
(l.953,c.34) get tok: STRING(316)
(l.953,c.35) get tok: STRING(,)
(l.953,c.39) get tok: STRING(316)
(l.953,c.40) get tok: STRING(,)
(l.954,c.3) get tok: STRING(316)
(l.954,c.4) get tok: STRING(,)
(l.954,c.8) get tok: STRING(316)
(l.954,c.9) get tok: STRING(,)
(l.954,c.13) get tok: STRING(316)
(l.954,c.14) get tok: STRING(,)
(l.954,c.18) get tok: STRING(316)
(l.954,c.19) get tok: STRING(,)
(l.954,c.23) get tok: STRING(316)
(l.954,c.24) get tok: STRING(,)
(l.954,c.28) get tok: STRING(316)
(l.954,c.29) get tok: STRING(,)
(l.954,c.33) get tok: STRING(316)
(l.954,c.34) get tok: STRING(,)
(l.954,c.38) get tok: STRING(316)
(l.954,c.39) get tok: STRING(,)
(l.955,c.3) get tok: STRING(316)
(l.955,c.4) get tok: STRING(,)
(l.955,c.8) get tok: STRING(316)
(l.955,c.9) get tok: STRING(,)
(l.955,c.13) get tok: STRING(316)
(l.955,c.14) get tok: STRING(,)
(l.955,c.18) get tok: STRING(316)
(l.955,c.19) get tok: STRING(,)
(l.955,c.23) get tok: STRING(316)
(l.955,c.24) get tok: STRING(,)
(l.955,c.28) get tok: STRING(316)
(l.955,c.29) get tok: STRING(,)
(l.955,c.33) get tok: STRING(316)
(l.955,c.34) get tok: STRING(,)
(l.955,c.38) get tok: STRING(316)
(l.955,c.39) get tok: STRING(,)
(l.956,c.3) get tok: STRING(316)
(l.956,c.4) get tok: STRING(,)
(l.956,c.8) get tok: STRING(316)
(l.956,c.9) get tok: STRING(,)
(l.956,c.13) get tok: STRING(316)
(l.956,c.14) get tok: STRING(,)
(l.956,c.18) get tok: STRING(316)
(l.956,c.19) get tok: STRING(,)
(l.956,c.23) get tok: STRING(316)
(l.956,c.24) get tok: STRING(,)
(l.956,c.28) get tok: STRING(316)
(l.956,c.29) get tok: STRING(,)
(l.956,c.33) get tok: STRING(316)
(l.956,c.34) get tok: STRING(,)
(l.956,c.38) get tok: STRING(316)
(l.956,c.39) get tok: STRING(,)
(l.957,c.3) get tok: STRING(316)
(l.957,c.4) get tok: STRING(,)
(l.957,c.8) get tok: STRING(316)
(l.957,c.9) get tok: STRING(,)
(l.957,c.13) get tok: STRING(316)
(l.957,c.14) get tok: STRING(,)
(l.957,c.18) get tok: STRING(316)
(l.957,c.19) get tok: STRING(,)
(l.957,c.23) get tok: STRING(316)
(l.957,c.24) get tok: STRING(,)
(l.957,c.28) get tok: STRING(316)
(l.957,c.29) get tok: STRING(,)
(l.957,c.33) get tok: STRING(316)
(l.957,c.34) get tok: STRING(,)
(l.957,c.38) get tok: STRING(316)
(l.957,c.39) get tok: STRING(,)
(l.958,c.3) get tok: STRING(316)
(l.958,c.4) get tok: STRING(,)
(l.958,c.8) get tok: STRING(316)
(l.958,c.9) get tok: STRING(,)
(l.958,c.13) get tok: STRING(316)
(l.958,c.14) get tok: STRING(,)
(l.958,c.18) get tok: STRING(316)
(l.958,c.19) get tok: STRING(,)
(l.958,c.23) get tok: STRING(316)
(l.958,c.24) get tok: STRING(,)
(l.958,c.28) get tok: STRING(316)
(l.958,c.29) get tok: STRING(,)
(l.958,c.33) get tok: STRING(316)
(l.958,c.34) get tok: STRING(,)
(l.958,c.38) get tok: STRING(316)
(l.958,c.39) get tok: STRING(,)
(l.959,c.3) get tok: STRING(316)
(l.959,c.4) get tok: STRING(,)
(l.959,c.8) get tok: STRING(316)
(l.959,c.9) get tok: STRING(,)
(l.959,c.13) get tok: STRING(316)
(l.959,c.14) get tok: STRING(,)
(l.959,c.18) get tok: STRING(316)
(l.959,c.19) get tok: STRING(,)
(l.959,c.23) get tok: STRING(316)
(l.959,c.24) get tok: STRING(,)
(l.959,c.28) get tok: STRING(316)
(l.959,c.29) get tok: STRING(,)
(l.959,c.33) get tok: STRING(316)
(l.959,c.34) get tok: STRING(,)
(l.959,c.38) get tok: STRING(316)
(l.959,c.39) get tok: STRING(,)
(l.960,c.3) get tok: STRING(316)
(l.960,c.4) get tok: STRING(,)
(l.960,c.8) get tok: STRING(316)
(l.960,c.9) get tok: STRING(,)
(l.960,c.13) get tok: STRING(316)
(l.960,c.14) get tok: STRING(,)
(l.960,c.18) get tok: STRING(316)
(l.960,c.19) get tok: STRING(,)
(l.960,c.23) get tok: STRING(316)
(l.960,c.24) get tok: STRING(,)
(l.960,c.28) get tok: STRING(316)
(l.960,c.29) get tok: STRING(,)
(l.960,c.33) get tok: STRING(316)
(l.960,c.34) get tok: STRING(,)
(l.960,c.38) get tok: STRING(316)
(l.960,c.39) get tok: STRING(,)
(l.961,c.8) get tok: STRING(316)
(l.961,c.9) get tok: STRING(,)
(l.961,c.13) get tok: STRING(113)
(l.961,c.14) get tok: STRING(,)
(l.961,c.17) get tok: STRING(95)
(l.961,c.18) get tok: STRING(,)
(l.961,c.21) get tok: STRING(20)
(l.961,c.22) get tok: STRING(,)
(l.961,c.25) get tok: STRING(72)
(l.961,c.26) get tok: STRING(,)
(l.961,c.29) get tok: STRING(0)
(l.961,c.30) get tok: STRING(,)
(l.961,c.33) get tok: STRING(5)
(l.961,c.34) get tok: STRING(,)
(l.961,c.38) get tok: STRING(120)
(l.961,c.39) get tok: STRING(,)
(l.962,c.2) get tok: STRING(44)
(l.962,c.3) get tok: STRING(,)
(l.962,c.6) get tok: STRING(50)
(l.962,c.7) get tok: STRING(,)
(l.962,c.10) get tok: STRING(30)
(l.962,c.11) get tok: STRING(,)
(l.962,c.14) get tok: STRING(25)
(l.962,c.15) get tok: STRING(,)
(l.962,c.18) get tok: STRING(0)
(l.962,c.19) get tok: STRING(,)
(l.962,c.23) get tok: STRING(122)
(l.962,c.24) get tok: STRING(,)
(l.962,c.28) get tok: STRING(127)
(l.962,c.29) get tok: STRING(,)
(l.962,c.32) get tok: STRING(85)
(l.962,c.33) get tok: STRING(,)
(l.963,c.1) get tok: STRING(0)
(l.963,c.2) get tok: STRING(,)
(l.963,c.5) get tok: STRING(5)
(l.963,c.6) get tok: STRING(,)
(l.963,c.9) get tok: STRING(45)
(l.963,c.10) get tok: STRING(,)
(l.963,c.13) get tok: STRING(15)
(l.963,c.14) get tok: STRING(,)
(l.963,c.17) get tok: STRING(15)
(l.963,c.18) get tok: STRING(,)
(l.963,c.21) get tok: STRING(52)
(l.963,c.22) get tok: STRING(,)
(l.963,c.25) get tok: STRING(20)
(l.963,c.26) get tok: STRING(,)
(l.963,c.29) get tok: STRING(50)
(l.963,c.30) get tok: STRING(,)
(l.964,c.1) get tok: STRING(2)
(l.964,c.2) get tok: STRING(,)
(l.964,c.5) get tok: STRING(70)
(l.964,c.6) get tok: STRING(,)
(l.964,c.10) get tok: STRING(316)
(l.964,c.11) get tok: STRING(,)
(l.964,c.15) get tok: STRING(316)
(l.964,c.16) get tok: STRING(,)
(l.964,c.20) get tok: STRING(316)
(l.964,c.21) get tok: STRING(,)
(l.964,c.25) get tok: STRING(316)
(l.964,c.26) get tok: STRING(,)
(l.964,c.30) get tok: STRING(316)
(l.964,c.31) get tok: STRING(,)
(l.964,c.35) get tok: STRING(316)
(l.964,c.36) get tok: STRING(,)
(l.965,c.3) get tok: STRING(316)
(l.965,c.4) get tok: STRING(,)
(l.965,c.8) get tok: STRING(316)
(l.965,c.9) get tok: STRING(,)
(l.965,c.13) get tok: STRING(316)
(l.965,c.14) get tok: STRING(,)
(l.965,c.18) get tok: STRING(316)
(l.965,c.19) get tok: STRING(,)
(l.965,c.23) get tok: STRING(316)
(l.965,c.24) get tok: STRING(,)
(l.965,c.28) get tok: STRING(316)
(l.965,c.29) get tok: STRING(,)
(l.965,c.33) get tok: STRING(316)
(l.965,c.34) get tok: STRING(,)
(l.965,c.38) get tok: STRING(316)
(l.965,c.39) get tok: STRING(,)
(l.966,c.3) get tok: STRING(316)
(l.966,c.4) get tok: STRING(,)
(l.966,c.8) get tok: STRING(316)
(l.966,c.9) get tok: STRING(,)
(l.966,c.13) get tok: STRING(316)
(l.966,c.14) get tok: STRING(,)
(l.966,c.18) get tok: STRING(316)
(l.966,c.19) get tok: STRING(,)
(l.966,c.23) get tok: STRING(316)
(l.966,c.24) get tok: STRING(,)
(l.966,c.28) get tok: STRING(316)
(l.966,c.29) get tok: STRING(,)
(l.966,c.33) get tok: STRING(316)
(l.966,c.34) get tok: STRING(,)
(l.966,c.38) get tok: STRING(316)
(l.966,c.39) get tok: STRING(,)
(l.967,c.3) get tok: STRING(316)
(l.967,c.4) get tok: STRING(,)
(l.967,c.8) get tok: STRING(316)
(l.967,c.9) get tok: STRING(,)
(l.967,c.13) get tok: STRING(316)
(l.967,c.14) get tok: STRING(,)
(l.967,c.18) get tok: STRING(316)
(l.967,c.19) get tok: STRING(,)
(l.967,c.23) get tok: STRING(316)
(l.967,c.24) get tok: STRING(,)
(l.967,c.28) get tok: STRING(316)
(l.967,c.29) get tok: STRING(,)
(l.967,c.33) get tok: STRING(316)
(l.967,c.34) get tok: STRING(,)
(l.967,c.38) get tok: STRING(316)
(l.967,c.39) get tok: STRING(,)
(l.968,c.3) get tok: STRING(316)
(l.968,c.4) get tok: STRING(,)
(l.968,c.8) get tok: STRING(316)
(l.968,c.9) get tok: STRING(,)
(l.968,c.13) get tok: STRING(316)
(l.968,c.14) get tok: STRING(,)
(l.968,c.18) get tok: STRING(316)
(l.968,c.19) get tok: STRING(,)
(l.968,c.23) get tok: STRING(316)
(l.968,c.24) get tok: STRING(,)
(l.968,c.28) get tok: STRING(316)
(l.968,c.29) get tok: STRING(,)
(l.968,c.33) get tok: STRING(316)
(l.968,c.34) get tok: STRING(,)
(l.968,c.38) get tok: STRING(316)
(l.968,c.39) get tok: STRING(,)
(l.969,c.3) get tok: STRING(316)
(l.969,c.4) get tok: STRING(,)
(l.969,c.8) get tok: STRING(316)
(l.969,c.9) get tok: STRING(,)
(l.969,c.13) get tok: STRING(316)
(l.969,c.14) get tok: STRING(,)
(l.969,c.18) get tok: STRING(316)
(l.969,c.19) get tok: STRING(,)
(l.969,c.23) get tok: STRING(316)
(l.969,c.24) get tok: STRING(,)
(l.969,c.28) get tok: STRING(316)
(l.969,c.29) get tok: STRING(,)
(l.969,c.33) get tok: STRING(316)
(l.969,c.34) get tok: STRING(,)
(l.969,c.38) get tok: STRING(316)
(l.969,c.39) get tok: STRING(,)
(l.970,c.3) get tok: STRING(316)
(l.970,c.4) get tok: STRING(,)
(l.970,c.8) get tok: STRING(316)
(l.970,c.9) get tok: STRING(,)
(l.970,c.13) get tok: STRING(316)
(l.970,c.14) get tok: STRING(,)
(l.970,c.18) get tok: STRING(316)
(l.970,c.19) get tok: STRING(,)
(l.970,c.23) get tok: STRING(316)
(l.970,c.24) get tok: STRING(,)
(l.970,c.28) get tok: STRING(316)
(l.970,c.29) get tok: STRING(,)
(l.970,c.33) get tok: STRING(316)
(l.970,c.34) get tok: STRING(,)
(l.970,c.38) get tok: STRING(316)
(l.970,c.39) get tok: STRING(,)
(l.971,c.3) get tok: STRING(316)
(l.971,c.4) get tok: STRING(,)
(l.971,c.8) get tok: STRING(316)
(l.971,c.9) get tok: STRING(,)
(l.971,c.13) get tok: STRING(316)
(l.971,c.14) get tok: STRING(,)
(l.971,c.18) get tok: STRING(316)
(l.971,c.19) get tok: STRING(,)
(l.971,c.23) get tok: STRING(316)
(l.971,c.24) get tok: STRING(,)
(l.971,c.28) get tok: STRING(316)
(l.971,c.29) get tok: STRING(,)
(l.971,c.33) get tok: STRING(316)
(l.971,c.34) get tok: STRING(,)
(l.971,c.38) get tok: STRING(316)
(l.971,c.39) get tok: STRING(,)
(l.972,c.3) get tok: STRING(316)
(l.972,c.4) get tok: STRING(,)
(l.972,c.8) get tok: STRING(316)
(l.972,c.9) get tok: STRING(,)
(l.972,c.13) get tok: STRING(316)
(l.972,c.14) get tok: STRING(,)
(l.972,c.18) get tok: STRING(316)
(l.972,c.19) get tok: STRING(,)
(l.972,c.23) get tok: STRING(316)
(l.972,c.24) get tok: STRING(,)
(l.972,c.28) get tok: STRING(316)
(l.972,c.29) get tok: STRING(,)
(l.972,c.33) get tok: STRING(316)
(l.972,c.34) get tok: STRING(,)
(l.972,c.38) get tok: STRING(316)
(l.972,c.39) get tok: STRING(,)
(l.973,c.3) get tok: STRING(316)
(l.973,c.4) get tok: STRING(,)
(l.973,c.8) get tok: STRING(316)
(l.973,c.9) get tok: STRING(,)
(l.973,c.13) get tok: STRING(316)
(l.973,c.14) get tok: STRING(,)
(l.973,c.18) get tok: STRING(316)
(l.973,c.19) get tok: STRING(,)
(l.973,c.23) get tok: STRING(316)
(l.973,c.24) get tok: STRING(,)
(l.973,c.28) get tok: STRING(316)
(l.973,c.29) get tok: STRING(,)
(l.973,c.33) get tok: STRING(316)
(l.973,c.34) get tok: STRING(,)
(l.973,c.38) get tok: STRING(316)
(l.973,c.39) get tok: STRING(,)
(l.974,c.3) get tok: STRING(316)
(l.974,c.4) get tok: STRING(,)
(l.974,c.8) get tok: STRING(316)
(l.974,c.9) get tok: STRING(,)
(l.974,c.13) get tok: STRING(316)
(l.974,c.14) get tok: STRING(,)
(l.974,c.18) get tok: STRING(316)
(l.974,c.19) get tok: STRING(,)
(l.974,c.23) get tok: STRING(316)
(l.974,c.24) get tok: STRING(,)
(l.974,c.28) get tok: STRING(316)
(l.974,c.29) get tok: STRING(,)
(l.974,c.33) get tok: STRING(316)
(l.974,c.34) get tok: STRING(,)
(l.974,c.38) get tok: STRING(316)
(l.974,c.39) get tok: STRING(,)
(l.975,c.3) get tok: STRING(316)
(l.975,c.4) get tok: STRING(,)
(l.975,c.8) get tok: STRING(316)
(l.975,c.9) get tok: STRING(,)
(l.975,c.13) get tok: STRING(316)
(l.975,c.14) get tok: STRING(,)
(l.975,c.18) get tok: STRING(316)
(l.975,c.19) get tok: STRING(,)
(l.975,c.23) get tok: STRING(316)
(l.975,c.24) get tok: STRING(,)
(l.975,c.28) get tok: STRING(316)
(l.975,c.29) get tok: STRING(,)
(l.975,c.33) get tok: STRING(316)
(l.975,c.34) get tok: STRING(,)
(l.975,c.38) get tok: STRING(316)
(l.975,c.39) get tok: STRING(,)
(l.976,c.3) get tok: STRING(316)
(l.976,c.4) get tok: STRING(,)
(l.976,c.8) get tok: STRING(316)
(l.976,c.9) get tok: STRING(,)
(l.976,c.13) get tok: STRING(316)
(l.976,c.14) get tok: STRING(,)
(l.976,c.18) get tok: STRING(316)
(l.976,c.19) get tok: STRING(,)
(l.976,c.23) get tok: STRING(316)
(l.976,c.24) get tok: STRING(,)
(l.976,c.28) get tok: STRING(316)
(l.976,c.29) get tok: STRING(,)
(l.976,c.33) get tok: STRING(316)
(l.976,c.34) get tok: STRING(,)
(l.976,c.38) get tok: STRING(316)
(l.976,c.39) get tok: STRING(,)
(l.977,c.3) get tok: STRING(316)
(l.977,c.4) get tok: STRING(,)
(l.977,c.8) get tok: STRING(316)
(l.977,c.9) get tok: STRING(,)
(l.977,c.13) get tok: STRING(316)
(l.977,c.14) get tok: STRING(,)
(l.977,c.18) get tok: STRING(316)
(l.977,c.19) get tok: STRING(,)
(l.977,c.23) get tok: STRING(316)
(l.977,c.24) get tok: STRING(,)
(l.977,c.28) get tok: STRING(316)
(l.977,c.29) get tok: STRING(,)
(l.977,c.33) get tok: STRING(316)
(l.977,c.34) get tok: STRING(,)
(l.977,c.38) get tok: STRING(316)
(l.977,c.39) get tok: STRING(,)
(l.978,c.3) get tok: STRING(316)
(l.978,c.4) get tok: STRING(,)
(l.978,c.8) get tok: STRING(316)
(l.978,c.9) get tok: STRING(,)
(l.978,c.13) get tok: STRING(316)
(l.978,c.14) get tok: STRING(,)
(l.978,c.18) get tok: STRING(316)
(l.978,c.19) get tok: STRING(,)
(l.978,c.23) get tok: STRING(316)
(l.978,c.24) get tok: STRING(,)
(l.978,c.28) get tok: STRING(316)
(l.978,c.29) get tok: STRING(,)
(l.978,c.33) get tok: STRING(316)
(l.978,c.34) get tok: STRING(,)
(l.978,c.38) get tok: STRING(316)
(l.978,c.39) get tok: STRING(,)
(l.979,c.3) get tok: STRING(316)
(l.979,c.4) get tok: STRING(,)
(l.979,c.8) get tok: STRING(316)
(l.979,c.9) get tok: STRING(,)
(l.979,c.13) get tok: STRING(316)
(l.979,c.14) get tok: STRING(,)
(l.979,c.18) get tok: STRING(316)
(l.979,c.19) get tok: STRING(,)
(l.979,c.23) get tok: STRING(316)
(l.979,c.24) get tok: STRING(,)
(l.979,c.28) get tok: STRING(316)
(l.979,c.29) get tok: STRING(,)
(l.979,c.33) get tok: STRING(316)
(l.979,c.34) get tok: STRING(,)
(l.979,c.38) get tok: STRING(316)
(l.979,c.39) get tok: STRING(,)
(l.980,c.3) get tok: STRING(316)
(l.980,c.4) get tok: STRING(,)
(l.980,c.8) get tok: STRING(316)
(l.980,c.9) get tok: STRING(,)
(l.980,c.13) get tok: STRING(316)
(l.980,c.14) get tok: STRING(,)
(l.980,c.18) get tok: STRING(316)
(l.980,c.19) get tok: STRING(,)
(l.980,c.23) get tok: STRING(316)
(l.980,c.24) get tok: STRING(,)
(l.980,c.28) get tok: STRING(316)
(l.980,c.29) get tok: STRING(,)
(l.980,c.33) get tok: STRING(316)
(l.980,c.34) get tok: STRING(,)
(l.980,c.38) get tok: STRING(316)
(l.980,c.39) get tok: STRING(,)
(l.981,c.3) get tok: STRING(316)
(l.981,c.4) get tok: STRING(,)
(l.981,c.8) get tok: STRING(316)
(l.981,c.9) get tok: STRING(,)
(l.981,c.13) get tok: STRING(316)
(l.981,c.14) get tok: STRING(,)
(l.981,c.18) get tok: STRING(316)
(l.981,c.19) get tok: STRING(,)
(l.981,c.23) get tok: STRING(316)
(l.981,c.24) get tok: STRING(,)
(l.981,c.28) get tok: STRING(316)
(l.981,c.29) get tok: STRING(,)
(l.981,c.33) get tok: STRING(316)
(l.981,c.34) get tok: STRING(,)
(l.981,c.38) get tok: STRING(316)
(l.981,c.39) get tok: STRING(,)
(l.982,c.3) get tok: STRING(316)
(l.982,c.4) get tok: STRING(,)
(l.982,c.8) get tok: STRING(316)
(l.982,c.9) get tok: STRING(,)
(l.982,c.13) get tok: STRING(316)
(l.982,c.14) get tok: STRING(,)
(l.982,c.18) get tok: STRING(316)
(l.982,c.19) get tok: STRING(,)
(l.982,c.23) get tok: STRING(316)
(l.982,c.24) get tok: STRING(,)
(l.982,c.28) get tok: STRING(316)
(l.982,c.29) get tok: STRING(,)
(l.982,c.33) get tok: STRING(316)
(l.982,c.34) get tok: STRING(,)
(l.982,c.38) get tok: STRING(316)
(l.982,c.39) get tok: STRING(,)
(l.983,c.3) get tok: STRING(316)
(l.983,c.4) get tok: STRING(,)
(l.983,c.8) get tok: STRING(316)
(l.983,c.9) get tok: STRING(,)
(l.983,c.13) get tok: STRING(316)
(l.983,c.14) get tok: STRING(,)
(l.983,c.18) get tok: STRING(316)
(l.983,c.19) get tok: STRING(,)
(l.983,c.23) get tok: STRING(316)
(l.983,c.24) get tok: STRING(,)
(l.983,c.28) get tok: STRING(316)
(l.983,c.29) get tok: STRING(,)
(l.983,c.33) get tok: STRING(316)
(l.983,c.34) get tok: STRING(,)
(l.983,c.38) get tok: STRING(316)
(l.983,c.39) get tok: STRING(,)
(l.984,c.3) get tok: STRING(316)
(l.984,c.4) get tok: STRING(,)
(l.984,c.8) get tok: STRING(316)
(l.984,c.9) get tok: STRING(,)
(l.984,c.13) get tok: STRING(316)
(l.984,c.14) get tok: STRING(,)
(l.984,c.18) get tok: STRING(316)
(l.984,c.19) get tok: STRING(,)
(l.984,c.23) get tok: STRING(316)
(l.984,c.24) get tok: STRING(,)
(l.984,c.28) get tok: STRING(316)
(l.984,c.29) get tok: STRING(,)
(l.984,c.33) get tok: STRING(316)
(l.984,c.34) get tok: STRING(,)
(l.984,c.38) get tok: STRING(316)
(l.984,c.39) get tok: STRING())
(l.984,c.40) get tok: STRING([)
(l.984,c.42) get tok: CONTROL(@)
(l.984,c.43) get tok: STRING(0)
(l.984,c.44) get tok: STRING(])
(l.984,c.45) get tok: STRING(;)
(l.985,c.2) get tok: CONTROL(#)
(l.986,c.3) get tok: INT(UPB[150])
(l.986,c.6) get tok: REF TAG(s)
(l.986,c.7) get tok: STRING(+)
(l.986,c.19) get tok: REF TAG(assovalues)
(l.986,c.20) get tok: STRING([)
(l.986,c.23) get tok: INT(ABS[226])
(l.986,c.25) get tok: REF TAG(s)
(l.986,c.26) get tok: STRING([)
(l.986,c.27) get tok: STRING(1)
(l.986,c.28) get tok: STRING(+)
(l.986,c.31) get tok: INT(LWB[148])
(l.986,c.33) get tok: REF TAG(s)
(l.986,c.34) get tok: STRING(])
(l.986,c.35) get tok: STRING(])
(l.987,c.0) get tok: STRING(+)
(l.987,c.11) get tok: REF TAG(assovalues)
(l.987,c.12) get tok: STRING([)
(l.987,c.15) get tok: INT(ABS[226])
(l.987,c.17) get tok: REF TAG(s)
(l.987,c.18) get tok: STRING([)
(l.987,c.21) get tok: INT(LWB[148])
(l.987,c.23) get tok: REF TAG(s)
(l.987,c.24) get tok: STRING(])
(l.987,c.25) get tok: STRING(])
(l.987,c.27) get tok: STRING(+)
(l.987,c.39) get tok: REF TAG(assovalues)
(l.987,c.40) get tok: STRING([)
(l.987,c.43) get tok: INT(ABS[226])
(l.987,c.45) get tok: REF TAG(s)
(l.987,c.46) get tok: STRING([)
(l.987,c.49) get tok: INT(UPB[150])
(l.987,c.51) get tok: REF TAG(s)
(l.987,c.52) get tok: STRING(])
(l.987,c.53) get tok: STRING(])
(l.988,c.1) get tok: STRING())
(l.988,c.2) get tok: STRING(;)
(l.989,c.2) get tok: CONTROL(#)
(l.990,c.3) get tok: INT(INT[195])
(l.990,c.7) get tok: REF TAG(key)
(l.990,c.8) get tok: STRING(=)
(l.990,c.12) get tok: REF TAG(hash)
(l.990,c.13) get tok: STRING(()
(l.990,c.16) get tok: REF TAG(str)
(l.990,c.17) get tok: STRING())
(l.990,c.18) get tok: STRING(;)
(l.992,c.2) get tok: INT(IF[62])
(l.992,c.7) get tok: REF TAG(key)
(l.992,c.8) get tok: STRING(<)
(l.992,c.11) get tok: STRING(0)
(l.992,c.13) get tok: INT(OR[177])
(l.992,c.18) get tok: REF TAG(key)
(l.992,c.19) get tok: STRING(>)
(l.993,c.0) get tok: REF TAG(maxhashvalue)
(l.993,c.4) get tok: INT(THEN[190])
(l.994,c.0) get tok: STRING(0)
(l.994,c.4) get tok: INT(ELIF[9])
(l.994,c.13) get tok: REF TAG(boldsym)
(l.994,c.14) get tok: STRING([)
(l.994,c.17) get tok: REF TAG(key)
(l.994,c.18) get tok: STRING(])
(l.994,c.19) get tok: STRING(=)
(l.995,c.0) get tok: REF TAG(str)
(l.995,c.4) get tok: INT(THEN[190])
(l.996,c.0) get tok: REF TAG(key)
(l.996,c.4) get tok: INT(ELSE[4])
(l.997,c.0) get tok: STRING(0)
(l.997,c.2) get tok: INT(FI[107])
(l.998,c.4) get tok: INT(ELSE[4])
(l.999,c.0) get tok: STRING(0)
(l.999,c.2) get tok: INT(FI[107])
(l.999,c.3) get tok: STRING(;)
(l.1001,c.2) get tok: CONTROL( )
(l.1007,c.2) get tok: CONTROL(<)
(l.1008,c.4) get tok: INT(MODE[211])
(l.1008,c.12) get tok: REF TAG(CONTROL)
(l.1008,c.14) get tok: STRING(=)
(l.1008,c.21) get tok: INT(STRUCT[51])
(l.1008,c.22) get tok: STRING(()
(l.1008,c.26) get tok: INT(CHAR[113])
(l.1008,c.29) get tok: REF TAG(cs)
(l.1008,c.30) get tok: STRING())
(l.1008,c.31) get tok: STRING(;)
(l.1010,c.2) get tok: CONTROL( )
(l.1018,c.2) get tok: CONTROL(<)
(l.1019,c.4) get tok: INT(MODE[211])
(l.1019,c.8) get tok: REF TAG(TAG)
(l.1019,c.10) get tok: STRING(=)
(l.1019,c.17) get tok: INT(STRUCT[51])
(l.1019,c.18) get tok: STRING(()
(l.1019,c.24) get tok: INT(STRING[156])
(l.1019,c.26) get tok: REF TAG(s)
(l.1019,c.27) get tok: STRING(,)
(l.1019,c.31) get tok: INT(REF[53])
(l.1019,c.35) get tok: REF TAG(TAG)
(l.1019,c.40) get tok: REF TAG(left)
(l.1019,c.41) get tok: STRING(,)
(l.1019,c.47) get tok: REF TAG(right)
(l.1019,c.48) get tok: STRING())
(l.1019,c.49) get tok: STRING(;)
(l.1021,c.2) get tok: CONTROL( )
(l.1028,c.2) get tok: CONTROL(<)
(l.1029,c.4) get tok: INT(MODE[211])
(l.1029,c.10) get tok: REF TAG(TOKEN)
(l.1029,c.11) get tok: STRING(,)
(l.1029,c.17) get tok: REF TAG(MACRO)
(l.1029,c.18) get tok: STRING(,)
(l.1029,c.25) get tok: REF TAG(MODULE)
(l.1029,c.26) get tok: STRING(,)
(l.1031,c.2) get tok: CONTROL( )
(l.1035,c.2) get tok: CONTROL(<)
(l.1036,c.2) get tok: CONTROL(!)
(l.1036,c.6) get tok: REF TAG(TEXT)
(l.1036,c.8) get tok: STRING(=)
(l.1036,c.15) get tok: INT(STRUCT[51])
(l.1036,c.16) get tok: STRING(()
(l.1036,c.21) get tok: INT(UNION[311])
(l.1036,c.22) get tok: STRING(()
(l.1036,c.27) get tok: REF TAG(TOKEN)
(l.1036,c.28) get tok: STRING(,)
(l.1036,c.31) get tok: INT(REF[53])
(l.1036,c.37) get tok: REF TAG(MACRO)
(l.1036,c.38) get tok: STRING(,)
(l.1036,c.41) get tok: INT(REF[53])
(l.1036,c.48) get tok: REF TAG(MODULE)
(l.1036,c.49) get tok: STRING())
(l.1036,c.54) get tok: REF TAG(text)
(l.1036,c.55) get tok: STRING(,)
(l.1036,c.59) get tok: INT(REF[53])
(l.1036,c.64) get tok: REF TAG(TEXT)
(l.1036,c.69) get tok: REF TAG(next)
(l.1036,c.70) get tok: STRING())
(l.1036,c.71) get tok: STRING(,)
(l.1038,c.2) get tok: CONTROL( )
(l.1047,c.2) get tok: CONTROL(<)
(l.1048,c.2) get tok: CONTROL(!)
(l.1048,c.8) get tok: REF TAG(MODULE)
(l.1048,c.10) get tok: STRING(=)
(l.1048,c.17) get tok: INT(STRUCT[51])
(l.1048,c.18) get tok: STRING(()
(l.1048,c.24) get tok: INT(STRING[156])
(l.1048,c.27) get tok: REF TAG(id)
(l.1048,c.28) get tok: STRING(,)
(l.1048,c.30) get tok: CONTROL(/)
(l.1049,c.3) get tok: INT(REF[53])
(l.1049,c.7) get tok: INT(REF[53])
(l.1049,c.12) get tok: REF TAG(TEXT)
(l.1049,c.21) get tok: REF TAG(textbeg)
(l.1049,c.22) get tok: STRING(,)
(l.1049,c.31) get tok: REF TAG(textend)
(l.1049,c.32) get tok: STRING(,)
(l.1049,c.34) get tok: CONTROL(/)
(l.1050,c.3) get tok: INT(REF[53])
(l.1050,c.10) get tok: REF TAG(MODULE)
(l.1050,c.15) get tok: REF TAG(left)
(l.1050,c.16) get tok: STRING(,)
(l.1050,c.22) get tok: REF TAG(right)
(l.1050,c.23) get tok: STRING())
(l.1050,c.24) get tok: STRING(,)
(l.1052,c.2) get tok: CONTROL( )
(l.1063,c.2) get tok: CONTROL(<)
(l.1064,c.2) get tok: CONTROL(!)
(l.1064,c.8) get tok: REF TAG(WPARAM)
(l.1064,c.10) get tok: STRING(=)
(l.1064,c.17) get tok: INT(STRUCT[51])
(l.1064,c.18) get tok: STRING(()
(l.1064,c.21) get tok: INT(REF[53])
(l.1064,c.25) get tok: REF TAG(TAG)
(l.1064,c.29) get tok: REF TAG(par)
(l.1064,c.30) get tok: STRING(,)
(l.1064,c.34) get tok: INT(REF[53])
(l.1064,c.41) get tok: REF TAG(WPARAM)
(l.1064,c.46) get tok: REF TAG(next)
(l.1064,c.47) get tok: STRING())
(l.1064,c.48) get tok: STRING(,)
(l.1065,c.2) get tok: CONTROL(!)
(l.1065,c.7) get tok: REF TAG(MACRO)
(l.1065,c.9) get tok: STRING(=)
(l.1065,c.16) get tok: INT(STRUCT[51])
(l.1065,c.17) get tok: STRING(()
(l.1065,c.20) get tok: INT(REF[53])
(l.1065,c.24) get tok: REF TAG(TAG)
(l.1065,c.27) get tok: REF TAG(id)
(l.1065,c.28) get tok: STRING(,)
(l.1066,c.4) get tok: INT(BITS[164])
(l.1066,c.10) get tok: REF TAG(flags)
(l.1066,c.11) get tok: STRING(,)
(l.1067,c.3) get tok: INT(REF[53])
(l.1067,c.10) get tok: REF TAG(WPARAM)
(l.1067,c.16) get tok: REF TAG(param)
(l.1067,c.17) get tok: STRING(,)
(l.1068,c.3) get tok: INT(REF[53])
(l.1068,c.7) get tok: INT(REF[53])
(l.1068,c.12) get tok: REF TAG(TEXT)
(l.1068,c.21) get tok: REF TAG(textbeg)
(l.1068,c.22) get tok: STRING(,)
(l.1068,c.31) get tok: REF TAG(textend)
(l.1068,c.32) get tok: STRING(,)
(l.1069,c.3) get tok: INT(REF[53])
(l.1069,c.9) get tok: REF TAG(MACRO)
(l.1069,c.14) get tok: REF TAG(left)
(l.1069,c.15) get tok: STRING(,)
(l.1069,c.21) get tok: REF TAG(right)
(l.1069,c.22) get tok: STRING())
(l.1069,c.23) get tok: STRING(,)
(l.1071,c.2) get tok: CONTROL( )
(l.1078,c.2) get tok: CONTROL(m)
(l.1078,c.17) get tok: REF TAG(forcenewline)
(l.1078,c.18) get tok: STRING(=)
(l.1080,c.0) get tok: STRING(0)
(l.1080,c.2) get tok: CONTROL( )
(l.1093,c.2) get tok: CONTROL(<)
(l.1094,c.2) get tok: CONTROL(!)
(l.1094,c.7) get tok: REF TAG(TOKEN)
(l.1094,c.9) get tok: STRING(=)
(l.1094,c.15) get tok: INT(UNION[311])
(l.1094,c.16) get tok: STRING(()
(l.1094,c.19) get tok: INT(INT[195])
(l.1094,c.20) get tok: STRING(,)
(l.1094,c.22) get tok: STRING([)
(l.1094,c.23) get tok: STRING(])
(l.1094,c.26) get tok: INT(INT[195])
(l.1094,c.27) get tok: STRING(,)
(l.1094,c.35) get tok: REF TAG(CONTROL)
(l.1094,c.36) get tok: STRING(,)
(l.1094,c.43) get tok: INT(STRING[156])
(l.1094,c.44) get tok: STRING(,)
(l.1094,c.49) get tok: INT(VOID[181])
(l.1094,c.50) get tok: STRING(,)
(l.1094,c.54) get tok: INT(REF[53])
(l.1094,c.58) get tok: REF TAG(TAG)
(l.1094,c.59) get tok: STRING())
(l.1094,c.60) get tok: STRING(;)
(l.1096,c.2) get tok: CONTROL(3)
(l.1120,c.2) get tok: CONTROL(<)
(l.1121,c.4) get tok: INT(PROC[69])
(l.1121,c.17) get tok: REF TAG(inccursec)
(l.1121,c.18) get tok: STRING(=)
(l.1121,c.20) get tok: STRING(()
(l.1121,c.23) get tok: INT(INT[195])
(l.1121,c.29) get tok: REF TAG(level)
(l.1121,c.30) get tok: STRING())
(l.1121,c.34) get tok: INT(VOID[181])
(l.1122,c.0) get tok: STRING(:)
(l.1122,c.2) get tok: INT(IF[62])
(l.1122,c.8) get tok: REF TAG(level)
(l.1122,c.10) get tok: STRING(>=)
(l.1122,c.12) get tok: STRING(1)
(l.1122,c.13) get tok: STRING(&)
(l.1122,c.19) get tok: REF TAG(level)
(l.1122,c.21) get tok: STRING(<=)
(l.1123,c.0) get tok: STRING(3)
(l.1123,c.4) get tok: INT(THEN[190])
(l.1124,c.1) get tok: STRING(()
(l.1124,c.5) get tok: REF TAG(sec)
(l.1124,c.7) get tok: INT(OF[97])
(l.1124,c.11) get tok: REF TAG(web)
(l.1124,c.12) get tok: STRING())
(l.1124,c.13) get tok: STRING([)
(l.1124,c.18) get tok: REF TAG(level)
(l.1124,c.19) get tok: STRING(])
(l.1124,c.22) get tok: STRING(+:=)
(l.1124,c.23) get tok: STRING(1)
(l.1124,c.24) get tok: STRING(;)
(l.1125,c.3) get tok: INT(FOR[138])
(l.1125,c.6) get tok: REF TAG(i)
(l.1125,c.10) get tok: INT(FROM[176])
(l.1125,c.16) get tok: REF TAG(level)
(l.1125,c.17) get tok: STRING(+)
(l.1125,c.19) get tok: STRING(1)
(l.1125,c.21) get tok: INT(TO[187])
(l.1125,c.25) get tok: INT(UPB[150])
(l.1125,c.27) get tok: STRING(()
(l.1125,c.31) get tok: REF TAG(sec)
(l.1125,c.33) get tok: INT(OF[97])
(l.1125,c.37) get tok: REF TAG(web)
(l.1125,c.38) get tok: STRING())
(l.1126,c.2) get tok: INT(DO[244])
(l.1127,c.1) get tok: STRING(()
(l.1127,c.5) get tok: REF TAG(sec)
(l.1127,c.7) get tok: INT(OF[97])
(l.1127,c.11) get tok: REF TAG(web)
(l.1127,c.12) get tok: STRING())
(l.1127,c.13) get tok: STRING([)
(l.1127,c.14) get tok: REF TAG(i)
(l.1127,c.15) get tok: STRING(])
(l.1127,c.17) get tok: STRING(:=)
(l.1128,c.0) get tok: STRING(1)
(l.1128,c.2) get tok: INT(OD[231])
(l.1129,c.4) get tok: INT(ELIF[9])
(l.1129,c.10) get tok: REF TAG(level)
(l.1129,c.11) get tok: STRING(=)
(l.1130,c.0) get tok: STRING(4)
(l.1130,c.4) get tok: INT(THEN[190])
(l.1130,c.6) get tok: STRING(()
(l.1130,c.10) get tok: REF TAG(sec)
(l.1130,c.12) get tok: INT(OF[97])
(l.1130,c.16) get tok: REF TAG(web)
(l.1130,c.17) get tok: STRING())
(l.1130,c.18) get tok: STRING([)
(l.1130,c.23) get tok: REF TAG(level)
(l.1130,c.24) get tok: STRING(])
(l.1130,c.27) get tok: STRING(+:=)
(l.1131,c.0) get tok: STRING(1)
(l.1131,c.2) get tok: INT(FI[107])
(l.1131,c.3) get tok: STRING(;)
(l.1133,c.2) get tok: CONTROL( )
(l.1136,c.2) get tok: CONTROL(<)
(l.1137,c.4) get tok: INT(PROC[69])
(l.1137,c.19) get tok: REF TAG(printcursec)
(l.1137,c.20) get tok: STRING(=)
(l.1137,c.25) get tok: INT(VOID[181])
(l.1138,c.0) get tok: STRING(:)
(l.1139,c.0) get tok: REF TAG(printout)
(l.1139,c.1) get tok: STRING(()
(l.1139,c.2) get tok: STRING(()
(l.1139,c.5) get tok: STRING("[")
(l.1139,c.6) get tok: STRING(,)
(l.1140,c.1) get tok: STRING(()
(l.1140,c.6) get tok: REF TAG(fnum)
(l.1140,c.8) get tok: INT(OF[97])
(l.1140,c.12) get tok: REF TAG(web)
(l.1140,c.13) get tok: STRING(>)
(l.1140,c.14) get tok: STRING(0)
(l.1140,c.15) get tok: STRING(|)
(l.1140,c.18) get tok: STRING("I")
(l.1140,c.19) get tok: STRING(+)
(l.1140,c.24) get tok: REF TAG(whole)
(l.1140,c.25) get tok: STRING(()
(l.1140,c.30) get tok: REF TAG(fnum)
(l.1140,c.32) get tok: INT(OF[97])
(l.1140,c.36) get tok: REF TAG(web)
(l.1140,c.37) get tok: STRING(,)
(l.1140,c.38) get tok: STRING(0)
(l.1140,c.39) get tok: STRING())
(l.1140,c.40) get tok: STRING(|)
(l.1140,c.41) get tok: STRING(()
(l.1140,c.45) get tok: REF TAG(sec)
(l.1140,c.47) get tok: INT(OF[97])
(l.1140,c.51) get tok: REF TAG(web)
(l.1140,c.52) get tok: STRING())
(l.1140,c.53) get tok: STRING([)
(l.1140,c.54) get tok: STRING(1)
(l.1140,c.55) get tok: STRING(])
(l.1140,c.56) get tok: STRING())
(l.1140,c.57) get tok: STRING(,)
(l.1141,c.3) get tok: STRING(".")
(l.1141,c.4) get tok: STRING(,)
(l.1141,c.5) get tok: STRING(()
(l.1141,c.9) get tok: REF TAG(sec)
(l.1141,c.11) get tok: INT(OF[97])
(l.1141,c.15) get tok: REF TAG(web)
(l.1141,c.16) get tok: STRING())
(l.1141,c.17) get tok: STRING([)
(l.1141,c.18) get tok: STRING(2)
(l.1141,c.19) get tok: STRING(])
(l.1141,c.20) get tok: STRING(,)
(l.1142,c.3) get tok: STRING(".")
(l.1142,c.4) get tok: STRING(,)
(l.1142,c.5) get tok: STRING(()
(l.1142,c.9) get tok: REF TAG(sec)
(l.1142,c.11) get tok: INT(OF[97])
(l.1142,c.15) get tok: REF TAG(web)
(l.1142,c.16) get tok: STRING())
(l.1142,c.17) get tok: STRING([)
(l.1142,c.18) get tok: STRING(3)
(l.1142,c.19) get tok: STRING(])
(l.1142,c.20) get tok: STRING(,)
(l.1143,c.3) get tok: STRING(".")
(l.1143,c.4) get tok: STRING(,)
(l.1143,c.5) get tok: STRING(()
(l.1143,c.9) get tok: REF TAG(sec)
(l.1143,c.11) get tok: INT(OF[97])
(l.1143,c.15) get tok: REF TAG(web)
(l.1143,c.16) get tok: STRING())
(l.1143,c.17) get tok: STRING([)
(l.1143,c.18) get tok: STRING(4)
(l.1143,c.19) get tok: STRING(])
(l.1143,c.20) get tok: STRING(,)
(l.1144,c.3) get tok: STRING("]")
(l.1144,c.4) get tok: STRING())
(l.1144,c.5) get tok: STRING())
(l.1144,c.6) get tok: STRING(;)
(l.1146,c.2) get tok: CONTROL( )
(l.1153,c.2) get tok: CONTROL(<)
(l.1154,c.4) get tok: INT(PROC[69])
(l.1154,c.15) get tok: REF TAG(maketext)
(l.1154,c.16) get tok: STRING(=)
(l.1154,c.18) get tok: STRING(()
(l.1154,c.19) get tok: STRING([)
(l.1154,c.20) get tok: STRING(])
(l.1154,c.23) get tok: INT(INT[195])
(l.1154,c.31) get tok: REF TAG(cursec)
(l.1154,c.32) get tok: STRING())
(l.1154,c.36) get tok: REF TAG(TEXT)
(l.1155,c.0) get tok: STRING(:)
(l.1155,c.5) get tok: INT(BEGIN[227])
(l.1156,c.1) get tok: STRING([)
(l.1156,c.2) get tok: STRING(4)
(l.1156,c.3) get tok: STRING(])
(l.1156,c.6) get tok: INT(INT[195])
(l.1156,c.9) get tok: REF TAG(cs)
(l.1156,c.11) get tok: STRING(:=)
(l.1156,c.18) get tok: REF TAG(cursec)
(l.1156,c.19) get tok: STRING(;)
(l.1157,c.2) get tok: INT(IF[62])
(l.1157,c.8) get tok: REF TAG(next)
(l.1157,c.10) get tok: INT(OF[97])
(l.1157,c.15) get tok: REF TAG(web)
(l.1157,c.19) get tok: INT(ISNT[84])
(l.1158,c.0) get tok: REF TAG(nostream)
(l.1158,c.4) get tok: INT(THEN[190])
(l.1158,c.7) get tok: REF TAG(cs)
(l.1158,c.8) get tok: STRING([)
(l.1158,c.9) get tok: STRING(1)
(l.1158,c.10) get tok: STRING(])
(l.1158,c.13) get tok: STRING(:=-)
(l.1158,c.18) get tok: REF TAG(fnum)
(l.1158,c.20) get tok: INT(OF[97])
(l.1159,c.0) get tok: REF TAG(web)
(l.1159,c.2) get tok: INT(FI[107])
(l.1159,c.3) get tok: STRING(;)
(l.1160,c.4) get tok: REF TAG(TEXT)
(l.1160,c.5) get tok: STRING(()
(l.1160,c.7) get tok: REF TAG(cs)
(l.1160,c.8) get tok: STRING(,)
(l.1160,c.15) get tok: REF TAG(notext)
(l.1160,c.16) get tok: STRING())
(l.1161,c.3) get tok: INT(END[202])
(l.1161,c.4) get tok: STRING(;)
(l.1163,c.2) get tok: CONTROL( )
(l.1165,c.2) get tok: CONTROL(<)
(l.1166,c.3) get tok: INT(REF[53])
(l.1166,c.9) get tok: REF TAG(MACRO)
(l.1166,c.17) get tok: REF TAG(nomac)
(l.1166,c.18) get tok: STRING(=)
(l.1166,c.22) get tok: INT(NIL[180])
(l.1166,c.23) get tok: STRING(;)
(l.1167,c.3) get tok: INT(REF[53])
(l.1167,c.10) get tok: REF TAG(MODULE)
(l.1167,c.18) get tok: REF TAG(nomod)
(l.1167,c.19) get tok: STRING(=)
(l.1167,c.23) get tok: INT(NIL[180])
(l.1167,c.24) get tok: STRING(;)
(l.1168,c.3) get tok: INT(REF[53])
(l.1168,c.10) get tok: REF TAG(WPARAM)
(l.1168,c.21) get tok: REF TAG(nowparam)
(l.1168,c.22) get tok: STRING(=)
(l.1168,c.26) get tok: INT(NIL[180])
(l.1168,c.27) get tok: STRING(;)
(l.1169,c.3) get tok: INT(REF[53])
(l.1169,c.7) get tok: REF TAG(TAG)
(l.1169,c.15) get tok: REF TAG(notag)
(l.1169,c.16) get tok: STRING(=)
(l.1169,c.20) get tok: INT(NIL[180])
(l.1169,c.21) get tok: STRING(;)
(l.1170,c.3) get tok: INT(REF[53])
(l.1170,c.8) get tok: REF TAG(TEXT)
(l.1170,c.17) get tok: REF TAG(notext)
(l.1170,c.18) get tok: STRING(=)
(l.1170,c.22) get tok: INT(NIL[180])
(l.1170,c.23) get tok: STRING(;)
(l.1172,c.2) get tok: CONTROL( )
(l.1180,c.2) get tok: CONTROL(<)
(l.1181,c.3) get tok: INT(REF[53])
(l.1181,c.9) get tok: REF TAG(MACRO)
(l.1181,c.20) get tok: REF TAG(macroroot)
(l.1181,c.22) get tok: STRING(:=)
(l.1181,c.28) get tok: REF TAG(nomac)
(l.1181,c.29) get tok: STRING(;)
(l.1182,c.3) get tok: INT(REF[53])
(l.1182,c.10) get tok: REF TAG(MODULE)
(l.1182,c.22) get tok: REF TAG(moduleroot)
(l.1182,c.24) get tok: STRING(:=)
(l.1182,c.30) get tok: REF TAG(nomod)
(l.1182,c.31) get tok: STRING(;)
(l.1183,c.1) get tok: STRING([)
(l.1183,c.2) get tok: STRING(0)
(l.1183,c.3) get tok: STRING(:)
(l.1183,c.5) get tok: STRING(15)
(l.1183,c.6) get tok: STRING(])
(l.1183,c.9) get tok: INT(REF[53])
(l.1183,c.13) get tok: REF TAG(TAG)
(l.1183,c.22) get tok: REF TAG(tagroot)
(l.1183,c.23) get tok: STRING(;)
(l.1185,c.3) get tok: INT(FOR[138])
(l.1185,c.6) get tok: REF TAG(i)
(l.1185,c.10) get tok: INT(FROM[176])
(l.1185,c.14) get tok: INT(LWB[148])
(l.1185,c.24) get tok: REF TAG(tagroot)
(l.1185,c.26) get tok: INT(TO[187])
(l.1185,c.30) get tok: INT(UPB[150])
(l.1186,c.0) get tok: REF TAG(tagroot)
(l.1186,c.2) get tok: INT(DO[244])
(l.1187,c.8) get tok: REF TAG(tagroot)
(l.1187,c.9) get tok: STRING([)
(l.1187,c.10) get tok: REF TAG(i)
(l.1187,c.11) get tok: STRING(])
(l.1187,c.13) get tok: STRING(:=)
(l.1188,c.0) get tok: REF TAG(notag)
(l.1188,c.2) get tok: INT(OD[231])
(l.1188,c.3) get tok: STRING(;)
(l.1190,c.2) get tok: CONTROL( )
(l.1217,c.2) get tok: CONTROL(m)
(l.1217,c.9) get tok: REF TAG(badd)
(l.1217,c.10) get tok: STRING(=)
(l.1217,c.15) get tok: INT(TRUE[64])
(l.1218,c.2) get tok: CONTROL(m)
(l.1218,c.12) get tok: REF TAG(bprefix)
(l.1218,c.13) get tok: STRING(=)
(l.1218,c.18) get tok: INT(TRUE[64])
(l.1219,c.2) get tok: CONTROL(f)
(l.1220,c.2) get tok: CONTROL(f)
(l.1222,c.2) get tok: CONTROL( )
(l.1225,c.2) get tok: CONTROL(<)
(l.1226,c.4) get tok: INT(PROC[69])
(l.1226,c.20) get tok: REF TAG(addmoduletag)
(l.1226,c.21) get tok: STRING(=)
(l.1226,c.23) get tok: STRING(()
(l.1226,c.26) get tok: INT(REF[53])
(l.1226,c.30) get tok: INT(REF[53])
(l.1226,c.37) get tok: REF TAG(MODULE)
(l.1226,c.42) get tok: REF TAG(root)
(l.1226,c.43) get tok: STRING(,)
(l.1227,c.6) get tok: INT(STRING[156])
(l.1227,c.9) get tok: CONTROL(!)
(l.1227,c.10) get tok: REF TAG(s)
(l.1227,c.11) get tok: STRING(,)
(l.1228,c.4) get tok: INT(BOOL[184])
(l.1228,c.11) get tok: REF TAG(adding)
(l.1228,c.12) get tok: STRING(,)
(l.1228,c.19) get tok: REF TAG(prefix)
(l.1228,c.20) get tok: STRING())
(l.1228,c.23) get tok: INT(REF[53])
(l.1228,c.30) get tok: REF TAG(MODULE)
(l.1229,c.0) get tok: STRING(:)
(l.1229,c.2) get tok: INT(IF[62])
(l.1229,c.8) get tok: REF TAG(root)
(l.1229,c.10) get tok: INT(IS[82])
(l.1230,c.0) get tok: REF TAG(nomod)
(l.1230,c.4) get tok: INT(THEN[190])
(l.1231,c.2) get tok: INT(IF[62])
(l.1231,c.10) get tok: REF TAG(prefix)
(l.1231,c.14) get tok: INT(THEN[190])
(l.1232,c.0) get tok: REF TAG(nomod)
(l.1232,c.4) get tok: INT(ELIF[9])
(l.1233,c.0) get tok: REF TAG(adding)
(l.1233,c.4) get tok: INT(THEN[190])
(l.1234,c.4) get tok: REF TAG(root)
(l.1234,c.6) get tok: STRING(:=)
(l.1234,c.10) get tok: INT(HEAP[48])
(l.1234,c.17) get tok: REF TAG(MODULE)
(l.1234,c.19) get tok: STRING(:=)
(l.1234,c.20) get tok: STRING(()
(l.1234,c.21) get tok: REF TAG(s)
(l.1234,c.22) get tok: STRING(,)
(l.1235,c.4) get tok: INT(HEAP[48])
(l.1235,c.8) get tok: INT(REF[53])
(l.1235,c.13) get tok: REF TAG(TEXT)
(l.1235,c.15) get tok: STRING(:=)
(l.1235,c.22) get tok: REF TAG(notext)
(l.1235,c.23) get tok: STRING(,)
(l.1236,c.4) get tok: INT(HEAP[48])
(l.1236,c.8) get tok: INT(REF[53])
(l.1236,c.13) get tok: REF TAG(TEXT)
(l.1236,c.15) get tok: STRING(:=)
(l.1236,c.22) get tok: REF TAG(notext)
(l.1236,c.23) get tok: STRING(,)
(l.1237,c.6) get tok: REF TAG(nomod)
(l.1237,c.7) get tok: STRING(,)
(l.1237,c.14) get tok: REF TAG(nomod)
(l.1237,c.15) get tok: STRING())
(l.1237,c.16) get tok: STRING(;)
(l.1238,c.9) get tok: REF TAG(textend)
(l.1238,c.11) get tok: INT(OF[97])
(l.1238,c.16) get tok: REF TAG(root)
(l.1238,c.18) get tok: STRING(:=)
(l.1238,c.27) get tok: REF TAG(textbeg)
(l.1238,c.29) get tok: INT(OF[97])
(l.1238,c.34) get tok: REF TAG(root)
(l.1238,c.35) get tok: STRING(;)
(l.1240,c.0) get tok: REF TAG(root)
(l.1240,c.4) get tok: INT(ELSE[4])
(l.1240,c.12) get tok: REF TAG(nomod)
(l.1241,c.2) get tok: INT(FI[107])
(l.1242,c.4) get tok: INT(ELIF[9])
(l.1242,c.8) get tok: INT(UPB[150])
(l.1242,c.11) get tok: REF TAG(s)
(l.1242,c.12) get tok: STRING(>)
(l.1242,c.16) get tok: INT(UPB[150])
(l.1242,c.20) get tok: REF TAG(id)
(l.1242,c.22) get tok: INT(OF[97])
(l.1243,c.0) get tok: REF TAG(root)
(l.1243,c.4) get tok: INT(THEN[190])
(l.1244,c.2) get tok: INT(IF[62])
(l.1244,c.5) get tok: REF TAG(s)
(l.1244,c.6) get tok: STRING(<)
(l.1244,c.10) get tok: REF TAG(id)
(l.1244,c.12) get tok: INT(OF[97])
(l.1245,c.0) get tok: REF TAG(root)
(l.1245,c.4) get tok: INT(THEN[190])
(l.1245,c.19) get tok: REF TAG(addmoduletag)
(l.1245,c.20) get tok: STRING(()
(l.1245,c.25) get tok: REF TAG(left)
(l.1245,c.27) get tok: INT(OF[97])
(l.1245,c.32) get tok: REF TAG(root)
(l.1245,c.33) get tok: STRING(,)
(l.1245,c.34) get tok: REF TAG(s)
(l.1245,c.35) get tok: STRING(,)
(l.1245,c.41) get tok: REF TAG(adding)
(l.1245,c.42) get tok: STRING(,)
(l.1245,c.48) get tok: REF TAG(prefix)
(l.1245,c.49) get tok: STRING())
(l.1246,c.4) get tok: INT(ELSE[4])
(l.1246,c.19) get tok: REF TAG(addmoduletag)
(l.1246,c.20) get tok: STRING(()
(l.1246,c.26) get tok: REF TAG(right)
(l.1246,c.28) get tok: INT(OF[97])
(l.1246,c.33) get tok: REF TAG(root)
(l.1246,c.34) get tok: STRING(,)
(l.1246,c.35) get tok: REF TAG(s)
(l.1246,c.36) get tok: STRING(,)
(l.1246,c.42) get tok: REF TAG(adding)
(l.1246,c.43) get tok: STRING(,)
(l.1246,c.49) get tok: REF TAG(prefix)
(l.1246,c.50) get tok: STRING())
(l.1247,c.2) get tok: INT(FI[107])
(l.1248,c.4) get tok: INT(ELIF[9])
(l.1249,c.0) get tok: REF TAG(prefix)
(l.1249,c.4) get tok: INT(THEN[190])
(l.1250,c.2) get tok: INT(IF[62])
(l.1250,c.9) get tok: INT(STRING[156])
(l.1250,c.15) get tok: REF TAG(pref)
(l.1250,c.16) get tok: STRING(=)
(l.1250,c.18) get tok: STRING(()
(l.1250,c.21) get tok: REF TAG(id)
(l.1250,c.23) get tok: INT(OF[97])
(l.1250,c.28) get tok: REF TAG(root)
(l.1250,c.29) get tok: STRING())
(l.1250,c.30) get tok: STRING([)
(l.1250,c.31) get tok: STRING(:)
(l.1250,c.34) get tok: INT(UPB[150])
(l.1250,c.36) get tok: REF TAG(s)
(l.1250,c.37) get tok: STRING(])
(l.1250,c.38) get tok: STRING(;)
(l.1250,c.40) get tok: REF TAG(s)
(l.1250,c.41) get tok: STRING(=)
(l.1251,c.0) get tok: REF TAG(pref)
(l.1251,c.4) get tok: INT(THEN[190])
(l.1252,c.2) get tok: INT(IF[62])
(l.1252,c.4) get tok: STRING(()
(l.1252,c.18) get tok: REF TAG(addmoduletag)
(l.1252,c.19) get tok: STRING(()
(l.1252,c.24) get tok: REF TAG(left)
(l.1252,c.26) get tok: INT(OF[97])
(l.1252,c.31) get tok: REF TAG(root)
(l.1252,c.32) get tok: STRING(,)
(l.1252,c.33) get tok: REF TAG(s)
(l.1252,c.34) get tok: STRING(,)
(l.1252,c.37) get tok: INT(NOT[230])
(l.1252,c.43) get tok: REF TAG(badd)
(l.1252,c.44) get tok: STRING(,)
(l.1252,c.50) get tok: REF TAG(prefix)
(l.1252,c.51) get tok: STRING())
(l.1252,c.54) get tok: INT(IS[82])
(l.1252,c.61) get tok: REF TAG(nomod)
(l.1252,c.62) get tok: STRING())
(l.1253,c.3) get tok: INT(AND[315])
(l.1254,c.1) get tok: STRING(()
(l.1254,c.15) get tok: REF TAG(addmoduletag)
(l.1254,c.16) get tok: STRING(()
(l.1254,c.22) get tok: REF TAG(right)
(l.1254,c.24) get tok: INT(OF[97])
(l.1254,c.29) get tok: REF TAG(root)
(l.1254,c.30) get tok: STRING(,)
(l.1254,c.31) get tok: REF TAG(s)
(l.1254,c.32) get tok: STRING(,)
(l.1254,c.35) get tok: INT(NOT[230])
(l.1254,c.41) get tok: REF TAG(badd)
(l.1254,c.42) get tok: STRING(,)
(l.1254,c.48) get tok: REF TAG(prefix)
(l.1254,c.49) get tok: STRING())
(l.1254,c.52) get tok: INT(IS[82])
(l.1254,c.59) get tok: REF TAG(nomod)
(l.1254,c.60) get tok: STRING())
(l.1255,c.4) get tok: INT(THEN[190])
(l.1255,c.11) get tok: REF TAG(root)
(l.1256,c.4) get tok: INT(ELSE[4])
(l.1256,c.12) get tok: REF TAG(nomod)
(l.1257,c.2) get tok: INT(FI[107])
(l.1258,c.4) get tok: INT(ELIF[9])
(l.1258,c.7) get tok: REF TAG(s)
(l.1258,c.8) get tok: STRING(<)
(l.1259,c.0) get tok: REF TAG(pref)
(l.1259,c.4) get tok: INT(THEN[190])
(l.1259,c.19) get tok: REF TAG(addmoduletag)
(l.1259,c.20) get tok: STRING(()
(l.1259,c.25) get tok: REF TAG(left)
(l.1259,c.27) get tok: INT(OF[97])
(l.1259,c.32) get tok: REF TAG(root)
(l.1259,c.33) get tok: STRING(,)
(l.1259,c.34) get tok: REF TAG(s)
(l.1259,c.35) get tok: STRING(,)
(l.1259,c.41) get tok: REF TAG(adding)
(l.1259,c.42) get tok: STRING(,)
(l.1259,c.48) get tok: REF TAG(prefix)
(l.1259,c.49) get tok: STRING())
(l.1260,c.4) get tok: INT(ELSE[4])
(l.1260,c.19) get tok: REF TAG(addmoduletag)
(l.1260,c.20) get tok: STRING(()
(l.1260,c.26) get tok: REF TAG(right)
(l.1260,c.28) get tok: INT(OF[97])
(l.1260,c.33) get tok: REF TAG(root)
(l.1260,c.34) get tok: STRING(,)
(l.1260,c.35) get tok: REF TAG(s)
(l.1260,c.36) get tok: STRING(,)
(l.1260,c.42) get tok: REF TAG(adding)
(l.1260,c.43) get tok: STRING(,)
(l.1260,c.49) get tok: REF TAG(prefix)
(l.1260,c.50) get tok: STRING())
(l.1261,c.2) get tok: INT(FI[107])
(l.1262,c.4) get tok: INT(ELIF[9])
(l.1262,c.6) get tok: REF TAG(s)
(l.1262,c.7) get tok: STRING(=)
(l.1262,c.10) get tok: REF TAG(id)
(l.1262,c.12) get tok: INT(OF[97])
(l.1263,c.0) get tok: REF TAG(root)
(l.1263,c.4) get tok: INT(THEN[190])
(l.1264,c.0) get tok: REF TAG(root)
(l.1264,c.4) get tok: INT(ELIF[9])
(l.1264,c.7) get tok: REF TAG(s)
(l.1264,c.8) get tok: STRING(<)
(l.1264,c.12) get tok: REF TAG(id)
(l.1264,c.14) get tok: INT(OF[97])
(l.1265,c.0) get tok: REF TAG(root)
(l.1265,c.4) get tok: INT(THEN[190])
(l.1265,c.19) get tok: REF TAG(addmoduletag)
(l.1265,c.20) get tok: STRING(()
(l.1265,c.25) get tok: REF TAG(left)
(l.1265,c.27) get tok: INT(OF[97])
(l.1265,c.32) get tok: REF TAG(root)
(l.1265,c.33) get tok: STRING(,)
(l.1265,c.34) get tok: REF TAG(s)
(l.1265,c.35) get tok: STRING(,)
(l.1265,c.41) get tok: REF TAG(adding)
(l.1265,c.42) get tok: STRING(,)
(l.1265,c.48) get tok: REF TAG(prefix)
(l.1265,c.49) get tok: STRING())
(l.1266,c.4) get tok: INT(ELSE[4])
(l.1266,c.19) get tok: REF TAG(addmoduletag)
(l.1266,c.20) get tok: STRING(()
(l.1266,c.26) get tok: REF TAG(right)
(l.1266,c.28) get tok: INT(OF[97])
(l.1266,c.33) get tok: REF TAG(root)
(l.1266,c.34) get tok: STRING(,)
(l.1266,c.35) get tok: REF TAG(s)
(l.1266,c.36) get tok: STRING(,)
(l.1266,c.42) get tok: REF TAG(adding)
(l.1266,c.43) get tok: STRING(,)
(l.1266,c.49) get tok: REF TAG(prefix)
(l.1266,c.50) get tok: STRING())
(l.1267,c.2) get tok: INT(FI[107])
(l.1267,c.3) get tok: STRING(;)
(l.1269,c.2) get tok: CONTROL( )
(l.1271,c.2) get tok: CONTROL(<)
(l.1272,c.4) get tok: INT(PROC[69])
(l.1272,c.12) get tok: REF TAG(addtag)
(l.1272,c.13) get tok: STRING(=)
(l.1272,c.14) get tok: STRING(()
(l.1272,c.17) get tok: INT(REF[53])
(l.1272,c.18) get tok: STRING([)
(l.1272,c.19) get tok: STRING(])
(l.1272,c.22) get tok: INT(REF[53])
(l.1272,c.26) get tok: REF TAG(TAG)
(l.1272,c.31) get tok: REF TAG(root)
(l.1272,c.32) get tok: STRING(,)
(l.1272,c.36) get tok: INT(REF[53])
(l.1272,c.40) get tok: REF TAG(TAG)
(l.1272,c.44) get tok: REF TAG(tag)
(l.1272,c.45) get tok: STRING())
(l.1272,c.48) get tok: INT(REF[53])
(l.1272,c.52) get tok: REF TAG(TAG)
(l.1273,c.0) get tok: STRING(:)
(l.1273,c.5) get tok: INT(BEGIN[227])
(l.1274,c.2) get tok: INT(OP[87])
(l.1274,c.7) get tok: REF TAG(HASH)
(l.1274,c.9) get tok: STRING(=)
(l.1274,c.11) get tok: STRING(()
(l.1274,c.17) get tok: INT(STRING[156])
(l.1274,c.19) get tok: REF TAG(s)
(l.1274,c.20) get tok: STRING())
(l.1274,c.23) get tok: INT(INT[195])
(l.1275,c.0) get tok: STRING(:)
(l.1275,c.1) get tok: STRING(()
(l.1275,c.4) get tok: INT(ABS[226])
(l.1275,c.6) get tok: REF TAG(s)
(l.1275,c.7) get tok: STRING([)
(l.1275,c.10) get tok: INT(LWB[148])
(l.1275,c.12) get tok: REF TAG(s)
(l.1275,c.13) get tok: STRING(])
(l.1275,c.14) get tok: STRING(+)
(l.1275,c.15) get tok: STRING(2)
(l.1275,c.16) get tok: STRING(*)
(l.1275,c.19) get tok: INT(ABS[226])
(l.1275,c.21) get tok: REF TAG(s)
(l.1275,c.22) get tok: STRING([)
(l.1275,c.25) get tok: INT(UPB[150])
(l.1275,c.27) get tok: REF TAG(s)
(l.1275,c.28) get tok: STRING(])
(l.1275,c.29) get tok: STRING())
(l.1275,c.33) get tok: INT(MOD[282])
(l.1275,c.35) get tok: STRING(()
(l.1275,c.36) get tok: STRING(1)
(l.1275,c.37) get tok: STRING(+)
(l.1275,c.40) get tok: INT(UPB[150])
(l.1275,c.49) get tok: REF TAG(tagroot)
(l.1275,c.50) get tok: STRING())
(l.1275,c.51) get tok: STRING(;)
(l.1276,c.4) get tok: INT(PROC[69])
(l.1276,c.16) get tok: REF TAG(locaddtag)
(l.1276,c.17) get tok: STRING(=)
(l.1276,c.18) get tok: STRING(()
(l.1276,c.21) get tok: INT(REF[53])
(l.1276,c.25) get tok: INT(REF[53])
(l.1276,c.29) get tok: REF TAG(TAG)
(l.1276,c.31) get tok: REF TAG(r)
(l.1276,c.32) get tok: STRING(,)
(l.1276,c.35) get tok: INT(REF[53])
(l.1276,c.39) get tok: REF TAG(TAG)
(l.1276,c.41) get tok: REF TAG(t)
(l.1276,c.42) get tok: STRING())
(l.1276,c.45) get tok: INT(REF[53])
(l.1276,c.49) get tok: REF TAG(TAG)
(l.1277,c.0) get tok: STRING(:)
(l.1277,c.2) get tok: INT(IF[62])
(l.1277,c.5) get tok: REF TAG(r)
(l.1277,c.7) get tok: INT(IS[82])
(l.1278,c.0) get tok: REF TAG(notag)
(l.1278,c.4) get tok: INT(THEN[190])
(l.1278,c.6) get tok: REF TAG(r)
(l.1278,c.8) get tok: STRING(:=)
(l.1279,c.0) get tok: REF TAG(t)
(l.1279,c.4) get tok: INT(ELIF[9])
(l.1279,c.7) get tok: REF TAG(s)
(l.1279,c.9) get tok: INT(OF[97])
(l.1279,c.12) get tok: REF TAG(t)
(l.1279,c.13) get tok: STRING(=)
(l.1279,c.16) get tok: REF TAG(s)
(l.1279,c.18) get tok: INT(OF[97])
(l.1280,c.0) get tok: REF TAG(r)
(l.1280,c.4) get tok: INT(THEN[190])
(l.1281,c.0) get tok: REF TAG(r)
(l.1281,c.4) get tok: INT(ELIF[9])
(l.1281,c.7) get tok: REF TAG(s)
(l.1281,c.9) get tok: INT(OF[97])
(l.1281,c.12) get tok: REF TAG(t)
(l.1281,c.13) get tok: STRING(<)
(l.1281,c.16) get tok: REF TAG(s)
(l.1281,c.18) get tok: INT(OF[97])
(l.1282,c.0) get tok: REF TAG(r)
(l.1282,c.4) get tok: INT(THEN[190])
(l.1282,c.16) get tok: REF TAG(locaddtag)
(l.1282,c.17) get tok: STRING(()
(l.1282,c.22) get tok: REF TAG(left)
(l.1282,c.24) get tok: INT(OF[97])
(l.1282,c.26) get tok: REF TAG(r)
(l.1282,c.27) get tok: STRING(,)
(l.1282,c.29) get tok: REF TAG(t)
(l.1282,c.30) get tok: STRING())
(l.1283,c.4) get tok: INT(ELSE[4])
(l.1283,c.16) get tok: REF TAG(locaddtag)
(l.1283,c.17) get tok: STRING(()
(l.1283,c.23) get tok: REF TAG(right)
(l.1283,c.25) get tok: INT(OF[97])
(l.1283,c.27) get tok: REF TAG(r)
(l.1283,c.28) get tok: STRING(,)
(l.1283,c.30) get tok: REF TAG(t)
(l.1283,c.31) get tok: STRING())
(l.1284,c.2) get tok: INT(FI[107])
(l.1284,c.3) get tok: STRING(;)
(l.1285,c.11) get tok: REF TAG(locaddtag)
(l.1285,c.12) get tok: STRING(()
(l.1285,c.16) get tok: REF TAG(root)
(l.1285,c.17) get tok: STRING([)
(l.1285,c.21) get tok: REF TAG(HASH)
(l.1285,c.24) get tok: REF TAG(s)
(l.1285,c.26) get tok: INT(OF[97])
(l.1285,c.30) get tok: REF TAG(tag)
(l.1285,c.31) get tok: STRING(])
(l.1285,c.32) get tok: STRING(,)
(l.1285,c.35) get tok: REF TAG(tag)
(l.1285,c.36) get tok: STRING())
(l.1286,c.3) get tok: INT(END[202])
(l.1286,c.4) get tok: STRING(;)
(l.1288,c.2) get tok: CONTROL( )
(l.1296,c.2) get tok: CONTROL(<)
(l.1297,c.4) get tok: INT(PROC[69])
(l.1297,c.18) get tok: REF TAG(addmacroid)
(l.1297,c.19) get tok: STRING(=)
(l.1297,c.21) get tok: STRING(()
(l.1297,c.24) get tok: INT(REF[53])
(l.1297,c.28) get tok: INT(REF[53])
(l.1297,c.34) get tok: REF TAG(MACRO)
(l.1297,c.39) get tok: REF TAG(root)
(l.1297,c.40) get tok: STRING(,)
(l.1297,c.44) get tok: INT(REF[53])
(l.1297,c.48) get tok: REF TAG(TAG)
(l.1297,c.52) get tok: REF TAG(tag)
(l.1297,c.53) get tok: STRING(,)
(l.1297,c.58) get tok: INT(BOOL[184])
(l.1297,c.63) get tok: REF TAG(once)
(l.1297,c.64) get tok: STRING())
(l.1297,c.67) get tok: INT(REF[53])
(l.1297,c.73) get tok: REF TAG(MACRO)
(l.1298,c.0) get tok: STRING(:)
(l.1298,c.2) get tok: INT(IF[62])
(l.1298,c.8) get tok: REF TAG(root)
(l.1298,c.10) get tok: INT(IS[82])
(l.1299,c.0) get tok: REF TAG(nomac)
(l.1299,c.4) get tok: INT(THEN[190])
(l.1300,c.4) get tok: REF TAG(root)
(l.1300,c.6) get tok: STRING(:=)
(l.1300,c.10) get tok: INT(HEAP[48])
(l.1300,c.16) get tok: REF TAG(MACRO)
(l.1300,c.18) get tok: STRING(:=)
(l.1300,c.19) get tok: STRING(()
(l.1300,c.22) get tok: REF TAG(tag)
(l.1300,c.23) get tok: STRING(,)
(l.1300,c.26) get tok: INT(BIN[275])
(l.1300,c.30) get tok: INT(ABS[226])
(l.1300,c.36) get tok: REF TAG(once)
(l.1300,c.37) get tok: STRING(,)
(l.1300,c.47) get tok: REF TAG(nowparam)
(l.1300,c.48) get tok: STRING(,)
(l.1301,c.4) get tok: INT(HEAP[48])
(l.1301,c.8) get tok: INT(REF[53])
(l.1301,c.13) get tok: REF TAG(TEXT)
(l.1301,c.15) get tok: STRING(:=)
(l.1301,c.22) get tok: REF TAG(notext)
(l.1301,c.23) get tok: STRING(,)
(l.1302,c.4) get tok: INT(HEAP[48])
(l.1302,c.8) get tok: INT(REF[53])
(l.1302,c.13) get tok: REF TAG(TEXT)
(l.1302,c.15) get tok: STRING(:=)
(l.1302,c.22) get tok: REF TAG(notext)
(l.1302,c.23) get tok: STRING(,)
(l.1303,c.6) get tok: REF TAG(nomac)
(l.1303,c.7) get tok: STRING(,)
(l.1303,c.14) get tok: REF TAG(nomac)
(l.1303,c.15) get tok: STRING())
(l.1303,c.16) get tok: STRING(;)
(l.1304,c.9) get tok: REF TAG(textend)
(l.1304,c.11) get tok: INT(OF[97])
(l.1304,c.16) get tok: REF TAG(root)
(l.1304,c.18) get tok: STRING(:=)
(l.1304,c.27) get tok: REF TAG(textbeg)
(l.1304,c.29) get tok: INT(OF[97])
(l.1304,c.34) get tok: REF TAG(root)
(l.1304,c.35) get tok: STRING(;)
(l.1306,c.0) get tok: REF TAG(root)
(l.1306,c.4) get tok: INT(ELIF[9])
(l.1306,c.7) get tok: REF TAG(s)
(l.1306,c.9) get tok: INT(OF[97])
(l.1306,c.14) get tok: REF TAG(tag)
(l.1306,c.15) get tok: STRING(=)
(l.1306,c.18) get tok: REF TAG(s)
(l.1306,c.20) get tok: INT(OF[97])
(l.1306,c.24) get tok: REF TAG(id)
(l.1306,c.26) get tok: INT(OF[97])
(l.1307,c.0) get tok: REF TAG(root)
(l.1307,c.4) get tok: INT(THEN[190])
(l.1308,c.0) get tok: REF TAG(nomac)
(l.1308,c.4) get tok: INT(ELIF[9])
(l.1308,c.7) get tok: REF TAG(s)
(l.1308,c.9) get tok: INT(OF[97])
(l.1308,c.14) get tok: REF TAG(tag)
(l.1308,c.15) get tok: STRING(<)
(l.1308,c.18) get tok: REF TAG(s)
(l.1308,c.20) get tok: INT(OF[97])
(l.1308,c.24) get tok: REF TAG(id)
(l.1308,c.26) get tok: INT(OF[97])
(l.1309,c.0) get tok: REF TAG(root)
(l.1309,c.4) get tok: INT(THEN[190])
(l.1309,c.17) get tok: REF TAG(addmacroid)
(l.1309,c.18) get tok: STRING(()
(l.1309,c.23) get tok: REF TAG(left)
(l.1309,c.25) get tok: INT(OF[97])
(l.1309,c.30) get tok: REF TAG(root)
(l.1309,c.31) get tok: STRING(,)
(l.1309,c.35) get tok: REF TAG(tag)
(l.1309,c.36) get tok: STRING(,)
(l.1309,c.41) get tok: REF TAG(once)
(l.1309,c.42) get tok: STRING())
(l.1310,c.4) get tok: INT(ELSE[4])
(l.1310,c.17) get tok: REF TAG(addmacroid)
(l.1310,c.18) get tok: STRING(()
(l.1310,c.24) get tok: REF TAG(right)
(l.1310,c.26) get tok: INT(OF[97])
(l.1310,c.31) get tok: REF TAG(root)
(l.1310,c.32) get tok: STRING(,)
(l.1310,c.36) get tok: REF TAG(tag)
(l.1310,c.37) get tok: STRING(,)
(l.1310,c.42) get tok: REF TAG(once)
(l.1310,c.43) get tok: STRING())
(l.1311,c.2) get tok: INT(FI[107])
(l.1311,c.3) get tok: STRING(;)
(l.1313,c.2) get tok: CONTROL( )
(l.1317,c.2) get tok: CONTROL(<)
(l.1318,c.4) get tok: INT(BOOL[184])
(l.1318,c.18) get tok: REF TAG(oneoffmacro)
(l.1318,c.20) get tok: STRING(:=)
(l.1318,c.25) get tok: INT(FALSE[123])
(l.1318,c.26) get tok: STRING(;)
(l.1320,c.2) get tok: CONTROL( )
(l.1323,c.2) get tok: CONTROL(<)
(l.1324,c.4) get tok: INT(PROC[69])
(l.1324,c.18) get tok: REF TAG(addmacropar)
(l.1324,c.19) get tok: STRING(=)
(l.1324,c.20) get tok: STRING(()
(l.1324,c.23) get tok: INT(REF[53])
(l.1324,c.29) get tok: REF TAG(MACRO)
(l.1324,c.32) get tok: REF TAG(rm)
(l.1324,c.33) get tok: STRING(,)
(l.1324,c.37) get tok: INT(REF[53])
(l.1324,c.41) get tok: REF TAG(TAG)
(l.1324,c.45) get tok: REF TAG(par)
(l.1324,c.46) get tok: STRING())
(l.1324,c.50) get tok: INT(BOOL[184])
(l.1325,c.0) get tok: STRING(:)
(l.1325,c.2) get tok: INT(IF[62])
(l.1325,c.9) get tok: REF TAG(param)
(l.1325,c.11) get tok: INT(OF[97])
(l.1325,c.15) get tok: REF TAG(rm)
(l.1325,c.17) get tok: INT(IS[82])
(l.1326,c.0) get tok: REF TAG(nowparam)
(l.1326,c.4) get tok: INT(THEN[190])
(l.1326,c.11) get tok: REF TAG(param)
(l.1326,c.13) get tok: INT(OF[97])
(l.1326,c.16) get tok: REF TAG(rm)
(l.1326,c.18) get tok: STRING(:=)
(l.1326,c.22) get tok: INT(HEAP[48])
(l.1326,c.29) get tok: REF TAG(WPARAM)
(l.1326,c.31) get tok: STRING(:=)
(l.1326,c.32) get tok: STRING(()
(l.1326,c.35) get tok: REF TAG(par)
(l.1326,c.36) get tok: STRING(,)
(l.1326,c.46) get tok: REF TAG(nowparam)
(l.1326,c.47) get tok: STRING())
(l.1326,c.48) get tok: STRING(;)
(l.1327,c.4) get tok: INT(TRUE[64])
(l.1328,c.4) get tok: INT(ELIF[9])
(l.1329,c.3) get tok: INT(REF[53])
(l.1329,c.7) get tok: INT(REF[53])
(l.1329,c.14) get tok: REF TAG(WPARAM)
(l.1329,c.22) get tok: REF TAG(locpar)
(l.1329,c.24) get tok: STRING(:=)
(l.1329,c.30) get tok: REF TAG(param)
(l.1329,c.32) get tok: INT(OF[97])
(l.1329,c.35) get tok: REF TAG(rm)
(l.1329,c.36) get tok: STRING(;)
(l.1330,c.5) get tok: INT(WHILE[99])
(l.1331,c.2) get tok: INT(IF[62])
(l.1331,c.11) get tok: REF TAG(locpar)
(l.1331,c.15) get tok: INT(ISNT[84])
(l.1332,c.0) get tok: REF TAG(nowparam)
(l.1332,c.4) get tok: INT(THEN[190])
(l.1332,c.7) get tok: REF TAG(s)
(l.1332,c.9) get tok: INT(OF[97])
(l.1332,c.14) get tok: REF TAG(par)
(l.1332,c.16) get tok: STRING(/=)
(l.1332,c.19) get tok: REF TAG(s)
(l.1332,c.21) get tok: INT(OF[97])
(l.1332,c.26) get tok: REF TAG(par)
(l.1332,c.28) get tok: INT(OF[97])
(l.1333,c.0) get tok: REF TAG(locpar)
(l.1333,c.4) get tok: INT(ELSE[4])
(l.1333,c.10) get tok: INT(FALSE[123])
(l.1334,c.2) get tok: INT(FI[107])
(l.1335,c.2) get tok: INT(DO[244])
(l.1336,c.7) get tok: REF TAG(locpar)
(l.1336,c.9) get tok: STRING(:=)
(l.1336,c.14) get tok: REF TAG(next)
(l.1336,c.16) get tok: INT(OF[97])
(l.1337,c.0) get tok: REF TAG(locpar)
(l.1337,c.2) get tok: INT(OD[231])
(l.1337,c.3) get tok: STRING(;)
(l.1338,c.8) get tok: REF TAG(locpar)
(l.1338,c.10) get tok: INT(IS[82])
(l.1339,c.0) get tok: REF TAG(nowparam)
(l.1339,c.4) get tok: INT(THEN[190])
(l.1340,c.3) get tok: INT(REF[53])
(l.1340,c.7) get tok: INT(REF[53])
(l.1340,c.14) get tok: REF TAG(WPARAM)
(l.1340,c.15) get tok: STRING(()
(l.1340,c.22) get tok: REF TAG(locpar)
(l.1340,c.23) get tok: STRING())
(l.1340,c.25) get tok: STRING(:=)
(l.1340,c.29) get tok: INT(HEAP[48])
(l.1340,c.36) get tok: REF TAG(WPARAM)
(l.1340,c.38) get tok: STRING(:=)
(l.1340,c.39) get tok: STRING(()
(l.1340,c.42) get tok: REF TAG(par)
(l.1340,c.43) get tok: STRING(,)
(l.1340,c.53) get tok: REF TAG(nowparam)
(l.1340,c.54) get tok: STRING())
(l.1340,c.55) get tok: STRING(;)
(l.1341,c.4) get tok: INT(TRUE[64])
(l.1342,c.4) get tok: INT(ELSE[4])
(l.1342,c.10) get tok: INT(FALSE[123])
(l.1343,c.2) get tok: INT(FI[107])
(l.1343,c.3) get tok: STRING(;)
(l.1345,c.2) get tok: CONTROL( )
(l.1348,c.2) get tok: CONTROL(<)
(l.1349,c.4) get tok: INT(PROC[69])
(l.1349,c.17) get tok: REF TAG(addmactext)
(l.1349,c.18) get tok: STRING(=)
(l.1349,c.19) get tok: STRING(()
(l.1349,c.22) get tok: INT(REF[53])
(l.1349,c.28) get tok: REF TAG(MACRO)
(l.1349,c.32) get tok: REF TAG(rmc)
(l.1349,c.33) get tok: STRING(,)
(l.1349,c.38) get tok: REF TAG(TEXT)
(l.1349,c.41) get tok: CONTROL(!)
(l.1349,c.42) get tok: REF TAG(t)
(l.1349,c.43) get tok: STRING())
(l.1349,c.47) get tok: INT(VOID[181])
(l.1350,c.0) get tok: STRING(:)
(l.1350,c.1) get tok: STRING(()
(l.1351,c.3) get tok: INT(REF[53])
(l.1351,c.7) get tok: INT(REF[53])
(l.1351,c.12) get tok: REF TAG(TEXT)
(l.1352,c.1) get tok: STRING(()
(l.1352,c.10) get tok: REF TAG(textbeg)
(l.1352,c.12) get tok: INT(OF[97])
(l.1352,c.16) get tok: REF TAG(rmc)
(l.1352,c.19) get tok: STRING(:=:)
(l.1352,c.26) get tok: REF TAG(notext)
(l.1352,c.27) get tok: STRING(|)
(l.1352,c.36) get tok: REF TAG(textbeg)
(l.1352,c.38) get tok: INT(OF[97])
(l.1352,c.42) get tok: REF TAG(rmc)
(l.1352,c.43) get tok: STRING(|)
(l.1352,c.52) get tok: REF TAG(textend)
(l.1352,c.54) get tok: INT(OF[97])
(l.1352,c.58) get tok: REF TAG(rmc)
(l.1352,c.59) get tok: STRING())
(l.1352,c.61) get tok: STRING(:=)
(l.1352,c.65) get tok: INT(HEAP[48])
(l.1352,c.70) get tok: REF TAG(TEXT)
(l.1352,c.72) get tok: STRING(:=)
(l.1352,c.73) get tok: REF TAG(t)
(l.1352,c.74) get tok: STRING(;)
(l.1353,c.9) get tok: REF TAG(textend)
(l.1353,c.11) get tok: INT(OF[97])
(l.1353,c.15) get tok: REF TAG(rmc)
(l.1353,c.17) get tok: STRING(:=)
(l.1353,c.22) get tok: REF TAG(next)
(l.1353,c.24) get tok: INT(OF[97])
(l.1353,c.34) get tok: REF TAG(textend)
(l.1353,c.36) get tok: INT(OF[97])
(l.1354,c.0) get tok: REF TAG(rmc)
(l.1354,c.1) get tok: STRING())
(l.1354,c.2) get tok: STRING(;)
(l.1356,c.2) get tok: CONTROL( )
(l.1356,c.4) get tok: CONTROL(<)
(l.1357,c.4) get tok: INT(PROC[69])
(l.1357,c.17) get tok: REF TAG(addmodtext)
(l.1357,c.18) get tok: STRING(=)
(l.1357,c.19) get tok: STRING(()
(l.1357,c.22) get tok: INT(REF[53])
(l.1357,c.29) get tok: REF TAG(MODULE)
(l.1357,c.33) get tok: REF TAG(rmd)
(l.1357,c.34) get tok: STRING(,)
(l.1357,c.39) get tok: REF TAG(TEXT)
(l.1357,c.42) get tok: CONTROL(!)
(l.1357,c.43) get tok: REF TAG(t)
(l.1357,c.44) get tok: STRING())
(l.1357,c.48) get tok: INT(VOID[181])
(l.1358,c.0) get tok: STRING(:)
(l.1358,c.1) get tok: STRING(()
(l.1359,c.3) get tok: INT(REF[53])
(l.1359,c.7) get tok: INT(REF[53])
(l.1359,c.12) get tok: REF TAG(TEXT)
(l.1360,c.1) get tok: STRING(()
(l.1360,c.10) get tok: REF TAG(textbeg)
(l.1360,c.12) get tok: INT(OF[97])
(l.1360,c.16) get tok: REF TAG(rmd)
(l.1360,c.19) get tok: STRING(:=:)
(l.1360,c.26) get tok: REF TAG(notext)
(l.1360,c.27) get tok: STRING(|)
(l.1360,c.36) get tok: REF TAG(textbeg)
(l.1360,c.38) get tok: INT(OF[97])
(l.1360,c.42) get tok: REF TAG(rmd)
(l.1360,c.43) get tok: STRING(|)
(l.1360,c.52) get tok: REF TAG(textend)
(l.1360,c.54) get tok: INT(OF[97])
(l.1360,c.58) get tok: REF TAG(rmd)
(l.1360,c.59) get tok: STRING())
(l.1360,c.61) get tok: STRING(:=)
(l.1360,c.65) get tok: INT(HEAP[48])
(l.1360,c.70) get tok: REF TAG(TEXT)
(l.1360,c.72) get tok: STRING(:=)
(l.1360,c.73) get tok: REF TAG(t)
(l.1360,c.74) get tok: STRING(;)
(l.1361,c.9) get tok: REF TAG(textend)
(l.1361,c.11) get tok: INT(OF[97])
(l.1361,c.15) get tok: REF TAG(rmd)
(l.1361,c.17) get tok: STRING(:=)
(l.1361,c.22) get tok: REF TAG(next)
(l.1361,c.24) get tok: INT(OF[97])
(l.1361,c.34) get tok: REF TAG(textend)
(l.1361,c.36) get tok: INT(OF[97])
(l.1362,c.0) get tok: REF TAG(rmd)
(l.1362,c.1) get tok: STRING())
(l.1362,c.2) get tok: STRING(;)
(l.1364,c.2) get tok: CONTROL(1)
(l.1378,c.2) get tok: CONTROL(<)
(l.1379,c.4) get tok: INT(PROC[69])
(l.1379,c.13) get tok: REF TAG(inputln)
(l.1379,c.14) get tok: STRING(=)
(l.1379,c.15) get tok: STRING(()
(l.1379,c.18) get tok: INT(REF[53])
(l.1379,c.25) get tok: REF TAG(STREAM)
(l.1379,c.29) get tok: REF TAG(inp)
(l.1379,c.30) get tok: STRING())
(l.1379,c.34) get tok: INT(BOOL[184])
(l.1380,c.0) get tok: STRING(:)
(l.1380,c.5) get tok: INT(BEGIN[227])
(l.1381,c.4) get tok: INT(CHAR[113])
(l.1381,c.7) get tok: REF TAG(ch)
(l.1381,c.8) get tok: STRING(;)
(l.1382,c.4) get tok: REF TAG(upb)
(l.1382,c.6) get tok: INT(OF[97])
(l.1382,c.10) get tok: REF TAG(inp)
(l.1382,c.12) get tok: STRING(:=)
(l.1382,c.13) get tok: STRING(0)
(l.1382,c.14) get tok: STRING(;)
(l.1383,c.4) get tok: REF TAG(loc)
(l.1383,c.6) get tok: INT(OF[97])
(l.1383,c.10) get tok: REF TAG(inp)
(l.1383,c.12) get tok: STRING(:=)
(l.1383,c.13) get tok: STRING(0)
(l.1383,c.14) get tok: STRING(;)
(l.1384,c.19) get tok: REF TAG(onlogicalfileend)
(l.1384,c.20) get tok: STRING(()
(l.1384,c.22) get tok: REF TAG(f)
(l.1384,c.24) get tok: INT(OF[97])
(l.1384,c.28) get tok: REF TAG(inp)
(l.1384,c.29) get tok: STRING(,)
(l.1385,c.1) get tok: STRING(()
(l.1385,c.4) get tok: INT(REF[53])
(l.1385,c.9) get tok: INT(FILE[59])
(l.1385,c.11) get tok: REF TAG(f)
(l.1385,c.12) get tok: STRING())
(l.1385,c.16) get tok: INT(BOOL[184])
(l.1385,c.17) get tok: STRING(:)
(l.1385,c.19) get tok: STRING(()
(l.1385,c.25) get tok: REF TAG(ended)
(l.1385,c.27) get tok: INT(OF[97])
(l.1385,c.31) get tok: REF TAG(inp)
(l.1385,c.33) get tok: STRING(:=)
(l.1385,c.37) get tok: INT(TRUE[64])
(l.1385,c.38) get tok: STRING(;)
(l.1385,c.43) get tok: INT(GOTO[294])
(l.1385,c.48) get tok: REF TAG(lab1)
(l.1385,c.49) get tok: STRING(;)
(l.1385,c.54) get tok: INT(SKIP[44])
(l.1385,c.55) get tok: STRING())
(l.1385,c.56) get tok: STRING())
(l.1385,c.57) get tok: STRING(;)
(l.1387,c.5) get tok: INT(WHILE[99])
(l.1387,c.13) get tok: REF TAG(getbin)
(l.1387,c.14) get tok: STRING(()
(l.1387,c.16) get tok: REF TAG(f)
(l.1387,c.18) get tok: INT(OF[97])
(l.1387,c.22) get tok: REF TAG(inp)
(l.1387,c.23) get tok: STRING(,)
(l.1387,c.25) get tok: REF TAG(ch)
(l.1387,c.26) get tok: STRING())
(l.1387,c.27) get tok: STRING(;)
(l.1387,c.30) get tok: REF TAG(ch)
(l.1387,c.32) get tok: STRING(/=)
(l.1388,c.0) get tok: REF TAG(lf)
(l.1388,c.2) get tok: INT(DO[244])
(l.1389,c.1) get tok: STRING(()
(l.1389,c.3) get tok: REF TAG(b)
(l.1389,c.5) get tok: INT(OF[97])
(l.1389,c.9) get tok: REF TAG(inp)
(l.1389,c.10) get tok: STRING())
(l.1389,c.11) get tok: STRING([)
(l.1389,c.15) get tok: REF TAG(upb)
(l.1389,c.17) get tok: INT(OF[97])
(l.1389,c.21) get tok: REF TAG(inp)
(l.1389,c.24) get tok: STRING(+:=)
(l.1389,c.25) get tok: STRING(1)
(l.1389,c.26) get tok: STRING(])
(l.1389,c.28) get tok: STRING(:=)
(l.1390,c.0) get tok: REF TAG(ch)
(l.1390,c.2) get tok: INT(OD[231])
(l.1390,c.3) get tok: STRING(;)
(l.1392,c.2) get tok: INT(IF[62])
(l.1392,c.7) get tok: REF TAG(upb)
(l.1392,c.9) get tok: INT(OF[97])
(l.1392,c.14) get tok: REF TAG(inp)
(l.1392,c.15) get tok: STRING(>)
(l.1393,c.0) get tok: STRING(0)
(l.1393,c.4) get tok: INT(THEN[190])
(l.1394,c.1) get tok: STRING([)
(l.1394,c.2) get tok: STRING(])
(l.1394,c.6) get tok: INT(CHAR[113])
(l.1394,c.16) get tok: REF TAG(trimmedb)
(l.1394,c.17) get tok: STRING(=)
(l.1394,c.18) get tok: STRING(()
(l.1394,c.22) get tok: REF TAG(TRIM)
(l.1394,c.23) get tok: STRING(()
(l.1394,c.25) get tok: REF TAG(b)
(l.1394,c.27) get tok: INT(OF[97])
(l.1394,c.31) get tok: REF TAG(inp)
(l.1394,c.32) get tok: STRING())
(l.1394,c.33) get tok: STRING([)
(l.1394,c.34) get tok: STRING(:)
(l.1394,c.38) get tok: REF TAG(upb)
(l.1394,c.40) get tok: INT(OF[97])
(l.1394,c.44) get tok: REF TAG(inp)
(l.1394,c.45) get tok: STRING(])
(l.1394,c.46) get tok: STRING())
(l.1394,c.47) get tok: STRING([)
(l.1394,c.49) get tok: CONTROL(@)
(l.1394,c.50) get tok: STRING(1)
(l.1394,c.51) get tok: STRING(])
(l.1394,c.52) get tok: STRING(;)
(l.1395,c.4) get tok: REF TAG(upb)
(l.1395,c.6) get tok: INT(OF[97])
(l.1395,c.10) get tok: REF TAG(inp)
(l.1395,c.12) get tok: STRING(:=)
(l.1395,c.15) get tok: INT(UPB[150])
(l.1395,c.25) get tok: REF TAG(trimmedb)
(l.1395,c.26) get tok: STRING(;)
(l.1396,c.1) get tok: STRING(()
(l.1396,c.3) get tok: REF TAG(b)
(l.1396,c.5) get tok: INT(OF[97])
(l.1396,c.9) get tok: REF TAG(inp)
(l.1396,c.10) get tok: STRING())
(l.1396,c.11) get tok: STRING([)
(l.1396,c.12) get tok: STRING(:)
(l.1396,c.16) get tok: REF TAG(upb)
(l.1396,c.18) get tok: INT(OF[97])
(l.1396,c.22) get tok: REF TAG(inp)
(l.1396,c.23) get tok: STRING(])
(l.1396,c.25) get tok: STRING(:=)
(l.1397,c.0) get tok: REF TAG(trimmedb)
(l.1397,c.2) get tok: INT(FI[107])
(l.1397,c.3) get tok: STRING(;)
(l.1399,c.2) get tok: REF TAG(n)
(l.1399,c.4) get tok: INT(OF[97])
(l.1399,c.8) get tok: REF TAG(inp)
(l.1399,c.11) get tok: STRING(+:=)
(l.1399,c.12) get tok: STRING(1)
(l.1399,c.13) get tok: STRING(;)
(l.1400,c.4) get tok: INT(TRUE[64])
(l.1400,c.9) get tok: INT(EXIT[21])
(l.1401,c.4) get tok: REF TAG(lab1)
(l.1402,c.0) get tok: STRING(:)
(l.1402,c.5) get tok: INT(FALSE[123])
(l.1403,c.3) get tok: INT(END[202])
(l.1403,c.4) get tok: STRING(;)
(l.1405,c.2) get tok: CONTROL( )
(l.1407,c.2) get tok: CONTROL(<)
(l.1408,c.16) get tok: REF TAG(macrogpoptrim)
(l.1408,c.17) get tok: STRING(;)
(l.1410,c.2) get tok: CONTROL( )
(l.1418,c.2) get tok: CONTROL(<)
(l.1419,c.22) get tok: REF TAG(macrogpopminuschar)
(l.1419,c.23) get tok: STRING(;)
(l.1420,c.1) get tok: STRING([)
(l.1420,c.2) get tok: STRING(])
(l.1420,c.6) get tok: INT(CHAR[113])
(l.1420,c.17) get tok: REF TAG(boldrange)
(l.1420,c.18) get tok: STRING(=)
(l.1420,c.19) get tok: STRING(()
(l.1420,c.22) get tok: STRING("0")
(l.1420,c.23) get tok: STRING(-)
(l.1420,c.26) get tok: STRING("9")
(l.1420,c.27) get tok: STRING())
(l.1420,c.28) get tok: STRING(+)
(l.1420,c.29) get tok: STRING(()
(l.1420,c.32) get tok: STRING("A")
(l.1420,c.33) get tok: STRING(-)
(l.1420,c.36) get tok: STRING("Z")
(l.1420,c.37) get tok: STRING())
(l.1420,c.38) get tok: STRING(,)
(l.1421,c.8) get tok: REF TAG(idrange)
(l.1421,c.9) get tok: STRING(=)
(l.1421,c.14) get tok: REF TAG(blank)
(l.1421,c.15) get tok: STRING(+)
(l.1421,c.16) get tok: STRING(()
(l.1421,c.19) get tok: STRING("0")
(l.1421,c.20) get tok: STRING(-)
(l.1421,c.23) get tok: STRING("9")
(l.1421,c.24) get tok: STRING())
(l.1421,c.25) get tok: STRING(+)
(l.1421,c.28) get tok: STRING("_")
(l.1421,c.29) get tok: STRING(+)
(l.1421,c.30) get tok: STRING(()
(l.1421,c.33) get tok: STRING("a")
(l.1421,c.34) get tok: STRING(-)
(l.1421,c.37) get tok: STRING("z")
(l.1421,c.38) get tok: STRING())
(l.1421,c.39) get tok: STRING(;)
(l.1423,c.2) get tok: CONTROL( )
(l.1426,c.2) get tok: CONTROL(m)
(l.1426,c.8) get tok: REF TAG(div2)
(l.1426,c.9) get tok: STRING(=)
(l.1426,c.11) get tok: STRING(()
(l.1426,c.14) get tok: REF TAG(bot)
(l.1426,c.15) get tok: STRING(+)
(l.1426,c.18) get tok: REF TAG(top)
(l.1426,c.19) get tok: STRING())
(l.1426,c.23) get tok: INT(OVER[154])
(l.1428,c.0) get tok: STRING(2)
(l.1428,c.2) get tok: CONTROL(<)
(l.1429,c.4) get tok: INT(PRIO[134])
(l.1429,c.9) get tok: REF TAG(CHOP)
(l.1429,c.10) get tok: STRING(=)
(l.1429,c.11) get tok: STRING(7)
(l.1429,c.12) get tok: STRING(;)
(l.1430,c.2) get tok: INT(OP[87])
(l.1430,c.7) get tok: REF TAG(CHOP)
(l.1430,c.8) get tok: STRING(=)
(l.1430,c.9) get tok: STRING(()
(l.1430,c.13) get tok: INT(CHAR[113])
(l.1430,c.16) get tok: CONTROL(!)
(l.1430,c.17) get tok: REF TAG(c)
(l.1430,c.18) get tok: STRING(,)
(l.1430,c.19) get tok: STRING([)
(l.1430,c.20) get tok: STRING(])
(l.1430,c.24) get tok: INT(CHAR[113])
(l.1430,c.27) get tok: CONTROL(!)
(l.1430,c.28) get tok: REF TAG(s)
(l.1430,c.29) get tok: STRING())
(l.1430,c.32) get tok: INT(INT[195])
(l.1431,c.0) get tok: STRING(:)
(l.1431,c.5) get tok: INT(BEGIN[227])
(l.1432,c.3) get tok: INT(INT[195])
(l.1432,c.7) get tok: REF TAG(bot)
(l.1432,c.9) get tok: STRING(:=)
(l.1432,c.12) get tok: INT(LWB[148])
(l.1432,c.14) get tok: REF TAG(s)
(l.1432,c.15) get tok: STRING(,)
(l.1433,c.3) get tok: REF TAG(top)
(l.1433,c.5) get tok: STRING(:=)
(l.1433,c.8) get tok: INT(UPB[150])
(l.1433,c.10) get tok: REF TAG(s)
(l.1433,c.11) get tok: STRING(;)
(l.1434,c.3) get tok: INT(INT[195])
(l.1434,c.6) get tok: CONTROL(!)
(l.1434,c.7) get tok: REF TAG(i)
(l.1434,c.9) get tok: STRING(:=)
(l.1434,c.13) get tok: REF TAG(div2)
(l.1434,c.14) get tok: STRING(;)
(l.1435,c.5) get tok: INT(WHILE[99])
(l.1435,c.10) get tok: INT(CHAR[113])
(l.1435,c.13) get tok: REF TAG(si)
(l.1435,c.14) get tok: STRING(;)
(l.1435,c.16) get tok: STRING(()
(l.1435,c.19) get tok: REF TAG(bot)
(l.1435,c.21) get tok: STRING(<=)
(l.1435,c.24) get tok: REF TAG(top)
(l.1435,c.25) get tok: STRING(|)
(l.1435,c.26) get tok: STRING(()
(l.1435,c.28) get tok: REF TAG(si)
(l.1435,c.30) get tok: STRING(:=)
(l.1435,c.31) get tok: REF TAG(s)
(l.1435,c.32) get tok: STRING([)
(l.1435,c.33) get tok: REF TAG(i)
(l.1435,c.34) get tok: STRING(])
(l.1435,c.35) get tok: STRING())
(l.1435,c.37) get tok: STRING(/=)
(l.1435,c.38) get tok: REF TAG(c)
(l.1435,c.39) get tok: STRING(|)
(l.1435,c.44) get tok: INT(FALSE[123])
(l.1435,c.45) get tok: STRING())
(l.1436,c.2) get tok: INT(DO[244])
(l.1437,c.1) get tok: STRING(()
(l.1437,c.2) get tok: REF TAG(c)
(l.1437,c.3) get tok: STRING(<)
(l.1437,c.5) get tok: REF TAG(si)
(l.1437,c.6) get tok: STRING(|)
(l.1437,c.9) get tok: REF TAG(top)
(l.1437,c.11) get tok: STRING(:=)
(l.1437,c.12) get tok: REF TAG(i)
(l.1437,c.13) get tok: STRING(-)
(l.1437,c.14) get tok: STRING(1)
(l.1437,c.15) get tok: STRING(|)
(l.1437,c.18) get tok: REF TAG(bot)
(l.1437,c.20) get tok: STRING(:=)
(l.1437,c.21) get tok: REF TAG(i)
(l.1437,c.22) get tok: STRING(+)
(l.1437,c.23) get tok: STRING(1)
(l.1437,c.24) get tok: STRING())
(l.1437,c.25) get tok: STRING(;)
(l.1438,c.1) get tok: REF TAG(i)
(l.1438,c.3) get tok: STRING(:=)
(l.1439,c.0) get tok: REF TAG(div2)
(l.1439,c.2) get tok: INT(OD[231])
(l.1439,c.3) get tok: STRING(;)
(l.1440,c.1) get tok: STRING(()
(l.1440,c.4) get tok: REF TAG(bot)
(l.1440,c.6) get tok: STRING(<=)
(l.1440,c.9) get tok: REF TAG(top)
(l.1440,c.10) get tok: STRING(|)
(l.1440,c.11) get tok: REF TAG(i)
(l.1440,c.12) get tok: STRING(|)
(l.1440,c.15) get tok: INT(LWB[148])
(l.1440,c.17) get tok: REF TAG(s)
(l.1440,c.18) get tok: STRING(-)
(l.1440,c.19) get tok: STRING(1)
(l.1440,c.20) get tok: STRING())
(l.1441,c.3) get tok: INT(END[202])
(l.1441,c.4) get tok: STRING(;)
(l.1443,c.2) get tok: CONTROL( )
(l.1453,c.2) get tok: CONTROL(<)
(l.1454,c.4) get tok: INT(PROC[69])
(l.1454,c.15) get tok: REF TAG(nextchar)
(l.1454,c.16) get tok: STRING(=)
(l.1454,c.21) get tok: INT(CHAR[113])
(l.1455,c.0) get tok: STRING(:)
(l.1455,c.2) get tok: INT(IF[62])
(l.1456,c.0) get tok: REF TAG(inputended)
(l.1456,c.4) get tok: INT(THEN[190])
(l.1456,c.7) get tok: CONTROL(<)
(l.1456,c.30) get tok: STRING(;)
(l.1457,c.0) get tok: REF TAG(blank)
(l.1457,c.4) get tok: INT(ELIF[9])
(l.1457,c.9) get tok: REF TAG(loc)
(l.1457,c.11) get tok: INT(OF[97])
(l.1457,c.16) get tok: REF TAG(web)
(l.1457,c.17) get tok: STRING(<)
(l.1457,c.22) get tok: REF TAG(upb)
(l.1457,c.24) get tok: INT(OF[97])
(l.1458,c.0) get tok: REF TAG(web)
(l.1458,c.4) get tok: INT(THEN[190])
(l.1458,c.6) get tok: STRING(()
(l.1458,c.8) get tok: REF TAG(b)
(l.1458,c.10) get tok: INT(OF[97])
(l.1458,c.14) get tok: REF TAG(web)
(l.1458,c.15) get tok: STRING())
(l.1458,c.16) get tok: STRING([)
(l.1458,c.20) get tok: REF TAG(loc)
(l.1458,c.22) get tok: INT(OF[97])
(l.1458,c.26) get tok: REF TAG(web)
(l.1458,c.29) get tok: STRING(+:=)
(l.1458,c.30) get tok: STRING(1)
(l.1458,c.31) get tok: STRING(])
(l.1459,c.4) get tok: INT(ELSE[4])
(l.1460,c.5) get tok: INT(WHILE[99])
(l.1460,c.14) get tok: REF TAG(inputln)
(l.1460,c.15) get tok: STRING(()
(l.1460,c.18) get tok: REF TAG(web)
(l.1460,c.19) get tok: STRING())
(l.1460,c.21) get tok: STRING(&)
(l.1460,c.26) get tok: REF TAG(upb)
(l.1460,c.28) get tok: INT(OF[97])
(l.1460,c.33) get tok: REF TAG(web)
(l.1460,c.34) get tok: STRING(=)
(l.1460,c.37) get tok: STRING(0)
(l.1460,c.39) get tok: INT(DO[244])
(l.1460,c.44) get tok: INT(SKIP[44])
(l.1460,c.47) get tok: INT(OD[231])
(l.1460,c.48) get tok: STRING(;)
(l.1461,c.2) get tok: INT(IF[62])
(l.1461,c.15) get tok: REF TAG(inputended)
(l.1461,c.19) get tok: INT(THEN[190])
(l.1461,c.22) get tok: CONTROL(<)
(l.1461,c.47) get tok: INT(FI[107])
(l.1461,c.48) get tok: STRING(;)
(l.1463,c.0) get tok: REF TAG(blank)
(l.1463,c.2) get tok: INT(FI[107])
(l.1463,c.3) get tok: STRING(;)
(l.1465,c.2) get tok: CONTROL( )
(l.1472,c.2) get tok: CONTROL(<)
(l.1473,c.3) get tok: INT(REF[53])
(l.1473,c.9) get tok: REF TAG(MACRO)
(l.1473,c.17) get tok: REF TAG(curmac)
(l.1473,c.19) get tok: STRING(:=)
(l.1473,c.25) get tok: REF TAG(nomac)
(l.1473,c.26) get tok: STRING(;)
(l.1474,c.3) get tok: INT(REF[53])
(l.1474,c.10) get tok: REF TAG(MODULE)
(l.1474,c.18) get tok: REF TAG(curmod)
(l.1474,c.20) get tok: STRING(:=)
(l.1474,c.26) get tok: REF TAG(nomod)
(l.1474,c.27) get tok: STRING(;)
(l.1475,c.6) get tok: REF TAG(MODULE)
(l.1475,c.21) get tok: REF TAG(unnamedmodule)
(l.1475,c.23) get tok: STRING(:=)
(l.1475,c.24) get tok: STRING(()
(l.1475,c.26) get tok: STRING("")
(l.1475,c.27) get tok: STRING(,)
(l.1476,c.4) get tok: INT(HEAP[48])
(l.1476,c.8) get tok: INT(REF[53])
(l.1476,c.13) get tok: REF TAG(TEXT)
(l.1476,c.15) get tok: STRING(:=)
(l.1476,c.22) get tok: REF TAG(notext)
(l.1476,c.23) get tok: STRING(,)
(l.1477,c.4) get tok: INT(HEAP[48])
(l.1477,c.8) get tok: INT(REF[53])
(l.1477,c.13) get tok: REF TAG(TEXT)
(l.1477,c.15) get tok: STRING(:=)
(l.1477,c.22) get tok: REF TAG(notext)
(l.1477,c.23) get tok: STRING(,)
(l.1478,c.6) get tok: REF TAG(nomod)
(l.1478,c.7) get tok: STRING(,)
(l.1478,c.14) get tok: REF TAG(nomod)
(l.1478,c.15) get tok: STRING())
(l.1478,c.16) get tok: STRING(;)
(l.1479,c.9) get tok: REF TAG(textend)
(l.1479,c.11) get tok: INT(OF[97])
(l.1479,c.26) get tok: REF TAG(unnamedmodule)
(l.1479,c.28) get tok: STRING(:=)
(l.1479,c.37) get tok: REF TAG(textbeg)
(l.1479,c.39) get tok: INT(OF[97])
(l.1479,c.54) get tok: REF TAG(unnamedmodule)
(l.1479,c.55) get tok: STRING(;)
(l.1481,c.2) get tok: CONTROL( )
(l.1484,c.2) get tok: CONTROL(<)
(l.1485,c.4) get tok: INT(PROC[69])
(l.1485,c.20) get tok: REF TAG(gathertochar)
(l.1485,c.21) get tok: STRING(=)
(l.1485,c.23) get tok: STRING(()
(l.1485,c.26) get tok: INT(REF[53])
(l.1485,c.33) get tok: INT(STRING[156])
(l.1485,c.36) get tok: CONTROL(!)
(l.1485,c.37) get tok: REF TAG(s)
(l.1485,c.38) get tok: STRING(,)
(l.1485,c.42) get tok: INT(CHAR[113])
(l.1485,c.45) get tok: CONTROL(!)
(l.1485,c.46) get tok: REF TAG(c)
(l.1485,c.47) get tok: STRING())
(l.1485,c.51) get tok: INT(VOID[181])
(l.1486,c.0) get tok: STRING(:)
(l.1486,c.2) get tok: INT(IF[62])
(l.1486,c.7) get tok: INT(CHAR[113])
(l.1486,c.10) get tok: REF TAG(ch)
(l.1486,c.11) get tok: STRING(;)
(l.1487,c.5) get tok: INT(WHILE[99])
(l.1487,c.8) get tok: REF TAG(ch)
(l.1487,c.10) get tok: STRING(:=)
(l.1487,c.19) get tok: REF TAG(nextchar)
(l.1487,c.20) get tok: STRING(;)
(l.1487,c.24) get tok: INT(NOT[230])
(l.1487,c.37) get tok: REF TAG(inputended)
(l.1487,c.38) get tok: STRING(&)
(l.1487,c.41) get tok: REF TAG(ch)
(l.1487,c.43) get tok: STRING(/=)
(l.1487,c.45) get tok: REF TAG(c)
(l.1487,c.47) get tok: INT(DO[244])
(l.1487,c.49) get tok: REF TAG(s)
(l.1487,c.52) get tok: STRING(+:=)
(l.1487,c.55) get tok: REF TAG(ch)
(l.1487,c.57) get tok: INT(OD[231])
(l.1487,c.58) get tok: STRING(;)
(l.1489,c.0) get tok: REF TAG(inputended)
(l.1489,c.4) get tok: INT(THEN[190])
(l.1489,c.14) get tok: REF TAG(errprint)
(l.1489,c.15) get tok: STRING(()
(l.1489,c.48) get tok: STRING("input ended while gathering to ")
(l.1489,c.49) get tok: STRING(+)
(l.1489,c.50) get tok: REF TAG(c)
(l.1489,c.51) get tok: STRING())
(l.1491,c.4) get tok: INT(ELSE[4])
(l.1491,c.6) get tok: REF TAG(s)
(l.1491,c.9) get tok: STRING(+:=)
(l.1492,c.0) get tok: REF TAG(ch)
(l.1492,c.2) get tok: INT(FI[107])
(l.1492,c.3) get tok: STRING(;)
(l.1494,c.2) get tok: CONTROL( )
(l.1496,c.2) get tok: CONTROL(<)
(l.1497,c.4) get tok: INT(PROC[69])
(l.1497,c.18) get tok: REF TAG(skiptochar)
(l.1497,c.19) get tok: STRING(=)
(l.1497,c.21) get tok: STRING(()
(l.1497,c.25) get tok: INT(CHAR[113])
(l.1497,c.28) get tok: CONTROL(!)
(l.1497,c.29) get tok: REF TAG(c)
(l.1497,c.30) get tok: STRING())
(l.1497,c.34) get tok: INT(VOID[181])
(l.1498,c.0) get tok: STRING(:)
(l.1498,c.5) get tok: INT(BEGIN[227])
(l.1499,c.4) get tok: INT(CHAR[113])
(l.1499,c.7) get tok: REF TAG(ch)
(l.1499,c.8) get tok: STRING(;)
(l.1500,c.5) get tok: INT(WHILE[99])
(l.1500,c.8) get tok: REF TAG(ch)
(l.1500,c.10) get tok: STRING(:=)
(l.1500,c.19) get tok: REF TAG(nextchar)
(l.1500,c.20) get tok: STRING(;)
(l.1500,c.24) get tok: INT(NOT[230])
(l.1500,c.37) get tok: REF TAG(inputended)
(l.1500,c.38) get tok: STRING(&)
(l.1500,c.41) get tok: REF TAG(ch)
(l.1500,c.43) get tok: STRING(/=)
(l.1500,c.45) get tok: REF TAG(c)
(l.1500,c.47) get tok: INT(DO[244])
(l.1500,c.52) get tok: INT(SKIP[44])
(l.1500,c.55) get tok: INT(OD[231])
(l.1500,c.56) get tok: STRING(;)
(l.1501,c.2) get tok: INT(IF[62])
(l.1502,c.0) get tok: REF TAG(inputended)
(l.1502,c.4) get tok: INT(THEN[190])
(l.1502,c.14) get tok: REF TAG(errprint)
(l.1502,c.15) get tok: STRING(()
(l.1502,c.47) get tok: STRING("input ended while skipping to ")
(l.1502,c.48) get tok: STRING(+)
(l.1502,c.49) get tok: REF TAG(c)
(l.1502,c.50) get tok: STRING())
(l.1504,c.2) get tok: INT(FI[107])
(l.1505,c.3) get tok: INT(END[202])
(l.1505,c.4) get tok: STRING(;)
(l.1507,c.2) get tok: CONTROL( )
(l.1513,c.2) get tok: CONTROL(<)
(l.1514,c.4) get tok: INT(PROC[69])
(l.1514,c.18) get tok: REF TAG(skiptobang)
(l.1514,c.19) get tok: STRING(=)
(l.1514,c.24) get tok: INT(BOOL[184])
(l.1515,c.0) get tok: STRING(:)
(l.1515,c.5) get tok: INT(BEGIN[227])
(l.1516,c.4) get tok: INT(CHAR[113])
(l.1516,c.7) get tok: REF TAG(ch)
(l.1516,c.8) get tok: STRING(;)
(l.1517,c.5) get tok: INT(WHILE[99])
(l.1518,c.5) get tok: INT(WHILE[99])
(l.1518,c.8) get tok: REF TAG(ch)
(l.1518,c.10) get tok: STRING(:=)
(l.1518,c.19) get tok: REF TAG(nextchar)
(l.1518,c.20) get tok: STRING(;)
(l.1518,c.24) get tok: INT(NOT[230])
(l.1518,c.37) get tok: REF TAG(inputended)
(l.1518,c.38) get tok: STRING(&)
(l.1518,c.41) get tok: REF TAG(ch)
(l.1518,c.43) get tok: STRING(/=)
(l.1518,c.46) get tok: STRING("!")
(l.1518,c.48) get tok: STRING(&)
(l.1518,c.51) get tok: REF TAG(ch)
(l.1518,c.53) get tok: STRING(/=)
(l.1519,c.0) get tok: STRING("@")
(l.1519,c.2) get tok: INT(DO[244])
(l.1519,c.7) get tok: INT(SKIP[44])
(l.1519,c.10) get tok: INT(OD[231])
(l.1519,c.11) get tok: STRING(;)
(l.1520,c.2) get tok: INT(IF[62])
(l.1520,c.15) get tok: REF TAG(inputended)
(l.1520,c.17) get tok: INT(OR[177])
(l.1520,c.20) get tok: REF TAG(ch)
(l.1520,c.21) get tok: STRING(=)
(l.1521,c.0) get tok: STRING("!")
(l.1521,c.4) get tok: INT(THEN[190])
(l.1521,c.10) get tok: INT(FALSE[123])
(l.1522,c.4) get tok: INT(ELIF[9])
(l.1522,c.6) get tok: STRING(()
(l.1522,c.8) get tok: REF TAG(ch)
(l.1522,c.10) get tok: STRING(:=)
(l.1522,c.19) get tok: REF TAG(nextchar)
(l.1522,c.20) get tok: STRING())
(l.1522,c.22) get tok: STRING(/=)
(l.1523,c.0) get tok: STRING("@")
(l.1523,c.4) get tok: INT(THEN[190])
(l.1524,c.9) get tok: REF TAG(errprint)
(l.1524,c.10) get tok: STRING(()
(l.1524,c.41) get tok: STRING("control sequence inside !...!")
(l.1524,c.42) get tok: STRING())
(l.1524,c.43) get tok: STRING(;)
(l.1525,c.15) get tok: REF TAG(backspaceinput)
(l.1525,c.16) get tok: STRING(;)
(l.1525,c.32) get tok: REF TAG(backspaceinput)
(l.1525,c.33) get tok: STRING(;)
(l.1526,c.4) get tok: INT(GOTO[294])
(l.1527,c.0) get tok: REF TAG(err)
(l.1527,c.4) get tok: INT(ELSE[4])
(l.1527,c.30) get tok: INT(TRUE[64])
(l.1528,c.2) get tok: INT(FI[107])
(l.1529,c.2) get tok: INT(DO[244])
(l.1529,c.7) get tok: INT(SKIP[44])
(l.1529,c.10) get tok: INT(OD[231])
(l.1529,c.11) get tok: STRING(;)
(l.1530,c.4) get tok: INT(TRUE[64])
(l.1530,c.9) get tok: INT(EXIT[21])
(l.1531,c.3) get tok: REF TAG(err)
(l.1532,c.0) get tok: STRING(:)
(l.1532,c.5) get tok: INT(FALSE[123])
(l.1533,c.3) get tok: INT(END[202])
(l.1533,c.4) get tok: STRING(;)
(l.1535,c.2) get tok: CONTROL( )
(l.1542,c.2) get tok: CONTROL(<)
(l.1543,c.4) get tok: INT(PROC[69])
(l.1543,c.16) get tok: REF TAG(skiptocs)
(l.1543,c.17) get tok: STRING(=)
(l.1543,c.19) get tok: STRING(()
(l.1543,c.20) get tok: STRING([)
(l.1543,c.21) get tok: STRING(])
(l.1543,c.25) get tok: INT(CHAR[113])
(l.1543,c.30) get tok: REF TAG(cset)
(l.1543,c.31) get tok: STRING())
(l.1543,c.35) get tok: INT(VOID[181])
(l.1544,c.0) get tok: STRING(:)
(l.1544,c.5) get tok: INT(WHILE[99])
(l.1545,c.2) get tok: INT(IF[62])
(l.1546,c.0) get tok: REF TAG(inputended)
(l.1546,c.4) get tok: INT(THEN[190])
(l.1546,c.10) get tok: INT(FALSE[123])
(l.1547,c.4) get tok: INT(ELSE[4])
(l.1548,c.4) get tok: INT(CHAR[113])
(l.1548,c.7) get tok: REF TAG(ch)
(l.1548,c.9) get tok: STRING(:=)
(l.1548,c.18) get tok: REF TAG(nextchar)
(l.1548,c.19) get tok: STRING(;)
(l.1549,c.4) get tok: INT(CASE[137])
(l.1549,c.8) get tok: REF TAG(ch)
(l.1549,c.12) get tok: INT(FIND[131])
(l.1550,c.0) get tok: STRING("""!{%@")
(l.1550,c.2) get tok: INT(IN[306])
(l.1551,c.1) get tok: STRING(()
(l.1551,c.13) get tok: REF TAG(skiptochar)
(l.1551,c.14) get tok: STRING(()
(l.1551,c.16) get tok: REF TAG(ch)
(l.1551,c.17) get tok: STRING())
(l.1551,c.18) get tok: STRING(;)
(l.1551,c.23) get tok: INT(TRUE[64])
(l.1551,c.24) get tok: STRING())
(l.1551,c.25) get tok: STRING(,)
(l.1552,c.17) get tok: REF TAG(skiptobang)
(l.1552,c.18) get tok: STRING(,)
(l.1553,c.1) get tok: STRING(()
(l.1553,c.3) get tok: CONTROL(<)
(l.1553,c.32) get tok: STRING(;)
(l.1553,c.37) get tok: INT(TRUE[64])
(l.1553,c.38) get tok: STRING())
(l.1553,c.39) get tok: STRING(,)
(l.1554,c.1) get tok: STRING(()
(l.1554,c.5) get tok: REF TAG(loc)
(l.1554,c.7) get tok: INT(OF[97])
(l.1554,c.11) get tok: REF TAG(web)
(l.1554,c.13) get tok: STRING(:=)
(l.1554,c.17) get tok: REF TAG(upb)
(l.1554,c.19) get tok: INT(OF[97])
(l.1554,c.23) get tok: REF TAG(web)
(l.1554,c.24) get tok: STRING(;)
(l.1554,c.29) get tok: INT(TRUE[64])
(l.1554,c.30) get tok: STRING())
(l.1554,c.31) get tok: STRING(,)
(l.1556,c.3) get tok: INT(NOT[230])
(l.1556,c.18) get tok: REF TAG(charinstring)
(l.1556,c.19) get tok: STRING(()
(l.1556,c.21) get tok: REF TAG(UC)
(l.1556,c.31) get tok: REF TAG(nextchar)
(l.1556,c.32) get tok: STRING(,)
(l.1556,c.35) get tok: INT(LOC[108])
(l.1556,c.39) get tok: INT(INT[195])
(l.1556,c.40) get tok: STRING(,)
(l.1556,c.44) get tok: REF TAG(cset)
(l.1556,c.45) get tok: STRING())
(l.1557,c.3) get tok: INT(OUT[155])
(l.1557,c.8) get tok: INT(TRUE[64])
(l.1558,c.4) get tok: INT(ESAC[39])
(l.1559,c.2) get tok: INT(FI[107])
(l.1560,c.2) get tok: INT(DO[244])
(l.1560,c.7) get tok: INT(SKIP[44])
(l.1560,c.10) get tok: INT(OD[231])
(l.1560,c.11) get tok: STRING(;)
(l.1562,c.2) get tok: CONTROL( )
(l.1564,c.2) get tok: CONTROL(<)
(l.1565,c.19) get tok: REF TAG(macrogpopucchar)
(l.1565,c.20) get tok: STRING(;)
(l.1567,c.2) get tok: CONTROL( )
(l.1571,c.2) get tok: CONTROL(<)
(l.1572,c.3) get tok: INT(INT[195])
(l.1572,c.7) get tok: REF TAG(bal)
(l.1572,c.9) get tok: STRING(:=)
(l.1572,c.10) get tok: STRING(1)
(l.1572,c.11) get tok: STRING(;)
(l.1573,c.5) get tok: INT(WHILE[99])
(l.1573,c.8) get tok: REF TAG(ch)
(l.1573,c.10) get tok: STRING(:=)
(l.1573,c.19) get tok: REF TAG(nextchar)
(l.1573,c.20) get tok: STRING(;)
(l.1573,c.24) get tok: INT(NOT[230])
(l.1573,c.25) get tok: STRING(()
(l.1573,c.27) get tok: REF TAG(ch)
(l.1573,c.28) get tok: STRING(=)
(l.1573,c.31) get tok: STRING("}")
(l.1573,c.33) get tok: STRING(&)
(l.1573,c.38) get tok: REF TAG(bal)
(l.1573,c.39) get tok: STRING(=)
(l.1573,c.41) get tok: STRING(1)
(l.1573,c.42) get tok: STRING())
(l.1574,c.2) get tok: INT(DO[244])
(l.1575,c.2) get tok: INT(IF[62])
(l.1575,c.5) get tok: REF TAG(ch)
(l.1575,c.6) get tok: STRING(=)
(l.1575,c.9) get tok: STRING("{")
(l.1575,c.14) get tok: INT(THEN[190])
(l.1575,c.18) get tok: REF TAG(bal)
(l.1575,c.21) get tok: STRING(+:=)
(l.1576,c.0) get tok: STRING(1)
(l.1576,c.4) get tok: INT(ELIF[9])
(l.1576,c.7) get tok: REF TAG(ch)
(l.1576,c.8) get tok: STRING(=)
(l.1576,c.11) get tok: STRING("}")
(l.1576,c.16) get tok: INT(THEN[190])
(l.1576,c.20) get tok: REF TAG(bal)
(l.1576,c.23) get tok: STRING(-:=)
(l.1577,c.0) get tok: STRING(1)
(l.1577,c.2) get tok: INT(FI[107])
(l.1578,c.2) get tok: INT(OD[231])
(l.1580,c.2) get tok: CONTROL( )
(l.1582,c.2) get tok: CONTROL(m)
(l.1582,c.11) get tok: REF TAG(isupper)
(l.1582,c.12) get tok: STRING(()
(l.1582,c.14) get tok: REF TAG(ch)
(l.1582,c.15) get tok: STRING())
(l.1582,c.17) get tok: STRING(=)
(l.1582,c.19) get tok: STRING(()
(l.1582,c.21) get tok: REF TAG(ch)
(l.1582,c.23) get tok: STRING(>=)
(l.1582,c.26) get tok: STRING("A")
(l.1582,c.28) get tok: STRING(&)
(l.1582,c.31) get tok: REF TAG(ch)
(l.1582,c.33) get tok: STRING(<=)
(l.1582,c.36) get tok: STRING("Z")
(l.1582,c.37) get tok: STRING())
(l.1583,c.2) get tok: CONTROL(m)
(l.1583,c.11) get tok: REF TAG(islower)
(l.1583,c.12) get tok: STRING(()
(l.1583,c.14) get tok: REF TAG(ch)
(l.1583,c.15) get tok: STRING())
(l.1583,c.17) get tok: STRING(=)
(l.1583,c.19) get tok: STRING(()
(l.1583,c.21) get tok: REF TAG(ch)
(l.1583,c.23) get tok: STRING(>=)
(l.1583,c.26) get tok: STRING("a")
(l.1583,c.28) get tok: STRING(&)
(l.1583,c.31) get tok: REF TAG(ch)
(l.1583,c.33) get tok: STRING(<=)
(l.1583,c.36) get tok: STRING("z")
(l.1583,c.39) get tok: INT(OR[177])
(l.1583,c.42) get tok: REF TAG(ch)
(l.1583,c.43) get tok: STRING(=)
(l.1583,c.46) get tok: STRING("_")
(l.1583,c.47) get tok: STRING())
(l.1584,c.2) get tok: CONTROL(m)
(l.1584,c.11) get tok: REF TAG(isdigit)
(l.1584,c.12) get tok: STRING(()
(l.1584,c.14) get tok: REF TAG(ch)
(l.1584,c.15) get tok: STRING())
(l.1584,c.17) get tok: STRING(=)
(l.1584,c.19) get tok: STRING(()
(l.1584,c.21) get tok: REF TAG(ch)
(l.1584,c.23) get tok: STRING(>=)
(l.1584,c.26) get tok: STRING("0")
(l.1584,c.28) get tok: STRING(&)
(l.1584,c.31) get tok: REF TAG(ch)
(l.1584,c.33) get tok: STRING(<=)
(l.1584,c.36) get tok: STRING("9")
(l.1584,c.39) get tok: INT(OR[177])
(l.1584,c.42) get tok: REF TAG(ch)
(l.1584,c.43) get tok: STRING(=)
(l.1584,c.46) get tok: STRING(".")
(l.1584,c.47) get tok: STRING())
(l.1586,c.2) get tok: CONTROL(<)
(l.1587,c.4) get tok: INT(PROC[69])
(l.1587,c.13) get tok: REF TAG(gettok)
(l.1587,c.14) get tok: STRING(=)
(l.1587,c.20) get tok: REF TAG(TOKEN)
(l.1588,c.0) get tok: STRING(:)
(l.1588,c.5) get tok: INT(BEGIN[227])
(l.1589,c.5) get tok: REF TAG(TOKEN)
(l.1589,c.8) get tok: CONTROL(!)
(l.1589,c.9) get tok: REF TAG(t)
(l.1589,c.10) get tok: STRING(;)
(l.1589,c.12) get tok: CONTROL(&)
(l.1589,c.19) get tok: INT(STRING[156])
(l.1589,c.22) get tok: CONTROL(!)
(l.1589,c.23) get tok: REF TAG(s)
(l.1589,c.24) get tok: STRING(;)
(l.1589,c.26) get tok: CONTROL(&)
(l.1589,c.31) get tok: INT(BOOL[184])
(l.1589,c.37) get tok: REF TAG(valid)
(l.1589,c.39) get tok: STRING(:=)
(l.1589,c.43) get tok: INT(TRUE[64])
(l.1589,c.44) get tok: STRING(;)
(l.1590,c.5) get tok: INT(WHILE[99])
(l.1591,c.4) get tok: INT(CHAR[113])
(l.1591,c.7) get tok: REF TAG(ch)
(l.1591,c.9) get tok: STRING(:=)
(l.1591,c.18) get tok: REF TAG(nextchar)
(l.1591,c.19) get tok: STRING(;)
(l.1592,c.2) get tok: INT(IF[62])
(l.1592,c.15) get tok: REF TAG(inputended)
(l.1592,c.19) get tok: INT(THEN[190])
(l.1592,c.21) get tok: REF TAG(t)
(l.1592,c.23) get tok: STRING(:=)
(l.1592,c.28) get tok: INT(EMPTY[197])
(l.1592,c.29) get tok: STRING(;)
(l.1592,c.35) get tok: INT(FALSE[123])
(l.1593,c.4) get tok: INT(ELIF[9])
(l.1593,c.8) get tok: REF TAG(ch)
(l.1593,c.9) get tok: STRING(=)
(l.1593,c.16) get tok: REF TAG(blank)
(l.1593,c.18) get tok: INT(OR[177])
(l.1593,c.22) get tok: REF TAG(ch)
(l.1593,c.23) get tok: STRING(=)
(l.1593,c.31) get tok: REF TAG(tabch)
(l.1593,c.35) get tok: INT(THEN[190])
(l.1593,c.40) get tok: INT(TRUE[64])
(l.1594,c.4) get tok: INT(ELIF[9])
(l.1594,c.13) get tok: REF TAG(isupper)
(l.1594,c.14) get tok: STRING(()
(l.1594,c.16) get tok: REF TAG(ch)
(l.1594,c.17) get tok: STRING())
(l.1594,c.22) get tok: INT(THEN[190])
(l.1594,c.25) get tok: CONTROL(<)
(l.1595,c.4) get tok: INT(ELIF[9])
(l.1595,c.13) get tok: REF TAG(islower)
(l.1595,c.14) get tok: STRING(()
(l.1595,c.16) get tok: REF TAG(ch)
(l.1595,c.17) get tok: STRING())
(l.1595,c.22) get tok: INT(THEN[190])
(l.1595,c.25) get tok: CONTROL(<)
(l.1596,c.4) get tok: INT(ELIF[9])
(l.1596,c.13) get tok: REF TAG(isdigit)
(l.1596,c.14) get tok: STRING(()
(l.1596,c.16) get tok: REF TAG(ch)
(l.1596,c.17) get tok: STRING())
(l.1596,c.22) get tok: INT(THEN[190])
(l.1596,c.25) get tok: CONTROL(<)
(l.1597,c.4) get tok: INT(ELIF[9])
(l.1597,c.7) get tok: REF TAG(ch)
(l.1597,c.8) get tok: STRING(=)
(l.1597,c.12) get tok: STRING("@")
(l.1597,c.17) get tok: INT(THEN[190])
(l.1597,c.20) get tok: CONTROL(<)
(l.1598,c.4) get tok: INT(ELSE[4])
(l.1598,c.7) get tok: CONTROL(<)
(l.1599,c.2) get tok: INT(FI[107])
(l.1600,c.2) get tok: INT(DO[244])
(l.1600,c.7) get tok: INT(SKIP[44])
(l.1600,c.10) get tok: INT(OD[231])
(l.1600,c.11) get tok: STRING(;)
(l.1601,c.17) get tok: REF TAG(debugprinttoken)
(l.1601,c.18) get tok: STRING(()
(l.1602,c.5) get tok: STRING("(l.")
(l.1602,c.6) get tok: STRING(+)
(l.1602,c.11) get tok: REF TAG(whole)
(l.1602,c.12) get tok: STRING(()
(l.1602,c.14) get tok: REF TAG(n)
(l.1602,c.16) get tok: INT(OF[97])
(l.1602,c.20) get tok: REF TAG(web)
(l.1602,c.21) get tok: STRING(,)
(l.1602,c.22) get tok: STRING(0)
(l.1602,c.23) get tok: STRING())
(l.1603,c.0) get tok: STRING(+)
(l.1603,c.5) get tok: STRING(",c.")
(l.1603,c.6) get tok: STRING(+)
(l.1603,c.11) get tok: REF TAG(whole)
(l.1603,c.12) get tok: STRING(()
(l.1603,c.16) get tok: REF TAG(loc)
(l.1603,c.18) get tok: INT(OF[97])
(l.1603,c.22) get tok: REF TAG(web)
(l.1603,c.23) get tok: STRING(,)
(l.1603,c.24) get tok: STRING(0)
(l.1603,c.25) get tok: STRING())
(l.1603,c.26) get tok: STRING(+)
(l.1603,c.39) get tok: STRING(") get tok: ")
(l.1603,c.40) get tok: STRING(,)
(l.1603,c.41) get tok: REF TAG(t)
(l.1603,c.42) get tok: STRING())
(l.1603,c.43) get tok: STRING(;)
(l.1605,c.0) get tok: REF TAG(t)
(l.1605,c.3) get tok: INT(END[202])
(l.1605,c.4) get tok: STRING(;)
(l.1607,c.2) get tok: CONTROL( )
(l.1612,c.2) get tok: CONTROL(<)
(l.1613,c.1) get tok: REF TAG(s)
(l.1613,c.3) get tok: STRING(:=)
(l.1613,c.5) get tok: REF TAG(ch)
(l.1613,c.6) get tok: STRING(;)
(l.1614,c.5) get tok: INT(WHILE[99])
(l.1615,c.2) get tok: INT(IF[62])
(l.1615,c.7) get tok: REF TAG(loc)
(l.1615,c.9) get tok: INT(OF[97])
(l.1615,c.14) get tok: REF TAG(web)
(l.1615,c.15) get tok: STRING(=)
(l.1615,c.20) get tok: REF TAG(upb)
(l.1615,c.22) get tok: INT(OF[97])
(l.1616,c.0) get tok: REF TAG(web)
(l.1616,c.4) get tok: INT(THEN[190])
(l.1616,c.10) get tok: INT(FALSE[123])
(l.1617,c.4) get tok: INT(ELSE[4])
(l.1617,c.10) get tok: REF TAG(valid)
(l.1617,c.12) get tok: STRING(:=)
(l.1617,c.13) get tok: STRING(()
(l.1617,c.15) get tok: REF TAG(ch)
(l.1617,c.17) get tok: STRING(:=)
(l.1617,c.26) get tok: REF TAG(nextchar)
(l.1617,c.27) get tok: STRING())
(l.1617,c.32) get tok: REF TAG(CHOP)
(l.1617,c.44) get tok: REF TAG(boldrange)
(l.1617,c.46) get tok: STRING(>=)
(l.1617,c.50) get tok: INT(LWB[148])
(l.1618,c.0) get tok: REF TAG(boldrange)
(l.1618,c.2) get tok: INT(FI[107])
(l.1619,c.2) get tok: INT(DO[244])
(l.1620,c.1) get tok: REF TAG(s)
(l.1620,c.4) get tok: STRING(+:=)
(l.1621,c.0) get tok: REF TAG(ch)
(l.1621,c.2) get tok: INT(OD[231])
(l.1621,c.3) get tok: STRING(;)
(l.1623,c.2) get tok: INT(IF[62])
(l.1623,c.6) get tok: INT(NOT[230])
(l.1623,c.13) get tok: REF TAG(valid)
(l.1624,c.4) get tok: INT(THEN[190])
(l.1625,c.0) get tok: REF TAG(backspaceinput)
(l.1625,c.2) get tok: INT(FI[107])
(l.1625,c.3) get tok: STRING(;)
(l.1627,c.2) get tok: CONTROL( )
(l.1639,c.2) get tok: CONTROL(m)
(l.1639,c.24) get tok: REF TAG(briefcommentsymbol)
(l.1639,c.25) get tok: STRING(=)
(l.1640,c.0) get tok: STRING(192)
(l.1640,c.2) get tok: CONTROL(m)
(l.1640,c.18) get tok: REF TAG(commentsymbol)
(l.1640,c.19) get tok: STRING(=)
(l.1642,c.0) get tok: STRING(127)
(l.1642,c.2) get tok: CONTROL(<)
(l.1643,c.2) get tok: INT(IF[62])
(l.1643,c.6) get tok: INT(INT[195])
(l.1643,c.10) get tok: REF TAG(bs)
(l.1643,c.11) get tok: STRING(=)
(l.1643,c.18) get tok: REF TAG(LOOKUP)
(l.1643,c.20) get tok: REF TAG(s)
(l.1643,c.21) get tok: STRING(;)
(l.1643,c.25) get tok: REF TAG(bs)
(l.1643,c.26) get tok: STRING(=)
(l.1644,c.0) get tok: STRING(0)
(l.1644,c.4) get tok: INT(THEN[190])
(l.1645,c.1) get tok: REF TAG(t)
(l.1645,c.3) get tok: STRING(:=)
(l.1645,c.7) get tok: INT(HEAP[48])
(l.1645,c.11) get tok: REF TAG(TAG)
(l.1645,c.13) get tok: STRING(:=)
(l.1645,c.14) get tok: STRING(()
(l.1645,c.15) get tok: REF TAG(s)
(l.1645,c.16) get tok: STRING(,)
(l.1645,c.22) get tok: REF TAG(notag)
(l.1645,c.23) get tok: STRING(,)
(l.1645,c.29) get tok: REF TAG(notag)
(l.1645,c.30) get tok: STRING())
(l.1645,c.31) get tok: STRING(;)
(l.1645,c.37) get tok: INT(FALSE[123])
(l.1646,c.4) get tok: INT(ELIF[9])
(l.1647,c.3) get tok: REF TAG(bs)
(l.1647,c.5) get tok: STRING(/=)
(l.1647,c.27) get tok: REF TAG(briefcommentsymbol)
(l.1647,c.28) get tok: STRING(&)
(l.1647,c.32) get tok: REF TAG(bs)
(l.1647,c.34) get tok: STRING(/=)
(l.1648,c.0) get tok: REF TAG(commentsymbol)
(l.1648,c.4) get tok: INT(THEN[190])
(l.1648,c.6) get tok: REF TAG(t)
(l.1648,c.9) get tok: STRING(:=-)
(l.1648,c.11) get tok: REF TAG(bs)
(l.1648,c.12) get tok: STRING(;)
(l.1648,c.18) get tok: INT(FALSE[123])
(l.1649,c.4) get tok: INT(ELIF[9])
(l.1649,c.15) get tok: REF TAG(incomment)
(l.1649,c.17) get tok: STRING(/=)
(l.1650,c.0) get tok: STRING(0)
(l.1650,c.4) get tok: INT(THEN[190])
(l.1651,c.1) get tok: REF TAG(t)
(l.1651,c.4) get tok: STRING(:=-)
(l.1651,c.6) get tok: REF TAG(bs)
(l.1651,c.7) get tok: STRING(;)
(l.1651,c.13) get tok: INT(FALSE[123])
(l.1652,c.4) get tok: INT(ELIF[9])
(l.1653,c.2) get tok: CONTROL(<)
(l.1655,c.0) get tok: REF TAG(inputended)
(l.1655,c.4) get tok: INT(THEN[190])
(l.1656,c.9) get tok: REF TAG(errprint)
(l.1656,c.10) get tok: STRING(()
(l.1657,c.0) get tok: STRING("input ended while searching for ")
(l.1657,c.1) get tok: STRING(+)
(l.1657,c.2) get tok: STRING(()
(l.1657,c.12) get tok: REF TAG(incomment)
(l.1657,c.13) get tok: STRING(=)
(l.1657,c.27) get tok: REF TAG(commentsymbol)
(l.1657,c.28) get tok: STRING(|)
(l.1657,c.37) get tok: STRING("COMMENT")
(l.1657,c.38) get tok: STRING(|)
(l.1657,c.42) get tok: STRING("CO")
(l.1657,c.43) get tok: STRING())
(l.1657,c.44) get tok: STRING())
(l.1657,c.45) get tok: STRING(;)
(l.1658,c.1) get tok: REF TAG(t)
(l.1658,c.3) get tok: STRING(:=)
(l.1658,c.8) get tok: INT(EMPTY[197])
(l.1658,c.9) get tok: STRING(;)
(l.1658,c.15) get tok: INT(FALSE[123])
(l.1659,c.4) get tok: INT(ELSE[4])
(l.1659,c.9) get tok: INT(TRUE[64])
(l.1660,c.2) get tok: INT(FI[107])
(l.1662,c.2) get tok: CONTROL( )
(l.1667,c.2) get tok: CONTROL(<)
(l.1668,c.10) get tok: REF TAG(incomment)
(l.1668,c.13) get tok: STRING(:=-)
(l.1668,c.15) get tok: REF TAG(bs)
(l.1668,c.16) get tok: STRING(;)
(l.1670,c.5) get tok: INT(WHILE[99])
(l.1671,c.4) get tok: INT(CASE[137])
(l.1672,c.0) get tok: REF TAG(gettok)
(l.1672,c.2) get tok: INT(IN[306])
(l.1673,c.1) get tok: STRING(()
(l.1673,c.4) get tok: INT(INT[195])
(l.1673,c.6) get tok: REF TAG(n)
(l.1673,c.7) get tok: STRING())
(l.1673,c.8) get tok: STRING(:)
(l.1673,c.10) get tok: REF TAG(n)
(l.1673,c.12) get tok: STRING(/=)
(l.1674,c.0) get tok: REF TAG(incomment)
(l.1674,c.1) get tok: STRING(,)
(l.1675,c.1) get tok: STRING(()
(l.1675,c.5) get tok: INT(VOID[181])
(l.1675,c.6) get tok: STRING())
(l.1675,c.7) get tok: STRING(:)
(l.1675,c.13) get tok: INT(FALSE[123])
(l.1676,c.3) get tok: INT(OUT[155])
(l.1676,c.8) get tok: INT(TRUE[64])
(l.1677,c.4) get tok: INT(ESAC[39])
(l.1678,c.2) get tok: INT(DO[244])
(l.1678,c.7) get tok: INT(SKIP[44])
(l.1678,c.10) get tok: INT(OD[231])
(l.1678,c.11) get tok: STRING(;)
(l.1679,c.10) get tok: REF TAG(incomment)
(l.1679,c.12) get tok: STRING(:=)
(l.1679,c.13) get tok: STRING(0)
(l.1679,c.14) get tok: STRING(;)
(l.1681,c.2) get tok: CONTROL( )
(l.1685,c.2) get tok: CONTROL(<)
(l.1686,c.3) get tok: INT(INT[195])
(l.1686,c.14) get tok: REF TAG(incomment)
(l.1686,c.16) get tok: STRING(:=)
(l.1686,c.17) get tok: STRING(0)
(l.1686,c.18) get tok: STRING(;)
(l.1688,c.2) get tok: CONTROL( )
(l.1692,c.2) get tok: CONTROL(<)
(l.1693,c.2) get tok: INT(OP[87])
(l.1693,c.10) get tok: REF TAG(COMPACT)
(l.1693,c.12) get tok: STRING(=)
(l.1693,c.14) get tok: STRING(()
(l.1693,c.15) get tok: STRING([)
(l.1693,c.16) get tok: STRING(])
(l.1693,c.20) get tok: INT(CHAR[113])
(l.1693,c.24) get tok: REF TAG(tag)
(l.1693,c.25) get tok: STRING())
(l.1693,c.26) get tok: STRING([)
(l.1693,c.27) get tok: STRING(])
(l.1693,c.31) get tok: INT(CHAR[113])
(l.1694,c.0) get tok: STRING(:)
(l.1694,c.5) get tok: INT(BEGIN[227])
(l.1695,c.1) get tok: STRING([)
(l.1695,c.4) get tok: INT(LWB[148])
(l.1695,c.8) get tok: REF TAG(tag)
(l.1695,c.9) get tok: STRING(:)
(l.1695,c.12) get tok: INT(UPB[150])
(l.1695,c.16) get tok: REF TAG(tag)
(l.1695,c.17) get tok: STRING(])
(l.1695,c.21) get tok: INT(CHAR[113])
(l.1695,c.29) get tok: REF TAG(loctag)
(l.1695,c.30) get tok: STRING(;)
(l.1696,c.3) get tok: INT(INT[195])
(l.1696,c.6) get tok: CONTROL(!)
(l.1696,c.7) get tok: REF TAG(n)
(l.1696,c.9) get tok: STRING(:=)
(l.1696,c.12) get tok: INT(LWB[148])
(l.1696,c.16) get tok: REF TAG(tag)
(l.1696,c.17) get tok: STRING(-)
(l.1696,c.18) get tok: STRING(1)
(l.1696,c.19) get tok: STRING(;)
(l.1697,c.2) get tok: CONTROL(#)
(l.1698,c.3) get tok: INT(FOR[138])
(l.1698,c.6) get tok: REF TAG(i)
(l.1698,c.10) get tok: INT(FROM[176])
(l.1698,c.14) get tok: INT(LWB[148])
(l.1698,c.19) get tok: REF TAG(tag)
(l.1698,c.21) get tok: INT(TO[187])
(l.1698,c.25) get tok: INT(UPB[150])
(l.1699,c.0) get tok: REF TAG(tag)
(l.1699,c.2) get tok: INT(DO[244])
(l.1700,c.2) get tok: INT(IF[62])
(l.1700,c.7) get tok: INT(CHAR[113])
(l.1700,c.10) get tok: REF TAG(ti)
(l.1700,c.11) get tok: STRING(=)
(l.1700,c.14) get tok: REF TAG(tag)
(l.1700,c.15) get tok: STRING([)
(l.1700,c.16) get tok: REF TAG(i)
(l.1700,c.17) get tok: STRING(])
(l.1700,c.18) get tok: STRING(;)
(l.1700,c.21) get tok: REF TAG(ti)
(l.1700,c.23) get tok: STRING(/=)
(l.1701,c.0) get tok: REF TAG(blank)
(l.1701,c.4) get tok: INT(THEN[190])
(l.1701,c.12) get tok: REF TAG(loctag)
(l.1701,c.13) get tok: STRING([)
(l.1701,c.14) get tok: REF TAG(n)
(l.1701,c.17) get tok: STRING(+:=)
(l.1701,c.18) get tok: STRING(1)
(l.1701,c.19) get tok: STRING(])
(l.1701,c.21) get tok: STRING(:=)
(l.1702,c.0) get tok: REF TAG(ti)
(l.1702,c.2) get tok: INT(FI[107])
(l.1703,c.2) get tok: INT(OD[231])
(l.1703,c.3) get tok: STRING(;)
(l.1704,c.2) get tok: CONTROL(#)
(l.1705,c.7) get tok: REF TAG(loctag)
(l.1705,c.8) get tok: STRING([)
(l.1705,c.9) get tok: STRING(:)
(l.1705,c.10) get tok: REF TAG(n)
(l.1705,c.11) get tok: STRING(])
(l.1706,c.3) get tok: INT(END[202])
(l.1706,c.4) get tok: STRING(;)
(l.1708,c.2) get tok: CONTROL( )
(l.1711,c.2) get tok: CONTROL(<)
(l.1712,c.1) get tok: REF TAG(s)
(l.1712,c.3) get tok: STRING(:=)
(l.1712,c.5) get tok: REF TAG(ch)
(l.1712,c.6) get tok: STRING(;)
(l.1713,c.5) get tok: INT(WHILE[99])
(l.1714,c.2) get tok: INT(IF[62])
(l.1715,c.0) get tok: REF TAG(inputended)
(l.1715,c.4) get tok: INT(THEN[190])
(l.1715,c.10) get tok: INT(FALSE[123])
(l.1716,c.4) get tok: INT(ELSE[4])
(l.1716,c.10) get tok: REF TAG(valid)
(l.1716,c.12) get tok: STRING(:=)
(l.1716,c.13) get tok: STRING(()
(l.1716,c.15) get tok: REF TAG(ch)
(l.1716,c.17) get tok: STRING(:=)
(l.1716,c.26) get tok: REF TAG(nextchar)
(l.1716,c.27) get tok: STRING())
(l.1716,c.32) get tok: REF TAG(CHOP)
(l.1716,c.42) get tok: REF TAG(idrange)
(l.1716,c.44) get tok: STRING(>=)
(l.1716,c.48) get tok: INT(LWB[148])
(l.1717,c.0) get tok: REF TAG(idrange)
(l.1717,c.2) get tok: INT(FI[107])
(l.1718,c.2) get tok: INT(DO[244])
(l.1719,c.1) get tok: REF TAG(s)
(l.1719,c.4) get tok: STRING(+:=)
(l.1720,c.0) get tok: REF TAG(ch)
(l.1720,c.2) get tok: INT(OD[231])
(l.1720,c.3) get tok: STRING(;)
(l.1721,c.2) get tok: INT(IF[62])
(l.1721,c.6) get tok: INT(NOT[230])
(l.1721,c.13) get tok: REF TAG(valid)
(l.1721,c.17) get tok: INT(THEN[190])
(l.1721,c.34) get tok: REF TAG(backspaceinput)
(l.1721,c.36) get tok: INT(FI[107])
(l.1721,c.37) get tok: STRING(;)
(l.1722,c.1) get tok: REF TAG(t)
(l.1722,c.3) get tok: STRING(:=)
(l.1722,c.7) get tok: INT(HEAP[48])
(l.1722,c.11) get tok: REF TAG(TAG)
(l.1722,c.13) get tok: STRING(:=)
(l.1722,c.14) get tok: STRING(()
(l.1722,c.21) get tok: REF TAG(COMPACT)
(l.1722,c.23) get tok: REF TAG(s)
(l.1722,c.24) get tok: STRING(,)
(l.1722,c.30) get tok: REF TAG(notag)
(l.1722,c.31) get tok: STRING(,)
(l.1722,c.37) get tok: REF TAG(notag)
(l.1722,c.38) get tok: STRING())
(l.1722,c.39) get tok: STRING(;)
(l.1723,c.5) get tok: INT(FALSE[123])
(l.1725,c.2) get tok: CONTROL( )
(l.1729,c.2) get tok: CONTROL(<)
(l.1730,c.1) get tok: REF TAG(s)
(l.1730,c.3) get tok: STRING(:=)
(l.1730,c.5) get tok: REF TAG(ch)
(l.1730,c.6) get tok: STRING(;)
(l.1731,c.5) get tok: INT(WHILE[99])
(l.1732,c.2) get tok: INT(IF[62])
(l.1732,c.5) get tok: REF TAG(ch)
(l.1732,c.7) get tok: STRING(:=)
(l.1732,c.16) get tok: REF TAG(nextchar)
(l.1732,c.17) get tok: STRING(;)
(l.1733,c.0) get tok: REF TAG(inputended)
(l.1733,c.4) get tok: INT(THEN[190])
(l.1733,c.10) get tok: INT(FALSE[123])
(l.1734,c.4) get tok: INT(ELSE[4])
(l.1734,c.7) get tok: REF TAG(ch)
(l.1734,c.9) get tok: STRING(>=)
(l.1734,c.12) get tok: STRING("0")
(l.1734,c.14) get tok: STRING(&)
(l.1734,c.17) get tok: REF TAG(ch)
(l.1734,c.19) get tok: STRING(<=)
(l.1734,c.22) get tok: STRING("9")
(l.1734,c.25) get tok: INT(OR[177])
(l.1734,c.29) get tok: REF TAG(ch)
(l.1734,c.33) get tok: REF TAG(CHOP)
(l.1734,c.45) get tok: STRING(" .abcdefr")
(l.1734,c.47) get tok: STRING(>)
(l.1735,c.0) get tok: STRING(0)
(l.1735,c.2) get tok: INT(FI[107])
(l.1736,c.2) get tok: INT(DO[244])
(l.1736,c.4) get tok: REF TAG(s)
(l.1736,c.7) get tok: STRING(+:=)
(l.1736,c.10) get tok: REF TAG(ch)
(l.1736,c.12) get tok: INT(OD[231])
(l.1736,c.13) get tok: STRING(;)
(l.1737,c.15) get tok: REF TAG(backspaceinput)
(l.1737,c.16) get tok: STRING(;)
(l.1737,c.18) get tok: REF TAG(t)
(l.1737,c.20) get tok: STRING(:=)
(l.1737,c.27) get tok: REF TAG(COMPACT)
(l.1737,c.34) get tok: INT(STRING[156])
(l.1737,c.35) get tok: STRING(()
(l.1737,c.36) get tok: REF TAG(s)
(l.1737,c.37) get tok: STRING())
(l.1737,c.38) get tok: STRING(;)
(l.1737,c.44) get tok: INT(FALSE[123])
(l.1739,c.2) get tok: CONTROL( )
(l.1742,c.2) get tok: CONTROL(<)
(l.1743,c.1) get tok: REF TAG(t)
(l.1743,c.3) get tok: STRING(:=)
(l.1743,c.5) get tok: INT(IF[62])
(l.1743,c.8) get tok: REF TAG(ch)
(l.1743,c.10) get tok: STRING(:=)
(l.1743,c.19) get tok: REF TAG(nextchar)
(l.1743,c.20) get tok: STRING(;)
(l.1744,c.0) get tok: REF TAG(inputended)
(l.1744,c.4) get tok: INT(THEN[190])
(l.1744,c.10) get tok: INT(EMPTY[197])
(l.1745,c.4) get tok: INT(ELSE[4])
(l.1745,c.9) get tok: INT(HEAP[48])
(l.1745,c.17) get tok: REF TAG(CONTROL)
(l.1745,c.19) get tok: REF TAG(h)
(l.1745,c.20) get tok: STRING(;)
(l.1745,c.24) get tok: REF TAG(cs)
(l.1745,c.26) get tok: INT(OF[97])
(l.1745,c.28) get tok: REF TAG(h)
(l.1745,c.30) get tok: STRING(:=)
(l.1745,c.32) get tok: REF TAG(ch)
(l.1745,c.33) get tok: STRING(;)
(l.1746,c.0) get tok: REF TAG(h)
(l.1746,c.2) get tok: INT(FI[107])
(l.1746,c.3) get tok: STRING(;)
(l.1747,c.5) get tok: INT(FALSE[123])
(l.1749,c.2) get tok: CONTROL( )
(l.1757,c.2) get tok: CONTROL(m)
(l.1757,c.14) get tok: REF TAG(miscchars)
(l.1757,c.15) get tok: STRING(=)
(l.1758,c.0) get tok: STRING("$(),;=?[\]{|}")
(l.1758,c.2) get tok: CONTROL(m)
(l.1758,c.12) get tok: REF TAG(opchars)
(l.1758,c.13) get tok: STRING(=)
(l.1760,c.0) get tok: STRING("%&*+-/:<=>^")
(l.1760,c.2) get tok: CONTROL(<)
(l.1761,c.2) get tok: INT(IF[62])
(l.1761,c.6) get tok: REF TAG(ch)
(l.1761,c.7) get tok: STRING(=)
(l.1762,c.0) get tok: STRING("""")
(l.1762,c.4) get tok: INT(THEN[190])
(l.1762,c.7) get tok: CONTROL(<)
(l.1763,c.4) get tok: INT(ELIF[9])
(l.1763,c.8) get tok: REF TAG(ch)
(l.1763,c.9) get tok: STRING(=)
(l.1764,c.0) get tok: STRING("#")
(l.1764,c.4) get tok: INT(THEN[190])
(l.1764,c.17) get tok: REF TAG(skiptochar)
(l.1764,c.18) get tok: STRING(()
(l.1764,c.20) get tok: REF TAG(ch)
(l.1764,c.21) get tok: STRING())
(l.1764,c.22) get tok: STRING(;)
(l.1764,c.27) get tok: INT(TRUE[64])
(l.1765,c.4) get tok: INT(ELIF[9])
(l.1765,c.8) get tok: REF TAG(ch)
(l.1765,c.12) get tok: REF TAG(CHOP)
(l.1765,c.24) get tok: REF TAG(miscchars)
(l.1765,c.25) get tok: STRING(>)
(l.1766,c.0) get tok: STRING(0)
(l.1766,c.4) get tok: INT(THEN[190])
(l.1766,c.6) get tok: REF TAG(t)
(l.1766,c.8) get tok: STRING(:=)
(l.1766,c.14) get tok: INT(STRING[156])
(l.1766,c.15) get tok: STRING(()
(l.1766,c.17) get tok: REF TAG(ch)
(l.1766,c.18) get tok: STRING())
(l.1766,c.19) get tok: STRING(;)
(l.1766,c.25) get tok: INT(FALSE[123])
(l.1767,c.4) get tok: INT(ELIF[9])
(l.1767,c.7) get tok: REF TAG(ch)
(l.1767,c.8) get tok: STRING(=)
(l.1768,c.0) get tok: STRING(":")
(l.1768,c.4) get tok: INT(THEN[190])
(l.1769,c.1) get tok: REF TAG(s)
(l.1769,c.3) get tok: STRING(:=)
(l.1769,c.5) get tok: REF TAG(ch)
(l.1769,c.6) get tok: STRING(;)
(l.1770,c.5) get tok: INT(WHILE[99])
(l.1770,c.20) get tok: REF TAG(charinstring)
(l.1770,c.21) get tok: STRING(()
(l.1770,c.23) get tok: REF TAG(ch)
(l.1770,c.25) get tok: STRING(:=)
(l.1770,c.34) get tok: REF TAG(nextchar)
(l.1770,c.35) get tok: STRING(,)
(l.1770,c.38) get tok: INT(LOC[108])
(l.1770,c.42) get tok: INT(INT[195])
(l.1770,c.43) get tok: STRING(,)
(l.1770,c.51) get tok: REF TAG(opchars)
(l.1770,c.52) get tok: STRING())
(l.1771,c.2) get tok: INT(DO[244])
(l.1772,c.1) get tok: REF TAG(s)
(l.1772,c.4) get tok: STRING(+:=)
(l.1773,c.0) get tok: REF TAG(ch)
(l.1773,c.2) get tok: INT(OD[231])
(l.1773,c.3) get tok: STRING(;)
(l.1774,c.15) get tok: REF TAG(backspaceinput)
(l.1774,c.16) get tok: STRING(;)
(l.1774,c.18) get tok: REF TAG(t)
(l.1774,c.20) get tok: STRING(:=)
(l.1774,c.21) get tok: REF TAG(s)
(l.1774,c.22) get tok: STRING(;)
(l.1775,c.5) get tok: INT(FALSE[123])
(l.1776,c.4) get tok: INT(ELIF[9])
(l.1777,c.3) get tok: REF TAG(ch)
(l.1777,c.7) get tok: REF TAG(CHOP)
(l.1777,c.17) get tok: REF TAG(opchars)
(l.1777,c.18) get tok: STRING(=)
(l.1778,c.0) get tok: STRING(0)
(l.1778,c.4) get tok: INT(THEN[190])
(l.1778,c.6) get tok: REF TAG(t)
(l.1778,c.8) get tok: STRING(:=)
(l.1778,c.14) get tok: INT(STRING[156])
(l.1778,c.15) get tok: STRING(()
(l.1778,c.17) get tok: REF TAG(ch)
(l.1778,c.18) get tok: STRING())
(l.1778,c.19) get tok: STRING(;)
(l.1778,c.25) get tok: INT(FALSE[123])
(l.1779,c.4) get tok: INT(ELSE[4])
(l.1780,c.5) get tok: INT(WHILE[99])
(l.1780,c.7) get tok: REF TAG(s)
(l.1780,c.10) get tok: STRING(+:=)
(l.1780,c.12) get tok: REF TAG(ch)
(l.1780,c.13) get tok: STRING(;)
(l.1780,c.16) get tok: REF TAG(ch)
(l.1780,c.18) get tok: STRING(:=)
(l.1780,c.27) get tok: REF TAG(nextchar)
(l.1780,c.28) get tok: STRING(;)
(l.1780,c.32) get tok: REF TAG(ch)
(l.1780,c.36) get tok: REF TAG(CHOP)
(l.1780,c.46) get tok: REF TAG(opchars)
(l.1780,c.47) get tok: STRING(>)
(l.1780,c.50) get tok: STRING(0)
(l.1780,c.52) get tok: INT(DO[244])
(l.1780,c.57) get tok: INT(SKIP[44])
(l.1780,c.60) get tok: INT(OD[231])
(l.1780,c.61) get tok: STRING(;)
(l.1781,c.15) get tok: REF TAG(backspaceinput)
(l.1781,c.16) get tok: STRING(;)
(l.1782,c.1) get tok: REF TAG(t)
(l.1782,c.3) get tok: STRING(:=)
(l.1782,c.9) get tok: INT(STRING[156])
(l.1782,c.10) get tok: STRING(()
(l.1782,c.11) get tok: REF TAG(s)
(l.1782,c.12) get tok: STRING())
(l.1782,c.13) get tok: STRING(;)
(l.1782,c.19) get tok: INT(FALSE[123])
(l.1783,c.2) get tok: INT(FI[107])
(l.1785,c.2) get tok: CONTROL( )
(l.1788,c.2) get tok: CONTROL(<)
(l.1789,c.1) get tok: REF TAG(s)
(l.1789,c.3) get tok: STRING(:=)
(l.1789,c.5) get tok: REF TAG(ch)
(l.1789,c.6) get tok: STRING(;)
(l.1790,c.5) get tok: INT(WHILE[99])
(l.1790,c.20) get tok: REF TAG(gathertochar)
(l.1790,c.21) get tok: STRING(()
(l.1790,c.22) get tok: REF TAG(s)
(l.1790,c.23) get tok: STRING(,)
(l.1790,c.25) get tok: REF TAG(ch)
(l.1790,c.26) get tok: STRING())
(l.1790,c.27) get tok: STRING(;)
(l.1790,c.29) get tok: STRING(()
(l.1790,c.31) get tok: REF TAG(ch)
(l.1790,c.33) get tok: STRING(:=)
(l.1790,c.42) get tok: REF TAG(nextchar)
(l.1790,c.43) get tok: STRING())
(l.1790,c.45) get tok: STRING(=)
(l.1791,c.0) get tok: STRING("""")
(l.1791,c.2) get tok: INT(DO[244])
(l.1792,c.1) get tok: REF TAG(s)
(l.1792,c.4) get tok: STRING(+:=)
(l.1793,c.0) get tok: REF TAG(ch)
(l.1793,c.2) get tok: INT(OD[231])
(l.1793,c.3) get tok: STRING(;)
(l.1794,c.15) get tok: REF TAG(backspaceinput)
(l.1794,c.16) get tok: STRING(;)
(l.1795,c.2) get tok: CONTROL(<)
(l.1797,c.2) get tok: CONTROL( )
(l.1804,c.2) get tok: CONTROL(<)
(l.1805,c.3) get tok: INT(INT[195])
(l.1805,c.8) get tok: REF TAG(nat)
(l.1805,c.10) get tok: STRING(:=)
(l.1805,c.11) get tok: STRING(0)
(l.1805,c.12) get tok: STRING(;)
(l.1805,c.17) get tok: INT(BOOL[184])
(l.1805,c.21) get tok: REF TAG(err)
(l.1805,c.23) get tok: STRING(:=)
(l.1805,c.28) get tok: INT(FALSE[123])
(l.1805,c.29) get tok: STRING(;)
(l.1806,c.2) get tok: CONTROL(#)
(l.1807,c.3) get tok: INT(FOR[138])
(l.1807,c.6) get tok: REF TAG(i)
(l.1807,c.10) get tok: INT(FROM[176])
(l.1807,c.14) get tok: INT(LWB[148])
(l.1807,c.17) get tok: REF TAG(s)
(l.1807,c.19) get tok: INT(TO[187])
(l.1807,c.23) get tok: INT(UPB[150])
(l.1808,c.0) get tok: REF TAG(s)
(l.1808,c.2) get tok: INT(DO[244])
(l.1809,c.4) get tok: REF TAG(nat)
(l.1809,c.7) get tok: STRING(+:=)
(l.1809,c.10) get tok: INT(ABS[226])
(l.1809,c.11) get tok: STRING(()
(l.1809,c.12) get tok: REF TAG(s)
(l.1809,c.13) get tok: STRING([)
(l.1809,c.14) get tok: REF TAG(i)
(l.1809,c.15) get tok: STRING(])
(l.1809,c.16) get tok: STRING(=)
(l.1809,c.20) get tok: STRING("@")
(l.1809,c.21) get tok: STRING())
(l.1810,c.2) get tok: INT(OD[231])
(l.1810,c.3) get tok: STRING(;)
(l.1811,c.2) get tok: CONTROL(#)
(l.1812,c.2) get tok: INT(IF[62])
(l.1812,c.6) get tok: INT(ODD[232])
(l.1813,c.0) get tok: REF TAG(nat)
(l.1813,c.4) get tok: INT(THEN[190])
(l.1813,c.14) get tok: REF TAG(errprint)
(l.1813,c.15) get tok: STRING(()
(l.1813,c.53) get tok: STRING("odd number of @-symbols in a string")
(l.1813,c.54) get tok: STRING())
(l.1815,c.4) get tok: INT(ELIF[9])
(l.1815,c.10) get tok: REF TAG(nat)
(l.1815,c.11) get tok: STRING(>)
(l.1816,c.0) get tok: STRING(0)
(l.1816,c.4) get tok: INT(THEN[190])
(l.1817,c.1) get tok: STRING([)
(l.1817,c.4) get tok: INT(LWB[148])
(l.1817,c.6) get tok: REF TAG(s)
(l.1817,c.7) get tok: STRING(:)
(l.1817,c.10) get tok: INT(UPB[150])
(l.1817,c.12) get tok: REF TAG(s)
(l.1817,c.13) get tok: STRING(-)
(l.1817,c.17) get tok: REF TAG(nat)
(l.1817,c.18) get tok: STRING(%)
(l.1817,c.19) get tok: STRING(2)
(l.1817,c.20) get tok: STRING(])
(l.1817,c.24) get tok: INT(CHAR[113])
(l.1817,c.27) get tok: REF TAG(ss)
(l.1817,c.28) get tok: STRING(;)
(l.1818,c.3) get tok: INT(INT[195])
(l.1818,c.7) get tok: REF TAG(pss)
(l.1818,c.9) get tok: STRING(:=)
(l.1818,c.12) get tok: INT(LWB[148])
(l.1818,c.15) get tok: REF TAG(ss)
(l.1818,c.16) get tok: STRING(-)
(l.1818,c.17) get tok: STRING(1)
(l.1818,c.18) get tok: STRING(;)
(l.1819,c.4) get tok: INT(BOOL[184])
(l.1819,c.7) get tok: CONTROL(!)
(l.1819,c.14) get tok: REF TAG(atread)
(l.1819,c.16) get tok: STRING(:=)
(l.1819,c.21) get tok: INT(FALSE[123])
(l.1819,c.22) get tok: STRING(;)
(l.1821,c.3) get tok: INT(FOR[138])
(l.1821,c.6) get tok: REF TAG(i)
(l.1821,c.10) get tok: INT(FROM[176])
(l.1821,c.14) get tok: INT(LWB[148])
(l.1821,c.17) get tok: REF TAG(s)
(l.1821,c.19) get tok: INT(TO[187])
(l.1821,c.23) get tok: INT(UPB[150])
(l.1821,c.26) get tok: REF TAG(s)
(l.1821,c.31) get tok: INT(WHILE[99])
(l.1821,c.35) get tok: INT(NOT[230])
(l.1822,c.0) get tok: REF TAG(err)
(l.1822,c.2) get tok: INT(DO[244])
(l.1823,c.4) get tok: INT(CHAR[113])
(l.1823,c.7) get tok: REF TAG(si)
(l.1823,c.8) get tok: STRING(=)
(l.1823,c.9) get tok: REF TAG(s)
(l.1823,c.10) get tok: STRING([)
(l.1823,c.11) get tok: REF TAG(i)
(l.1823,c.12) get tok: STRING(])
(l.1823,c.13) get tok: STRING(;)
(l.1824,c.2) get tok: INT(IF[62])
(l.1824,c.6) get tok: REF TAG(si)
(l.1824,c.7) get tok: STRING(=)
(l.1825,c.0) get tok: STRING("@")
(l.1825,c.4) get tok: INT(THEN[190])
(l.1826,c.2) get tok: INT(IF[62])
(l.1827,c.0) get tok: REF TAG(atread)
(l.1827,c.4) get tok: INT(THEN[190])
(l.1827,c.7) get tok: REF TAG(ss)
(l.1827,c.8) get tok: STRING([)
(l.1827,c.11) get tok: REF TAG(pss)
(l.1827,c.14) get tok: STRING(+:=)
(l.1827,c.15) get tok: STRING(1)
(l.1827,c.16) get tok: STRING(])
(l.1827,c.18) get tok: STRING(:=)
(l.1827,c.20) get tok: REF TAG(si)
(l.1827,c.21) get tok: STRING(;)
(l.1827,c.29) get tok: REF TAG(atread)
(l.1827,c.31) get tok: STRING(:=)
(l.1827,c.36) get tok: INT(FALSE[123])
(l.1828,c.4) get tok: INT(ELSE[4])
(l.1828,c.12) get tok: REF TAG(atread)
(l.1828,c.14) get tok: STRING(:=)
(l.1828,c.18) get tok: INT(TRUE[64])
(l.1829,c.2) get tok: INT(FI[107])
(l.1830,c.4) get tok: INT(ELIF[9])
(l.1831,c.0) get tok: REF TAG(atread)
(l.1831,c.4) get tok: INT(THEN[190])
(l.1831,c.14) get tok: REF TAG(errprint)
(l.1831,c.15) get tok: STRING(()
(l.1831,c.45) get tok: STRING("single @-symbol in a string")
(l.1831,c.46) get tok: STRING())
(l.1831,c.47) get tok: STRING(;)
(l.1833,c.7) get tok: REF TAG(atread)
(l.1833,c.9) get tok: STRING(:=)
(l.1833,c.14) get tok: INT(FALSE[123])
(l.1833,c.15) get tok: STRING(;)
(l.1833,c.19) get tok: REF TAG(err)
(l.1833,c.21) get tok: STRING(:=)
(l.1833,c.25) get tok: INT(TRUE[64])
(l.1834,c.4) get tok: INT(ELSE[4])
(l.1834,c.7) get tok: REF TAG(ss)
(l.1834,c.8) get tok: STRING([)
(l.1834,c.11) get tok: REF TAG(pss)
(l.1834,c.14) get tok: STRING(+:=)
(l.1834,c.15) get tok: STRING(1)
(l.1834,c.16) get tok: STRING(])
(l.1834,c.18) get tok: STRING(:=)
(l.1835,c.0) get tok: REF TAG(si)
(l.1835,c.2) get tok: INT(FI[107])
(l.1836,c.2) get tok: INT(OD[231])
(l.1836,c.3) get tok: STRING(;)
(l.1837,c.1) get tok: REF TAG(s)
(l.1837,c.3) get tok: STRING(:=)
(l.1837,c.4) get tok: STRING(()
(l.1837,c.7) get tok: REF TAG(err)
(l.1837,c.8) get tok: STRING(|)
(l.1837,c.10) get tok: STRING("")
(l.1837,c.11) get tok: STRING(|)
(l.1837,c.13) get tok: REF TAG(ss)
(l.1837,c.14) get tok: STRING())
(l.1838,c.2) get tok: INT(FI[107])
(l.1838,c.3) get tok: STRING(;)
(l.1839,c.1) get tok: STRING(()
(l.1839,c.4) get tok: REF TAG(err)
(l.1839,c.5) get tok: STRING(|)
(l.1839,c.9) get tok: INT(TRUE[64])
(l.1839,c.10) get tok: STRING(|)
(l.1839,c.11) get tok: REF TAG(t)
(l.1839,c.13) get tok: STRING(:=)
(l.1839,c.14) get tok: REF TAG(s)
(l.1839,c.15) get tok: STRING(;)
(l.1839,c.17) get tok: CONTROL(&)
(l.1839,c.23) get tok: INT(FALSE[123])
(l.1839,c.24) get tok: STRING())
(l.1841,c.2) get tok: CONTROL(2)
(l.1878,c.2) get tok: CONTROL( )
(l.1884,c.2) get tok: CONTROL(<)
(l.1885,c.4) get tok: INT(PROC[69])
(l.1885,c.18) get tok: REF TAG(gathertocs)
(l.1885,c.19) get tok: STRING(=)
(l.1885,c.21) get tok: STRING(()
(l.1885,c.25) get tok: INT(CHAR[113])
(l.1885,c.28) get tok: CONTROL(!)
(l.1885,c.29) get tok: REF TAG(c)
(l.1885,c.30) get tok: STRING())
(l.1885,c.36) get tok: INT(STRING[156])
(l.1886,c.0) get tok: STRING(:)
(l.1886,c.5) get tok: INT(BEGIN[227])
(l.1887,c.6) get tok: INT(STRING[156])
(l.1887,c.9) get tok: CONTROL(!)
(l.1887,c.10) get tok: REF TAG(s)
(l.1887,c.11) get tok: STRING(;)
(l.1887,c.16) get tok: INT(CHAR[113])
(l.1887,c.19) get tok: REF TAG(ch)
(l.1887,c.20) get tok: STRING(;)
(l.1887,c.25) get tok: INT(BOOL[184])
(l.1887,c.28) get tok: REF TAG(sp)
(l.1887,c.30) get tok: STRING(:=)
(l.1887,c.35) get tok: INT(FALSE[123])
(l.1887,c.36) get tok: STRING(;)
(l.1888,c.5) get tok: INT(WHILE[99])
(l.1889,c.2) get tok: INT(IF[62])
(l.1889,c.5) get tok: REF TAG(ch)
(l.1889,c.7) get tok: STRING(:=)
(l.1889,c.16) get tok: REF TAG(nextchar)
(l.1889,c.17) get tok: STRING(;)
(l.1890,c.0) get tok: REF TAG(inputended)
(l.1890,c.4) get tok: INT(THEN[190])
(l.1890,c.14) get tok: REF TAG(errprint)
(l.1890,c.15) get tok: STRING(()
(l.1890,c.42) get tok: STRING("EOF while gathering to @")
(l.1890,c.43) get tok: STRING(+)
(l.1890,c.44) get tok: REF TAG(c)
(l.1890,c.45) get tok: STRING())
(l.1890,c.46) get tok: STRING(;)
(l.1890,c.52) get tok: INT(FALSE[123])
(l.1892,c.4) get tok: INT(ELIF[9])
(l.1892,c.7) get tok: REF TAG(ch)
(l.1892,c.8) get tok: STRING(=)
(l.1893,c.0) get tok: STRING("@")
(l.1893,c.4) get tok: INT(THEN[190])
(l.1894,c.2) get tok: INT(IF[62])
(l.1894,c.4) get tok: STRING(()
(l.1894,c.6) get tok: REF TAG(ch)
(l.1894,c.8) get tok: STRING(:=)
(l.1894,c.17) get tok: REF TAG(nextchar)
(l.1894,c.18) get tok: STRING())
(l.1894,c.20) get tok: STRING(=)
(l.1895,c.0) get tok: REF TAG(c)
(l.1895,c.4) get tok: INT(THEN[190])
(l.1895,c.10) get tok: INT(FALSE[123])
(l.1896,c.4) get tok: INT(ELSE[4])
(l.1896,c.6) get tok: REF TAG(s)
(l.1896,c.9) get tok: STRING(+:=)
(l.1896,c.13) get tok: STRING("@")
(l.1896,c.14) get tok: STRING(+)
(l.1896,c.16) get tok: REF TAG(ch)
(l.1896,c.17) get tok: STRING(;)
(l.1896,c.22) get tok: INT(TRUE[64])
(l.1897,c.2) get tok: INT(FI[107])
(l.1898,c.4) get tok: INT(ELIF[9])
(l.1898,c.7) get tok: REF TAG(ch)
(l.1898,c.8) get tok: STRING(=)
(l.1898,c.14) get tok: REF TAG(blank)
(l.1898,c.16) get tok: INT(OR[177])
(l.1898,c.19) get tok: REF TAG(ch)
(l.1898,c.20) get tok: STRING(=)
(l.1899,c.0) get tok: REF TAG(tabch)
(l.1899,c.4) get tok: INT(THEN[190])
(l.1900,c.2) get tok: INT(IF[62])
(l.1900,c.6) get tok: INT(NOT[230])
(l.1901,c.0) get tok: REF TAG(sp)
(l.1901,c.4) get tok: INT(THEN[190])
(l.1901,c.6) get tok: REF TAG(s)
(l.1901,c.9) get tok: STRING(+:=)
(l.1901,c.11) get tok: REF TAG(ch)
(l.1901,c.12) get tok: STRING(;)
(l.1901,c.15) get tok: REF TAG(sp)
(l.1901,c.17) get tok: STRING(:=)
(l.1901,c.21) get tok: INT(TRUE[64])
(l.1902,c.4) get tok: INT(ELSE[4])
(l.1902,c.9) get tok: INT(TRUE[64])
(l.1903,c.2) get tok: INT(FI[107])
(l.1904,c.4) get tok: INT(ELSE[4])
(l.1904,c.6) get tok: REF TAG(s)
(l.1904,c.9) get tok: STRING(+:=)
(l.1904,c.11) get tok: REF TAG(ch)
(l.1904,c.12) get tok: STRING(;)
(l.1904,c.16) get tok: INT(NOT[230])
(l.1904,c.17) get tok: STRING(()
(l.1904,c.19) get tok: REF TAG(sp)
(l.1904,c.21) get tok: STRING(:=)
(l.1904,c.26) get tok: INT(FALSE[123])
(l.1904,c.27) get tok: STRING())
(l.1905,c.2) get tok: INT(FI[107])
(l.1906,c.2) get tok: INT(DO[244])
(l.1907,c.4) get tok: INT(SKIP[44])
(l.1908,c.2) get tok: INT(OD[231])
(l.1908,c.3) get tok: STRING(;)
(l.1910,c.0) get tok: REF TAG(s)
(l.1910,c.3) get tok: INT(END[202])
(l.1910,c.4) get tok: STRING(;)
(l.1912,c.2) get tok: CONTROL( )
(l.1916,c.2) get tok: CONTROL(<)
(l.1917,c.4) get tok: INT(CASE[137])
(l.1918,c.0) get tok: REF TAG(curtok)
(l.1918,c.2) get tok: INT(IN[306])
(l.1919,c.1) get tok: STRING(()
(l.1919,c.4) get tok: INT(INT[195])
(l.1919,c.7) get tok: REF TAG(bs)
(l.1919,c.8) get tok: STRING())
(l.1919,c.9) get tok: STRING(:)
(l.1919,c.12) get tok: CONTROL(<)
(l.1919,c.77) get tok: STRING(,)
(l.1920,c.1) get tok: STRING(()
(l.1920,c.8) get tok: REF TAG(CONTROL)
(l.1920,c.11) get tok: REF TAG(co)
(l.1920,c.12) get tok: STRING())
(l.1920,c.13) get tok: STRING(:)
(l.1920,c.16) get tok: CONTROL(<)
(l.1920,c.74) get tok: STRING(,)
(l.1921,c.1) get tok: STRING(()
(l.1921,c.7) get tok: INT(STRING[156])
(l.1921,c.9) get tok: REF TAG(s)
(l.1921,c.10) get tok: STRING())
(l.1921,c.11) get tok: STRING(:)
(l.1921,c.14) get tok: CONTROL(<)
(l.1921,c.77) get tok: STRING(,)
(l.1922,c.1) get tok: STRING(()
(l.1922,c.4) get tok: INT(REF[53])
(l.1922,c.8) get tok: REF TAG(TAG)
(l.1922,c.12) get tok: REF TAG(tag)
(l.1922,c.13) get tok: STRING())
(l.1922,c.14) get tok: STRING(:)
(l.1922,c.17) get tok: CONTROL(<)
(l.1923,c.3) get tok: INT(OUT[155])
(l.1923,c.16) get tok: REF TAG(addmodtext)
(l.1923,c.17) get tok: STRING(()
(l.1923,c.31) get tok: REF TAG(unnamedmodule)
(l.1923,c.32) get tok: STRING(,)
(l.1923,c.36) get tok: REF TAG(TEXT)
(l.1923,c.37) get tok: STRING(()
(l.1923,c.43) get tok: REF TAG(curtok)
(l.1923,c.44) get tok: STRING(,)
(l.1923,c.51) get tok: REF TAG(notext)
(l.1923,c.52) get tok: STRING())
(l.1923,c.53) get tok: STRING())
(l.1923,c.54) get tok: STRING(;)
(l.1924,c.2) get tok: CONTROL(<)
(l.1925,c.4) get tok: INT(ESAC[39])
(l.1927,c.2) get tok: CONTROL( )
(l.1931,c.2) get tok: CONTROL(<)
(l.1932,c.4) get tok: INT(CASE[137])
(l.1933,c.0) get tok: REF TAG(curmood)
(l.1933,c.2) get tok: INT(IN[306])
(l.1934,c.4) get tok: INT(SKIP[44])
(l.1935,c.1) get tok: STRING(,)
(l.1936,c.5) get tok: INT(BEGIN[227])
(l.1937,c.9) get tok: REF TAG(errprint)
(l.1937,c.10) get tok: STRING(()
(l.1937,c.62) get tok: STRING("a macro identifier cannot be a recognised bold tag")
(l.1937,c.63) get tok: STRING())
(l.1937,c.64) get tok: STRING(;)
(l.1939,c.8) get tok: REF TAG(curmood)
(l.1939,c.10) get tok: STRING(:=)
(l.1940,c.0) get tok: REF TAG(htmlmood)
(l.1940,c.3) get tok: INT(END[202])
(l.1941,c.1) get tok: STRING(,)
(l.1942,c.5) get tok: INT(BEGIN[227])
(l.1943,c.9) get tok: REF TAG(errprint)
(l.1943,c.10) get tok: STRING(()
(l.1943,c.58) get tok: STRING("a macro formal parameter must be an identifier")
(l.1943,c.59) get tok: STRING())
(l.1943,c.60) get tok: STRING(;)
(l.1945,c.8) get tok: REF TAG(curmood)
(l.1945,c.10) get tok: STRING(:=)
(l.1946,c.0) get tok: REF TAG(htmlmood)
(l.1946,c.3) get tok: INT(END[202])
(l.1947,c.1) get tok: STRING(,)
(l.1948,c.12) get tok: REF TAG(addmactext)
(l.1948,c.13) get tok: STRING(()
(l.1948,c.20) get tok: REF TAG(curmac)
(l.1948,c.21) get tok: STRING(,)
(l.1948,c.26) get tok: REF TAG(TEXT)
(l.1948,c.27) get tok: STRING(()
(l.1948,c.34) get tok: REF TAG(curtok)
(l.1948,c.35) get tok: STRING(,)
(l.1948,c.43) get tok: REF TAG(notext)
(l.1948,c.44) get tok: STRING())
(l.1948,c.45) get tok: STRING())
(l.1948,c.46) get tok: STRING(,)
(l.1949,c.12) get tok: REF TAG(addmodtext)
(l.1949,c.13) get tok: STRING(()
(l.1949,c.20) get tok: REF TAG(curmod)
(l.1949,c.21) get tok: STRING(,)
(l.1949,c.26) get tok: REF TAG(TEXT)
(l.1949,c.27) get tok: STRING(()
(l.1949,c.34) get tok: REF TAG(curtok)
(l.1949,c.35) get tok: STRING(,)
(l.1949,c.43) get tok: REF TAG(notext)
(l.1949,c.44) get tok: STRING())
(l.1949,c.45) get tok: STRING())
(l.1950,c.4) get tok: INT(ESAC[39])
(l.1952,c.2) get tok: CONTROL( )
(l.1955,c.2) get tok: CONTROL(<)
(l.1956,c.4) get tok: INT(CASE[137])
(l.1957,c.0) get tok: REF TAG(curmood)
(l.1957,c.2) get tok: INT(IN[306])
(l.1958,c.4) get tok: INT(SKIP[44])
(l.1958,c.5) get tok: STRING(,)
(l.1960,c.2) get tok: INT(IF[62])
(l.1960,c.4) get tok: REF TAG(s)
(l.1960,c.5) get tok: STRING(=)
(l.1961,c.0) get tok: STRING("(")
(l.1961,c.4) get tok: INT(THEN[190])
(l.1961,c.7) get tok: CONTROL(<)
(l.1962,c.4) get tok: INT(ELIF[9])
(l.1962,c.6) get tok: REF TAG(s)
(l.1962,c.7) get tok: STRING(=)
(l.1963,c.0) get tok: STRING("=")
(l.1963,c.4) get tok: INT(THEN[190])
(l.1963,c.7) get tok: CONTROL(<)
(l.1964,c.4) get tok: INT(ELSE[4])
(l.1965,c.9) get tok: REF TAG(errprint)
(l.1965,c.10) get tok: STRING(()
(l.1965,c.41) get tok: STRING("unexpected string in macro id")
(l.1965,c.42) get tok: STRING())
(l.1965,c.43) get tok: STRING(;)
(l.1967,c.8) get tok: REF TAG(curmood)
(l.1967,c.10) get tok: STRING(:=)
(l.1968,c.0) get tok: REF TAG(htmlmood)
(l.1968,c.2) get tok: INT(FI[107])
(l.1968,c.3) get tok: STRING(,)
(l.1970,c.2) get tok: INT(IF[62])
(l.1970,c.4) get tok: REF TAG(s)
(l.1970,c.5) get tok: STRING(=)
(l.1970,c.8) get tok: STRING(",")
(l.1970,c.11) get tok: INT(OR[177])
(l.1970,c.13) get tok: REF TAG(s)
(l.1970,c.14) get tok: STRING(=)
(l.1971,c.0) get tok: STRING(")")
(l.1971,c.4) get tok: INT(THEN[190])
(l.1971,c.9) get tok: INT(SKIP[44])
(l.1972,c.4) get tok: INT(ELIF[9])
(l.1972,c.6) get tok: REF TAG(s)
(l.1972,c.7) get tok: STRING(=)
(l.1973,c.0) get tok: STRING("=")
(l.1973,c.4) get tok: INT(THEN[190])
(l.1973,c.13) get tok: REF TAG(curmood)
(l.1973,c.15) get tok: STRING(:=)
(l.1974,c.0) get tok: REF TAG(macrobodymood)
(l.1974,c.4) get tok: INT(ELSE[4])
(l.1975,c.9) get tok: REF TAG(errprint)
(l.1975,c.10) get tok: STRING(()
(l.1975,c.45) get tok: STRING("unexpected string in macro header")
(l.1975,c.46) get tok: STRING())
(l.1975,c.47) get tok: STRING(;)
(l.1977,c.8) get tok: REF TAG(curmood)
(l.1977,c.10) get tok: STRING(:=)
(l.1978,c.0) get tok: REF TAG(htmlmood)
(l.1978,c.2) get tok: INT(FI[107])
(l.1978,c.3) get tok: STRING(,)
(l.1980,c.12) get tok: REF TAG(addmactext)
(l.1980,c.13) get tok: STRING(()
(l.1980,c.20) get tok: REF TAG(curmac)
(l.1980,c.21) get tok: STRING(,)
(l.1980,c.26) get tok: REF TAG(TEXT)
(l.1980,c.27) get tok: STRING(()
(l.1980,c.34) get tok: REF TAG(curtok)
(l.1980,c.35) get tok: STRING(,)
(l.1980,c.43) get tok: REF TAG(notext)
(l.1980,c.44) get tok: STRING())
(l.1980,c.45) get tok: STRING())
(l.1980,c.46) get tok: STRING(,)
(l.1982,c.12) get tok: REF TAG(addmodtext)
(l.1982,c.13) get tok: STRING(()
(l.1982,c.20) get tok: REF TAG(curmod)
(l.1982,c.21) get tok: STRING(,)
(l.1982,c.26) get tok: REF TAG(TEXT)
(l.1982,c.27) get tok: STRING(()
(l.1982,c.34) get tok: REF TAG(curtok)
(l.1982,c.35) get tok: STRING(,)
(l.1982,c.43) get tok: REF TAG(notext)
(l.1982,c.44) get tok: STRING())
(l.1982,c.45) get tok: STRING())
(l.1983,c.4) get tok: INT(ESAC[39])
(l.1985,c.2) get tok: CONTROL( )
(l.1985,c.4) get tok: CONTROL(<)
(l.1986,c.2) get tok: INT(IF[62])
(l.1986,c.5) get tok: INT(IF[62])
(l.1986,c.14) get tok: REF TAG(curmac)
(l.1986,c.16) get tok: INT(IS[82])
(l.1987,c.0) get tok: REF TAG(nomac)
(l.1987,c.4) get tok: INT(THEN[190])
(l.1987,c.9) get tok: INT(TRUE[64])
(l.1988,c.4) get tok: INT(ELIF[9])
(l.1988,c.11) get tok: REF TAG(param)
(l.1988,c.13) get tok: INT(OF[97])
(l.1988,c.22) get tok: REF TAG(curmac)
(l.1988,c.26) get tok: INT(ISNT[84])
(l.1989,c.0) get tok: REF TAG(nowparam)
(l.1989,c.4) get tok: INT(THEN[190])
(l.1989,c.9) get tok: INT(TRUE[64])
(l.1990,c.4) get tok: INT(ELSE[4])
(l.1990,c.13) get tok: REF TAG(curmood)
(l.1990,c.15) get tok: STRING(:=)
(l.1990,c.32) get tok: REF TAG(macroheadermood)
(l.1990,c.33) get tok: STRING(;)
(l.1990,c.39) get tok: INT(FALSE[123])
(l.1991,c.2) get tok: INT(FI[107])
(l.1992,c.4) get tok: INT(THEN[190])
(l.1993,c.9) get tok: REF TAG(errprint)
(l.1993,c.10) get tok: STRING(()
(l.1993,c.42) get tok: STRING("macro id. delimiter unexpected")
(l.1993,c.43) get tok: STRING())
(l.1993,c.44) get tok: STRING(;)
(l.1995,c.8) get tok: REF TAG(curmood)
(l.1995,c.10) get tok: STRING(:=)
(l.1996,c.0) get tok: REF TAG(htmlmood)
(l.1996,c.2) get tok: INT(FI[107])
(l.1998,c.2) get tok: CONTROL( )
(l.1998,c.4) get tok: CONTROL(<)
(l.1999,c.2) get tok: INT(IF[62])
(l.1999,c.11) get tok: REF TAG(curmac)
(l.1999,c.13) get tok: INT(IS[82])
(l.2000,c.0) get tok: REF TAG(nomac)
(l.2000,c.4) get tok: INT(THEN[190])
(l.2000,c.14) get tok: REF TAG(errprint)
(l.2000,c.15) get tok: STRING(()
(l.2000,c.33) get tok: STRING("missing macro id")
(l.2000,c.34) get tok: STRING())
(l.2000,c.35) get tok: STRING(;)
(l.2000,c.44) get tok: REF TAG(curmood)
(l.2000,c.46) get tok: STRING(:=)
(l.2001,c.0) get tok: REF TAG(htmlmood)
(l.2002,c.4) get tok: INT(ELSE[4])
(l.2002,c.13) get tok: REF TAG(curmood)
(l.2002,c.15) get tok: STRING(:=)
(l.2003,c.0) get tok: REF TAG(macrobodymood)
(l.2003,c.2) get tok: INT(FI[107])
(l.2005,c.2) get tok: CONTROL( )
(l.2012,c.2) get tok: CONTROL(<)
(l.2013,c.4) get tok: INT(PROC[69])
(l.2013,c.17) get tok: REF TAG(searchmacro)
(l.2013,c.18) get tok: STRING(=)
(l.2013,c.19) get tok: STRING(()
(l.2013,c.22) get tok: INT(REF[53])
(l.2013,c.26) get tok: INT(REF[53])
(l.2013,c.32) get tok: REF TAG(MACRO)
(l.2013,c.37) get tok: REF TAG(root)
(l.2013,c.38) get tok: STRING(,)
(l.2013,c.42) get tok: INT(REF[53])
(l.2013,c.46) get tok: REF TAG(TAG)
(l.2013,c.48) get tok: REF TAG(t)
(l.2013,c.49) get tok: STRING())
(l.2013,c.52) get tok: INT(REF[53])
(l.2013,c.58) get tok: REF TAG(MACRO)
(l.2014,c.0) get tok: STRING(:)
(l.2014,c.2) get tok: INT(IF[62])
(l.2014,c.8) get tok: REF TAG(root)
(l.2014,c.10) get tok: INT(IS[82])
(l.2015,c.0) get tok: REF TAG(nomac)
(l.2015,c.4) get tok: INT(THEN[190])
(l.2016,c.0) get tok: REF TAG(nomac)
(l.2016,c.4) get tok: INT(ELIF[9])
(l.2016,c.7) get tok: REF TAG(s)
(l.2016,c.9) get tok: INT(OF[97])
(l.2016,c.12) get tok: REF TAG(t)
(l.2016,c.13) get tok: STRING(=)
(l.2016,c.16) get tok: REF TAG(s)
(l.2016,c.18) get tok: INT(OF[97])
(l.2016,c.22) get tok: REF TAG(id)
(l.2016,c.24) get tok: INT(OF[97])
(l.2017,c.0) get tok: REF TAG(root)
(l.2017,c.4) get tok: INT(THEN[190])
(l.2018,c.0) get tok: REF TAG(root)
(l.2018,c.4) get tok: INT(ELIF[9])
(l.2018,c.7) get tok: REF TAG(s)
(l.2018,c.9) get tok: INT(OF[97])
(l.2018,c.12) get tok: REF TAG(t)
(l.2018,c.13) get tok: STRING(<)
(l.2018,c.16) get tok: REF TAG(s)
(l.2018,c.18) get tok: INT(OF[97])
(l.2018,c.22) get tok: REF TAG(id)
(l.2018,c.24) get tok: INT(OF[97])
(l.2019,c.0) get tok: REF TAG(root)
(l.2019,c.4) get tok: INT(THEN[190])
(l.2019,c.17) get tok: REF TAG(searchmacro)
(l.2019,c.18) get tok: STRING(()
(l.2019,c.23) get tok: REF TAG(left)
(l.2019,c.25) get tok: INT(OF[97])
(l.2019,c.30) get tok: REF TAG(root)
(l.2019,c.31) get tok: STRING(,)
(l.2019,c.32) get tok: REF TAG(t)
(l.2019,c.33) get tok: STRING())
(l.2020,c.4) get tok: INT(ELSE[4])
(l.2020,c.17) get tok: REF TAG(searchmacro)
(l.2020,c.18) get tok: STRING(()
(l.2020,c.24) get tok: REF TAG(right)
(l.2020,c.26) get tok: INT(OF[97])
(l.2020,c.31) get tok: REF TAG(root)
(l.2020,c.32) get tok: STRING(,)
(l.2020,c.33) get tok: REF TAG(t)
(l.2020,c.34) get tok: STRING())
(l.2021,c.2) get tok: INT(FI[107])
(l.2021,c.3) get tok: STRING(;)
(l.2023,c.2) get tok: CONTROL( )
(l.2027,c.2) get tok: CONTROL(<)
(l.2028,c.4) get tok: INT(CASE[137])
(l.2029,c.0) get tok: REF TAG(curmood)
(l.2029,c.2) get tok: INT(IN[306])
(l.2030,c.4) get tok: INT(SKIP[44])
(l.2030,c.5) get tok: STRING(,)
(l.2032,c.2) get tok: INT(IF[62])
(l.2032,c.11) get tok: REF TAG(curmac)
(l.2032,c.13) get tok: INT(IS[82])
(l.2033,c.0) get tok: REF TAG(nomac)
(l.2033,c.4) get tok: INT(THEN[190])
(l.2034,c.2) get tok: INT(IF[62])
(l.2034,c.4) get tok: STRING(()
(l.2034,c.6) get tok: CONTROL({)
(l.2034,c.13) get tok: REF TAG(curmac)
(l.2034,c.15) get tok: STRING(:=)
(l.2034,c.17) get tok: CONTROL(/)
(l.2035,c.12) get tok: REF TAG(addmacroid)
(l.2035,c.13) get tok: STRING(()
(l.2035,c.23) get tok: REF TAG(macroroot)
(l.2035,c.24) get tok: STRING(,)
(l.2035,c.32) get tok: REF TAG(addtag)
(l.2035,c.33) get tok: STRING(()
(l.2035,c.41) get tok: REF TAG(tagroot)
(l.2035,c.42) get tok: STRING(,)
(l.2035,c.46) get tok: REF TAG(tag)
(l.2035,c.47) get tok: STRING())
(l.2035,c.48) get tok: STRING(,)
(l.2035,c.61) get tok: REF TAG(oneoffmacro)
(l.2035,c.62) get tok: STRING())
(l.2035,c.63) get tok: STRING())
(l.2036,c.2) get tok: CONTROL(+)
(l.2036,c.4) get tok: INT(IS[82])
(l.2036,c.11) get tok: REF TAG(nomac)
(l.2036,c.13) get tok: CONTROL(})
(l.2037,c.4) get tok: INT(THEN[190])
(l.2038,c.9) get tok: REF TAG(errprint)
(l.2038,c.10) get tok: STRING(()
(l.2038,c.37) get tok: STRING("macro id. already defined")
(l.2038,c.38) get tok: STRING())
(l.2038,c.39) get tok: STRING(;)
(l.2040,c.8) get tok: REF TAG(curmood)
(l.2040,c.10) get tok: STRING(:=)
(l.2041,c.0) get tok: REF TAG(htmlmood)
(l.2041,c.2) get tok: INT(FI[107])
(l.2042,c.4) get tok: INT(ELSE[4])
(l.2042,c.14) get tok: REF TAG(errprint)
(l.2042,c.15) get tok: STRING(()
(l.2042,c.39) get tok: STRING("macro id. already read")
(l.2042,c.40) get tok: STRING())
(l.2042,c.41) get tok: STRING(;)
(l.2042,c.50) get tok: REF TAG(curmood)
(l.2042,c.52) get tok: STRING(:=)
(l.2043,c.0) get tok: REF TAG(htmlmood)
(l.2044,c.2) get tok: INT(FI[107])
(l.2044,c.3) get tok: STRING(,)
(l.2046,c.2) get tok: INT(IF[62])
(l.2046,c.6) get tok: INT(NOT[230])
(l.2046,c.20) get tok: REF TAG(addmacropar)
(l.2046,c.21) get tok: STRING(()
(l.2046,c.28) get tok: REF TAG(curmac)
(l.2046,c.29) get tok: STRING(,)
(l.2046,c.37) get tok: REF TAG(addtag)
(l.2046,c.38) get tok: STRING(()
(l.2046,c.46) get tok: REF TAG(tagroot)
(l.2046,c.47) get tok: STRING(,)
(l.2046,c.51) get tok: REF TAG(tag)
(l.2046,c.52) get tok: STRING())
(l.2046,c.53) get tok: STRING())
(l.2047,c.4) get tok: INT(THEN[190])
(l.2048,c.9) get tok: REF TAG(errprint)
(l.2048,c.10) get tok: STRING(()
(l.2048,c.44) get tok: STRING("duplicate macro formal parameter")
(l.2048,c.45) get tok: STRING())
(l.2048,c.46) get tok: STRING(;)
(l.2050,c.8) get tok: REF TAG(curmood)
(l.2050,c.10) get tok: STRING(:=)
(l.2051,c.0) get tok: REF TAG(htmlmood)
(l.2051,c.2) get tok: INT(FI[107])
(l.2051,c.3) get tok: STRING(,)
(l.2053,c.5) get tok: INT(BEGIN[227])
(l.2054,c.3) get tok: INT(REF[53])
(l.2054,c.7) get tok: REF TAG(TAG)
(l.2054,c.18) get tok: REF TAG(storedtag)
(l.2054,c.19) get tok: STRING(=)
(l.2054,c.26) get tok: REF TAG(addtag)
(l.2054,c.27) get tok: STRING(()
(l.2054,c.35) get tok: REF TAG(tagroot)
(l.2054,c.36) get tok: STRING(,)
(l.2054,c.40) get tok: REF TAG(tag)
(l.2054,c.41) get tok: STRING())
(l.2054,c.42) get tok: STRING(;)
(l.2055,c.3) get tok: INT(REF[53])
(l.2055,c.9) get tok: REF TAG(MACRO)
(l.2055,c.12) get tok: REF TAG(rm)
(l.2055,c.13) get tok: STRING(=)
(l.2055,c.25) get tok: REF TAG(searchmacro)
(l.2055,c.26) get tok: STRING(()
(l.2055,c.36) get tok: REF TAG(macroroot)
(l.2055,c.37) get tok: STRING(,)
(l.2055,c.48) get tok: REF TAG(storedtag)
(l.2055,c.49) get tok: STRING())
(l.2055,c.50) get tok: STRING(;)
(l.2056,c.12) get tok: REF TAG(addmactext)
(l.2056,c.13) get tok: STRING(()
(l.2056,c.20) get tok: REF TAG(curmac)
(l.2056,c.21) get tok: STRING(,)
(l.2056,c.25) get tok: REF TAG(TEXT)
(l.2056,c.26) get tok: STRING(()
(l.2056,c.27) get tok: STRING(()
(l.2056,c.29) get tok: REF TAG(rm)
(l.2056,c.32) get tok: STRING(:=:)
(l.2056,c.38) get tok: REF TAG(nomac)
(l.2056,c.39) get tok: STRING(|)
(l.2056,c.49) get tok: REF TAG(storedtag)
(l.2056,c.50) get tok: STRING(|)
(l.2056,c.52) get tok: REF TAG(rm)
(l.2056,c.53) get tok: STRING())
(l.2056,c.54) get tok: STRING(,)
(l.2056,c.62) get tok: REF TAG(notext)
(l.2056,c.63) get tok: STRING())
(l.2056,c.64) get tok: STRING())
(l.2057,c.3) get tok: INT(END[202])
(l.2057,c.4) get tok: STRING(,)
(l.2059,c.5) get tok: INT(BEGIN[227])
(l.2060,c.3) get tok: INT(REF[53])
(l.2060,c.7) get tok: REF TAG(TAG)
(l.2060,c.18) get tok: REF TAG(storedtag)
(l.2060,c.19) get tok: STRING(=)
(l.2060,c.26) get tok: REF TAG(addtag)
(l.2060,c.27) get tok: STRING(()
(l.2060,c.35) get tok: REF TAG(tagroot)
(l.2060,c.36) get tok: STRING(,)
(l.2060,c.40) get tok: REF TAG(tag)
(l.2060,c.41) get tok: STRING())
(l.2060,c.42) get tok: STRING(;)
(l.2061,c.3) get tok: INT(REF[53])
(l.2061,c.9) get tok: REF TAG(MACRO)
(l.2061,c.12) get tok: REF TAG(rm)
(l.2061,c.13) get tok: STRING(=)
(l.2061,c.25) get tok: REF TAG(searchmacro)
(l.2061,c.26) get tok: STRING(()
(l.2061,c.36) get tok: REF TAG(macroroot)
(l.2061,c.37) get tok: STRING(,)
(l.2061,c.48) get tok: REF TAG(storedtag)
(l.2061,c.49) get tok: STRING())
(l.2061,c.50) get tok: STRING(;)
(l.2062,c.12) get tok: REF TAG(addmodtext)
(l.2062,c.13) get tok: STRING(()
(l.2062,c.20) get tok: REF TAG(curmod)
(l.2062,c.21) get tok: STRING(,)
(l.2062,c.25) get tok: REF TAG(TEXT)
(l.2062,c.26) get tok: STRING(()
(l.2062,c.27) get tok: STRING(()
(l.2062,c.29) get tok: REF TAG(rm)
(l.2062,c.32) get tok: STRING(:=:)
(l.2062,c.38) get tok: REF TAG(nomac)
(l.2062,c.39) get tok: STRING(|)
(l.2062,c.49) get tok: REF TAG(storedtag)
(l.2062,c.50) get tok: STRING(|)
(l.2062,c.52) get tok: REF TAG(rm)
(l.2062,c.53) get tok: STRING())
(l.2062,c.54) get tok: STRING(,)
(l.2062,c.62) get tok: REF TAG(notext)
(l.2062,c.63) get tok: STRING())
(l.2062,c.64) get tok: STRING())
(l.2063,c.3) get tok: INT(END[202])
(l.2064,c.4) get tok: INT(ESAC[39])
(l.2066,c.2) get tok: CONTROL(2)
(l.2070,c.2) get tok: CONTROL(<)
(l.2071,c.2) get tok: INT(OP[87])
(l.2071,c.12) get tok: REF TAG(MULTICASE)
(l.2071,c.14) get tok: STRING(=)
(l.2071,c.16) get tok: STRING(()
(l.2071,c.20) get tok: INT(CHAR[113])
(l.2071,c.23) get tok: CONTROL(!)
(l.2071,c.24) get tok: REF TAG(c)
(l.2071,c.25) get tok: STRING(,)
(l.2071,c.27) get tok: STRING([)
(l.2071,c.28) get tok: STRING(])
(l.2071,c.34) get tok: INT(STRING[156])
(l.2071,c.37) get tok: CONTROL(!)
(l.2071,c.38) get tok: REF TAG(s)
(l.2071,c.39) get tok: STRING())
(l.2071,c.42) get tok: INT(INT[195])
(l.2072,c.0) get tok: STRING(:)
(l.2072,c.5) get tok: INT(BEGIN[227])
(l.2073,c.3) get tok: INT(INT[195])
(l.2073,c.6) get tok: CONTROL(!)
(l.2073,c.7) get tok: REF TAG(j)
(l.2073,c.9) get tok: STRING(:=)
(l.2073,c.12) get tok: INT(LWB[148])
(l.2073,c.14) get tok: REF TAG(s)
(l.2073,c.15) get tok: STRING(-)
(l.2073,c.16) get tok: STRING(1)
(l.2073,c.17) get tok: STRING(;)
(l.2075,c.3) get tok: INT(FOR[138])
(l.2075,c.6) get tok: REF TAG(i)
(l.2075,c.10) get tok: INT(FROM[176])
(l.2075,c.14) get tok: INT(LWB[148])
(l.2075,c.17) get tok: REF TAG(s)
(l.2075,c.19) get tok: INT(TO[187])
(l.2075,c.23) get tok: INT(UPB[150])
(l.2075,c.26) get tok: REF TAG(s)
(l.2075,c.31) get tok: INT(WHILE[99])
(l.2075,c.34) get tok: REF TAG(j)
(l.2075,c.35) get tok: STRING(<)
(l.2075,c.39) get tok: INT(LWB[148])
(l.2076,c.0) get tok: REF TAG(s)
(l.2076,c.2) get tok: INT(DO[244])
(l.2077,c.2) get tok: INT(IF[62])
(l.2077,c.9) get tok: INT(STRING[156])
(l.2077,c.12) get tok: REF TAG(si)
(l.2077,c.13) get tok: STRING(=)
(l.2077,c.14) get tok: REF TAG(s)
(l.2077,c.15) get tok: STRING([)
(l.2077,c.16) get tok: REF TAG(i)
(l.2077,c.17) get tok: STRING(])
(l.2077,c.18) get tok: STRING(;)
(l.2077,c.21) get tok: REF TAG(c)
(l.2077,c.25) get tok: REF TAG(CHOP)
(l.2077,c.28) get tok: REF TAG(si)
(l.2077,c.30) get tok: STRING(>=)
(l.2077,c.33) get tok: INT(LWB[148])
(l.2078,c.0) get tok: REF TAG(si)
(l.2078,c.4) get tok: INT(THEN[190])
(l.2078,c.6) get tok: REF TAG(j)
(l.2078,c.8) get tok: STRING(:=)
(l.2079,c.0) get tok: REF TAG(i)
(l.2079,c.2) get tok: INT(FI[107])
(l.2080,c.2) get tok: INT(OD[231])
(l.2080,c.3) get tok: STRING(;)
(l.2083,c.0) get tok: REF TAG(j)
(l.2083,c.3) get tok: INT(END[202])
(l.2083,c.4) get tok: STRING(;)
(l.2085,c.2) get tok: CONTROL( )
(l.2087,c.2) get tok: CONTROL(<)
(l.2088,c.4) get tok: INT(CASE[137])
(l.2088,c.7) get tok: REF TAG(UC)
(l.2088,c.11) get tok: REF TAG(cs)
(l.2088,c.13) get tok: INT(OF[97])
(l.2088,c.17) get tok: REF TAG(co)
(l.2088,c.26) get tok: REF TAG(MULTICASE)
(l.2089,c.1) get tok: STRING([)
(l.2089,c.2) get tok: STRING(])
(l.2089,c.8) get tok: INT(STRING[156])
(l.2089,c.9) get tok: STRING(()
(l.2089,c.23) get tok: STRING("!#&+,-/;?{|}")
(l.2089,c.24) get tok: STRING(,)
(l.2089,c.30) get tok: STRING(".:H^")
(l.2089,c.31) get tok: STRING(,)
(l.2089,c.37) get tok: REF TAG(tabch)
(l.2089,c.38) get tok: STRING(+)
(l.2089,c.43) get tok: REF TAG(blank)
(l.2089,c.44) get tok: STRING(,)
(l.2089,c.47) get tok: STRING("=")
(l.2089,c.48) get tok: STRING())
(l.2090,c.2) get tok: INT(IN[306])
(l.2091,c.4) get tok: INT(SKIP[44])
(l.2092,c.1) get tok: STRING(,)
(l.2093,c.10) get tok: REF TAG(skiptocs)
(l.2093,c.11) get tok: STRING(()
(l.2093,c.14) get tok: STRING(">")
(l.2093,c.15) get tok: STRING())
(l.2094,c.1) get tok: STRING(,)
(l.2096,c.1) get tok: STRING(()
(l.2096,c.12) get tok: REF TAG(inccursec)
(l.2096,c.13) get tok: STRING(()
(l.2096,c.14) get tok: STRING(4)
(l.2096,c.15) get tok: STRING())
(l.2096,c.16) get tok: STRING(;)
(l.2096,c.25) get tok: REF TAG(curmood)
(l.2096,c.27) get tok: STRING(:=)
(l.2096,c.36) get tok: REF TAG(htmlmood)
(l.2096,c.37) get tok: STRING())
(l.2097,c.1) get tok: STRING(,)
(l.2098,c.2) get tok: INT(IF[62])
(l.2098,c.12) get tok: REF TAG(curmood)
(l.2098,c.13) get tok: STRING(=)
(l.2099,c.0) get tok: REF TAG(macrobodymood)
(l.2099,c.4) get tok: INT(THEN[190])
(l.2099,c.17) get tok: REF TAG(addmactext)
(l.2099,c.18) get tok: STRING(()
(l.2099,c.25) get tok: REF TAG(curmac)
(l.2099,c.26) get tok: STRING(,)
(l.2099,c.31) get tok: REF TAG(TEXT)
(l.2099,c.32) get tok: STRING(()
(l.2099,c.44) get tok: REF TAG(gathertocs)
(l.2099,c.45) get tok: STRING(()
(l.2099,c.48) get tok: STRING(">")
(l.2099,c.49) get tok: STRING())
(l.2099,c.50) get tok: STRING(,)
(l.2099,c.57) get tok: REF TAG(notext)
(l.2099,c.58) get tok: STRING())
(l.2099,c.59) get tok: STRING())
(l.2100,c.4) get tok: INT(ELIF[9])
(l.2100,c.14) get tok: REF TAG(curmood)
(l.2100,c.15) get tok: STRING(=)
(l.2101,c.0) get tok: REF TAG(modulebodymood)
(l.2101,c.4) get tok: INT(THEN[190])
(l.2101,c.17) get tok: REF TAG(addmodtext)
(l.2101,c.18) get tok: STRING(()
(l.2101,c.25) get tok: REF TAG(curmod)
(l.2101,c.26) get tok: STRING(,)
(l.2101,c.31) get tok: REF TAG(TEXT)
(l.2101,c.32) get tok: STRING(()
(l.2101,c.44) get tok: REF TAG(gathertocs)
(l.2101,c.45) get tok: STRING(()
(l.2101,c.48) get tok: STRING(">")
(l.2101,c.49) get tok: STRING())
(l.2101,c.50) get tok: STRING(,)
(l.2101,c.57) get tok: REF TAG(notext)
(l.2101,c.58) get tok: STRING())
(l.2101,c.59) get tok: STRING())
(l.2102,c.4) get tok: INT(ELSE[4])
(l.2103,c.9) get tok: REF TAG(errprint)
(l.2103,c.10) get tok: STRING(()
(l.2103,c.40) get tok: STRING("@= not in macro/module body")
(l.2103,c.41) get tok: STRING())
(l.2103,c.42) get tok: STRING(;)
(l.2105,c.10) get tok: REF TAG(skiptocs)
(l.2105,c.11) get tok: STRING(()
(l.2105,c.14) get tok: STRING(">")
(l.2105,c.15) get tok: STRING())
(l.2106,c.2) get tok: INT(FI[107])
(l.2107,c.4) get tok: INT(OUSE[141])
(l.2107,c.7) get tok: REF TAG(UC)
(l.2107,c.11) get tok: REF TAG(cs)
(l.2107,c.13) get tok: INT(OF[97])
(l.2107,c.17) get tok: REF TAG(co)
(l.2107,c.21) get tok: REF TAG(CHOP)
(l.2108,c.0) get tok: STRING("123<@ADFIM\")
(l.2108,c.2) get tok: INT(IN[306])
(l.2108,c.5) get tok: CONTROL(<)
(l.2109,c.3) get tok: INT(OUT[155])
(l.2110,c.9) get tok: REF TAG(errprint)
(l.2110,c.10) get tok: STRING(()
(l.2110,c.36) get tok: STRING("unknown control sequence")
(l.2110,c.37) get tok: STRING())
(l.2110,c.38) get tok: STRING(;)
(l.2112,c.8) get tok: REF TAG(curmood)
(l.2112,c.10) get tok: STRING(:=)
(l.2113,c.0) get tok: REF TAG(htmlmood)
(l.2113,c.4) get tok: INT(ESAC[39])
(l.2115,c.2) get tok: CONTROL( )
(l.2117,c.2) get tok: CONTROL(<)
(l.2118,c.5) get tok: INT(IF[62])
(l.2118,c.11) get tok: REF TAG(next)
(l.2118,c.13) get tok: INT(OF[97])
(l.2118,c.18) get tok: REF TAG(web)
(l.2118,c.22) get tok: INT(ISNT[84])
(l.2119,c.0) get tok: REF TAG(nostream)
(l.2119,c.4) get tok: INT(THEN[190])
(l.2119,c.14) get tok: REF TAG(errprint)
(l.2119,c.15) get tok: STRING(()
(l.2119,c.66) get tok: STRING("level-1 sections are disallowed in included files")
(l.2119,c.67) get tok: STRING())
(l.2121,c.4) get tok: INT(ELSE[4])
(l.2121,c.6) get tok: CONTROL(/)
(l.2122,c.11) get tok: REF TAG(inccursec)
(l.2122,c.12) get tok: STRING(()
(l.2122,c.13) get tok: STRING(1)
(l.2122,c.14) get tok: STRING())
(l.2122,c.15) get tok: STRING(;)
(l.2123,c.13) get tok: REF TAG(printcursec)
(l.2123,c.14) get tok: STRING(;)
(l.2124,c.8) get tok: REF TAG(curmood)
(l.2124,c.10) get tok: STRING(:=)
(l.2125,c.0) get tok: REF TAG(htmlmood)
(l.2125,c.2) get tok: INT(FI[107])
(l.2125,c.3) get tok: STRING(,)
(l.2126,c.4) get tok: STRING(()
(l.2126,c.15) get tok: REF TAG(inccursec)
(l.2126,c.16) get tok: STRING(()
(l.2126,c.17) get tok: STRING(2)
(l.2126,c.18) get tok: STRING())
(l.2126,c.19) get tok: STRING(;)
(l.2126,c.33) get tok: REF TAG(printcursec)
(l.2126,c.34) get tok: STRING(;)
(l.2126,c.43) get tok: REF TAG(curmood)
(l.2126,c.45) get tok: STRING(:=)
(l.2126,c.54) get tok: REF TAG(htmlmood)
(l.2126,c.55) get tok: STRING())
(l.2126,c.56) get tok: STRING(,)
(l.2127,c.4) get tok: STRING(()
(l.2127,c.15) get tok: REF TAG(inccursec)
(l.2127,c.16) get tok: STRING(()
(l.2127,c.17) get tok: STRING(3)
(l.2127,c.18) get tok: STRING())
(l.2127,c.19) get tok: STRING(;)
(l.2127,c.33) get tok: REF TAG(printcursec)
(l.2127,c.34) get tok: STRING(;)
(l.2127,c.43) get tok: REF TAG(curmood)
(l.2127,c.45) get tok: STRING(:=)
(l.2127,c.54) get tok: REF TAG(htmlmood)
(l.2127,c.55) get tok: STRING())
(l.2127,c.56) get tok: STRING(,)
(l.2128,c.6) get tok: CONTROL(<)
(l.2128,c.29) get tok: STRING(,)
(l.2129,c.6) get tok: CONTROL(<)
(l.2129,c.35) get tok: STRING(,)
(l.2130,c.8) get tok: INT(BEGIN[227])
(l.2131,c.7) get tok: REF TAG(curmod)
(l.2131,c.9) get tok: STRING(:=)
(l.2131,c.23) get tok: REF TAG(unnamedmodule)
(l.2131,c.24) get tok: STRING(;)
(l.2131,c.33) get tok: REF TAG(curmood)
(l.2131,c.35) get tok: STRING(:=)
(l.2131,c.51) get tok: REF TAG(modulebodymood)
(l.2131,c.52) get tok: STRING(;)
(l.2132,c.12) get tok: REF TAG(addmodtext)
(l.2132,c.13) get tok: STRING(()
(l.2132,c.20) get tok: REF TAG(curmod)
(l.2132,c.21) get tok: STRING(,)
(l.2132,c.31) get tok: REF TAG(maketext)
(l.2132,c.32) get tok: STRING(()
(l.2132,c.33) get tok: STRING(()
(l.2132,c.37) get tok: REF TAG(sec)
(l.2132,c.39) get tok: INT(OF[97])
(l.2132,c.43) get tok: REF TAG(web)
(l.2132,c.44) get tok: STRING())
(l.2132,c.45) get tok: STRING())
(l.2132,c.46) get tok: STRING())
(l.2133,c.3) get tok: INT(END[202])
(l.2133,c.4) get tok: STRING(,)
(l.2134,c.8) get tok: INT(BEGIN[227])
(l.2135,c.7) get tok: REF TAG(curmac)
(l.2135,c.9) get tok: STRING(:=)
(l.2135,c.15) get tok: REF TAG(nomac)
(l.2135,c.16) get tok: STRING(;)
(l.2136,c.13) get tok: REF TAG(oneoffmacro)
(l.2136,c.15) get tok: STRING(:=)
(l.2136,c.19) get tok: INT(TRUE[64])
(l.2136,c.20) get tok: STRING(;)
(l.2137,c.8) get tok: REF TAG(curmood)
(l.2137,c.10) get tok: STRING(:=)
(l.2138,c.0) get tok: REF TAG(macroidmood)
(l.2138,c.3) get tok: INT(END[202])
(l.2138,c.4) get tok: STRING(,)
(l.2139,c.5) get tok: INT(IF[62])
(l.2139,c.15) get tok: REF TAG(curmood)
(l.2139,c.17) get tok: STRING(/=)
(l.2139,c.28) get tok: REF TAG(htmlmood)
(l.2139,c.29) get tok: STRING(&)
(l.2139,c.39) get tok: REF TAG(curmood)
(l.2139,c.41) get tok: STRING(/=)
(l.2140,c.0) get tok: REF TAG(macrobodymood)
(l.2140,c.4) get tok: INT(THEN[190])
(l.2141,c.9) get tok: REF TAG(errprint)
(l.2141,c.10) get tok: STRING(()
(l.2141,c.39) get tok: STRING("unexpected control sequence")
(l.2141,c.40) get tok: STRING())
(l.2141,c.41) get tok: STRING(;)
(l.2143,c.8) get tok: REF TAG(curmood)
(l.2143,c.10) get tok: STRING(:=)
(l.2144,c.0) get tok: REF TAG(htmlmood)
(l.2144,c.4) get tok: INT(ELSE[4])
(l.2144,c.12) get tok: REF TAG(curmac)
(l.2144,c.14) get tok: STRING(:=)
(l.2144,c.20) get tok: REF TAG(nomac)
(l.2144,c.21) get tok: STRING(;)
(l.2144,c.30) get tok: REF TAG(curmood)
(l.2144,c.32) get tok: STRING(:=)
(l.2145,c.0) get tok: REF TAG(htmlmood)
(l.2145,c.2) get tok: INT(FI[107])
(l.2145,c.3) get tok: STRING(,)
(l.2146,c.6) get tok: CONTROL(<)
(l.2146,c.34) get tok: STRING(,)
(l.2147,c.8) get tok: INT(BEGIN[227])
(l.2148,c.7) get tok: REF TAG(curmac)
(l.2148,c.9) get tok: STRING(:=)
(l.2148,c.15) get tok: REF TAG(nomac)
(l.2148,c.16) get tok: STRING(;)
(l.2149,c.13) get tok: REF TAG(oneoffmacro)
(l.2149,c.15) get tok: STRING(:=)
(l.2149,c.20) get tok: INT(FALSE[123])
(l.2149,c.21) get tok: STRING(;)
(l.2150,c.8) get tok: REF TAG(curmood)
(l.2150,c.10) get tok: STRING(:=)
(l.2151,c.0) get tok: REF TAG(macroidmood)
(l.2151,c.3) get tok: INT(END[202])
(l.2151,c.4) get tok: STRING(,)
(l.2152,c.5) get tok: INT(IF[62])
(l.2152,c.15) get tok: REF TAG(curmood)
(l.2152,c.16) get tok: STRING(=)
(l.2153,c.0) get tok: REF TAG(macrobodymood)
(l.2153,c.4) get tok: INT(THEN[190])
(l.2153,c.17) get tok: REF TAG(addmactext)
(l.2153,c.18) get tok: STRING(()
(l.2153,c.25) get tok: REF TAG(curmac)
(l.2153,c.26) get tok: STRING(,)
(l.2153,c.31) get tok: REF TAG(TEXT)
(l.2153,c.32) get tok: STRING(()
(l.2153,c.45) get tok: REF TAG(forcenewline)
(l.2153,c.46) get tok: STRING(,)
(l.2153,c.53) get tok: REF TAG(notext)
(l.2153,c.54) get tok: STRING())
(l.2153,c.55) get tok: STRING())
(l.2154,c.4) get tok: INT(ELIF[9])
(l.2154,c.14) get tok: REF TAG(curmood)
(l.2154,c.15) get tok: STRING(=)
(l.2155,c.0) get tok: REF TAG(modulebodymood)
(l.2155,c.4) get tok: INT(THEN[190])
(l.2155,c.17) get tok: REF TAG(addmodtext)
(l.2155,c.18) get tok: STRING(()
(l.2155,c.25) get tok: REF TAG(curmod)
(l.2155,c.26) get tok: STRING(,)
(l.2155,c.31) get tok: REF TAG(TEXT)
(l.2155,c.32) get tok: STRING(()
(l.2155,c.45) get tok: REF TAG(forcenewline)
(l.2155,c.46) get tok: STRING(,)
(l.2155,c.53) get tok: REF TAG(notext)
(l.2155,c.54) get tok: STRING())
(l.2155,c.55) get tok: STRING())
(l.2156,c.2) get tok: INT(FI[107])
(l.2158,c.2) get tok: CONTROL( )
(l.2160,c.2) get tok: CONTROL(<)
(l.2161,c.2) get tok: INT(IF[62])
(l.2161,c.11) get tok: REF TAG(curmood)
(l.2161,c.12) get tok: STRING(=)
(l.2162,c.0) get tok: REF TAG(macrobodymood)
(l.2162,c.4) get tok: INT(THEN[190])
(l.2162,c.17) get tok: REF TAG(addmactext)
(l.2162,c.18) get tok: STRING(()
(l.2162,c.25) get tok: REF TAG(curmac)
(l.2162,c.26) get tok: STRING(,)
(l.2162,c.31) get tok: REF TAG(TEXT)
(l.2162,c.32) get tok: STRING(()
(l.2162,c.38) get tok: INT(STRING[156])
(l.2162,c.39) get tok: STRING(()
(l.2162,c.43) get tok: STRING("@")
(l.2162,c.44) get tok: STRING())
(l.2162,c.45) get tok: STRING(,)
(l.2162,c.52) get tok: REF TAG(notext)
(l.2162,c.53) get tok: STRING())
(l.2162,c.54) get tok: STRING())
(l.2163,c.4) get tok: INT(ELIF[9])
(l.2163,c.13) get tok: REF TAG(curmood)
(l.2163,c.14) get tok: STRING(=)
(l.2164,c.0) get tok: REF TAG(modulebodymood)
(l.2164,c.4) get tok: INT(THEN[190])
(l.2164,c.17) get tok: REF TAG(addmodtext)
(l.2164,c.18) get tok: STRING(()
(l.2164,c.25) get tok: REF TAG(curmod)
(l.2164,c.26) get tok: STRING(,)
(l.2164,c.31) get tok: REF TAG(TEXT)
(l.2164,c.32) get tok: STRING(()
(l.2164,c.38) get tok: INT(STRING[156])
(l.2164,c.39) get tok: STRING(()
(l.2164,c.43) get tok: STRING("@")
(l.2164,c.44) get tok: STRING())
(l.2164,c.45) get tok: STRING(,)
(l.2164,c.52) get tok: REF TAG(notext)
(l.2164,c.53) get tok: STRING())
(l.2164,c.54) get tok: STRING())
(l.2165,c.2) get tok: INT(FI[107])
(l.2167,c.2) get tok: CONTROL( )
(l.2172,c.2) get tok: CONTROL(<)
(l.2173,c.4) get tok: INT(CASE[137])
(l.2174,c.6) get tok: INT(STRING[156])
(l.2174,c.11) get tok: REF TAG(mtag)
(l.2174,c.13) get tok: STRING(:=)
(l.2174,c.17) get tok: REF TAG(TRIM)
(l.2174,c.30) get tok: REF TAG(gathertocs)
(l.2174,c.31) get tok: STRING(()
(l.2174,c.34) get tok: STRING(">")
(l.2174,c.35) get tok: STRING())
(l.2174,c.36) get tok: STRING(;)
(l.2175,c.4) get tok: INT(CHAR[113])
(l.2175,c.7) get tok: REF TAG(ch)
(l.2175,c.8) get tok: STRING(=)
(l.2175,c.17) get tok: REF TAG(nextchar)
(l.2175,c.18) get tok: STRING(;)
(l.2177,c.0) get tok: REF TAG(curmood)
(l.2177,c.2) get tok: INT(IN[306])
(l.2178,c.8) get tok: INT(IF[62])
(l.2178,c.12) get tok: REF TAG(ch)
(l.2178,c.13) get tok: STRING(=)
(l.2179,c.0) get tok: STRING("=")
(l.2179,c.4) get tok: INT(THEN[190])
(l.2179,c.7) get tok: CONTROL(<)
(l.2180,c.4) get tok: INT(ELSE[4])
(l.2180,c.21) get tok: REF TAG(backspaceinput)
(l.2181,c.2) get tok: INT(FI[107])
(l.2181,c.3) get tok: STRING(,)
(l.2183,c.1) get tok: STRING(()
(l.2183,c.3) get tok: INT(IF[62])
(l.2183,c.6) get tok: REF TAG(ch)
(l.2183,c.8) get tok: STRING(/=)
(l.2183,c.11) get tok: STRING("=")
(l.2183,c.16) get tok: INT(THEN[190])
(l.2183,c.33) get tok: REF TAG(backspaceinput)
(l.2183,c.35) get tok: INT(FI[107])
(l.2183,c.36) get tok: STRING(;)
(l.2184,c.9) get tok: REF TAG(errprint)
(l.2184,c.10) get tok: STRING(()
(l.2184,c.58) get tok: STRING("unexpected module tag after a macro identifier")
(l.2184,c.59) get tok: STRING())
(l.2184,c.60) get tok: STRING())
(l.2184,c.61) get tok: STRING(,)
(l.2187,c.1) get tok: STRING(()
(l.2187,c.3) get tok: INT(IF[62])
(l.2187,c.6) get tok: REF TAG(ch)
(l.2187,c.8) get tok: STRING(/=)
(l.2187,c.11) get tok: STRING("=")
(l.2187,c.16) get tok: INT(THEN[190])
(l.2187,c.33) get tok: REF TAG(backspaceinput)
(l.2187,c.35) get tok: INT(FI[107])
(l.2187,c.36) get tok: STRING(;)
(l.2188,c.9) get tok: REF TAG(errprint)
(l.2188,c.10) get tok: STRING(()
(l.2188,c.51) get tok: STRING("unexpected module tag in a macro header")
(l.2188,c.52) get tok: STRING())
(l.2188,c.53) get tok: STRING())
(l.2188,c.54) get tok: STRING(,)
(l.2191,c.2) get tok: INT(IF[62])
(l.2191,c.5) get tok: REF TAG(ch)
(l.2191,c.6) get tok: STRING(=)
(l.2192,c.0) get tok: STRING("=")
(l.2192,c.4) get tok: INT(THEN[190])
(l.2192,c.7) get tok: CONTROL(<)
(l.2193,c.4) get tok: INT(ELIF[9])
(l.2193,c.20) get tok: REF TAG(backspaceinput)
(l.2193,c.21) get tok: STRING(;)
(l.2193,c.24) get tok: CONTROL(<)
(l.2194,c.2) get tok: INT(FI[107])
(l.2194,c.3) get tok: STRING(,)
(l.2196,c.2) get tok: INT(IF[62])
(l.2196,c.5) get tok: REF TAG(ch)
(l.2196,c.6) get tok: STRING(=)
(l.2197,c.0) get tok: STRING("=")
(l.2197,c.4) get tok: INT(THEN[190])
(l.2197,c.14) get tok: REF TAG(errprint)
(l.2197,c.15) get tok: STRING(()
(l.2197,c.55) get tok: STRING("unexpected module tag in a module body")
(l.2197,c.56) get tok: STRING())
(l.2199,c.4) get tok: INT(ELIF[9])
(l.2199,c.20) get tok: REF TAG(backspaceinput)
(l.2199,c.21) get tok: STRING(;)
(l.2199,c.24) get tok: CONTROL(<)
(l.2200,c.2) get tok: INT(FI[107])
(l.2201,c.4) get tok: INT(ESAC[39])
(l.2203,c.2) get tok: CONTROL( )
(l.2207,c.2) get tok: CONTROL(<)
(l.2208,c.2) get tok: INT(IF[62])
(l.2208,c.6) get tok: INT(UPB[150])
(l.2208,c.12) get tok: REF TAG(mtag)
(l.2208,c.13) get tok: STRING(>)
(l.2209,c.0) get tok: STRING(3)
(l.2209,c.4) get tok: INT(THEN[190])
(l.2210,c.2) get tok: INT(IF[62])
(l.2210,c.7) get tok: REF TAG(mtag)
(l.2210,c.8) get tok: STRING([)
(l.2210,c.11) get tok: INT(UPB[150])
(l.2210,c.16) get tok: REF TAG(mtag)
(l.2210,c.17) get tok: STRING(-)
(l.2210,c.18) get tok: STRING(2)
(l.2210,c.19) get tok: STRING(:)
(l.2210,c.20) get tok: STRING(])
(l.2210,c.21) get tok: STRING(=)
(l.2211,c.0) get tok: STRING("...")
(l.2211,c.4) get tok: INT(THEN[190])
(l.2212,c.2) get tok: INT(IF[62])
(l.2212,c.6) get tok: INT(REF[53])
(l.2212,c.13) get tok: REF TAG(MODULE)
(l.2212,c.16) get tok: REF TAG(rm)
(l.2212,c.17) get tok: STRING(=)
(l.2212,c.31) get tok: REF TAG(addmoduletag)
(l.2212,c.32) get tok: STRING(()
(l.2212,c.43) get tok: REF TAG(moduleroot)
(l.2212,c.44) get tok: STRING(,)
(l.2212,c.46) get tok: CONTROL(/)
(l.2213,c.4) get tok: REF TAG(mtag)
(l.2213,c.5) get tok: STRING([)
(l.2213,c.6) get tok: STRING(:)
(l.2213,c.9) get tok: INT(UPB[150])
(l.2213,c.14) get tok: REF TAG(mtag)
(l.2213,c.15) get tok: STRING(-)
(l.2213,c.16) get tok: STRING(3)
(l.2213,c.17) get tok: STRING(])
(l.2213,c.18) get tok: STRING(,)
(l.2213,c.20) get tok: CONTROL(/)
(l.2214,c.3) get tok: INT(NOT[230])
(l.2214,c.9) get tok: REF TAG(badd)
(l.2214,c.10) get tok: STRING(,)
(l.2214,c.19) get tok: REF TAG(bprefix)
(l.2214,c.20) get tok: STRING())
(l.2214,c.21) get tok: STRING(;)
(l.2215,c.3) get tok: REF TAG(rm)
(l.2215,c.5) get tok: INT(IS[82])
(l.2216,c.0) get tok: REF TAG(nomod)
(l.2216,c.4) get tok: INT(THEN[190])
(l.2216,c.14) get tok: REF TAG(errprint)
(l.2216,c.15) get tok: STRING(()
(l.2216,c.51) get tok: STRING("unknown or duplicate module prefix")
(l.2216,c.52) get tok: STRING())
(l.2218,c.4) get tok: INT(ELSE[4])
(l.2219,c.8) get tok: REF TAG(curmood)
(l.2219,c.10) get tok: STRING(:=)
(l.2219,c.26) get tok: REF TAG(modulebodymood)
(l.2219,c.27) get tok: STRING(;)
(l.2220,c.12) get tok: REF TAG(addmodtext)
(l.2220,c.13) get tok: STRING(()
(l.2220,c.20) get tok: REF TAG(curmod)
(l.2220,c.22) get tok: STRING(:=)
(l.2220,c.24) get tok: REF TAG(rm)
(l.2220,c.25) get tok: STRING(,)
(l.2220,c.34) get tok: REF TAG(maketext)
(l.2220,c.35) get tok: STRING(()
(l.2220,c.36) get tok: STRING(()
(l.2220,c.40) get tok: REF TAG(sec)
(l.2220,c.42) get tok: INT(OF[97])
(l.2220,c.46) get tok: REF TAG(web)
(l.2220,c.47) get tok: STRING())
(l.2220,c.48) get tok: STRING())
(l.2220,c.49) get tok: STRING())
(l.2221,c.2) get tok: INT(FI[107])
(l.2222,c.4) get tok: INT(ELSE[4])
(l.2222,c.7) get tok: CONTROL(<)
(l.2223,c.2) get tok: INT(FI[107])
(l.2224,c.4) get tok: INT(ELSE[4])
(l.2224,c.7) get tok: CONTROL(<)
(l.2225,c.2) get tok: INT(FI[107])
(l.2227,c.2) get tok: CONTROL( )
(l.2231,c.2) get tok: CONTROL(<)
(l.2232,c.8) get tok: REF TAG(curmood)
(l.2232,c.10) get tok: STRING(:=)
(l.2232,c.26) get tok: REF TAG(modulebodymood)
(l.2232,c.27) get tok: STRING(;)
(l.2233,c.12) get tok: REF TAG(addmodtext)
(l.2233,c.13) get tok: STRING(()
(l.2233,c.20) get tok: REF TAG(curmod)
(l.2233,c.22) get tok: STRING(:=)
(l.2233,c.36) get tok: REF TAG(addmoduletag)
(l.2233,c.37) get tok: STRING(()
(l.2233,c.48) get tok: REF TAG(moduleroot)
(l.2233,c.49) get tok: STRING(,)
(l.2233,c.54) get tok: REF TAG(mtag)
(l.2233,c.55) get tok: STRING(,)
(l.2233,c.61) get tok: REF TAG(badd)
(l.2233,c.62) get tok: STRING(,)
(l.2233,c.66) get tok: INT(NOT[230])
(l.2233,c.75) get tok: REF TAG(bprefix)
(l.2233,c.76) get tok: STRING())
(l.2233,c.77) get tok: STRING(,)
(l.2234,c.9) get tok: REF TAG(maketext)
(l.2234,c.10) get tok: STRING(()
(l.2234,c.11) get tok: STRING(()
(l.2234,c.15) get tok: REF TAG(sec)
(l.2234,c.17) get tok: INT(OF[97])
(l.2234,c.21) get tok: REF TAG(web)
(l.2234,c.22) get tok: STRING())
(l.2234,c.23) get tok: STRING())
(l.2234,c.24) get tok: STRING())
(l.2236,c.2) get tok: CONTROL( )
(l.2240,c.2) get tok: CONTROL(<)
(l.2241,c.2) get tok: CONTROL(h)
(l.2241,c.19) get tok: INT(UPB[150])
(l.2241,c.25) get tok: REF TAG(mtag)
(l.2241,c.26) get tok: STRING(>)
(l.2242,c.0) get tok: STRING(3)
(l.2242,c.4) get tok: INT(THEN[190])
(l.2243,c.2) get tok: INT(IF[62])
(l.2243,c.7) get tok: REF TAG(mtag)
(l.2243,c.8) get tok: STRING([)
(l.2243,c.11) get tok: INT(UPB[150])
(l.2243,c.16) get tok: REF TAG(mtag)
(l.2243,c.17) get tok: STRING(-)
(l.2243,c.18) get tok: STRING(2)
(l.2243,c.19) get tok: STRING(:)
(l.2243,c.20) get tok: STRING(])
(l.2243,c.21) get tok: STRING(=)
(l.2244,c.0) get tok: STRING("...")
(l.2244,c.4) get tok: INT(THEN[190])
(l.2245,c.2) get tok: INT(IF[62])
(l.2245,c.6) get tok: INT(REF[53])
(l.2245,c.13) get tok: REF TAG(MODULE)
(l.2245,c.16) get tok: REF TAG(rm)
(l.2245,c.17) get tok: STRING(=)
(l.2245,c.31) get tok: REF TAG(addmoduletag)
(l.2245,c.32) get tok: STRING(()
(l.2245,c.43) get tok: REF TAG(moduleroot)
(l.2245,c.44) get tok: STRING(,)
(l.2245,c.48) get tok: REF TAG(mtag)
(l.2245,c.49) get tok: STRING([)
(l.2245,c.50) get tok: STRING(:)
(l.2245,c.53) get tok: INT(UPB[150])
(l.2245,c.58) get tok: REF TAG(mtag)
(l.2245,c.59) get tok: STRING(-)
(l.2245,c.60) get tok: STRING(3)
(l.2245,c.61) get tok: STRING(])
(l.2245,c.62) get tok: STRING(,)
(l.2245,c.64) get tok: CONTROL(/)
(l.2246,c.3) get tok: INT(NOT[230])
(l.2246,c.9) get tok: REF TAG(badd)
(l.2246,c.10) get tok: STRING(,)
(l.2246,c.19) get tok: REF TAG(bprefix)
(l.2246,c.20) get tok: STRING())
(l.2246,c.21) get tok: STRING(;)
(l.2247,c.3) get tok: REF TAG(rm)
(l.2247,c.5) get tok: INT(IS[82])
(l.2248,c.0) get tok: REF TAG(nomod)
(l.2248,c.4) get tok: INT(THEN[190])
(l.2248,c.14) get tok: REF TAG(errprint)
(l.2248,c.15) get tok: STRING(()
(l.2248,c.51) get tok: STRING("unknown or duplicate module prefix")
(l.2248,c.52) get tok: STRING())
(l.2250,c.4) get tok: INT(ELSE[4])
(l.2250,c.17) get tok: REF TAG(addmodtext)
(l.2250,c.18) get tok: STRING(()
(l.2250,c.25) get tok: REF TAG(curmod)
(l.2250,c.26) get tok: STRING(,)
(l.2250,c.30) get tok: REF TAG(TEXT)
(l.2250,c.31) get tok: STRING(()
(l.2250,c.33) get tok: REF TAG(rm)
(l.2250,c.34) get tok: STRING(,)
(l.2250,c.41) get tok: REF TAG(notext)
(l.2250,c.42) get tok: STRING())
(l.2250,c.43) get tok: STRING())
(l.2251,c.2) get tok: INT(FI[107])
(l.2252,c.4) get tok: INT(ELIF[9])
(l.2252,c.7) get tok: CONTROL(<)
(l.2253,c.2) get tok: INT(FI[107])
(l.2254,c.4) get tok: INT(ELIF[9])
(l.2254,c.7) get tok: CONTROL(<)
(l.2256,c.2) get tok: CONTROL( )
(l.2259,c.2) get tok: CONTROL(<)
(l.2260,c.2) get tok: CONTROL(h)
(l.2260,c.25) get tok: REF TAG(curmood)
(l.2260,c.26) get tok: STRING(=)
(l.2261,c.0) get tok: REF TAG(modulebodymood)
(l.2261,c.4) get tok: INT(THEN[190])
(l.2261,c.17) get tok: REF TAG(addmodtext)
(l.2261,c.18) get tok: STRING(()
(l.2261,c.25) get tok: REF TAG(curmod)
(l.2261,c.26) get tok: STRING(,)
(l.2262,c.4) get tok: REF TAG(TEXT)
(l.2262,c.5) get tok: STRING(()
(l.2262,c.19) get tok: REF TAG(addmoduletag)
(l.2262,c.20) get tok: STRING(()
(l.2262,c.31) get tok: REF TAG(moduleroot)
(l.2262,c.32) get tok: STRING(,)
(l.2262,c.37) get tok: REF TAG(mtag)
(l.2262,c.38) get tok: STRING(,)
(l.2262,c.44) get tok: REF TAG(badd)
(l.2262,c.45) get tok: STRING(,)
(l.2262,c.49) get tok: INT(NOT[230])
(l.2262,c.58) get tok: REF TAG(bprefix)
(l.2262,c.59) get tok: STRING())
(l.2262,c.60) get tok: STRING(,)
(l.2263,c.7) get tok: REF TAG(notext)
(l.2263,c.8) get tok: STRING())
(l.2263,c.9) get tok: STRING())
(l.2264,c.4) get tok: INT(ELIF[9])
(l.2264,c.14) get tok: REF TAG(curmood)
(l.2264,c.15) get tok: STRING(=)
(l.2265,c.0) get tok: REF TAG(macrobodymood)
(l.2265,c.4) get tok: INT(THEN[190])
(l.2265,c.17) get tok: REF TAG(addmactext)
(l.2265,c.18) get tok: STRING(()
(l.2265,c.25) get tok: REF TAG(curmac)
(l.2265,c.26) get tok: STRING(,)
(l.2266,c.4) get tok: REF TAG(TEXT)
(l.2266,c.5) get tok: STRING(()
(l.2266,c.19) get tok: REF TAG(addmoduletag)
(l.2266,c.20) get tok: STRING(()
(l.2266,c.31) get tok: REF TAG(moduleroot)
(l.2266,c.32) get tok: STRING(,)
(l.2266,c.37) get tok: REF TAG(mtag)
(l.2266,c.38) get tok: STRING(,)
(l.2266,c.44) get tok: REF TAG(badd)
(l.2266,c.45) get tok: STRING(,)
(l.2266,c.49) get tok: INT(NOT[230])
(l.2266,c.58) get tok: REF TAG(bprefix)
(l.2266,c.59) get tok: STRING())
(l.2266,c.60) get tok: STRING(,)
(l.2267,c.7) get tok: REF TAG(notext)
(l.2267,c.8) get tok: STRING())
(l.2267,c.9) get tok: STRING())
(l.2268,c.4) get tok: INT(ELSE[4])
(l.2268,c.14) get tok: REF TAG(errprint)
(l.2268,c.15) get tok: STRING(()
(l.2268,c.43) get tok: STRING("module tag occurs in mood ")
(l.2268,c.44) get tok: STRING(+)
(l.2268,c.49) get tok: REF TAG(whole)
(l.2268,c.50) get tok: STRING(()
(l.2268,c.58) get tok: REF TAG(curmood)
(l.2268,c.59) get tok: STRING(,)
(l.2268,c.60) get tok: STRING(0)
(l.2268,c.61) get tok: STRING())
(l.2268,c.62) get tok: STRING())
(l.2271,c.2) get tok: CONTROL( )
(l.2275,c.2) get tok: CONTROL(<)
(l.2276,c.2) get tok: INT(IF[62])
(l.2276,c.9) get tok: INT(STRING[156])
(l.2276,c.17) get tok: REF TAG(incfn)
(l.2276,c.18) get tok: STRING(=)
(l.2276,c.31) get tok: REF TAG(gathertocs)
(l.2276,c.32) get tok: STRING(()
(l.2276,c.35) get tok: STRING(">")
(l.2276,c.36) get tok: STRING())
(l.2276,c.37) get tok: STRING(;)
(l.2277,c.18) get tok: REF TAG(scanincludedtree)
(l.2277,c.19) get tok: STRING(()
(l.2277,c.27) get tok: REF TAG(inctree)
(l.2277,c.28) get tok: STRING(,)
(l.2277,c.35) get tok: REF TAG(incfn)
(l.2277,c.36) get tok: STRING())
(l.2278,c.4) get tok: INT(THEN[190])
(l.2278,c.15) get tok: REF TAG(warnprint)
(l.2278,c.16) get tok: STRING(()
(l.2278,c.43) get tok: STRING("! Warning: included file ")
(l.2278,c.44) get tok: STRING(+)
(l.2278,c.50) get tok: REF TAG(incfn)
(l.2278,c.51) get tok: STRING(+)
(l.2278,c.70) get tok: STRING(" already included")
(l.2278,c.71) get tok: STRING())
(l.2279,c.4) get tok: INT(ELIF[9])
(l.2279,c.8) get tok: INT(NOT[230])
(l.2279,c.25) get tok: REF TAG(addincludefile)
(l.2279,c.26) get tok: STRING(()
(l.2279,c.29) get tok: REF TAG(web)
(l.2279,c.30) get tok: STRING(,)
(l.2279,c.37) get tok: REF TAG(incfn)
(l.2279,c.38) get tok: STRING())
(l.2280,c.4) get tok: INT(THEN[190])
(l.2280,c.14) get tok: REF TAG(errprint)
(l.2280,c.15) get tok: STRING(()
(l.2280,c.47) get tok: STRING("cannot find the included file ")
(l.2280,c.48) get tok: STRING(+)
(l.2280,c.54) get tok: REF TAG(incfn)
(l.2280,c.55) get tok: STRING())
(l.2282,c.2) get tok: INT(FI[107])
(l.2284,c.2) get tok: CONTROL(1)
(l.2292,c.2) get tok: CONTROL(<)
(l.2293,c.4) get tok: INT(BOOL[184])
(l.2293,c.15) get tok: REF TAG(tagoutput)
(l.2293,c.17) get tok: STRING(:=)
(l.2293,c.22) get tok: INT(FALSE[123])
(l.2293,c.23) get tok: STRING(;)
(l.2295,c.2) get tok: CONTROL( )
(l.2305,c.2) get tok: CONTROL(<)
(l.2306,c.4) get tok: INT(PROC[69])
(l.2306,c.13) get tok: REF TAG(putout)
(l.2306,c.14) get tok: STRING(=)
(l.2306,c.16) get tok: STRING(()
(l.2306,c.19) get tok: INT(REF[53])
(l.2306,c.26) get tok: REF TAG(STREAM)
(l.2306,c.29) get tok: REF TAG(st)
(l.2306,c.30) get tok: STRING(,)
(l.2306,c.32) get tok: CONTROL(/)
(l.2307,c.1) get tok: STRING([)
(l.2307,c.2) get tok: STRING(])
(l.2307,c.7) get tok: INT(UNION[311])
(l.2307,c.8) get tok: STRING(()
(l.2307,c.12) get tok: INT(CHAR[113])
(l.2307,c.13) get tok: STRING(,)
(l.2307,c.19) get tok: INT(STRING[156])
(l.2307,c.20) get tok: STRING(,)
(l.2307,c.23) get tok: INT(INT[195])
(l.2307,c.24) get tok: STRING(,)
(l.2307,c.25) get tok: STRING([)
(l.2307,c.26) get tok: STRING(])
(l.2307,c.29) get tok: INT(INT[195])
(l.2307,c.30) get tok: STRING(,)
(l.2307,c.33) get tok: INT(REF[53])
(l.2307,c.37) get tok: REF TAG(TAG)
(l.2307,c.38) get tok: STRING())
(l.2307,c.40) get tok: REF TAG(p)
(l.2307,c.41) get tok: STRING())
(l.2307,c.45) get tok: INT(VOID[181])
(l.2308,c.0) get tok: STRING(:)
(l.2308,c.5) get tok: INT(BEGIN[227])
(l.2309,c.4) get tok: INT(PROC[69])
(l.2309,c.22) get tok: REF TAG(emptythebuffer)
(l.2309,c.23) get tok: STRING(=)
(l.2309,c.25) get tok: STRING(()
(l.2309,c.28) get tok: INT(REF[53])
(l.2309,c.35) get tok: REF TAG(STREAM)
(l.2309,c.38) get tok: REF TAG(st)
(l.2309,c.39) get tok: STRING())
(l.2309,c.43) get tok: INT(VOID[181])
(l.2310,c.0) get tok: STRING(:)
(l.2310,c.1) get tok: STRING(()
(l.2311,c.2) get tok: INT(IF[62])
(l.2311,c.7) get tok: INT(CHAR[113])
(l.2311,c.10) get tok: REF TAG(b1)
(l.2311,c.11) get tok: STRING(=)
(l.2311,c.12) get tok: STRING(()
(l.2311,c.14) get tok: REF TAG(b)
(l.2311,c.16) get tok: INT(OF[97])
(l.2311,c.19) get tok: REF TAG(st)
(l.2311,c.20) get tok: STRING())
(l.2311,c.21) get tok: STRING([)
(l.2311,c.22) get tok: STRING(1)
(l.2311,c.23) get tok: STRING(])
(l.2311,c.24) get tok: STRING(;)
(l.2312,c.2) get tok: REF TAG(b1)
(l.2312,c.3) get tok: STRING(=)
(l.2312,c.6) get tok: STRING("*")
(l.2312,c.9) get tok: INT(OR[177])
(l.2312,c.12) get tok: REF TAG(b1)
(l.2312,c.13) get tok: STRING(=)
(l.2313,c.0) get tok: STRING("%")
(l.2313,c.4) get tok: INT(THEN[190])
(l.2313,c.8) get tok: REF TAG(put)
(l.2313,c.9) get tok: STRING(()
(l.2313,c.11) get tok: REF TAG(f)
(l.2313,c.13) get tok: INT(OF[97])
(l.2313,c.16) get tok: REF TAG(st)
(l.2313,c.17) get tok: STRING(,)
(l.2313,c.22) get tok: REF TAG(blank)
(l.2313,c.23) get tok: STRING())
(l.2314,c.2) get tok: INT(FI[107])
(l.2314,c.3) get tok: STRING(;)
(l.2315,c.3) get tok: REF TAG(put)
(l.2315,c.4) get tok: STRING(()
(l.2315,c.6) get tok: REF TAG(f)
(l.2315,c.8) get tok: INT(OF[97])
(l.2315,c.11) get tok: REF TAG(st)
(l.2315,c.12) get tok: STRING(,)
(l.2315,c.13) get tok: STRING(()
(l.2315,c.14) get tok: STRING(()
(l.2315,c.16) get tok: REF TAG(b)
(l.2315,c.18) get tok: INT(OF[97])
(l.2315,c.21) get tok: REF TAG(st)
(l.2315,c.22) get tok: STRING())
(l.2315,c.23) get tok: STRING([)
(l.2315,c.24) get tok: STRING(:)
(l.2315,c.28) get tok: REF TAG(upb)
(l.2315,c.30) get tok: INT(OF[97])
(l.2315,c.33) get tok: REF TAG(st)
(l.2315,c.34) get tok: STRING(])
(l.2315,c.35) get tok: STRING(,)
(l.2315,c.42) get tok: REF TAG(newline)
(l.2315,c.43) get tok: STRING())
(l.2315,c.44) get tok: STRING())
(l.2315,c.45) get tok: STRING(;)
(l.2316,c.2) get tok: REF TAG(n)
(l.2316,c.4) get tok: INT(OF[97])
(l.2316,c.7) get tok: REF TAG(st)
(l.2316,c.10) get tok: STRING(+:=)
(l.2316,c.11) get tok: STRING(1)
(l.2316,c.12) get tok: STRING(;)
(l.2316,c.17) get tok: REF TAG(upb)
(l.2316,c.19) get tok: INT(OF[97])
(l.2316,c.22) get tok: REF TAG(st)
(l.2316,c.24) get tok: STRING(:=)
(l.2317,c.0) get tok: STRING(0)
(l.2317,c.1) get tok: STRING())
(l.2317,c.2) get tok: STRING(;)
(l.2319,c.3) get tok: INT(FOR[138])
(l.2319,c.6) get tok: REF TAG(i)
(l.2319,c.10) get tok: INT(FROM[176])
(l.2319,c.14) get tok: INT(LWB[148])
(l.2319,c.17) get tok: REF TAG(p)
(l.2319,c.19) get tok: INT(TO[187])
(l.2319,c.23) get tok: INT(UPB[150])
(l.2320,c.0) get tok: REF TAG(p)
(l.2320,c.2) get tok: INT(DO[244])
(l.2321,c.1) get tok: STRING([)
(l.2321,c.2) get tok: STRING(])
(l.2321,c.6) get tok: INT(CHAR[113])
(l.2321,c.11) get tok: REF TAG(outs)
(l.2321,c.12) get tok: STRING(=)
(l.2321,c.14) get tok: CONTROL(/)
(l.2322,c.4) get tok: INT(CASE[137])
(l.2322,c.6) get tok: REF TAG(p)
(l.2322,c.7) get tok: STRING([)
(l.2322,c.8) get tok: REF TAG(i)
(l.2322,c.9) get tok: STRING(])
(l.2323,c.2) get tok: INT(IN[306])
(l.2324,c.1) get tok: STRING(()
(l.2324,c.5) get tok: INT(CHAR[113])
(l.2324,c.8) get tok: REF TAG(ci)
(l.2324,c.9) get tok: STRING())
(l.2324,c.10) get tok: STRING(:)
(l.2324,c.15) get tok: REF TAG(ci)
(l.2324,c.16) get tok: STRING(,)
(l.2325,c.1) get tok: STRING(()
(l.2325,c.7) get tok: INT(STRING[156])
(l.2325,c.10) get tok: REF TAG(si)
(l.2325,c.11) get tok: STRING())
(l.2325,c.12) get tok: STRING(:)
(l.2325,c.15) get tok: INT(IF[62])
(l.2325,c.20) get tok: INT(CHAR[113])
(l.2325,c.24) get tok: REF TAG(sil)
(l.2325,c.25) get tok: STRING(=)
(l.2325,c.27) get tok: REF TAG(si)
(l.2325,c.28) get tok: STRING([)
(l.2325,c.31) get tok: INT(LWB[148])
(l.2325,c.34) get tok: REF TAG(si)
(l.2325,c.35) get tok: STRING(])
(l.2325,c.36) get tok: STRING(;)
(l.2325,c.48) get tok: REF TAG(tagoutput)
(l.2325,c.49) get tok: STRING(&)
(l.2325,c.58) get tok: REF TAG(isdigit)
(l.2325,c.59) get tok: STRING(()
(l.2325,c.62) get tok: REF TAG(sil)
(l.2325,c.63) get tok: STRING())
(l.2326,c.4) get tok: INT(THEN[190])
(l.2326,c.15) get tok: REF TAG(tagoutput)
(l.2326,c.17) get tok: STRING(:=)
(l.2326,c.22) get tok: INT(FALSE[123])
(l.2326,c.23) get tok: STRING(;)
(l.2326,c.29) get tok: REF TAG(blank)
(l.2326,c.30) get tok: STRING(+)
(l.2326,c.32) get tok: REF TAG(si)
(l.2326,c.33) get tok: STRING(+)
(l.2327,c.0) get tok: REF TAG(blank)
(l.2327,c.4) get tok: INT(ELIF[9])
(l.2327,c.13) get tok: REF TAG(isdigit)
(l.2327,c.14) get tok: STRING(()
(l.2327,c.17) get tok: REF TAG(sil)
(l.2327,c.18) get tok: STRING())
(l.2328,c.4) get tok: INT(THEN[190])
(l.2328,c.7) get tok: REF TAG(si)
(l.2328,c.8) get tok: STRING(+)
(l.2329,c.0) get tok: REF TAG(blank)
(l.2329,c.4) get tok: INT(ELIF[9])
(l.2329,c.15) get tok: REF TAG(tagoutput)
(l.2329,c.17) get tok: STRING(:=)
(l.2329,c.22) get tok: INT(FALSE[123])
(l.2329,c.23) get tok: STRING(;)
(l.2329,c.26) get tok: REF TAG(si)
(l.2329,c.27) get tok: STRING(=)
(l.2330,c.0) get tok: STRING("=")
(l.2330,c.4) get tok: INT(THEN[190])
(l.2330,c.10) get tok: REF TAG(blank)
(l.2330,c.11) get tok: STRING(+)
(l.2331,c.0) get tok: REF TAG(si)
(l.2331,c.4) get tok: INT(ELSE[4])
(l.2332,c.0) get tok: REF TAG(si)
(l.2332,c.2) get tok: INT(FI[107])
(l.2332,c.3) get tok: STRING(,)
(l.2333,c.1) get tok: STRING(()
(l.2333,c.4) get tok: INT(INT[195])
(l.2333,c.7) get tok: REF TAG(ni)
(l.2333,c.8) get tok: STRING())
(l.2333,c.9) get tok: STRING(:)
(l.2333,c.16) get tok: INT(CASE[137])
(l.2333,c.18) get tok: STRING(2)
(l.2333,c.19) get tok: STRING(+)
(l.2333,c.23) get tok: INT(SIGN[196])
(l.2334,c.0) get tok: REF TAG(ni)
(l.2334,c.2) get tok: INT(IN[306])
(l.2335,c.14) get tok: INT(IF[62])
(l.2336,c.0) get tok: REF TAG(tagoutput)
(l.2336,c.4) get tok: INT(THEN[190])
(l.2337,c.0) get tok: REF TAG(blank)
(l.2337,c.4) get tok: INT(ELSE[4])
(l.2337,c.15) get tok: REF TAG(tagoutput)
(l.2337,c.17) get tok: STRING(:=)
(l.2337,c.21) get tok: INT(TRUE[64])
(l.2337,c.22) get tok: STRING(;)
(l.2338,c.0) get tok: STRING("")
(l.2338,c.2) get tok: INT(FI[107])
(l.2338,c.3) get tok: STRING(+)
(l.2338,c.11) get tok: REF TAG(boldsym)
(l.2338,c.12) get tok: STRING([)
(l.2338,c.15) get tok: INT(ABS[226])
(l.2338,c.18) get tok: REF TAG(ni)
(l.2338,c.19) get tok: STRING(])
(l.2339,c.1) get tok: STRING(,)
(l.2340,c.12) get tok: STRING(()
(l.2340,c.28) get tok: REF TAG(emptythebuffer)
(l.2340,c.29) get tok: STRING(()
(l.2340,c.31) get tok: REF TAG(st)
(l.2340,c.32) get tok: STRING())
(l.2340,c.33) get tok: STRING(;)
(l.2340,c.44) get tok: REF TAG(tagoutput)
(l.2340,c.46) get tok: STRING(:=)
(l.2340,c.51) get tok: INT(FALSE[123])
(l.2340,c.52) get tok: STRING(;)
(l.2340,c.55) get tok: STRING("")
(l.2340,c.56) get tok: STRING())
(l.2341,c.1) get tok: STRING(,)
(l.2342,c.12) get tok: STRING(()
(l.2342,c.22) get tok: REF TAG(tagoutput)
(l.2342,c.24) get tok: STRING(:=)
(l.2342,c.29) get tok: INT(FALSE[123])
(l.2342,c.30) get tok: STRING(;)
(l.2342,c.36) get tok: REF TAG(whole)
(l.2342,c.37) get tok: STRING(()
(l.2342,c.39) get tok: REF TAG(ni)
(l.2342,c.40) get tok: STRING(,)
(l.2342,c.41) get tok: STRING(0)
(l.2342,c.42) get tok: STRING())
(l.2342,c.43) get tok: STRING())
(l.2343,c.4) get tok: INT(ESAC[39])
(l.2343,c.5) get tok: STRING(,)
(l.2344,c.1) get tok: STRING(()
(l.2344,c.2) get tok: STRING([)
(l.2344,c.3) get tok: STRING(])
(l.2344,c.6) get tok: INT(INT[195])
(l.2344,c.9) get tok: REF TAG(ri)
(l.2344,c.10) get tok: STRING())
(l.2344,c.11) get tok: STRING(:)
(l.2344,c.16) get tok: STRING(()
(l.2344,c.26) get tok: REF TAG(tagoutput)
(l.2344,c.28) get tok: STRING(:=)
(l.2344,c.33) get tok: INT(FALSE[123])
(l.2344,c.34) get tok: STRING(;)
(l.2345,c.1) get tok: STRING(()
(l.2345,c.3) get tok: REF TAG(ri)
(l.2345,c.4) get tok: STRING([)
(l.2345,c.5) get tok: STRING(1)
(l.2345,c.6) get tok: STRING(])
(l.2345,c.7) get tok: STRING(<)
(l.2345,c.8) get tok: STRING(0)
(l.2345,c.9) get tok: STRING(|)
(l.2345,c.12) get tok: STRING("I")
(l.2345,c.13) get tok: STRING(|)
(l.2345,c.15) get tok: STRING("")
(l.2345,c.16) get tok: STRING())
(l.2345,c.17) get tok: STRING(+)
(l.2345,c.22) get tok: REF TAG(whole)
(l.2345,c.23) get tok: STRING(()
(l.2345,c.26) get tok: INT(ABS[226])
(l.2345,c.29) get tok: REF TAG(ri)
(l.2345,c.30) get tok: STRING([)
(l.2345,c.31) get tok: STRING(1)
(l.2345,c.32) get tok: STRING(])
(l.2345,c.33) get tok: STRING(,)
(l.2345,c.34) get tok: STRING(0)
(l.2345,c.35) get tok: STRING())
(l.2346,c.1) get tok: STRING(+)
(l.2346,c.4) get tok: STRING(".")
(l.2346,c.5) get tok: STRING(+)
(l.2346,c.10) get tok: REF TAG(whole)
(l.2346,c.11) get tok: STRING(()
(l.2346,c.13) get tok: REF TAG(ri)
(l.2346,c.14) get tok: STRING([)
(l.2346,c.15) get tok: STRING(2)
(l.2346,c.16) get tok: STRING(])
(l.2346,c.17) get tok: STRING(,)
(l.2346,c.18) get tok: STRING(0)
(l.2346,c.19) get tok: STRING())
(l.2347,c.1) get tok: STRING(+)
(l.2347,c.4) get tok: STRING(".")
(l.2347,c.5) get tok: STRING(+)
(l.2347,c.10) get tok: REF TAG(whole)
(l.2347,c.11) get tok: STRING(()
(l.2347,c.13) get tok: REF TAG(ri)
(l.2347,c.14) get tok: STRING([)
(l.2347,c.15) get tok: STRING(3)
(l.2347,c.16) get tok: STRING(])
(l.2347,c.17) get tok: STRING(,)
(l.2347,c.18) get tok: STRING(0)
(l.2347,c.19) get tok: STRING())
(l.2348,c.1) get tok: STRING(+)
(l.2348,c.4) get tok: STRING(".")
(l.2348,c.5) get tok: STRING(+)
(l.2348,c.10) get tok: REF TAG(whole)
(l.2348,c.11) get tok: STRING(()
(l.2348,c.13) get tok: REF TAG(ri)
(l.2348,c.14) get tok: STRING([)
(l.2348,c.15) get tok: STRING(4)
(l.2348,c.16) get tok: STRING(])
(l.2348,c.17) get tok: STRING(,)
(l.2348,c.18) get tok: STRING(0)
(l.2348,c.19) get tok: STRING())
(l.2348,c.20) get tok: STRING())
(l.2348,c.21) get tok: STRING(,)
(l.2349,c.1) get tok: STRING(()
(l.2349,c.4) get tok: INT(REF[53])
(l.2349,c.8) get tok: REF TAG(TAG)
(l.2349,c.11) get tok: REF TAG(ti)
(l.2349,c.12) get tok: STRING())
(l.2349,c.13) get tok: STRING(:)
(l.2349,c.15) get tok: STRING(()
(l.2349,c.25) get tok: REF TAG(tagoutput)
(l.2349,c.26) get tok: STRING(|)
(l.2349,c.31) get tok: REF TAG(blank)
(l.2349,c.32) get tok: STRING(|)
(l.2349,c.42) get tok: REF TAG(tagoutput)
(l.2349,c.44) get tok: STRING(:=)
(l.2349,c.48) get tok: INT(TRUE[64])
(l.2349,c.49) get tok: STRING(;)
(l.2349,c.51) get tok: STRING("")
(l.2349,c.52) get tok: STRING())
(l.2349,c.53) get tok: STRING(+)
(l.2349,c.55) get tok: REF TAG(s)
(l.2349,c.57) get tok: INT(OF[97])
(l.2350,c.0) get tok: REF TAG(ti)
(l.2350,c.4) get tok: INT(ESAC[39])
(l.2350,c.5) get tok: STRING(;)
(l.2352,c.2) get tok: INT(IF[62])
(l.2352,c.7) get tok: REF TAG(upb)
(l.2352,c.9) get tok: INT(OF[97])
(l.2352,c.13) get tok: REF TAG(st)
(l.2352,c.14) get tok: STRING(+)
(l.2352,c.18) get tok: INT(UPB[150])
(l.2352,c.24) get tok: REF TAG(outs)
(l.2352,c.25) get tok: STRING(>)
(l.2353,c.0) get tok: REF TAG(maxoutputlineleng)
(l.2353,c.4) get tok: INT(THEN[190])
(l.2353,c.21) get tok: REF TAG(emptythebuffer)
(l.2353,c.22) get tok: STRING(()
(l.2353,c.24) get tok: REF TAG(st)
(l.2353,c.25) get tok: STRING())
(l.2354,c.2) get tok: INT(FI[107])
(l.2354,c.3) get tok: STRING(;)
(l.2355,c.1) get tok: STRING(()
(l.2355,c.3) get tok: REF TAG(b)
(l.2355,c.5) get tok: INT(OF[97])
(l.2355,c.8) get tok: REF TAG(st)
(l.2355,c.9) get tok: STRING())
(l.2355,c.10) get tok: STRING([)
(l.2355,c.14) get tok: REF TAG(upb)
(l.2355,c.16) get tok: INT(OF[97])
(l.2355,c.19) get tok: REF TAG(st)
(l.2355,c.20) get tok: STRING(+)
(l.2355,c.21) get tok: STRING(1)
(l.2355,c.22) get tok: STRING(:)
(l.2355,c.26) get tok: REF TAG(upb)
(l.2355,c.28) get tok: INT(OF[97])
(l.2355,c.31) get tok: REF TAG(st)
(l.2355,c.32) get tok: STRING(+)
(l.2355,c.35) get tok: INT(UPB[150])
(l.2355,c.40) get tok: REF TAG(outs)
(l.2355,c.41) get tok: STRING(])
(l.2355,c.43) get tok: STRING(:=)
(l.2355,c.47) get tok: REF TAG(outs)
(l.2355,c.48) get tok: STRING(;)
(l.2356,c.4) get tok: REF TAG(upb)
(l.2356,c.6) get tok: INT(OF[97])
(l.2356,c.9) get tok: REF TAG(st)
(l.2356,c.12) get tok: STRING(+:=)
(l.2356,c.15) get tok: INT(UPB[150])
(l.2357,c.0) get tok: REF TAG(outs)
(l.2357,c.2) get tok: INT(OD[231])
(l.2358,c.3) get tok: INT(END[202])
(l.2358,c.4) get tok: STRING(;)
(l.2360,c.2) get tok: CONTROL( )
(l.2362,c.2) get tok: CONTROL(<)
(l.2363,c.2) get tok: INT(IF[62])
(l.2363,c.7) get tok: REF TAG(upb)
(l.2363,c.9) get tok: INT(OF[97])
(l.2363,c.16) get tok: REF TAG(output)
(l.2363,c.17) get tok: STRING(>)
(l.2364,c.0) get tok: STRING(0)
(l.2364,c.4) get tok: INT(THEN[190])
(l.2364,c.8) get tok: REF TAG(put)
(l.2364,c.9) get tok: STRING(()
(l.2364,c.11) get tok: REF TAG(f)
(l.2364,c.13) get tok: INT(OF[97])
(l.2364,c.20) get tok: REF TAG(output)
(l.2364,c.21) get tok: STRING(,)
(l.2364,c.22) get tok: STRING(()
(l.2364,c.23) get tok: STRING(()
(l.2364,c.25) get tok: REF TAG(b)
(l.2364,c.27) get tok: INT(OF[97])
(l.2364,c.34) get tok: REF TAG(output)
(l.2364,c.35) get tok: STRING())
(l.2364,c.36) get tok: STRING([)
(l.2364,c.37) get tok: STRING(:)
(l.2364,c.41) get tok: REF TAG(upb)
(l.2364,c.43) get tok: INT(OF[97])
(l.2364,c.50) get tok: REF TAG(output)
(l.2364,c.51) get tok: STRING(])
(l.2364,c.52) get tok: STRING(,)
(l.2364,c.59) get tok: REF TAG(newline)
(l.2364,c.60) get tok: STRING())
(l.2364,c.61) get tok: STRING())
(l.2365,c.2) get tok: INT(FI[107])
(l.2365,c.3) get tok: STRING(;)
(l.2366,c.5) get tok: REF TAG(close)
(l.2366,c.6) get tok: STRING(()
(l.2366,c.8) get tok: REF TAG(f)
(l.2366,c.10) get tok: INT(OF[97])
(l.2366,c.17) get tok: REF TAG(output)
(l.2366,c.18) get tok: STRING())
(l.2368,c.2) get tok: CONTROL(2)
(l.2378,c.2) get tok: CONTROL(m)
(l.2378,c.13) get tok: REF TAG(voidtoken)
(l.2378,c.14) get tok: STRING(()
(l.2378,c.15) get tok: REF TAG(t)
(l.2378,c.16) get tok: STRING())
(l.2378,c.18) get tok: STRING(=)
(l.2378,c.20) get tok: STRING(()
(l.2378,c.25) get tok: REF TAG(text)
(l.2378,c.27) get tok: INT(OF[97])
(l.2378,c.29) get tok: REF TAG(t)
(l.2378,c.30) get tok: STRING(|)
(l.2378,c.31) get tok: STRING(()
(l.2378,c.35) get tok: INT(VOID[181])
(l.2378,c.36) get tok: STRING())
(l.2378,c.37) get tok: STRING(:)
(l.2378,c.42) get tok: INT(TRUE[64])
(l.2378,c.43) get tok: STRING(|)
(l.2378,c.48) get tok: INT(FALSE[123])
(l.2378,c.49) get tok: STRING())
(l.2380,c.2) get tok: CONTROL(<)
(l.2381,c.4) get tok: INT(PROC[69])
(l.2381,c.17) get tok: REF TAG(expandmacro)
(l.2381,c.18) get tok: STRING(=)
(l.2381,c.19) get tok: STRING(()
(l.2381,c.22) get tok: INT(REF[53])
(l.2381,c.26) get tok: INT(REF[53])
(l.2381,c.31) get tok: REF TAG(TEXT)
(l.2381,c.35) get tok: REF TAG(txt)
(l.2381,c.36) get tok: STRING(,)
(l.2381,c.39) get tok: INT(REF[53])
(l.2381,c.45) get tok: REF TAG(MACRO)
(l.2381,c.48) get tok: REF TAG(mc)
(l.2381,c.49) get tok: STRING())
(l.2381,c.53) get tok: INT(BOOL[184])
(l.2382,c.0) get tok: STRING(:)
(l.2382,c.2) get tok: INT(IF[62])
(l.2382,c.6) get tok: INT(REF[53])
(l.2382,c.11) get tok: REF TAG(TEXT)
(l.2382,c.20) get tok: REF TAG(newtext)
(l.2382,c.22) get tok: STRING(:=)
(l.2382,c.29) get tok: REF TAG(notext)
(l.2382,c.30) get tok: STRING(,)
(l.2383,c.12) get tok: REF TAG(locmactext)
(l.2383,c.14) get tok: STRING(:=)
(l.2383,c.23) get tok: REF TAG(textbeg)
(l.2383,c.25) get tok: INT(OF[97])
(l.2383,c.28) get tok: REF TAG(mc)
(l.2383,c.29) get tok: STRING(;)
(l.2384,c.3) get tok: INT(REF[53])
(l.2384,c.7) get tok: INT(REF[53])
(l.2384,c.12) get tok: REF TAG(TEXT)
(l.2384,c.25) get tok: REF TAG(locnewtext)
(l.2384,c.27) get tok: STRING(:=)
(l.2384,c.35) get tok: REF TAG(newtext)
(l.2384,c.36) get tok: STRING(;)
(l.2385,c.6) get tok: REF TAG(param)
(l.2385,c.8) get tok: INT(OF[97])
(l.2385,c.12) get tok: REF TAG(mc)
(l.2385,c.14) get tok: INT(IS[82])
(l.2386,c.0) get tok: REF TAG(nowparam)
(l.2386,c.4) get tok: INT(THEN[190])
(l.2387,c.5) get tok: INT(WHILE[99])
(l.2388,c.2) get tok: INT(IF[62])
(l.2388,c.16) get tok: REF TAG(locmactext)
(l.2388,c.18) get tok: INT(IS[82])
(l.2389,c.0) get tok: REF TAG(notext)
(l.2389,c.4) get tok: INT(THEN[190])
(l.2389,c.10) get tok: INT(FALSE[123])
(l.2390,c.4) get tok: INT(ELSE[4])
(l.2390,c.8) get tok: INT(NOT[230])
(l.2390,c.19) get tok: REF TAG(voidtoken)
(l.2390,c.20) get tok: STRING(()
(l.2390,c.32) get tok: REF TAG(locmactext)
(l.2390,c.33) get tok: STRING())
(l.2391,c.2) get tok: INT(FI[107])
(l.2392,c.2) get tok: INT(DO[244])
(l.2393,c.3) get tok: INT(REF[53])
(l.2393,c.7) get tok: INT(REF[53])
(l.2393,c.12) get tok: REF TAG(TEXT)
(l.2393,c.13) get tok: STRING(()
(l.2393,c.25) get tok: REF TAG(locnewtext)
(l.2393,c.26) get tok: STRING())
(l.2393,c.28) get tok: STRING(:=)
(l.2393,c.32) get tok: INT(HEAP[48])
(l.2393,c.37) get tok: REF TAG(TEXT)
(l.2393,c.39) get tok: STRING(:=)
(l.2393,c.40) get tok: STRING(()
(l.2393,c.45) get tok: REF TAG(text)
(l.2393,c.47) get tok: INT(OF[97])
(l.2393,c.60) get tok: REF TAG(locmactext)
(l.2393,c.61) get tok: STRING(,)
(l.2393,c.68) get tok: REF TAG(notext)
(l.2393,c.69) get tok: STRING())
(l.2393,c.70) get tok: STRING(;)
(l.2394,c.4) get tok: REF TAG(C)
(l.2394,c.28) get tok: REF TAG(opythemacrotextitem)
(l.2394,c.30) get tok: INT(CO[192])
(l.2395,c.12) get tok: REF TAG(locnewtext)
(l.2395,c.14) get tok: STRING(:=)
(l.2395,c.19) get tok: REF TAG(next)
(l.2395,c.21) get tok: INT(OF[97])
(l.2395,c.34) get tok: REF TAG(locnewtext)
(l.2395,c.35) get tok: STRING(;)
(l.2396,c.12) get tok: REF TAG(locmactext)
(l.2396,c.14) get tok: STRING(:=)
(l.2396,c.19) get tok: REF TAG(next)
(l.2396,c.21) get tok: INT(OF[97])
(l.2396,c.35) get tok: REF TAG(locmactext)
(l.2397,c.2) get tok: INT(OD[231])
(l.2397,c.3) get tok: STRING(;)
(l.2399,c.4) get tok: REF TAG(N)
(l.2399,c.50) get tok: REF TAG(owinsertthenewtextintothetextchainat)
(l.2399,c.51) get tok: STRING(!)
(l.2399,c.54) get tok: REF TAG(txt)
(l.2399,c.55) get tok: STRING(!)
(l.2399,c.58) get tok: INT(CO[192])
(l.2400,c.3) get tok: INT(REF[53])
(l.2400,c.7) get tok: INT(REF[53])
(l.2400,c.12) get tok: REF TAG(TEXT)
(l.2400,c.13) get tok: STRING(()
(l.2400,c.25) get tok: REF TAG(locnewtext)
(l.2400,c.26) get tok: STRING())
(l.2400,c.28) get tok: STRING(:=)
(l.2400,c.33) get tok: REF TAG(next)
(l.2400,c.35) get tok: INT(OF[97])
(l.2400,c.39) get tok: REF TAG(txt)
(l.2400,c.40) get tok: STRING(;)
(l.2402,c.3) get tok: REF TAG(txt)
(l.2402,c.5) get tok: STRING(:=)
(l.2402,c.13) get tok: REF TAG(newtext)
(l.2402,c.14) get tok: STRING(;)
(l.2403,c.5) get tok: INT(FALSE[123])
(l.2404,c.4) get tok: INT(ELSE[4])
(l.2404,c.7) get tok: CONTROL(<)
(l.2405,c.2) get tok: INT(FI[107])
(l.2405,c.3) get tok: STRING(;)
(l.2407,c.2) get tok: CONTROL( )
(l.2426,c.2) get tok: CONTROL(<)
(l.2427,c.4) get tok: INT(MODE[211])
(l.2427,c.11) get tok: REF TAG(ACTUAL)
(l.2427,c.13) get tok: STRING(=)
(l.2427,c.20) get tok: INT(STRUCT[51])
(l.2427,c.21) get tok: STRING(()
(l.2427,c.24) get tok: INT(REF[53])
(l.2427,c.29) get tok: REF TAG(TEXT)
(l.2427,c.36) get tok: REF TAG(actual)
(l.2427,c.37) get tok: STRING(,)
(l.2427,c.41) get tok: INT(REF[53])
(l.2427,c.48) get tok: REF TAG(ACTUAL)
(l.2427,c.53) get tok: REF TAG(next)
(l.2427,c.54) get tok: STRING())
(l.2427,c.55) get tok: STRING(;)
(l.2429,c.3) get tok: INT(REF[53])
(l.2429,c.10) get tok: REF TAG(ACTUAL)
(l.2429,c.21) get tok: REF TAG(noactual)
(l.2429,c.22) get tok: STRING(=)
(l.2429,c.26) get tok: INT(NIL[180])
(l.2429,c.27) get tok: STRING(;)
(l.2430,c.3) get tok: INT(REF[53])
(l.2430,c.10) get tok: REF TAG(ACTUAL)
(l.2430,c.23) get tok: REF TAG(actualparam)
(l.2430,c.25) get tok: STRING(:=)
(l.2430,c.34) get tok: REF TAG(noactual)
(l.2430,c.35) get tok: STRING(;)
(l.2432,c.2) get tok: CONTROL( )
(l.2447,c.2) get tok: CONTROL(<)
(l.2448,c.3) get tok: INT(REF[53])
(l.2448,c.7) get tok: INT(REF[53])
(l.2448,c.14) get tok: REF TAG(WPARAM)
(l.2448,c.31) get tok: REF TAG(locformalparam)
(l.2448,c.33) get tok: STRING(:=)
(l.2448,c.39) get tok: REF TAG(param)
(l.2448,c.41) get tok: INT(OF[97])
(l.2448,c.44) get tok: REF TAG(mc)
(l.2448,c.45) get tok: STRING(;)
(l.2449,c.3) get tok: INT(REF[53])
(l.2449,c.7) get tok: INT(REF[53])
(l.2449,c.14) get tok: REF TAG(ACTUAL)
(l.2449,c.31) get tok: REF TAG(locactualparam)
(l.2449,c.33) get tok: STRING(:=)
(l.2449,c.45) get tok: REF TAG(actualparam)
(l.2449,c.46) get tok: STRING(;)
(l.2451,c.5) get tok: INT(WHILE[99])
(l.2451,c.23) get tok: REF TAG(locformalparam)
(l.2451,c.27) get tok: INT(ISNT[84])
(l.2452,c.0) get tok: REF TAG(nowparam)
(l.2452,c.2) get tok: INT(DO[244])
(l.2453,c.3) get tok: INT(REF[53])
(l.2453,c.7) get tok: INT(REF[53])
(l.2453,c.14) get tok: REF TAG(ACTUAL)
(l.2453,c.15) get tok: STRING(()
(l.2453,c.31) get tok: REF TAG(locactualparam)
(l.2453,c.32) get tok: STRING())
(l.2453,c.34) get tok: STRING(:=)
(l.2453,c.38) get tok: INT(HEAP[48])
(l.2453,c.45) get tok: REF TAG(ACTUAL)
(l.2453,c.47) get tok: STRING(:=)
(l.2453,c.48) get tok: STRING(()
(l.2453,c.55) get tok: REF TAG(notext)
(l.2453,c.56) get tok: STRING(,)
(l.2453,c.66) get tok: REF TAG(noactual)
(l.2453,c.67) get tok: STRING())
(l.2453,c.68) get tok: STRING(;)
(l.2454,c.16) get tok: REF TAG(locactualparam)
(l.2454,c.18) get tok: STRING(:=)
(l.2454,c.23) get tok: REF TAG(next)
(l.2454,c.25) get tok: INT(OF[97])
(l.2454,c.42) get tok: REF TAG(locactualparam)
(l.2454,c.43) get tok: STRING(;)
(l.2455,c.16) get tok: REF TAG(locformalparam)
(l.2455,c.18) get tok: STRING(:=)
(l.2455,c.23) get tok: REF TAG(next)
(l.2455,c.25) get tok: INT(OF[97])
(l.2456,c.0) get tok: REF TAG(locformalparam)
(l.2456,c.2) get tok: INT(OD[231])
(l.2456,c.3) get tok: STRING(;)
(l.2458,c.2) get tok: CONTROL( )
(l.2462,c.2) get tok: CONTROL(m)
(l.2462,c.17) get tok: REF TAG(texttostring)
(l.2462,c.18) get tok: STRING(()
(l.2462,c.19) get tok: REF TAG(t)
(l.2462,c.20) get tok: STRING())
(l.2462,c.22) get tok: STRING(=)
(l.2462,c.24) get tok: STRING(()
(l.2462,c.25) get tok: REF TAG(t)
(l.2462,c.26) get tok: STRING(|)
(l.2462,c.27) get tok: STRING(()
(l.2462,c.33) get tok: INT(STRING[156])
(l.2462,c.35) get tok: REF TAG(s)
(l.2462,c.36) get tok: STRING())
(l.2462,c.37) get tok: STRING(:)
(l.2462,c.39) get tok: REF TAG(s)
(l.2462,c.40) get tok: STRING(|)
(l.2462,c.42) get tok: STRING("")
(l.2462,c.43) get tok: STRING())
(l.2464,c.2) get tok: CONTROL(<)
(l.2465,c.2) get tok: INT(IF[62])
(l.2465,c.17) get tok: REF TAG(texttostring)
(l.2465,c.18) get tok: STRING(()
(l.2465,c.23) get tok: REF TAG(text)
(l.2465,c.25) get tok: INT(OF[97])
(l.2465,c.31) get tok: REF TAG(next)
(l.2465,c.33) get tok: INT(OF[97])
(l.2465,c.37) get tok: REF TAG(txt)
(l.2465,c.38) get tok: STRING())
(l.2465,c.40) get tok: STRING(/=)
(l.2465,c.46) get tok: INT(STRING[156])
(l.2465,c.47) get tok: STRING(()
(l.2465,c.50) get tok: STRING("(")
(l.2465,c.51) get tok: STRING())
(l.2467,c.4) get tok: INT(THEN[190])
(l.2468,c.9) get tok: REF TAG(errprint)
(l.2468,c.10) get tok: STRING(()
(l.2468,c.26) get tok: STRING("call of macro ")
(l.2468,c.27) get tok: STRING(+)
(l.2468,c.29) get tok: REF TAG(s)
(l.2468,c.31) get tok: INT(OF[97])
(l.2468,c.35) get tok: REF TAG(id)
(l.2468,c.37) get tok: INT(OF[97])
(l.2468,c.40) get tok: REF TAG(mc)
(l.2468,c.41) get tok: STRING(+)
(l.2468,c.65) get tok: STRING(" not followed by ""(""")
(l.2469,c.0) get tok: STRING(+)
(l.2469,c.22) get tok: STRING(", macro call ignored")
(l.2469,c.23) get tok: STRING())
(l.2469,c.24) get tok: STRING(;)
(l.2471,c.4) get tok: INT(TRUE[64])
(l.2472,c.4) get tok: INT(ELSE[4])
(l.2474,c.2) get tok: CONTROL( )
(l.2481,c.2) get tok: CONTROL(<)
(l.2482,c.3) get tok: INT(REF[53])
(l.2482,c.7) get tok: INT(REF[53])
(l.2482,c.12) get tok: REF TAG(TEXT)
(l.2482,c.21) get tok: REF TAG(loctext)
(l.2482,c.23) get tok: STRING(:=)
(l.2482,c.28) get tok: REF TAG(next)
(l.2482,c.30) get tok: INT(OF[97])
(l.2482,c.36) get tok: REF TAG(next)
(l.2482,c.38) get tok: INT(OF[97])
(l.2482,c.42) get tok: REF TAG(txt)
(l.2482,c.43) get tok: STRING(;)
(l.2485,c.2) get tok: CONTROL( )
(l.2499,c.2) get tok: CONTROL(<)
(l.2500,c.16) get tok: REF TAG(locactualparam)
(l.2500,c.18) get tok: STRING(:=)
(l.2500,c.30) get tok: REF TAG(actualparam)
(l.2500,c.31) get tok: STRING(;)
(l.2502,c.5) get tok: INT(WHILE[99])
(l.2503,c.2) get tok: INT(IF[62])
(l.2503,c.20) get tok: REF TAG(locactualparam)
(l.2503,c.22) get tok: INT(IS[82])
(l.2504,c.0) get tok: REF TAG(noactual)
(l.2504,c.4) get tok: INT(THEN[190])
(l.2504,c.10) get tok: INT(FALSE[123])
(l.2505,c.4) get tok: INT(ELSE[4])
(l.2505,c.8) get tok: INT(NOT[230])
(l.2505,c.19) get tok: REF TAG(voidtoken)
(l.2505,c.20) get tok: STRING(()
(l.2505,c.28) get tok: REF TAG(loctext)
(l.2505,c.29) get tok: STRING())
(l.2506,c.2) get tok: INT(FI[107])
(l.2507,c.2) get tok: INT(DO[244])
(l.2508,c.3) get tok: INT(INT[195])
(l.2508,c.9) get tok: REF TAG(level)
(l.2508,c.11) get tok: STRING(:=)
(l.2508,c.12) get tok: STRING(0)
(l.2508,c.13) get tok: STRING(;)
(l.2510,c.7) get tok: REF TAG(actual)
(l.2510,c.9) get tok: INT(OF[97])
(l.2510,c.26) get tok: REF TAG(locactualparam)
(l.2510,c.28) get tok: STRING(:=)
(l.2510,c.36) get tok: REF TAG(loctext)
(l.2510,c.37) get tok: STRING(;)
(l.2512,c.5) get tok: INT(WHILE[99])
(l.2513,c.6) get tok: INT(STRING[156])
(l.2513,c.15) get tok: REF TAG(curtxt)
(l.2513,c.16) get tok: STRING(=)
(l.2513,c.31) get tok: REF TAG(texttostring)
(l.2513,c.32) get tok: STRING(()
(l.2513,c.37) get tok: REF TAG(text)
(l.2513,c.39) get tok: INT(OF[97])
(l.2513,c.48) get tok: REF TAG(loctext)
(l.2513,c.49) get tok: STRING())
(l.2513,c.50) get tok: STRING(;)
(l.2514,c.3) get tok: INT(NOT[230])
(l.2514,c.4) get tok: STRING(()
(l.2514,c.14) get tok: REF TAG(voidtoken)
(l.2514,c.15) get tok: STRING(()
(l.2514,c.23) get tok: REF TAG(loctext)
(l.2514,c.24) get tok: STRING())
(l.2514,c.27) get tok: INT(OR[177])
(l.2514,c.33) get tok: REF TAG(level)
(l.2514,c.34) get tok: STRING(=)
(l.2514,c.36) get tok: STRING(0)
(l.2514,c.39) get tok: INT(AND[315])
(l.2514,c.41) get tok: STRING(()
(l.2514,c.49) get tok: REF TAG(curtxt)
(l.2514,c.50) get tok: STRING(=)
(l.2514,c.54) get tok: STRING(")")
(l.2514,c.57) get tok: INT(OR[177])
(l.2514,c.66) get tok: REF TAG(curtxt)
(l.2514,c.67) get tok: STRING(=)
(l.2514,c.71) get tok: STRING(",")
(l.2514,c.72) get tok: STRING())
(l.2514,c.73) get tok: STRING())
(l.2515,c.2) get tok: INT(DO[244])
(l.2516,c.2) get tok: INT(IF[62])
(l.2516,c.11) get tok: REF TAG(curtxt)
(l.2516,c.12) get tok: STRING(=)
(l.2516,c.16) get tok: STRING("(")
(l.2516,c.21) get tok: INT(THEN[190])
(l.2516,c.27) get tok: REF TAG(level)
(l.2516,c.30) get tok: STRING(+:=)
(l.2517,c.0) get tok: STRING(1)
(l.2517,c.4) get tok: INT(ELIF[9])
(l.2517,c.13) get tok: REF TAG(curtxt)
(l.2517,c.14) get tok: STRING(=)
(l.2517,c.18) get tok: STRING(")")
(l.2517,c.23) get tok: INT(THEN[190])
(l.2517,c.29) get tok: REF TAG(level)
(l.2517,c.32) get tok: STRING(-:=)
(l.2518,c.0) get tok: STRING(1)
(l.2518,c.2) get tok: INT(FI[107])
(l.2518,c.3) get tok: STRING(;)
(l.2520,c.8) get tok: REF TAG(loctext)
(l.2520,c.10) get tok: STRING(:=)
(l.2520,c.15) get tok: REF TAG(next)
(l.2520,c.17) get tok: INT(OF[97])
(l.2521,c.0) get tok: REF TAG(loctext)
(l.2521,c.2) get tok: INT(OD[231])
(l.2521,c.3) get tok: STRING(;)
(l.2523,c.2) get tok: INT(IF[62])
(l.2523,c.13) get tok: REF TAG(voidtoken)
(l.2523,c.14) get tok: STRING(()
(l.2523,c.22) get tok: REF TAG(loctext)
(l.2523,c.23) get tok: STRING())
(l.2524,c.4) get tok: INT(THEN[190])
(l.2524,c.14) get tok: REF TAG(errprint)
(l.2524,c.15) get tok: STRING(()
(l.2524,c.39) get tok: STRING("unexpected end of text")
(l.2524,c.40) get tok: STRING())
(l.2526,c.4) get tok: INT(ELIF[9])
(l.2526,c.19) get tok: REF TAG(texttostring)
(l.2526,c.20) get tok: STRING(()
(l.2526,c.25) get tok: REF TAG(text)
(l.2526,c.27) get tok: INT(OF[97])
(l.2526,c.36) get tok: REF TAG(loctext)
(l.2526,c.37) get tok: STRING())
(l.2526,c.38) get tok: STRING(=)
(l.2526,c.44) get tok: INT(STRING[156])
(l.2526,c.45) get tok: STRING(()
(l.2526,c.48) get tok: STRING(")")
(l.2526,c.49) get tok: STRING())
(l.2528,c.0) get tok: STRING(&)
(l.2528,c.1) get tok: STRING(()
(l.2528,c.6) get tok: REF TAG(next)
(l.2528,c.8) get tok: INT(OF[97])
(l.2528,c.26) get tok: REF TAG(locactualparam)
(l.2528,c.30) get tok: INT(ISNT[84])
(l.2528,c.40) get tok: REF TAG(noactual)
(l.2528,c.41) get tok: STRING())
(l.2529,c.4) get tok: INT(THEN[190])
(l.2529,c.16) get tok: REF TAG(fatalerror)
(l.2529,c.17) get tok: STRING(()
(l.2529,c.73) get tok: STRING("! Fatal error: insufficient parameters in a macro call")
(l.2529,c.74) get tok: STRING())
(l.2531,c.4) get tok: INT(ELIF[9])
(l.2531,c.19) get tok: REF TAG(texttostring)
(l.2531,c.20) get tok: STRING(()
(l.2531,c.25) get tok: REF TAG(text)
(l.2531,c.27) get tok: INT(OF[97])
(l.2531,c.36) get tok: REF TAG(loctext)
(l.2531,c.37) get tok: STRING())
(l.2531,c.38) get tok: STRING(=)
(l.2531,c.44) get tok: INT(STRING[156])
(l.2531,c.45) get tok: STRING(()
(l.2531,c.48) get tok: STRING(",")
(l.2531,c.49) get tok: STRING())
(l.2533,c.0) get tok: STRING(&)
(l.2533,c.1) get tok: STRING(()
(l.2533,c.6) get tok: REF TAG(next)
(l.2533,c.8) get tok: INT(OF[97])
(l.2533,c.26) get tok: REF TAG(locactualparam)
(l.2533,c.28) get tok: INT(IS[82])
(l.2533,c.38) get tok: REF TAG(noactual)
(l.2533,c.39) get tok: STRING())
(l.2534,c.4) get tok: INT(THEN[190])
(l.2534,c.16) get tok: REF TAG(fatalerror)
(l.2534,c.17) get tok: STRING(()
(l.2534,c.69) get tok: STRING("! Fatal error: too many parameters in a macro call")
(l.2534,c.70) get tok: STRING())
(l.2535,c.4) get tok: INT(ELSE[4])
(l.2536,c.3) get tok: INT(REF[53])
(l.2536,c.7) get tok: INT(REF[53])
(l.2536,c.12) get tok: REF TAG(TEXT)
(l.2536,c.21) get tok: REF TAG(tmptext)
(l.2536,c.22) get tok: STRING(=)
(l.2536,c.30) get tok: REF TAG(loctext)
(l.2536,c.31) get tok: STRING(;)
(l.2537,c.8) get tok: REF TAG(loctext)
(l.2537,c.10) get tok: STRING(:=)
(l.2537,c.15) get tok: REF TAG(next)
(l.2537,c.17) get tok: INT(OF[97])
(l.2537,c.26) get tok: REF TAG(loctext)
(l.2537,c.27) get tok: STRING(;)
(l.2538,c.8) get tok: REF TAG(tmptext)
(l.2538,c.10) get tok: STRING(:=)
(l.2538,c.17) get tok: REF TAG(notext)
(l.2538,c.18) get tok: STRING(;)
(l.2539,c.16) get tok: REF TAG(locactualparam)
(l.2539,c.18) get tok: STRING(:=)
(l.2539,c.23) get tok: REF TAG(next)
(l.2539,c.25) get tok: INT(OF[97])
(l.2540,c.0) get tok: REF TAG(locactualparam)
(l.2540,c.2) get tok: INT(FI[107])
(l.2541,c.2) get tok: INT(OD[231])
(l.2541,c.3) get tok: STRING(;)
(l.2543,c.2) get tok: CONTROL( )
(l.2557,c.2) get tok: CONTROL(<)
(l.2559,c.5) get tok: INT(WHILE[99])
(l.2559,c.19) get tok: REF TAG(locmactext)
(l.2559,c.23) get tok: INT(ISNT[84])
(l.2560,c.0) get tok: REF TAG(notext)
(l.2560,c.2) get tok: INT(DO[244])
(l.2561,c.4) get tok: INT(CASE[137])
(l.2561,c.10) get tok: REF TAG(text)
(l.2561,c.12) get tok: INT(OF[97])
(l.2562,c.0) get tok: REF TAG(locmactext)
(l.2562,c.2) get tok: INT(IN[306])
(l.2563,c.1) get tok: STRING(()
(l.2563,c.4) get tok: INT(REF[53])
(l.2563,c.8) get tok: REF TAG(TAG)
(l.2563,c.12) get tok: REF TAG(tag)
(l.2563,c.13) get tok: STRING())
(l.2564,c.0) get tok: STRING(:)
(l.2564,c.2) get tok: INT(IF[62])
(l.2564,c.5) get tok: CONTROL(<)
(l.2565,c.4) get tok: INT(THEN[190])
(l.2566,c.4) get tok: REF TAG(A)
(l.2566,c.27) get tok: REF TAG(ddacopyofthetoken)
(l.2566,c.28) get tok: STRING(!)
(l.2566,c.40) get tok: REF TAG(locmactext)
(l.2566,c.41) get tok: STRING(!)
(l.2566,c.45) get tok: REF TAG(to)
(l.2566,c.46) get tok: STRING(!)
(l.2566,c.58) get tok: REF TAG(locnewtext)
(l.2566,c.59) get tok: STRING(!)
(l.2566,c.62) get tok: INT(CO[192])
(l.2567,c.3) get tok: INT(REF[53])
(l.2567,c.7) get tok: INT(REF[53])
(l.2567,c.12) get tok: REF TAG(TEXT)
(l.2567,c.13) get tok: STRING(()
(l.2567,c.25) get tok: REF TAG(locnewtext)
(l.2567,c.26) get tok: STRING())
(l.2567,c.28) get tok: STRING(:=)
(l.2567,c.32) get tok: INT(HEAP[48])
(l.2567,c.37) get tok: REF TAG(TEXT)
(l.2568,c.0) get tok: STRING(:=)
(l.2568,c.1) get tok: STRING(()
(l.2568,c.6) get tok: REF TAG(text)
(l.2568,c.8) get tok: INT(OF[97])
(l.2568,c.21) get tok: REF TAG(locmactext)
(l.2568,c.22) get tok: STRING(,)
(l.2568,c.29) get tok: REF TAG(notext)
(l.2568,c.30) get tok: STRING())
(l.2568,c.31) get tok: STRING(;)
(l.2569,c.12) get tok: REF TAG(locnewtext)
(l.2569,c.14) get tok: STRING(:=)
(l.2569,c.19) get tok: REF TAG(next)
(l.2569,c.21) get tok: INT(OF[97])
(l.2570,c.0) get tok: REF TAG(locnewtext)
(l.2570,c.4) get tok: INT(ELSE[4])
(l.2571,c.4) get tok: REF TAG(R)
(l.2571,c.29) get tok: REF TAG(eplaceitwithacopyof)
(l.2571,c.30) get tok: STRING(!)
(l.2571,c.46) get tok: REF TAG(locactualparam)
(l.2571,c.47) get tok: STRING(!)
(l.2571,c.50) get tok: INT(CO[192])
(l.2572,c.3) get tok: INT(REF[53])
(l.2572,c.7) get tok: INT(REF[53])
(l.2572,c.12) get tok: REF TAG(TEXT)
(l.2572,c.34) get tok: REF TAG(locactualparamtext)
(l.2572,c.36) get tok: STRING(:=)
(l.2572,c.43) get tok: REF TAG(actual)
(l.2572,c.45) get tok: INT(OF[97])
(l.2572,c.62) get tok: REF TAG(locactualparam)
(l.2572,c.63) get tok: STRING(;)
(l.2574,c.5) get tok: INT(WHILE[99])
(l.2574,c.28) get tok: REF TAG(locactualparamtext)
(l.2574,c.32) get tok: INT(ISNT[84])
(l.2575,c.0) get tok: REF TAG(notext)
(l.2575,c.2) get tok: INT(DO[244])
(l.2576,c.3) get tok: INT(REF[53])
(l.2576,c.7) get tok: INT(REF[53])
(l.2576,c.12) get tok: REF TAG(TEXT)
(l.2576,c.13) get tok: STRING(()
(l.2576,c.25) get tok: REF TAG(locnewtext)
(l.2576,c.26) get tok: STRING())
(l.2576,c.28) get tok: STRING(:=)
(l.2576,c.32) get tok: INT(HEAP[48])
(l.2576,c.37) get tok: REF TAG(TEXT)
(l.2576,c.39) get tok: STRING(:=)
(l.2576,c.60) get tok: REF TAG(locactualparamtext)
(l.2576,c.61) get tok: STRING(;)
(l.2577,c.12) get tok: REF TAG(locnewtext)
(l.2577,c.14) get tok: STRING(:=)
(l.2577,c.19) get tok: REF TAG(next)
(l.2577,c.21) get tok: INT(OF[97])
(l.2577,c.34) get tok: REF TAG(locnewtext)
(l.2577,c.35) get tok: STRING(;)
(l.2578,c.21) get tok: REF TAG(locactualparamtext)
(l.2578,c.23) get tok: STRING(:=)
(l.2578,c.28) get tok: REF TAG(next)
(l.2578,c.30) get tok: INT(OF[97])
(l.2579,c.0) get tok: REF TAG(locactualparamtext)
(l.2579,c.2) get tok: INT(OD[231])
(l.2580,c.2) get tok: INT(FI[107])
(l.2581,c.3) get tok: INT(OUT[155])
(l.2582,c.4) get tok: STRING(!)
(l.2582,c.16) get tok: REF TAG(locmactext)
(l.2582,c.17) get tok: STRING(!)
(l.2582,c.66) get tok: REF TAG(isnotatagandsocannotbeaformalparameter)
(l.2583,c.0) get tok: STRING(.)
(l.2583,c.1) get tok: REF TAG(W)
(l.2583,c.25) get tok: REF TAG(ejustappendacopyto)
(l.2583,c.26) get tok: STRING(!)
(l.2583,c.38) get tok: REF TAG(locnewtext)
(l.2583,c.39) get tok: STRING(!)
(l.2583,c.42) get tok: INT(CO[192])
(l.2584,c.3) get tok: INT(REF[53])
(l.2584,c.7) get tok: INT(REF[53])
(l.2584,c.12) get tok: REF TAG(TEXT)
(l.2584,c.13) get tok: STRING(()
(l.2584,c.25) get tok: REF TAG(locnewtext)
(l.2584,c.26) get tok: STRING())
(l.2584,c.28) get tok: STRING(:=)
(l.2584,c.32) get tok: INT(HEAP[48])
(l.2584,c.37) get tok: REF TAG(TEXT)
(l.2585,c.0) get tok: STRING(:=)
(l.2585,c.1) get tok: STRING(()
(l.2585,c.6) get tok: REF TAG(text)
(l.2585,c.8) get tok: INT(OF[97])
(l.2585,c.21) get tok: REF TAG(locmactext)
(l.2585,c.22) get tok: STRING(,)
(l.2585,c.29) get tok: REF TAG(notext)
(l.2585,c.30) get tok: STRING())
(l.2585,c.31) get tok: STRING(;)
(l.2586,c.12) get tok: REF TAG(locnewtext)
(l.2586,c.14) get tok: STRING(:=)
(l.2586,c.19) get tok: REF TAG(next)
(l.2586,c.21) get tok: INT(OF[97])
(l.2587,c.0) get tok: REF TAG(locnewtext)
(l.2587,c.4) get tok: INT(ESAC[39])
(l.2587,c.5) get tok: STRING(;)
(l.2589,c.12) get tok: REF TAG(locmactext)
(l.2589,c.14) get tok: STRING(:=)
(l.2589,c.19) get tok: REF TAG(next)
(l.2589,c.21) get tok: INT(OF[97])
(l.2590,c.0) get tok: REF TAG(locmactext)
(l.2590,c.2) get tok: INT(OD[231])
(l.2590,c.3) get tok: STRING(;)
(l.2592,c.2) get tok: CONTROL(<)
(l.2592,c.58) get tok: STRING(;)
(l.2594,c.4) get tok: REF TAG(W)
(l.2594,c.12) get tok: REF TAG(eyield)
(l.2594,c.13) get tok: STRING(!)
(l.2594,c.18) get tok: INT(FALSE[123])
(l.2594,c.19) get tok: STRING(!)
(l.2595,c.0) get tok: REF TAG(toensurethatthereplacementtextisrescannedby)
(l.2595,c.1) get tok: STRING(!)
(l.2595,c.15) get tok: REF TAG(processmodule)
(l.2595,c.16) get tok: STRING(!)
(l.2595,c.19) get tok: INT(CO[192])
(l.2596,c.5) get tok: INT(FALSE[123])
(l.2597,c.2) get tok: INT(FI[107])
(l.2599,c.2) get tok: CONTROL( )
(l.2607,c.2) get tok: CONTROL(<)
(l.2608,c.3) get tok: INT(REF[53])
(l.2608,c.7) get tok: INT(REF[53])
(l.2608,c.12) get tok: REF TAG(TEXT)
(l.2608,c.13) get tok: STRING(()
(l.2608,c.25) get tok: REF TAG(locnewtext)
(l.2608,c.26) get tok: STRING())
(l.2608,c.28) get tok: STRING(:=)
(l.2608,c.36) get tok: REF TAG(loctext)
(l.2608,c.37) get tok: STRING(;)
(l.2609,c.3) get tok: REF TAG(txt)
(l.2609,c.5) get tok: STRING(:=)
(l.2611,c.0) get tok: REF TAG(newtext)
(l.2611,c.2) get tok: CONTROL( )
(l.2611,c.4) get tok: CONTROL(<)
(l.2613,c.16) get tok: REF TAG(locformalparam)
(l.2613,c.18) get tok: STRING(:=)
(l.2613,c.24) get tok: REF TAG(param)
(l.2613,c.26) get tok: INT(OF[97])
(l.2613,c.29) get tok: REF TAG(mc)
(l.2613,c.30) get tok: STRING(;)
(l.2614,c.16) get tok: REF TAG(locactualparam)
(l.2614,c.18) get tok: STRING(:=)
(l.2614,c.30) get tok: REF TAG(actualparam)
(l.2614,c.31) get tok: STRING(;)
(l.2616,c.5) get tok: INT(WHILE[99])
(l.2617,c.2) get tok: INT(IF[62])
(l.2617,c.20) get tok: REF TAG(locformalparam)
(l.2617,c.22) get tok: INT(IS[82])
(l.2618,c.0) get tok: REF TAG(nowparam)
(l.2618,c.4) get tok: INT(THEN[190])
(l.2618,c.10) get tok: INT(FALSE[123])
(l.2619,c.4) get tok: INT(ELSE[4])
(l.2619,c.9) get tok: REF TAG(tag)
(l.2619,c.13) get tok: INT(ISNT[84])
(l.2619,c.18) get tok: REF TAG(par)
(l.2619,c.20) get tok: INT(OF[97])
(l.2620,c.0) get tok: REF TAG(locformalparam)
(l.2620,c.2) get tok: INT(FI[107])
(l.2621,c.2) get tok: INT(DO[244])
(l.2622,c.16) get tok: REF TAG(locformalparam)
(l.2622,c.18) get tok: STRING(:=)
(l.2622,c.23) get tok: REF TAG(next)
(l.2622,c.25) get tok: INT(OF[97])
(l.2622,c.42) get tok: REF TAG(locformalparam)
(l.2622,c.43) get tok: STRING(;)
(l.2623,c.16) get tok: REF TAG(locactualparam)
(l.2623,c.18) get tok: STRING(:=)
(l.2623,c.23) get tok: REF TAG(next)
(l.2623,c.25) get tok: INT(OF[97])
(l.2624,c.0) get tok: REF TAG(locactualparam)
(l.2624,c.2) get tok: INT(OD[231])
(l.2624,c.3) get tok: STRING(;)
(l.2626,c.17) get tok: REF TAG(locformalparam)
(l.2626,c.19) get tok: INT(IS[82])
(l.2628,c.0) get tok: REF TAG(nowparam)
(l.2628,c.2) get tok: CONTROL(2)
(l.2635,c.2) get tok: CONTROL(<)
(l.2636,c.14) get tok: REF TAG(processmodule)
(l.2636,c.15) get tok: STRING(()
(l.2636,c.21) get tok: REF TAG(output)
(l.2636,c.22) get tok: STRING(,)
(l.2636,c.37) get tok: REF TAG(unnamedmodule)
(l.2636,c.38) get tok: STRING(,)
(l.2636,c.43) get tok: INT(HEAP[48])
(l.2636,c.44) get tok: STRING([)
(l.2636,c.45) get tok: STRING(4)
(l.2636,c.46) get tok: STRING(])
(l.2636,c.49) get tok: INT(INT[195])
(l.2636,c.50) get tok: STRING())
(l.2638,c.2) get tok: CONTROL( )
(l.2657,c.2) get tok: CONTROL(<)
(l.2658,c.4) get tok: INT(PROC[69])
(l.2658,c.20) get tok: REF TAG(processmodule)
(l.2658,c.21) get tok: STRING(=)
(l.2658,c.23) get tok: STRING(()
(l.2658,c.26) get tok: INT(REF[53])
(l.2658,c.33) get tok: REF TAG(STREAM)
(l.2658,c.36) get tok: REF TAG(st)
(l.2658,c.37) get tok: STRING(,)
(l.2659,c.3) get tok: INT(REF[53])
(l.2659,c.10) get tok: REF TAG(MODULE)
(l.2659,c.14) get tok: REF TAG(mod)
(l.2659,c.15) get tok: STRING(,)
(l.2660,c.3) get tok: INT(REF[53])
(l.2660,c.4) get tok: STRING([)
(l.2660,c.5) get tok: STRING(])
(l.2660,c.8) get tok: INT(INT[195])
(l.2660,c.16) get tok: REF TAG(cursec)
(l.2660,c.17) get tok: STRING())
(l.2660,c.21) get tok: INT(VOID[181])
(l.2661,c.0) get tok: STRING(:)
(l.2661,c.2) get tok: INT(IF[62])
(l.2661,c.12) get tok: REF TAG(textbeg)
(l.2661,c.14) get tok: INT(OF[97])
(l.2661,c.18) get tok: REF TAG(mod)
(l.2661,c.21) get tok: STRING(:=:)
(l.2662,c.0) get tok: REF TAG(notext)
(l.2662,c.4) get tok: INT(THEN[190])
(l.2662,c.15) get tok: REF TAG(warnprint)
(l.2662,c.16) get tok: STRING(()
(l.2662,c.17) get tok: STRING(()
(l.2662,c.28) get tok: STRING("Module """)
(l.2662,c.29) get tok: STRING(,)
(l.2662,c.32) get tok: REF TAG(id)
(l.2662,c.34) get tok: INT(OF[97])
(l.2662,c.38) get tok: REF TAG(mod)
(l.2662,c.39) get tok: STRING(,)
(l.2662,c.56) get tok: STRING(""" has no text!")
(l.2662,c.57) get tok: STRING(,)
(l.2662,c.62) get tok: INT(EMPTY[197])
(l.2662,c.63) get tok: STRING())
(l.2662,c.64) get tok: STRING())
(l.2663,c.4) get tok: INT(ELSE[4])
(l.2664,c.7) get tok: REF TAG(cursec)
(l.2664,c.9) get tok: STRING(:=)
(l.2664,c.10) get tok: STRING(()
(l.2664,c.15) get tok: REF TAG(text)
(l.2664,c.17) get tok: INT(OF[97])
(l.2664,c.27) get tok: REF TAG(textbeg)
(l.2664,c.29) get tok: INT(OF[97])
(l.2664,c.33) get tok: REF TAG(mod)
(l.2664,c.34) get tok: STRING(|)
(l.2664,c.35) get tok: STRING(()
(l.2664,c.36) get tok: STRING([)
(l.2664,c.37) get tok: STRING(])
(l.2664,c.40) get tok: INT(INT[195])
(l.2664,c.42) get tok: REF TAG(n)
(l.2664,c.43) get tok: STRING())
(l.2664,c.44) get tok: STRING(:)
(l.2664,c.46) get tok: REF TAG(n)
(l.2664,c.47) get tok: STRING(|)
(l.2664,c.48) get tok: STRING(()
(l.2664,c.49) get tok: STRING(0)
(l.2664,c.50) get tok: STRING(,)
(l.2664,c.51) get tok: STRING(0)
(l.2664,c.52) get tok: STRING(,)
(l.2664,c.53) get tok: STRING(0)
(l.2664,c.54) get tok: STRING(,)
(l.2664,c.55) get tok: STRING(0)
(l.2664,c.56) get tok: STRING())
(l.2664,c.57) get tok: STRING())
(l.2664,c.58) get tok: STRING(;)
(l.2665,c.7) get tok: REF TAG(putout)
(l.2665,c.8) get tok: STRING(()
(l.2665,c.10) get tok: REF TAG(st)
(l.2665,c.11) get tok: STRING(,)
(l.2665,c.12) get tok: STRING(()
(l.2665,c.15) get tok: STRING("#")
(l.2665,c.16) get tok: STRING(,)
(l.2665,c.23) get tok: REF TAG(cursec)
(l.2665,c.24) get tok: STRING(,)
(l.2665,c.29) get tok: STRING(":# ")
(l.2665,c.30) get tok: STRING())
(l.2665,c.31) get tok: STRING())
(l.2665,c.32) get tok: STRING(;)
(l.2667,c.3) get tok: INT(REF[53])
(l.2667,c.7) get tok: INT(REF[53])
(l.2667,c.12) get tok: REF TAG(TEXT)
(l.2667,c.20) get tok: REF TAG(loctxt)
(l.2667,c.22) get tok: STRING(:=)
(l.2667,c.27) get tok: REF TAG(next)
(l.2667,c.29) get tok: INT(OF[97])
(l.2667,c.39) get tok: REF TAG(textbeg)
(l.2667,c.41) get tok: INT(OF[97])
(l.2667,c.45) get tok: REF TAG(mod)
(l.2667,c.46) get tok: STRING(;)
(l.2669,c.5) get tok: INT(WHILE[99])
(l.2669,c.14) get tok: REF TAG(loctxt)
(l.2669,c.18) get tok: INT(ISNT[84])
(l.2670,c.0) get tok: REF TAG(notext)
(l.2670,c.2) get tok: INT(DO[244])
(l.2671,c.16) get tok: REF TAG(debugprinttext)
(l.2671,c.17) get tok: STRING(()
(l.2671,c.35) get tok: STRING("process module: ")
(l.2671,c.36) get tok: STRING(,)
(l.2671,c.43) get tok: REF TAG(loctxt)
(l.2671,c.44) get tok: STRING())
(l.2671,c.45) get tok: STRING(;)
(l.2672,c.2) get tok: INT(IF[62])
(l.2672,c.5) get tok: CONTROL(<)
(l.2673,c.4) get tok: INT(THEN[190])
(l.2673,c.12) get tok: REF TAG(loctxt)
(l.2673,c.14) get tok: STRING(:=)
(l.2673,c.19) get tok: REF TAG(next)
(l.2673,c.21) get tok: INT(OF[97])
(l.2674,c.0) get tok: REF TAG(loctxt)
(l.2674,c.2) get tok: INT(FI[107])
(l.2675,c.2) get tok: INT(OD[231])
(l.2675,c.3) get tok: STRING(;)
(l.2677,c.7) get tok: REF TAG(putout)
(l.2677,c.8) get tok: STRING(()
(l.2677,c.10) get tok: REF TAG(st)
(l.2677,c.11) get tok: STRING(,)
(l.2677,c.12) get tok: STRING(()
(l.2677,c.16) get tok: STRING("#:")
(l.2677,c.17) get tok: STRING(,)
(l.2677,c.24) get tok: REF TAG(cursec)
(l.2677,c.25) get tok: STRING(,)
(l.2677,c.29) get tok: STRING("# ")
(l.2677,c.30) get tok: STRING())
(l.2677,c.31) get tok: STRING())
(l.2678,c.2) get tok: INT(FI[107])
(l.2678,c.3) get tok: STRING(;)
(l.2680,c.2) get tok: CONTROL( )
(l.2684,c.2) get tok: CONTROL(<)
(l.2685,c.4) get tok: INT(CASE[137])
(l.2685,c.10) get tok: REF TAG(text)
(l.2685,c.12) get tok: INT(OF[97])
(l.2686,c.0) get tok: REF TAG(loctxt)
(l.2686,c.2) get tok: INT(IN[306])
(l.2687,c.1) get tok: STRING(()
(l.2687,c.4) get tok: INT(INT[195])
(l.2687,c.7) get tok: CONTROL(!)
(l.2687,c.8) get tok: REF TAG(n)
(l.2687,c.9) get tok: STRING())
(l.2687,c.10) get tok: STRING(:)
(l.2687,c.12) get tok: STRING(()
(l.2687,c.19) get tok: REF TAG(putout)
(l.2687,c.20) get tok: STRING(()
(l.2687,c.22) get tok: REF TAG(st)
(l.2687,c.23) get tok: STRING(,)
(l.2687,c.24) get tok: REF TAG(n)
(l.2687,c.25) get tok: STRING())
(l.2687,c.26) get tok: STRING(;)
(l.2687,c.31) get tok: INT(TRUE[64])
(l.2687,c.32) get tok: STRING())
(l.2687,c.33) get tok: STRING(,)
(l.2688,c.1) get tok: STRING(()
(l.2688,c.2) get tok: STRING([)
(l.2688,c.3) get tok: STRING(])
(l.2688,c.6) get tok: INT(INT[195])
(l.2688,c.9) get tok: CONTROL(!)
(l.2688,c.10) get tok: REF TAG(r)
(l.2688,c.11) get tok: STRING())
(l.2688,c.12) get tok: STRING(:)
(l.2688,c.14) get tok: STRING(()
(l.2688,c.21) get tok: REF TAG(putout)
(l.2688,c.22) get tok: STRING(()
(l.2688,c.24) get tok: REF TAG(st)
(l.2688,c.25) get tok: STRING(,)
(l.2688,c.26) get tok: STRING(()
(l.2688,c.30) get tok: STRING("#:")
(l.2688,c.31) get tok: STRING(,)
(l.2688,c.38) get tok: REF TAG(cursec)
(l.2688,c.39) get tok: STRING(,)
(l.2688,c.44) get tok: REF TAG(blank)
(l.2688,c.45) get tok: STRING())
(l.2688,c.46) get tok: STRING())
(l.2688,c.47) get tok: STRING(;)
(l.2689,c.7) get tok: REF TAG(putout)
(l.2689,c.8) get tok: STRING(()
(l.2689,c.10) get tok: REF TAG(st)
(l.2689,c.11) get tok: STRING(,)
(l.2689,c.12) get tok: STRING(()
(l.2689,c.19) get tok: REF TAG(cursec)
(l.2689,c.21) get tok: STRING(:=)
(l.2689,c.22) get tok: REF TAG(r)
(l.2689,c.23) get tok: STRING(,)
(l.2689,c.28) get tok: STRING(":# ")
(l.2689,c.29) get tok: STRING())
(l.2689,c.30) get tok: STRING())
(l.2689,c.31) get tok: STRING(;)
(l.2690,c.4) get tok: INT(TRUE[64])
(l.2690,c.5) get tok: STRING())
(l.2690,c.6) get tok: STRING(,)
(l.2691,c.1) get tok: STRING(()
(l.2691,c.7) get tok: INT(STRING[156])
(l.2691,c.10) get tok: CONTROL(!)
(l.2691,c.11) get tok: REF TAG(s)
(l.2691,c.12) get tok: STRING())
(l.2691,c.13) get tok: STRING(:)
(l.2691,c.15) get tok: STRING(()
(l.2691,c.16) get tok: STRING(()
(l.2691,c.17) get tok: REF TAG(s)
(l.2691,c.18) get tok: STRING([)
(l.2691,c.21) get tok: INT(LWB[148])
(l.2691,c.23) get tok: REF TAG(s)
(l.2691,c.24) get tok: STRING(])
(l.2691,c.25) get tok: STRING(=)
(l.2691,c.29) get tok: STRING("""")
(l.2691,c.30) get tok: STRING(|)
(l.2691,c.37) get tok: REF TAG(putout)
(l.2691,c.38) get tok: STRING(()
(l.2691,c.40) get tok: REF TAG(st)
(l.2691,c.41) get tok: STRING(,)
(l.2691,c.46) get tok: REF TAG(blank)
(l.2691,c.47) get tok: STRING())
(l.2691,c.48) get tok: STRING())
(l.2691,c.49) get tok: STRING(;)
(l.2691,c.57) get tok: REF TAG(putout)
(l.2691,c.58) get tok: STRING(()
(l.2691,c.60) get tok: REF TAG(st)
(l.2691,c.61) get tok: STRING(,)
(l.2691,c.62) get tok: REF TAG(s)
(l.2691,c.63) get tok: STRING())
(l.2691,c.64) get tok: STRING(;)
(l.2691,c.69) get tok: INT(TRUE[64])
(l.2691,c.70) get tok: STRING())
(l.2691,c.71) get tok: STRING(,)
(l.2692,c.1) get tok: STRING(()
(l.2692,c.4) get tok: INT(REF[53])
(l.2692,c.8) get tok: REF TAG(TAG)
(l.2692,c.11) get tok: CONTROL(!)
(l.2692,c.12) get tok: REF TAG(t)
(l.2692,c.13) get tok: STRING())
(l.2692,c.14) get tok: STRING(:)
(l.2692,c.16) get tok: STRING(()
(l.2692,c.23) get tok: REF TAG(putout)
(l.2692,c.24) get tok: STRING(()
(l.2692,c.26) get tok: REF TAG(st)
(l.2692,c.27) get tok: STRING(,)
(l.2692,c.28) get tok: REF TAG(t)
(l.2692,c.29) get tok: STRING())
(l.2692,c.30) get tok: STRING(;)
(l.2692,c.35) get tok: INT(TRUE[64])
(l.2692,c.36) get tok: STRING())
(l.2692,c.37) get tok: STRING(,)
(l.2693,c.1) get tok: STRING(()
(l.2693,c.4) get tok: INT(REF[53])
(l.2693,c.10) get tok: REF TAG(MACRO)
(l.2693,c.13) get tok: REF TAG(mc)
(l.2693,c.14) get tok: STRING())
(l.2693,c.15) get tok: STRING(:)
(l.2693,c.18) get tok: CONTROL(<)
(l.2693,c.46) get tok: STRING(,)
(l.2694,c.1) get tok: STRING(()
(l.2694,c.4) get tok: INT(REF[53])
(l.2694,c.11) get tok: REF TAG(MODULE)
(l.2694,c.14) get tok: REF TAG(md)
(l.2694,c.15) get tok: STRING())
(l.2694,c.16) get tok: STRING(:)
(l.2694,c.18) get tok: STRING(()
(l.2694,c.32) get tok: REF TAG(processmodule)
(l.2694,c.33) get tok: STRING(()
(l.2694,c.35) get tok: REF TAG(st)
(l.2694,c.36) get tok: STRING(,)
(l.2694,c.38) get tok: REF TAG(md)
(l.2694,c.39) get tok: STRING(,)
(l.2694,c.43) get tok: INT(HEAP[48])
(l.2694,c.44) get tok: STRING([)
(l.2694,c.45) get tok: STRING(4)
(l.2694,c.46) get tok: STRING(])
(l.2694,c.49) get tok: INT(INT[195])
(l.2694,c.50) get tok: STRING())
(l.2694,c.51) get tok: STRING(;)
(l.2694,c.56) get tok: INT(TRUE[64])
(l.2694,c.57) get tok: STRING())
(l.2694,c.58) get tok: STRING(,)
(l.2695,c.1) get tok: STRING(()
(l.2695,c.5) get tok: INT(VOID[181])
(l.2695,c.6) get tok: STRING())
(l.2695,c.7) get tok: STRING(:)
(l.2695,c.12) get tok: INT(TRUE[64])
(l.2695,c.13) get tok: STRING(,)
(l.2696,c.1) get tok: STRING(()
(l.2696,c.8) get tok: REF TAG(CONTROL)
(l.2696,c.11) get tok: CONTROL(!)
(l.2696,c.12) get tok: REF TAG(c)
(l.2696,c.13) get tok: STRING())
(l.2696,c.14) get tok: STRING(:)
(l.2696,c.20) get tok: INT(BEGIN[227])
(l.2697,c.9) get tok: REF TAG(errprint)
(l.2697,c.10) get tok: STRING(()
(l.2697,c.40) get tok: STRING("unexpected control sequence(")
(l.2697,c.41) get tok: STRING(+)
(l.2697,c.44) get tok: REF TAG(cs)
(l.2697,c.46) get tok: INT(OF[97])
(l.2697,c.48) get tok: REF TAG(c)
(l.2697,c.49) get tok: STRING(+)
(l.2697,c.51) get tok: CONTROL(/)
(l.2698,c.16) get tok: STRING(") in module """)
(l.2698,c.17) get tok: STRING(+)
(l.2698,c.20) get tok: REF TAG(id)
(l.2698,c.22) get tok: INT(OF[97])
(l.2698,c.26) get tok: REF TAG(mod)
(l.2698,c.27) get tok: STRING(+)
(l.2698,c.31) get tok: STRING("""")
(l.2698,c.32) get tok: STRING())
(l.2698,c.33) get tok: STRING(;)
(l.2700,c.4) get tok: INT(TRUE[64])
(l.2701,c.3) get tok: INT(END[202])
(l.2702,c.4) get tok: INT(ESAC[39])
(l.2704,c.2) get tok: CONTROL( )
(l.2710,c.2) get tok: CONTROL(<)
(l.2711,c.2) get tok: INT(IF[62])
(l.2711,c.6) get tok: STRING(32)
(l.2711,c.10) get tok: INT(ELEM[126])
(l.2711,c.17) get tok: REF TAG(flags)
(l.2711,c.19) get tok: INT(OF[97])
(l.2712,c.0) get tok: REF TAG(mc)
(l.2712,c.4) get tok: INT(THEN[190])
(l.2713,c.2) get tok: INT(IF[62])
(l.2713,c.6) get tok: INT(NOT[230])
(l.2713,c.7) get tok: STRING(()
(l.2713,c.10) get tok: STRING(31)
(l.2713,c.14) get tok: INT(ELEM[126])
(l.2713,c.21) get tok: REF TAG(flags)
(l.2713,c.23) get tok: INT(OF[97])
(l.2713,c.26) get tok: REF TAG(mc)
(l.2713,c.27) get tok: STRING())
(l.2714,c.4) get tok: INT(THEN[190])
(l.2715,c.6) get tok: REF TAG(flags)
(l.2715,c.8) get tok: INT(OF[97])
(l.2715,c.11) get tok: REF TAG(mc)
(l.2715,c.13) get tok: STRING(:=)
(l.2715,c.19) get tok: REF TAG(flags)
(l.2715,c.21) get tok: INT(OF[97])
(l.2715,c.25) get tok: REF TAG(mc)
(l.2715,c.27) get tok: INT(OR[177])
(l.2715,c.32) get tok: INT(ELEM[126])
(l.2715,c.35) get tok: STRING(31)
(l.2715,c.36) get tok: STRING(;)
(l.2716,c.12) get tok: REF TAG(expandmacro)
(l.2716,c.13) get tok: STRING(()
(l.2716,c.20) get tok: REF TAG(loctxt)
(l.2716,c.21) get tok: STRING(,)
(l.2716,c.23) get tok: REF TAG(mc)
(l.2716,c.24) get tok: STRING())
(l.2717,c.4) get tok: INT(ELSE[4])
(l.2717,c.12) get tok: REF TAG(putout)
(l.2717,c.13) get tok: STRING(()
(l.2717,c.15) get tok: REF TAG(st)
(l.2717,c.16) get tok: STRING(,)
(l.2717,c.23) get tok: STRING(" SKIP")
(l.2717,c.24) get tok: STRING())
(l.2717,c.25) get tok: STRING(;)
(l.2717,c.27) get tok: CONTROL(&)
(l.2717,c.32) get tok: INT(TRUE[64])
(l.2718,c.2) get tok: INT(FI[107])
(l.2719,c.4) get tok: INT(ELSE[4])
(l.2719,c.17) get tok: REF TAG(expandmacro)
(l.2719,c.18) get tok: STRING(()
(l.2719,c.25) get tok: REF TAG(loctxt)
(l.2719,c.26) get tok: STRING(,)
(l.2719,c.28) get tok: REF TAG(mc)
(l.2719,c.29) get tok: STRING())
(l.2720,c.2) get tok: INT(FI[107])
(l.2722,c.2) get tok: CONTROL(1)
(l.2728,c.0) get tok: VOID
process module: REF MODULE(Compiler prelude)
process module: INT(PROGRAM)
process module: REF TAG(tang)
process module: REF TAG(CONTEXT)
process module: INT(VOID)
process module: INT(USE)
process module: REF MODULE(Library preludes)
process module: REF TAG(params)
process module: STRING(,)
process module: REF TAG(standard)
process module: INT(BEGIN)
process module: REF MODULE(Modes in the outer reach)
process module: INT(MODE)
process module: REF TAG(STREAM)
process module: STRING(=)
process module: INT(STRUCT)
process module: STRING(()
process module: INT(REF)
process module: INT(FILE)
process module: REF TAG(f)
process module: STRING(,)
process module: INT(BOOL)
process module: REF TAG(ended)
process module: STRING(,)
process module: INT(INT)
process module: REF TAG(fnum)
process module: STRING(,)
process module: REF TAG(n)
process module: STRING(,)
process module: REF TAG(loc)
process module: STRING(,)
process module: REF TAG(upb)
process module: STRING(,)
process module: STRING([)
process module: STRING(4)
process module: STRING(])
process module: INT(INT)
process module: REF TAG(sec)
process module: STRING(,)
process module: STRING([)
process module: REF MACRO(strbuffsz)
process module: STRING(256)
process module: STRING(])
process module: INT(CHAR)
process module: REF TAG(b)
process module: STRING(,)
process module: INT(REF)
process module: REF TAG(STREAM)
process module: REF TAG(next)
process module: STRING())
process module: STRING(;)
process module: []INT(5.1.1.9)
process module: INT(MODE)
process module: REF TAG(INCLUDED)
process module: STRING(=)
process module: INT(STRUCT)
process module: STRING(()
process module: INT(STRING)
process module: REF TAG(s)
process module: STRING(,)
process module: INT(REF)
process module: REF TAG(INCLUDED)
process module: REF TAG(left)
process module: STRING(,)
process module: REF TAG(right)
process module: STRING())
process module: STRING(;)
process module: []INT(6.2.1.3)
process module: INT(MODE)
process module: REF TAG(CONTROL)
process module: STRING(=)
process module: INT(STRUCT)
process module: STRING(()
process module: INT(CHAR)
process module: REF TAG(cs)
process module: STRING())
process module: STRING(;)
process module: []INT(6.2.1.4)
process module: INT(MODE)
process module: REF TAG(TAG)
process module: STRING(=)
process module: INT(STRUCT)
process module: STRING(()
process module: INT(STRING)
process module: REF TAG(s)
process module: STRING(,)
process module: INT(REF)
process module: REF TAG(TAG)
process module: REF TAG(left)
process module: STRING(,)
process module: REF TAG(right)
process module: STRING())
process module: STRING(;)
process module: []INT(6.2.1.5)
process module: INT(MODE)
process module: REF TAG(TOKEN)
process module: STRING(,)
process module: REF TAG(MACRO)
process module: STRING(,)
process module: REF TAG(MODULE)
process module: STRING(,)
process module: []INT(6.2.1.6)
process module: REF TAG(TEXT)
process module: STRING(=)
process module: INT(STRUCT)
process module: STRING(()
process module: INT(UNION)
process module: STRING(()
process module: REF TAG(TOKEN)
process module: STRING(,)
process module: INT(REF)
process module: REF TAG(MACRO)
process module: STRING(,)
process module: INT(REF)
process module: REF TAG(MODULE)
process module: STRING())
process module: REF TAG(text)
process module: STRING(,)
process module: INT(REF)
process module: REF TAG(TEXT)
process module: REF TAG(next)
process module: STRING())
process module: STRING(,)
process module: []INT(6.2.1.7)
process module: REF TAG(MODULE)
process module: STRING(=)
process module: INT(STRUCT)
process module: STRING(()
process module: INT(STRING)
process module: REF TAG(id)
process module: STRING(,)
process module: INT(REF)
process module: INT(REF)
process module: REF TAG(TEXT)
process module: REF TAG(textbeg)
process module: STRING(,)
process module: REF TAG(textend)
process module: STRING(,)
process module: INT(REF)
process module: REF TAG(MODULE)
process module: REF TAG(left)
process module: STRING(,)
process module: REF TAG(right)
process module: STRING())
process module: STRING(,)
process module: []INT(6.2.1.8)
process module: REF TAG(WPARAM)
process module: STRING(=)
process module: INT(STRUCT)
process module: STRING(()
process module: INT(REF)
process module: REF TAG(TAG)
process module: REF TAG(par)
process module: STRING(,)
process module: INT(REF)
process module: REF TAG(WPARAM)
process module: REF TAG(next)
process module: STRING())
process module: STRING(,)
process module: REF TAG(MACRO)
process module: STRING(=)
process module: INT(STRUCT)
process module: STRING(()
process module: INT(REF)
process module: REF TAG(TAG)
process module: REF TAG(id)
process module: STRING(,)
process module: INT(BITS)
process module: REF TAG(flags)
process module: STRING(,)
process module: INT(REF)
process module: REF TAG(WPARAM)
process module: REF TAG(param)
process module: STRING(,)
process module: INT(REF)
process module: INT(REF)
process module: REF TAG(TEXT)
process module: REF TAG(textbeg)
process module: STRING(,)
process module: REF TAG(textend)
process module: STRING(,)
process module: INT(REF)
process module: REF TAG(MACRO)
process module: REF TAG(left)
process module: STRING(,)
process module: REF TAG(right)
process module: STRING())
process module: STRING(,)
process module: []INT(6.2.1.10)
process module: REF TAG(TOKEN)
process module: STRING(=)
process module: INT(UNION)
process module: STRING(()
process module: INT(INT)
process module: STRING(,)
process module: STRING([)
process module: STRING(])
process module: INT(INT)
process module: STRING(,)
process module: REF TAG(CONTROL)
process module: STRING(,)
process module: INT(STRING)
process module: STRING(,)
process module: INT(VOID)
process module: STRING(,)
process module: INT(REF)
process module: REF TAG(TAG)
process module: STRING())
process module: STRING(;)
process module: REF MODULE(Plain values in the outer reach)
process module: INT(STRING)
process module: REF TAG(cvstang)
process module: STRING(=)
process module: STRING("$Id: tang.w68,v 1.10 2005/01/21 15:34:16 sian Exp $")
process module: STRING(;)
process module: []INT(5.3.1.1)
process module: STRING([)
process module: STRING(])
process module: INT(CHAR)
process module: REF TAG(webext)
process module: STRING(=)
process module: STRING(".w68")
process module: STRING(,)
process module: REF TAG(outext)
process module: STRING(=)
process module: STRING(".a68")
process module: STRING(;)
process module: []INT(7.1.1.3)
process module: REF MACRO(macrogpopminuschar)
process module: INT(OP)
process module: STRING(-)
process module: STRING(=)
process module: STRING(()
process module: INT(CHAR)
process module: REF TAG(a)
process module: STRING(,)
process module: REF TAG(b)
process module: STRING())
process module: STRING([)
process module: STRING(])
process module: INT(CHAR)
process module: STRING(:)
process module: INT(IF)
process module: INT(ABS)
process module: REF TAG(a)
process module: STRING(<=)
process module: INT(ABS)
process module: REF TAG(b)
process module: INT(THEN)
process module: STRING([)
process module: INT(ABS)
process module: REF TAG(a)
process module: STRING(:)
process module: INT(ABS)
process module: REF TAG(b)
process module: STRING(])
process module: INT(CHAR)
process module: REF TAG(s)
process module: STRING(;)
process module: INT(FOR)
process module: REF TAG(i)
process module: INT(FROM)
process module: INT(LWB)
process module: REF TAG(s)
process module: INT(TO)
process module: INT(UPB)
process module: REF TAG(s)
process module: INT(DO)
process module: REF TAG(s)
process module: STRING([)
process module: REF TAG(i)
process module: STRING(])
process module: STRING(:=)
process module: INT(REPR)
process module: REF TAG(i)
process module: INT(OD)
process module: STRING(;)
process module: REF TAG(s)
process module: INT(ELSE)
process module: STRING([)
process module: INT(ABS)
process module: REF TAG(b)
process module: STRING(:)
process module: INT(ABS)
process module: REF TAG(a)
process module: STRING(])
process module: INT(CHAR)
process module: REF TAG(s)
process module: STRING(;)
process module: INT(FOR)
process module: REF TAG(i)
process module: INT(FROM)
process module: INT(LWB)
process module: REF TAG(s)
process module: INT(TO)
process module: INT(UPB)
process module: REF TAG(s)
process module: INT(DO)
process module: REF TAG(s)
process module: STRING([)
process module: REF TAG(i)
process module: STRING(])
process module: STRING(:=)
process module: INT(REPR)
process module: REF TAG(i)
process module: INT(OD)
process module: STRING(;)
process module: REF TAG(s)
process module: INT(FI)
process module: STRING(;)
process module: STRING([)
process module: STRING(])
process module: INT(CHAR)
process module: REF TAG(boldrange)
process module: STRING(=)
process module: STRING(()
process module: STRING("0")
process module: STRING(-)
process module: STRING("9")
process module: STRING())
process module: STRING(+)
process module: STRING(()
process module: STRING("A")
process module: STRING(-)
process module: STRING("Z")
process module: STRING())
process module: STRING(,)
process module: REF TAG(idrange)
process module: STRING(=)
process module: REF TAG(blank)
process module: STRING(+)
process module: STRING(()
process module: STRING("0")
process module: STRING(-)
process module: STRING("9")
process module: STRING())
process module: STRING(+)
process module: STRING("_")
process module: STRING(+)
process module: STRING(()
process module: STRING("a")
process module: STRING(-)
process module: STRING("z")
process module: STRING())
process module: STRING(;)
process module: REF MODULE(Other values in the outer reach)
process module: INT(REF)
process module: REF TAG(STREAM)
process module: REF TAG(nostream)
process module: STRING(=)
process module: INT(NIL)
process module: STRING(;)
process module: []INT(5.1.1.10)
process module: INT(REF)
process module: REF TAG(INCLUDED)
process module: REF TAG(noinc)
process module: STRING(=)
process module: INT(NIL)
process module: STRING(;)
process module: []INT(6.2.2.4)
process module: INT(REF)
process module: REF TAG(MACRO)
process module: REF TAG(nomac)
process module: STRING(=)
process module: INT(NIL)
process module: STRING(;)
process module: INT(REF)
process module: REF TAG(MODULE)
process module: REF TAG(nomod)
process module: STRING(=)
process module: INT(NIL)
process module: STRING(;)
process module: INT(REF)
process module: REF TAG(WPARAM)
process module: REF TAG(nowparam)
process module: STRING(=)
process module: INT(NIL)
process module: STRING(;)
process module: INT(REF)
process module: REF TAG(TAG)
process module: REF TAG(notag)
process module: STRING(=)
process module: INT(NIL)
process module: STRING(;)
process module: INT(REF)
process module: REF TAG(TEXT)
process module: REF TAG(notext)
process module: STRING(=)
process module: INT(NIL)
process module: STRING(;)
process module: REF MODULE(Names in the outer reach)
process module: INT(BOOL)
process module: REF TAG(debug)
process module: STRING(:=)
process module: INT(FALSE)
process module: STRING(;)
process module: []INT(3.1.1.2)
process module: INT(PROC)
process module: STRING(()
process module: INT(STRING)
process module: STRING(,)
process module: REF TAG(TOKEN)
process module: STRING())
process module: INT(VOID)
process module: REF TAG(debugprinttoken)
process module: STRING(:=)
process module: STRING(()
process module: INT(STRING)
process module: REF TAG(s)
process module: STRING(,)
process module: REF TAG(TOKEN)
process module: REF TAG(t)
process module: STRING())
process module: INT(VOID)
process module: STRING(:)
process module: INT(SKIP)
process module: STRING(;)
process module: INT(PROC)
process module: STRING(()
process module: INT(STRING)
process module: STRING(,)
process module: REF TAG(TEXT)
process module: STRING())
process module: INT(VOID)
process module: REF TAG(debugprinttext)
process module: STRING(:=)
process module: STRING(()
process module: INT(STRING)
process module: REF TAG(s)
process module: STRING(,)
process module: REF TAG(TEXT)
process module: REF TAG(t)
process module: STRING())
process module: INT(VOID)
process module: STRING(:)
process module: INT(SKIP)
process module: STRING(;)
process module: INT(PROC)
process module: STRING(()
process module: INT(STRING)
process module: STRING(,)
process module: INT(STRING)
process module: STRING())
process module: INT(VOID)
process module: REF TAG(debugprintstring)
process module: STRING(:=)
process module: STRING(()
process module: INT(STRING)
process module: REF TAG(s)
process module: STRING(,)
process module: REF TAG(t)
process module: STRING())
process module: INT(VOID)
process module: STRING(:)
process module: INT(SKIP)
process module: STRING(;)
process module: []INT(4.1.1.1)
process module: INT(INT)
process module: REF TAG(history)
process module: STRING(:=)
process module: REF MACRO(spotless)
process module: STRING(0)
process module: STRING(;)
process module: []INT(4.1.1.2)
process module: INT(INT)
process module: REF TAG(consolepos)
process module: STRING(:=)
process module: STRING(0)
process module: STRING(;)
process module: []INT(4.1.1.4)
process module: INT(BOOL)
process module: REF TAG(phaseone)
process module: STRING(:=)
process module: INT(TRUE)
process module: STRING(;)
process module: []INT(5.1.1.6)
process module: INT(INT)
process module: REF TAG(filenumber)
process module: STRING(:=)
process module: STRING(0)
process module: STRING(;)
process module: []INT(5.1.1.11)
process module: INT(REF)
process module: REF TAG(INCLUDED)
process module: REF TAG(inctree)
process module: STRING(:=)
process module: REF TAG(noinc)
process module: STRING(;)
process module: []INT(5.1.1.13)
process module: INT(REF)
process module: REF TAG(STREAM)
process module: REF TAG(web)
process module: STRING(:=)
process module: INT(HEAP)
process module: REF TAG(STREAM)
process module: STRING(:=)
process module: STRING(()
process module: INT(HEAP)
process module: INT(FILE)
process module: STRING(,)
process module: INT(FALSE)
process module: STRING(,)
process module: STRING(0)
process module: STRING(,)
process module: STRING(0)
process module: STRING(,)
process module: STRING(0)
process module: STRING(,)
process module: STRING(0)
process module: STRING(,)
process module: STRING(()
process module: STRING(0)
process module: STRING(,)
process module: STRING(0)
process module: STRING(,)
process module: STRING(0)
process module: STRING(,)
process module: STRING(0)
process module: STRING())
process module: STRING(,)
process module: REF MACRO(strbuffsz)
process module: STRING(256)
process module: STRING(*)
process module: REF TAG(blank)
process module: STRING(,)
process module: REF TAG(nostream)
process module: STRING())
process module: STRING(;)
process module: REF TAG(STREAM)
process module: REF TAG(output)
process module: STRING(:=)
process module: STRING(()
process module: INT(HEAP)
process module: INT(FILE)
process module: STRING(,)
process module: INT(FALSE)
process module: STRING(,)
process module: STRING(0)
process module: STRING(,)
process module: STRING(0)
process module: STRING(,)
process module: STRING(0)
process module: STRING(,)
process module: STRING(0)
process module: STRING(,)
process module: STRING(()
process module: STRING(0)
process module: STRING(,)
process module: STRING(0)
process module: STRING(,)
process module: STRING(0)
process module: STRING(,)
process module: STRING(0)
process module: STRING())
process module: STRING(,)
process module: REF MACRO(strbuffsz)
process module: STRING(256)
process module: STRING(*)
process module: REF TAG(blank)
process module: STRING(,)
process module: REF TAG(nostream)
process module: STRING())
process module: STRING(;)
process module: []INT(5.2.1.1)
process module: INT(STRING)
process module: REF TAG(tangfn)
process module: STRING(;)
process module: []INT(5.2.1.2)
process module: INT(FILE)
process module: REF TAG(argf)
process module: STRING(;)
process module: []INT(5.2.1.5)
process module: INT(STRING)
process module: REF TAG(homedir)
process module: STRING(;)
process module: []INT(5.2.1.12)
process module: INT(STRING)
process module: REF TAG(includepaths)
process module: STRING(:=)
process module: STRING("/usr/share/algol68toc:")
process module: STRING(;)
process module: []INT(5.3.1.4)
process module: INT(STRING)
process module: REF TAG(arg)
process module: STRING(;)
process module: []INT(6.1.1.1)
process module: INT(INT)
process module: REF TAG(curmood)
process module: STRING(:=)
process module: REF MACRO(limbomood)
process module: STRING(0)
process module: STRING(;)
process module: []INT(6.2.1.1)
process module: INT(HEAP)
process module: STRING([)
process module: STRING(0)
process module: STRING(:)
process module: REF MACRO(maxhashvalue)
process module: STRING(315)
process module: STRING(])
process module: INT(STRING)
process module: REF TAG(boldsym)
process module: STRING(:=)
process module: STRING([)
process module: STRING(])
process module: INT(STRING)
process module: STRING(()
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("LE")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("ELSE")
process module: STRING(,)
process module: STRING("LEVEL")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("ELIF")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("FLEX")
process module: STRING(,)
process module: STRING("EQ")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("EXIT")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("KEEP")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("LT")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("ESAC")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("SKIP")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("RE")
process module: STRING(,)
process module: STRING("HEAP")
process module: STRING(,)
process module: STRING("REAL")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("STRUCT")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("REF")
process module: STRING(,)
process module: STRING("UP")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("FILE")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("IF")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("TRUE")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("PRAGMAT")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("PROC")
process module: STRING(,)
process module: STRING("USE")
process module: STRING(,)
process module: STRING("CHANNEL")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("SHORT")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("IS")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("ISNT")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("OP")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("PLUSTO")
process module: STRING(,)
process module: STRING("PR")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("REPR")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("EDOC")
process module: STRING(,)
process module: STRING("OF")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("WHILE")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("PLUSAB")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("FINISH")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("FI")
process module: STRING(,)
process module: STRING("LOC")
process module: STRING(,)
process module: STRING("CODE")
process module: STRING(,)
process module: STRING("COMPL")
process module: STRING(,)
process module: STRING("FORMAT")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("CHAR")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("GE")
process module: STRING(,)
process module: STRING("FALSE")
process module: STRING(,)
process module: STRING("LENG")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("ELEM")
process module: STRING(,)
process module: STRING("COMMENT")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("NE")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("FIND")
process module: STRING(,)
process module: STRING("SEMA")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("PRIO")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("CASE")
process module: STRING(,)
process module: STRING("FOR")
process module: STRING(,)
process module: STRING("CONJ")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("OUSE")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("OUTTYPE")
process module: STRING(,)
process module: STRING("AT")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("LWB")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("UPB")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("GT")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("OVER")
process module: STRING(,)
process module: STRING("OUT")
process module: STRING(,)
process module: STRING("STRING")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("PAR")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("BITS")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("TIMESAB")
process module: STRING(,)
process module: STRING("AFTER")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("PROGRAM")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("FROM")
process module: STRING(,)
process module: STRING("OR")
process module: STRING(,)
process module: STRING("ENTIER")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("NIL")
process module: STRING(,)
process module: STRING("VOID")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("INTYPE")
process module: STRING(,)
process module: STRING("BOOL")
process module: STRING(,)
process module: STRING("BYTES")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("TO")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("THEN")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("CO")
process module: STRING(,)
process module: STRING("SHORTEN")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("INT")
process module: STRING(,)
process module: STRING("SIGN")
process module: STRING(,)
process module: STRING("EMPTY")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("END")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("OVERAB")
process module: STRING(,)
process module: STRING("ROUND")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("LONG")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("MODE")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("DIVAB")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("ABS")
process module: STRING(,)
process module: STRING("BEGIN")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("NOT")
process module: STRING(,)
process module: STRING("OD")
process module: STRING(,)
process module: STRING("ODD")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("BY")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("DO")
process module: STRING(,)
process module: STRING("ALIEN")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("MINUSAB")
process module: STRING(,)
process module: STRING("BIN")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("ARG")
process module: STRING(,)
process module: STRING("MOD")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("DOWN")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("GO")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("GOTO")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("IM")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("IN")
process module: STRING(,)
process module: STRING("MODAB")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("UNION")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: STRING("AND")
process module: STRING())
process module: STRING(;)
process module: []INT(6.2.2.5)
process module: INT(REF)
process module: REF TAG(MACRO)
process module: REF TAG(macroroot)
process module: STRING(:=)
process module: REF TAG(nomac)
process module: STRING(;)
process module: INT(REF)
process module: REF TAG(MODULE)
process module: REF TAG(moduleroot)
process module: STRING(:=)
process module: REF TAG(nomod)
process module: STRING(;)
process module: STRING([)
process module: STRING(0)
process module: STRING(:)
process module: STRING(15)
process module: STRING(])
process module: INT(REF)
process module: REF TAG(TAG)
process module: REF TAG(tagroot)
process module: STRING(;)
process module: INT(FOR)
process module: REF TAG(i)
process module: INT(FROM)
process module: INT(LWB)
process module: REF TAG(tagroot)
process module: INT(TO)
process module: INT(UPB)
process module: REF TAG(tagroot)
process module: INT(DO)
process module: REF TAG(tagroot)
process module: STRING([)
process module: REF TAG(i)
process module: STRING(])
process module: STRING(:=)
process module: REF TAG(notag)
process module: INT(OD)
process module: STRING(;)
process module: []INT(6.2.2.10)
process module: INT(BOOL)
process module: REF TAG(oneoffmacro)
process module: STRING(:=)
process module: INT(FALSE)
process module: STRING(;)
process module: []INT(7.1.1.6)
process module: INT(REF)
process module: REF TAG(MACRO)
process module: REF TAG(curmac)
process module: STRING(:=)
process module: REF TAG(nomac)
process module: STRING(;)
process module: INT(REF)
process module: REF TAG(MODULE)
process module: REF TAG(curmod)
process module: STRING(:=)
process module: REF TAG(nomod)
process module: STRING(;)
process module: REF TAG(MODULE)
process module: REF TAG(unnamedmodule)
process module: STRING(:=)
process module: STRING(()
process module: STRING("")
process module: STRING(,)
process module: INT(HEAP)
process module: INT(REF)
process module: REF TAG(TEXT)
process module: STRING(:=)
process module: REF TAG(notext)
process module: STRING(,)
process module: INT(HEAP)
process module: INT(REF)
process module: REF TAG(TEXT)
process module: STRING(:=)
process module: REF TAG(notext)
process module: STRING(,)
process module: REF TAG(nomod)
process module: STRING(,)
process module: REF TAG(nomod)
process module: STRING())
process module: STRING(;)
process module: REF TAG(textend)
process module: INT(OF)
process module: REF TAG(unnamedmodule)
process module: STRING(:=)
process module: REF TAG(textbeg)
process module: INT(OF)
process module: REF TAG(unnamedmodule)
process module: STRING(;)
process module: []INT(7.1.1.17)
process module: INT(INT)
process module: REF TAG(incomment)
process module: STRING(:=)
process module: STRING(0)
process module: STRING(;)
process module: []INT(8.1.1.1)
process module: INT(BOOL)
process module: REF TAG(tagoutput)
process module: STRING(:=)
process module: INT(FALSE)
process module: STRING(;)
process module: REF MODULE(Debug routines)
process module: REF MACRO(macromonitor)
process module: REF MACRO(macromonitorfile)
process module: INT(FILE)
process module: REF TAG(monitorfile)
process module: STRING(;)
process module: INT(PROC)
process module: REF TAG(monitor)
process module: STRING(=)
process module: STRING(()
process module: STRING([)
process module: STRING(])
process module: INT(UNION)
process module: STRING(()
process module: REF TAG(SIMPLOUT)
process module: STRING(,)
process module: INT(PROC)
process module: STRING(()
process module: INT(REF)
process module: INT(FILE)
process module: STRING())
process module: INT(VOID)
process module: STRING())
process module: REF TAG(s)
process module: STRING())
process module: INT(BOOL)
process module: STRING(:)
process module: INT(IF)
process module: REF TAG(open)
process module: STRING(()
process module: REF TAG(monitorfile)
process module: STRING(,)
process module: REF TAG(idf)
process module: STRING(()
process module: REF TAG(monitorfile)
process module: STRING())
process module: STRING(,)
process module: REF TAG(standbackchannel)
process module: STRING())
process module: STRING(/=)
process module: STRING(0)
process module: INT(THEN)
process module: INT(FALSE)
process module: INT(ELSE)
process module: REF TAG(set)
process module: STRING(()
process module: REF TAG(monitorfile)
process module: STRING(,)
process module: STRING(0)
process module: STRING(,)
process module: STRING(0)
process module: STRING(,)
process module: REF TAG(logicalend)
process module: STRING(()
process module: REF TAG(monitorfile)
process module: STRING())
process module: STRING())
process module: STRING(;)
process module: REF TAG(put)
process module: STRING(()
process module: REF TAG(monitorfile)
process module: STRING(,)
process module: REF TAG(s)
process module: STRING())
process module: STRING(;)
process module: REF TAG(close)
process module: STRING(()
process module: REF TAG(monitorfile)
process module: STRING())
process module: STRING(;)
process module: INT(TRUE)
process module: INT(FI)
process module: STRING(;)
process module: REF MACRO(macrostartmonitor)
process module: REF MACRO(macromonitorfile)
process module: STRING(;)
process module: REF MACRO(macromonitor)
process module: STRING(;)
process module: INT(PROC)
process module: REF TAG(startmonitor)
process module: STRING(=)
process module: STRING(()
process module: INT(STRING)
process module: REF TAG(fn)
process module: STRING())
process module: INT(BOOL)
process module: STRING(:)
process module: INT(IF)
process module: REF TAG(establish)
process module: STRING(()
process module: REF TAG(monitorfile)
process module: STRING(,)
process module: REF TAG(fn)
process module: STRING(,)
process module: REF TAG(standbackchannel)
process module: STRING(,)
process module: STRING(0)
process module: STRING(,)
process module: STRING(0)
process module: STRING(,)
process module: STRING(0)
process module: STRING())
process module: STRING(/=)
process module: STRING(0)
process module: INT(THEN)
process module: INT(FALSE)
process module: INT(ELSE)
process module: REF TAG(put)
process module: STRING(()
process module: REF TAG(monitorfile)
process module: STRING(,)
process module: STRING(()
process module: STRING("Monitor log")
process module: STRING(,)
process module: REF TAG(newline)
process module: STRING(,)
process module: STRING("===========")
process module: STRING(,)
process module: REF TAG(newline)
process module: STRING(,)
process module: REF TAG(newline)
process module: STRING())
process module: STRING())
process module: STRING(;)
process module: REF TAG(close)
process module: STRING(()
process module: REF TAG(monitorfile)
process module: STRING())
process module: STRING(;)
process module: INT(TRUE)
process module: INT(FI)
process module: STRING(;)
process module: []INT(3.1.1.4)
process module: INT(PROC)
process module: REF TAG(monitorprinttoken)
process module: STRING(=)
process module: STRING(()
process module: INT(STRING)
process module: REF TAG(s)
process module: STRING(,)
process module: REF TAG(TOKEN)
process module: REF TAG(t)
process module: STRING())
process module: INT(VOID)
process module: STRING(:)
process module: REF TAG(monitor)
process module: STRING(()
process module: STRING(()
process module: REF TAG(s)
process module: STRING(,)
process module: INT(CASE)
process module: REF TAG(t)
process module: INT(IN)
process module: STRING(()
process module: INT(INT)
process module: REF TAG(n)
process module: STRING())
process module: STRING(:)
process module: STRING("INT(")
process module: STRING(+)
process module: INT(IF)
process module: REF TAG(n)
process module: STRING(<)
process module: STRING(0)
process module: INT(THEN)
process module: REF TAG(boldsym)
process module: STRING([)
process module: INT(ABS)
process module: REF TAG(n)
process module: STRING(])
process module: STRING(+)
process module: STRING("[")
process module: STRING(+)
process module: REF TAG(whole)
process module: STRING(()
process module: INT(ABS)
process module: REF TAG(n)
process module: STRING(,)
process module: STRING(0)
process module: STRING())
process module: STRING(+)
process module: STRING("]")
process module: INT(ELSE)
process module: REF TAG(whole)
process module: STRING(()
process module: REF TAG(n)
process module: STRING(,)
process module: STRING(0)
process module: STRING())
process module: INT(FI)
process module: STRING(+)
process module: STRING(")")
process module: STRING(,)
process module: STRING(()
process module: REF TAG(CONTROL)
process module: REF TAG(c)
process module: STRING())
process module: STRING(:)
process module: STRING("CONTROL(")
process module: STRING(+)
process module: REF TAG(cs)
process module: INT(OF)
process module: REF TAG(c)
process module: STRING(+)
process module: STRING(")")
process module: STRING(,)
process module: STRING(()
process module: INT(STRING)
process module: REF TAG(st)
process module: STRING())
process module: STRING(:)
process module: STRING("STRING(")
process module: STRING(+)
process module: REF TAG(st)
process module: STRING(+)
process module: STRING(")")
process module: STRING(,)
process module: STRING(()
process module: INT(VOID)
process module: STRING())
process module: STRING(:)
process module: STRING("VOID")
process module: STRING(,)
process module: STRING(()
process module: INT(REF)
process module: REF TAG(TAG)
process module: REF TAG(rt)
process module: STRING())
process module: STRING(:)
process module: STRING("REF TAG(")
process module: STRING(+)
process module: REF TAG(s)
process module: INT(OF)
process module: REF TAG(rt)
process module: STRING(+)
process module: STRING(")")
process module: INT(ESAC)
process module: STRING(,)
process module: REF TAG(newline)
process module: STRING())
process module: STRING())
process module: STRING(;)
process module: []INT(3.1.1.5)
process module: INT(PROC)
process module: REF TAG(monitorprinttext)
process module: STRING(=)
process module: STRING(()
process module: INT(STRING)
process module: REF TAG(s)
process module: STRING(,)
process module: REF TAG(TEXT)
process module: REF TAG(t)
process module: STRING())
process module: INT(VOID)
process module: STRING(:)
process module: REF TAG(monitor)
process module: STRING(()
process module: STRING(()
process module: REF TAG(s)
process module: STRING(,)
process module: STRING(()
process module: REF TAG(text)
process module: INT(OF)
process module: REF TAG(t)
process module: STRING(|)
process module: STRING(()
process module: INT(INT)
process module: REF TAG(n)
process module: STRING())
process module: STRING(:)
process module: STRING("INT(")
process module: STRING(+)
process module: STRING(()
process module: REF TAG(n)
process module: STRING(<)
process module: STRING(0)
process module: STRING(|)
process module: REF TAG(boldsym)
process module: STRING([)
process module: INT(ABS)
process module: REF TAG(n)
process module: STRING(])
process module: STRING(|)
process module: REF TAG(whole)
process module: STRING(()
process module: REF TAG(n)
process module: STRING(,)
process module: STRING(0)
process module: STRING())
process module: STRING())
process module: STRING(+)
process module: STRING(")")
process module: STRING(,)
process module: STRING(()
process module: STRING([)
process module: STRING(])
process module: INT(INT)
process module: REF TAG(r)
process module: STRING())
process module: STRING(:)
process module: STRING("[]INT(")
process module: STRING(+)
process module: REF TAG(whole)
process module: STRING(()
process module: REF TAG(r)
process module: STRING([)
process module: STRING(1)
process module: STRING(])
process module: STRING(,)
process module: STRING(0)
process module: STRING())
process module: STRING(+)
process module: STRING(".")
process module: STRING(+)
process module: REF TAG(whole)
process module: STRING(()
process module: REF TAG(r)
process module: STRING([)
process module: STRING(2)
process module: STRING(])
process module: STRING(,)
process module: STRING(0)
process module: STRING())
process module: STRING(+)
process module: STRING(".")
process module: STRING(+)
process module: REF TAG(whole)
process module: STRING(()
process module: REF TAG(r)
process module: STRING([)
process module: STRING(3)
process module: STRING(])
process module: STRING(,)
process module: STRING(0)
process module: STRING())
process module: STRING(+)
process module: STRING(".")
process module: STRING(+)
process module: REF TAG(whole)
process module: STRING(()
process module: REF TAG(r)
process module: STRING([)
process module: STRING(4)
process module: STRING(])
process module: STRING(,)
process module: STRING(0)
process module: STRING())
process module: STRING(+)
process module: STRING(")")
process module: STRING(,)
process module: STRING(()
process module: INT(STRING)
process module: REF TAG(st)
process module: STRING())
process module: STRING(:)
process module: STRING("STRING(")
process module: STRING(+)
process module: REF TAG(st)
process module: STRING(+)
process module: STRING(")")
process module: STRING(,)
process module: STRING(()
process module: INT(REF)
process module: REF TAG(TAG)
process module: REF TAG(tg)
process module: STRING())
process module: STRING(:)
process module: STRING("REF TAG(")
process module: STRING(+)
process module: REF TAG(s)
process module: INT(OF)
process module: REF TAG(tg)
process module: STRING(+)
process module: STRING(")")
process module: STRING(,)
process module: STRING(()
process module: INT(REF)
process module: REF TAG(MACRO)
process module: REF TAG(mc)
process module: STRING())
process module: STRING(:)
process module: STRING("REF MACRO(")
process module: STRING(+)
process module: REF TAG(s)
process module: INT(OF)
process module: REF TAG(id)
process module: INT(OF)
process module: REF TAG(mc)
process module: STRING(+)
process module: STRING(")")
process module: STRING(,)
process module: STRING(()
process module: INT(REF)
process module: REF TAG(MODULE)
process module: REF TAG(md)
process module: STRING())
process module: STRING(:)
process module: STRING("REF MODULE(")
process module: STRING(+)
process module: REF TAG(id)
process module: INT(OF)
process module: REF TAG(md)
process module: STRING(+)
process module: STRING(")")
process module: STRING(,)
process module: STRING(()
process module: INT(VOID)
process module: STRING())
process module: STRING(:)
process module: STRING("VOID")
process module: STRING(,)
process module: STRING(()
process module: REF TAG(CONTROL)
process module: REF TAG(c)
process module: STRING())
process module: STRING(:)
process module: STRING("CONTROL(")
process module: STRING(+)
process module: REF TAG(cs)
process module: INT(OF)
process module: REF TAG(c)
process module: STRING(+)
process module: STRING(")")
process module: STRING())
process module: STRING(,)
process module: REF TAG(newline)
process module: STRING())
process module: STRING())
process module: STRING(;)
process module: []INT(3.1.1.6)
process module: INT(PROC)
process module: REF TAG(monitorprintstring)
process module: STRING(=)
process module: STRING(()
process module: INT(STRING)
process module: REF TAG(s)
process module: STRING(,)
process module: REF TAG(t)
process module: STRING())
process module: INT(VOID)
process module: STRING(:)
process module: REF TAG(monitor)
process module: STRING(()
process module: STRING(()
process module: REF TAG(s)
process module: STRING(,)
process module: REF TAG(t)
process module: STRING(,)
process module: REF TAG(newline)
process module: STRING())
process module: STRING())
process module: STRING(;)
process module: REF MODULE(Error handling routines)
process module: INT(PROC)
process module: REF TAG(printout)
process module: STRING(=)
process module: STRING(()
process module: STRING([)
process module: STRING(])
process module: INT(UNION)
process module: STRING(()
process module: INT(STRING)
process module: STRING(,)
process module: INT(CHAR)
process module: STRING(,)
process module: INT(INT)
process module: STRING(,)
process module: INT(VOID)
process module: STRING())
process module: REF TAG(s)
process module: STRING())
process module: INT(VOID)
process module: STRING(:)
process module: INT(FOR)
process module: REF TAG(i)
process module: INT(FROM)
process module: INT(LWB)
process module: REF TAG(s)
process module: INT(TO)
process module: INT(UPB)
process module: REF TAG(s)
process module: INT(DO)
process module: INT(STRING)
process module: REF TAG(outs)
process module: STRING(=)
process module: INT(CASE)
process module: REF TAG(s)
process module: STRING([)
process module: REF TAG(i)
process module: STRING(])
process module: INT(IN)
process module: STRING(()
process module: INT(STRING)
process module: REF TAG(si)
process module: STRING())
process module: STRING(:)
process module: REF TAG(si)
process module: STRING(,)
process module: STRING(()
process module: INT(CHAR)
process module: REF TAG(ci)
process module: STRING())
process module: STRING(:)
process module: REF TAG(ci)
process module: STRING(,)
process module: STRING(()
process module: INT(INT)
process module: REF TAG(ni)
process module: STRING())
process module: STRING(:)
process module: REF TAG(whole)
process module: STRING(()
process module: REF TAG(ni)
process module: STRING(,)
process module: STRING(0)
process module: STRING())
process module: STRING(,)
process module: STRING(()
process module: INT(VOID)
process module: STRING())
process module: STRING(:)
process module: STRING(()
process module: REF MACRO(printnl)
process module: REF TAG(print)
process module: STRING(()
process module: REF TAG(newline)
process module: STRING())
process module: STRING(;)
process module: REF TAG(consolepos)
process module: STRING(:=)
process module: STRING(0)
process module: STRING(;)
process module: STRING("")
process module: STRING())
process module: INT(ESAC)
process module: STRING(;)
process module: INT(IF)
process module: REF TAG(consolepos)
process module: STRING(+)
process module: INT(UPB)
process module: REF TAG(outs)
process module: STRING(>)
process module: REF MACRO(maxoutputlineleng)
process module: STRING(80)
process module: INT(THEN)
process module: REF MACRO(printnl)
process module: REF TAG(print)
process module: STRING(()
process module: REF TAG(newline)
process module: STRING())
process module: STRING(;)
process module: REF TAG(consolepos)
process module: STRING(:=)
process module: STRING(0)
process module: INT(FI)
process module: STRING(;)
process module: REF TAG(print)
process module: STRING(()
process module: REF TAG(outs)
process module: STRING())
process module: STRING(;)
process module: REF TAG(consolepos)
process module: STRING(+:=)
process module: INT(UPB)
process module: REF TAG(outs)
process module: INT(OD)
process module: STRING(;)
process module: []INT(4.1.1.5)
process module: INT(PROC)
process module: REF TAG(error)
process module: STRING(=)
process module: STRING(()
process module: INT(INT)
process module: REF TAG(status)
process module: STRING())
process module: INT(VOID)
process module: STRING(:)
process module: INT(IF)
process module: INT(IF)
process module: REF TAG(history)
process module: STRING(<)
process module: REF TAG(status)
process module: INT(THEN)
process module: REF TAG(history)
process module: STRING(:=)
process module: REF TAG(status)
process module: INT(FI)
process module: STRING(;)
process module: REF TAG(phaseone)
process module: INT(THEN)
process module: REF MODULE(Print input buffer error location)
process module: REF TAG(printout)
process module: STRING(()
process module: STRING(()
process module: STRING(". (")
process module: STRING(,)
process module: REF TAG(idf)
process module: STRING(()
process module: REF TAG(f)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING())
process module: STRING(,)
process module: STRING(", l.")
process module: STRING(,)
process module: REF TAG(n)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING(,)
process module: STRING(")")
process module: STRING(,)
process module: INT(EMPTY)
process module: STRING())
process module: STRING())
process module: STRING(;)
process module: INT(FOR)
process module: REF TAG(k)
process module: INT(TO)
process module: REF TAG(loc)
process module: INT(OF)
process module: REF TAG(web)
process module: INT(DO)
process module: REF TAG(printout)
process module: STRING(()
process module: STRING(()
process module: INT(CHAR)
process module: REF TAG(bk)
process module: STRING(=)
process module: STRING(()
process module: REF TAG(b)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING())
process module: STRING([)
process module: REF TAG(k)
process module: STRING(])
process module: STRING(;)
process module: REF TAG(bk)
process module: STRING(=)
process module: REF TAG(tabch)
process module: STRING(|)
process module: REF TAG(blank)
process module: STRING(|)
process module: REF TAG(bk)
process module: STRING())
process module: STRING())
process module: INT(OD)
process module: STRING(;)
process module: REF TAG(printout)
process module: STRING(()
process module: STRING(()
process module: INT(EMPTY)
process module: STRING(,)
process module: REF TAG(loc)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING(*)
process module: REF TAG(blank)
process module: STRING(,)
process module: STRING(()
process module: REF TAG(loc)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING(<)
process module: REF TAG(upb)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING(|)
process module: STRING(()
process module: REF TAG(b)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING())
process module: STRING([)
process module: REF TAG(loc)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING(+)
process module: STRING(1)
process module: STRING(:)
process module: REF TAG(upb)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING(])
process module: STRING(|)
process module: STRING("")
process module: STRING())
process module: STRING())
process module: STRING())
process module: STRING(;)
process module: REF TAG(printout)
process module: STRING(()
process module: REF TAG(blank)
process module: STRING())
process module: INT(ELSE)
process module: REF MODULE(Print output buffer error location)
process module: REF TAG(printout)
process module: STRING(()
process module: STRING(()
process module: STRING(". (l.")
process module: STRING(,)
process module: REF TAG(n)
process module: INT(OF)
process module: REF TAG(output)
process module: STRING(,)
process module: STRING(")")
process module: STRING(,)
process module: INT(EMPTY)
process module: STRING(,)
process module: STRING(()
process module: REF TAG(b)
process module: INT(OF)
process module: REF TAG(output)
process module: STRING())
process module: STRING([)
process module: REF TAG(upb)
process module: INT(OF)
process module: REF TAG(output)
process module: STRING(])
process module: STRING(,)
process module: STRING("... ")
process module: STRING(,)
process module: INT(EMPTY)
process module: STRING())
process module: STRING())
process module: INT(FI)
process module: STRING(;)
process module: []INT(4.1.1.9)
process module: INT(PROC)
process module: REF TAG(simpleerror)
process module: STRING(=)
process module: STRING(()
process module: INT(STRING)
process module: REF TAG(s)
process module: STRING(,)
process module: INT(INT)
process module: REF TAG(halt)
process module: STRING())
process module: INT(VOID)
process module: STRING(:)
process module: STRING(()
process module: REF TAG(print)
process module: STRING(()
process module: STRING(()
process module: REF TAG(newline)
process module: STRING(,)
process module: STRING("! Error: ")
process module: STRING(,)
process module: REF TAG(s)
process module: STRING())
process module: STRING())
process module: STRING(;)
process module: REF TAG(exit)
process module: STRING(()
process module: REF TAG(halt)
process module: STRING())
process module: STRING())
process module: STRING(;)
process module: REF MODULE(Operators in the outer reach)
process module: REF MACRO(macrogpopfindcharrowchar)
process module: REF MACRO(macropriofind)
process module: INT(PRIO)
process module: INT(FIND)
process module: STRING(=)
process module: STRING(6)
process module: STRING(;)
process module: INT(OP)
process module: INT(FIND)
process module: STRING(=)
process module: STRING(()
process module: INT(CHAR)
process module: REF TAG(c)
process module: STRING(,)
process module: STRING([)
process module: STRING(])
process module: INT(CHAR)
process module: REF TAG(s)
process module: STRING())
process module: INT(INT)
process module: STRING(:)
process module: STRING(()
process module: INT(INT)
process module: REF TAG(p)
process module: STRING(;)
process module: REF TAG(charinstring)
process module: STRING(()
process module: REF TAG(c)
process module: STRING(,)
process module: REF TAG(p)
process module: STRING(,)
process module: REF TAG(s)
process module: STRING())
process module: STRING(|)
process module: REF TAG(p)
process module: STRING(|)
process module: INT(LWB)
process module: REF TAG(s)
process module: STRING(-)
process module: STRING(1)
process module: STRING())
process module: STRING(;)
process module: REF MACRO(macrogpopupto)
process module: REF MACRO(macroprioupto)
process module: INT(PRIO)
process module: REF TAG(UPTO)
process module: STRING(=)
process module: STRING(5)
process module: STRING(;)
process module: INT(OP)
process module: REF TAG(UPTO)
process module: STRING(=)
process module: STRING(()
process module: STRING([)
process module: STRING(])
process module: INT(CHAR)
process module: REF TAG(s)
process module: STRING(,)
process module: INT(CHAR)
process module: REF TAG(t)
process module: STRING())
process module: STRING([)
process module: STRING(])
process module: INT(CHAR)
process module: STRING(:)
process module: INT(IF)
process module: INT(INT)
process module: REF TAG(toix)
process module: STRING(;)
process module: REF TAG(charinstring)
process module: STRING(()
process module: REF TAG(t)
process module: STRING(,)
process module: REF TAG(toix)
process module: STRING(,)
process module: REF TAG(s)
process module: STRING())
process module: INT(THEN)
process module: REF TAG(s)
process module: STRING([)
process module: STRING(:)
process module: REF TAG(toix)
process module: STRING(-)
process module: STRING(1)
process module: STRING(@)
process module: INT(LWB)
process module: REF TAG(s)
process module: STRING(])
process module: INT(ELSE)
process module: REF TAG(s)
process module: INT(FI)
process module: STRING(;)
process module: []INT(6.2.1.2)
process module: INT(OP)
process module: REF TAG(LOOKUP)
process module: STRING(=)
process module: STRING(()
process module: INT(STRING)
process module: REF TAG(str)
process module: STRING())
process module: INT(INT)
process module: STRING(:)
process module: INT(IF)
process module: INT(UPB)
process module: REF TAG(str)
process module: STRING(>=)
process module: REF MACRO(minwordlength)
process module: STRING(2)
process module: STRING(&)
process module: INT(UPB)
process module: REF TAG(str)
process module: STRING(<=)
process module: REF MACRO(maxwordlength)
process module: STRING(7)
process module: INT(THEN)
process module: INT(PROC)
process module: REF TAG(hash)
process module: STRING(=)
process module: STRING(()
process module: INT(STRING)
process module: REF TAG(s)
process module: STRING())
process module: INT(INT)
process module: STRING(:)
process module: STRING(()
process module: STRING([)
process module: STRING(])
process module: INT(INT)
process module: REF TAG(assovalues)
process module: STRING(=)
process module: STRING([)
process module: STRING(])
process module: INT(INT)
process module: STRING(()
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(113)
process module: STRING(,)
process module: STRING(95)
process module: STRING(,)
process module: STRING(20)
process module: STRING(,)
process module: STRING(72)
process module: STRING(,)
process module: STRING(0)
process module: STRING(,)
process module: STRING(5)
process module: STRING(,)
process module: STRING(120)
process module: STRING(,)
process module: STRING(44)
process module: STRING(,)
process module: STRING(50)
process module: STRING(,)
process module: STRING(30)
process module: STRING(,)
process module: STRING(25)
process module: STRING(,)
process module: STRING(0)
process module: STRING(,)
process module: STRING(122)
process module: STRING(,)
process module: STRING(127)
process module: STRING(,)
process module: STRING(85)
process module: STRING(,)
process module: STRING(0)
process module: STRING(,)
process module: STRING(5)
process module: STRING(,)
process module: STRING(45)
process module: STRING(,)
process module: STRING(15)
process module: STRING(,)
process module: STRING(15)
process module: STRING(,)
process module: STRING(52)
process module: STRING(,)
process module: STRING(20)
process module: STRING(,)
process module: STRING(50)
process module: STRING(,)
process module: STRING(2)
process module: STRING(,)
process module: STRING(70)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING(,)
process module: STRING(316)
process module: STRING())
process module: STRING([)
process module: STRING(@)
process module: STRING(0)
process module: STRING(])
process module: STRING(;)
process module: INT(UPB)
process module: REF TAG(s)
process module: STRING(+)
process module: REF TAG(assovalues)
process module: STRING([)
process module: INT(ABS)
process module: REF TAG(s)
process module: STRING([)
process module: STRING(1)
process module: STRING(+)
process module: INT(LWB)
process module: REF TAG(s)
process module: STRING(])
process module: STRING(])
process module: STRING(+)
process module: REF TAG(assovalues)
process module: STRING([)
process module: INT(ABS)
process module: REF TAG(s)
process module: STRING([)
process module: INT(LWB)
process module: REF TAG(s)
process module: STRING(])
process module: STRING(])
process module: STRING(+)
process module: REF TAG(assovalues)
process module: STRING([)
process module: INT(ABS)
process module: REF TAG(s)
process module: STRING([)
process module: INT(UPB)
process module: REF TAG(s)
process module: STRING(])
process module: STRING(])
process module: STRING())
process module: STRING(;)
process module: INT(INT)
process module: REF TAG(key)
process module: STRING(=)
process module: REF TAG(hash)
process module: STRING(()
process module: REF TAG(str)
process module: STRING())
process module: STRING(;)
process module: INT(IF)
process module: REF TAG(key)
process module: STRING(<)
process module: STRING(0)
process module: INT(OR)
process module: REF TAG(key)
process module: STRING(>)
process module: REF MACRO(maxhashvalue)
process module: STRING(315)
process module: INT(THEN)
process module: STRING(0)
process module: INT(ELIF)
process module: REF TAG(boldsym)
process module: STRING([)
process module: REF TAG(key)
process module: STRING(])
process module: STRING(=)
process module: REF TAG(str)
process module: INT(THEN)
process module: REF TAG(key)
process module: INT(ELSE)
process module: STRING(0)
process module: INT(FI)
process module: INT(ELSE)
process module: STRING(0)
process module: INT(FI)
process module: STRING(;)
process module: []INT(7.1.1.2)
process module: REF MACRO(macrogpoptrim)
process module: INT(OP)
process module: REF TAG(TRIM)
process module: STRING(=)
process module: STRING(()
process module: STRING([)
process module: STRING(])
process module: INT(CHAR)
process module: REF TAG(s)
process module: STRING())
process module: STRING([)
process module: STRING(])
process module: INT(CHAR)
process module: STRING(:)
process module: STRING(()
process module: INT(INT)
process module: REF TAG(l)
process module: STRING(:=)
process module: INT(LWB)
process module: REF TAG(s)
process module: STRING(;)
process module: INT(FROM)
process module: INT(LWB)
process module: REF TAG(s)
process module: INT(TO)
process module: INT(UPB)
process module: REF TAG(s)
process module: INT(WHILE)
process module: REF TAG(s)
process module: STRING([)
process module: REF TAG(l)
process module: STRING(])
process module: STRING(<=)
process module: STRING(" ")
process module: INT(DO)
process module: REF TAG(l)
process module: STRING(+:=)
process module: STRING(1)
process module: INT(OD)
process module: STRING(;)
process module: INT(INT)
process module: REF TAG(u)
process module: STRING(:=)
process module: INT(UPB)
process module: REF TAG(s)
process module: STRING(;)
process module: INT(FROM)
process module: INT(UPB)
process module: REF TAG(s)
process module: INT(BY)
process module: STRING(---)
process module: STRING(1)
process module: INT(TO)
process module: REF TAG(l)
process module: INT(WHILE)
process module: REF TAG(s)
process module: STRING([)
process module: REF TAG(u)
process module: STRING(])
process module: STRING(<=)
process module: STRING(" ")
process module: INT(DO)
process module: REF TAG(u)
process module: STRING(-:=)
process module: STRING(1)
process module: INT(OD)
process module: STRING(;)
process module: STRING(()
process module: REF TAG(l)
process module: STRING(>)
process module: REF TAG(u)
process module: STRING(|)
process module: REF TAG(s)
process module: STRING([)
process module: INT(LWB)
process module: REF TAG(s)
process module: STRING(:)
process module: INT(LWB)
process module: REF TAG(s)
process module: STRING(-)
process module: STRING(1)
process module: STRING(@)
process module: INT(LWB)
process module: REF TAG(s)
process module: STRING(-)
process module: STRING(1)
process module: STRING(])
process module: STRING(|)
process module: REF TAG(s)
process module: STRING([)
process module: REF TAG(l)
process module: STRING(:)
process module: REF TAG(u)
process module: STRING(@)
process module: REF TAG(l)
process module: STRING(])
process module: STRING())
process module: STRING())
process module: STRING(;)
process module: []INT(7.1.1.4)
process module: INT(PRIO)
process module: REF TAG(CHOP)
process module: STRING(=)
process module: STRING(7)
process module: STRING(;)
process module: INT(OP)
process module: REF TAG(CHOP)
process module: STRING(=)
process module: STRING(()
process module: INT(CHAR)
process module: REF TAG(c)
process module: STRING(,)
process module: STRING([)
process module: STRING(])
process module: INT(CHAR)
process module: REF TAG(s)
process module: STRING())
process module: INT(INT)
process module: STRING(:)
process module: INT(BEGIN)
process module: INT(INT)
process module: REF TAG(bot)
process module: STRING(:=)
process module: INT(LWB)
process module: REF TAG(s)
process module: STRING(,)
process module: REF TAG(top)
process module: STRING(:=)
process module: INT(UPB)
process module: REF TAG(s)
process module: STRING(;)
process module: INT(INT)
process module: REF TAG(i)
process module: STRING(:=)
process module: REF MACRO(div2)
process module: STRING(()
process module: REF TAG(bot)
process module: STRING(+)
process module: REF TAG(top)
process module: STRING())
process module: INT(OVER)
process module: STRING(2)
process module: STRING(;)
process module: INT(WHILE)
process module: INT(CHAR)
process module: REF TAG(si)
process module: STRING(;)
process module: STRING(()
process module: REF TAG(bot)
process module: STRING(<=)
process module: REF TAG(top)
process module: STRING(|)
process module: STRING(()
process module: REF TAG(si)
process module: STRING(:=)
process module: REF TAG(s)
process module: STRING([)
process module: REF TAG(i)
process module: STRING(])
process module: STRING())
process module: STRING(/=)
process module: REF TAG(c)
process module: STRING(|)
process module: INT(FALSE)
process module: STRING())
process module: INT(DO)
process module: STRING(()
process module: REF TAG(c)
process module: STRING(<)
process module: REF TAG(si)
process module: STRING(|)
process module: REF TAG(top)
process module: STRING(:=)
process module: REF TAG(i)
process module: STRING(-)
process module: STRING(1)
process module: STRING(|)
process module: REF TAG(bot)
process module: STRING(:=)
process module: REF TAG(i)
process module: STRING(+)
process module: STRING(1)
process module: STRING())
process module: STRING(;)
process module: REF TAG(i)
process module: STRING(:=)
process module: REF MACRO(div2)
process module: STRING(()
process module: REF TAG(bot)
process module: STRING(+)
process module: REF TAG(top)
process module: STRING())
process module: INT(OVER)
process module: STRING(2)
process module: INT(OD)
process module: STRING(;)
process module: STRING(()
process module: REF TAG(bot)
process module: STRING(<=)
process module: REF TAG(top)
process module: STRING(|)
process module: REF TAG(i)
process module: STRING(|)
process module: INT(LWB)
process module: REF TAG(s)
process module: STRING(-)
process module: STRING(1)
process module: STRING())
process module: INT(END)
process module: STRING(;)
process module: []INT(7.1.1.11)
process module: REF MACRO(macrogpopucchar)
process module: INT(OP)
process module: REF TAG(UC)
process module: STRING(=)
process module: STRING(()
process module: INT(CHAR)
process module: REF TAG(c)
process module: STRING())
process module: INT(CHAR)
process module: STRING(:)
process module: STRING(()
process module: REF TAG(c)
process module: STRING(>=)
process module: STRING("a")
process module: STRING(&)
process module: REF TAG(c)
process module: STRING(<=)
process module: STRING("z")
process module: STRING(|)
process module: INT(REPR)
process module: STRING(()
process module: INT(ABS)
process module: REF TAG(c)
process module: STRING(-)
process module: STRING(32)
process module: STRING())
process module: STRING(|)
process module: REF TAG(c)
process module: STRING())
process module: STRING(;)
process module: []INT(7.1.1.18)
process module: INT(OP)
process module: REF TAG(COMPACT)
process module: STRING(=)
process module: STRING(()
process module: STRING([)
process module: STRING(])
process module: INT(CHAR)
process module: REF TAG(tag)
process module: STRING())
process module: STRING([)
process module: STRING(])
process module: INT(CHAR)
process module: STRING(:)
process module: INT(BEGIN)
process module: STRING([)
process module: INT(LWB)
process module: REF TAG(tag)
process module: STRING(:)
process module: INT(UPB)
process module: REF TAG(tag)
process module: STRING(])
process module: INT(CHAR)
process module: REF TAG(loctag)
process module: STRING(;)
process module: INT(INT)
process module: REF TAG(n)
process module: STRING(:=)
process module: INT(LWB)
process module: REF TAG(tag)
process module: STRING(-)
process module: STRING(1)
process module: STRING(;)
process module: INT(FOR)
process module: REF TAG(i)
process module: INT(FROM)
process module: INT(LWB)
process module: REF TAG(tag)
process module: INT(TO)
process module: INT(UPB)
process module: REF TAG(tag)
process module: INT(DO)
process module: INT(IF)
process module: INT(CHAR)
process module: REF TAG(ti)
process module: STRING(=)
process module: REF TAG(tag)
process module: STRING([)
process module: REF TAG(i)
process module: STRING(])
process module: STRING(;)
process module: REF TAG(ti)
process module: STRING(/=)
process module: REF TAG(blank)
process module: INT(THEN)
process module: REF TAG(loctag)
process module: STRING([)
process module: REF TAG(n)
process module: STRING(+:=)
process module: STRING(1)
process module: STRING(])
process module: STRING(:=)
process module: REF TAG(ti)
process module: INT(FI)
process module: INT(OD)
process module: STRING(;)
process module: REF TAG(loctag)
process module: STRING([)
process module: STRING(:)
process module: REF TAG(n)
process module: STRING(])
process module: INT(END)
process module: STRING(;)
process module: []INT(7.3.1.1)
process module: INT(OP)
process module: REF TAG(MULTICASE)
process module: STRING(=)
process module: STRING(()
process module: INT(CHAR)
process module: REF TAG(c)
process module: STRING(,)
process module: STRING([)
process module: STRING(])
process module: INT(STRING)
process module: REF TAG(s)
process module: STRING())
process module: INT(INT)
process module: STRING(:)
process module: INT(BEGIN)
process module: INT(INT)
process module: REF TAG(j)
process module: STRING(:=)
process module: INT(LWB)
process module: REF TAG(s)
process module: STRING(-)
process module: STRING(1)
process module: STRING(;)
process module: INT(FOR)
process module: REF TAG(i)
process module: INT(FROM)
process module: INT(LWB)
process module: REF TAG(s)
process module: INT(TO)
process module: INT(UPB)
process module: REF TAG(s)
process module: INT(WHILE)
process module: REF TAG(j)
process module: STRING(<)
process module: INT(LWB)
process module: REF TAG(s)
process module: INT(DO)
process module: INT(IF)
process module: INT(STRING)
process module: REF TAG(si)
process module: STRING(=)
process module: REF TAG(s)
process module: STRING([)
process module: REF TAG(i)
process module: STRING(])
process module: STRING(;)
process module: REF TAG(c)
process module: REF TAG(CHOP)
process module: REF TAG(si)
process module: STRING(>=)
process module: INT(LWB)
process module: REF TAG(si)
process module: INT(THEN)
process module: REF TAG(j)
process module: STRING(:=)
process module: REF TAG(i)
process module: INT(FI)
process module: INT(OD)
process module: STRING(;)
process module: REF TAG(j)
process module: INT(END)
process module: STRING(;)
process module: REF MODULE(Procedures in the outer reach)
process module: INT(PROC)
process module: REF TAG(scanincludedtree)
process module: STRING(=)
process module: STRING(()
process module: INT(REF)
process module: INT(REF)
process module: REF TAG(INCLUDED)
process module: REF TAG(tr)
process module: STRING(,)
process module: INT(STRING)
process module: REF TAG(fn)
process module: STRING())
process module: INT(BOOL)
process module: STRING(:)
process module: INT(IF)
process module: REF TAG(tr)
process module: INT(IS)
process module: REF TAG(noinc)
process module: INT(THEN)
process module: INT(FALSE)
process module: INT(ELIF)
process module: REF TAG(fn)
process module: STRING(=)
process module: REF TAG(s)
process module: INT(OF)
process module: REF TAG(tr)
process module: INT(THEN)
process module: INT(TRUE)
process module: INT(ELIF)
process module: REF TAG(fn)
process module: STRING(<)
process module: REF TAG(s)
process module: INT(OF)
process module: REF TAG(tr)
process module: INT(THEN)
process module: REF TAG(scanincludedtree)
process module: STRING(()
process module: REF TAG(left)
process module: INT(OF)
process module: REF TAG(tr)
process module: STRING(,)
process module: REF TAG(fn)
process module: STRING())
process module: INT(ELSE)
process module: REF TAG(scanincludedtree)
process module: STRING(()
process module: REF TAG(right)
process module: INT(OF)
process module: REF TAG(tr)
process module: STRING(,)
process module: REF TAG(fn)
process module: STRING())
process module: INT(FI)
process module: STRING(;)
process module: []INT(5.2.1.10)
process module: INT(PROC)
process module: REF TAG(usage)
process module: STRING(=)
process module: INT(VOID)
process module: STRING(:)
process module: INT(BEGIN)
process module: REF TAG(put)
process module: STRING(()
process module: REF TAG(standerror)
process module: STRING(,)
process module: STRING(()
process module: STRING("Usage: tang (d,h,v,w(paths),f(tang-file))")
process module: STRING(,)
process module: REF TAG(newline)
process module: STRING(,)
process module: STRING(" d: output debugging data to tang.dbg")
process module: STRING(,)
process module: REF TAG(newline)
process module: STRING(,)
process module: STRING(" f: (input file)")
process module: STRING(,)
process module: REF TAG(newline)
process module: STRING(,)
process module: STRING(" h: this message")
process module: STRING(,)
process module: REF TAG(newline)
process module: STRING(,)
process module: STRING(" v: version")
process module: STRING(,)
process module: REF TAG(newline)
process module: STRING(,)
process module: STRING(" w: comma-separated include path(s) to be")
process module: STRING(,)
process module: REF TAG(newline)
process module: STRING(,)
process module: STRING("     added to /usr/share/algol68toc")
process module: STRING(,)
process module: REF TAG(newline)
process module: STRING())
process module: STRING())
process module: STRING(;)
process module: REF TAG(exit)
process module: STRING(()
process module: REF MACRO(helpstatus)
process module: STRING(1)
process module: STRING())
process module: INT(END)
process module: STRING(;)
process module: []INT(6.2.2.1)
process module: INT(PROC)
process module: REF TAG(inccursec)
process module: STRING(=)
process module: STRING(()
process module: INT(INT)
process module: REF TAG(level)
process module: STRING())
process module: INT(VOID)
process module: STRING(:)
process module: INT(IF)
process module: REF TAG(level)
process module: STRING(>=)
process module: STRING(1)
process module: STRING(&)
process module: REF TAG(level)
process module: STRING(<=)
process module: STRING(3)
process module: INT(THEN)
process module: STRING(()
process module: REF TAG(sec)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING())
process module: STRING([)
process module: REF TAG(level)
process module: STRING(])
process module: STRING(+:=)
process module: STRING(1)
process module: STRING(;)
process module: INT(FOR)
process module: REF TAG(i)
process module: INT(FROM)
process module: REF TAG(level)
process module: STRING(+)
process module: STRING(1)
process module: INT(TO)
process module: INT(UPB)
process module: STRING(()
process module: REF TAG(sec)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING())
process module: INT(DO)
process module: STRING(()
process module: REF TAG(sec)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING())
process module: STRING([)
process module: REF TAG(i)
process module: STRING(])
process module: STRING(:=)
process module: STRING(1)
process module: INT(OD)
process module: INT(ELIF)
process module: REF TAG(level)
process module: STRING(=)
process module: STRING(4)
process module: INT(THEN)
process module: STRING(()
process module: REF TAG(sec)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING())
process module: STRING([)
process module: REF TAG(level)
process module: STRING(])
process module: STRING(+:=)
process module: STRING(1)
process module: INT(FI)
process module: STRING(;)
process module: []INT(6.2.2.2)
process module: INT(PROC)
process module: REF TAG(printcursec)
process module: STRING(=)
process module: INT(VOID)
process module: STRING(:)
process module: REF TAG(printout)
process module: STRING(()
process module: STRING(()
process module: STRING("[")
process module: STRING(,)
process module: STRING(()
process module: REF TAG(fnum)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING(>)
process module: STRING(0)
process module: STRING(|)
process module: STRING("I")
process module: STRING(+)
process module: REF TAG(whole)
process module: STRING(()
process module: REF TAG(fnum)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING(,)
process module: STRING(0)
process module: STRING())
process module: STRING(|)
process module: STRING(()
process module: REF TAG(sec)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING())
process module: STRING([)
process module: STRING(1)
process module: STRING(])
process module: STRING())
process module: STRING(,)
process module: STRING(".")
process module: STRING(,)
process module: STRING(()
process module: REF TAG(sec)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING())
process module: STRING([)
process module: STRING(2)
process module: STRING(])
process module: STRING(,)
process module: STRING(".")
process module: STRING(,)
process module: STRING(()
process module: REF TAG(sec)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING())
process module: STRING([)
process module: STRING(3)
process module: STRING(])
process module: STRING(,)
process module: STRING(".")
process module: STRING(,)
process module: STRING(()
process module: REF TAG(sec)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING())
process module: STRING([)
process module: STRING(4)
process module: STRING(])
process module: STRING(,)
process module: STRING("]")
process module: STRING())
process module: STRING())
process module: STRING(;)
process module: []INT(6.2.2.3)
process module: INT(PROC)
process module: REF TAG(maketext)
process module: STRING(=)
process module: STRING(()
process module: STRING([)
process module: STRING(])
process module: INT(INT)
process module: REF TAG(cursec)
process module: STRING())
process module: REF TAG(TEXT)
process module: STRING(:)
process module: INT(BEGIN)
process module: STRING([)
process module: STRING(4)
process module: STRING(])
process module: INT(INT)
process module: REF TAG(cs)
process module: STRING(:=)
process module: REF TAG(cursec)
process module: STRING(;)
process module: INT(IF)
process module: REF TAG(next)
process module: INT(OF)
process module: REF TAG(web)
process module: INT(ISNT)
process module: REF TAG(nostream)
process module: INT(THEN)
process module: REF TAG(cs)
process module: STRING([)
process module: STRING(1)
process module: STRING(])
process module: STRING(:=-)
process module: REF TAG(fnum)
process module: INT(OF)
process module: REF TAG(web)
process module: INT(FI)
process module: STRING(;)
process module: REF TAG(TEXT)
process module: STRING(()
process module: REF TAG(cs)
process module: STRING(,)
process module: REF TAG(notext)
process module: STRING())
process module: INT(END)
process module: STRING(;)
process module: []INT(6.2.2.7)
process module: INT(PROC)
process module: REF TAG(addmoduletag)
process module: STRING(=)
process module: STRING(()
process module: INT(REF)
process module: INT(REF)
process module: REF TAG(MODULE)
process module: REF TAG(root)
process module: STRING(,)
process module: INT(STRING)
process module: REF TAG(s)
process module: STRING(,)
process module: INT(BOOL)
process module: REF TAG(adding)
process module: STRING(,)
process module: REF TAG(prefix)
process module: STRING())
process module: INT(REF)
process module: REF TAG(MODULE)
process module: STRING(:)
process module: INT(IF)
process module: REF TAG(root)
process module: INT(IS)
process module: REF TAG(nomod)
process module: INT(THEN)
process module: INT(IF)
process module: REF TAG(prefix)
process module: INT(THEN)
process module: REF TAG(nomod)
process module: INT(ELIF)
process module: REF TAG(adding)
process module: INT(THEN)
process module: REF TAG(root)
process module: STRING(:=)
process module: INT(HEAP)
process module: REF TAG(MODULE)
process module: STRING(:=)
process module: STRING(()
process module: REF TAG(s)
process module: STRING(,)
process module: INT(HEAP)
process module: INT(REF)
process module: REF TAG(TEXT)
process module: STRING(:=)
process module: REF TAG(notext)
process module: STRING(,)
process module: INT(HEAP)
process module: INT(REF)
process module: REF TAG(TEXT)
process module: STRING(:=)
process module: REF TAG(notext)
process module: STRING(,)
process module: REF TAG(nomod)
process module: STRING(,)
process module: REF TAG(nomod)
process module: STRING())
process module: STRING(;)
process module: REF TAG(textend)
process module: INT(OF)
process module: REF TAG(root)
process module: STRING(:=)
process module: REF TAG(textbeg)
process module: INT(OF)
process module: REF TAG(root)
process module: STRING(;)
process module: REF TAG(root)
process module: INT(ELSE)
process module: REF TAG(nomod)
process module: INT(FI)
process module: INT(ELIF)
process module: INT(UPB)
process module: REF TAG(s)
process module: STRING(>)
process module: INT(UPB)
process module: REF TAG(id)
process module: INT(OF)
process module: REF TAG(root)
process module: INT(THEN)
process module: INT(IF)
process module: REF TAG(s)
process module: STRING(<)
process module: REF TAG(id)
process module: INT(OF)
process module: REF TAG(root)
process module: INT(THEN)
process module: REF TAG(addmoduletag)
process module: STRING(()
process module: REF TAG(left)
process module: INT(OF)
process module: REF TAG(root)
process module: STRING(,)
process module: REF TAG(s)
process module: STRING(,)
process module: REF TAG(adding)
process module: STRING(,)
process module: REF TAG(prefix)
process module: STRING())
process module: INT(ELSE)
process module: REF TAG(addmoduletag)
process module: STRING(()
process module: REF TAG(right)
process module: INT(OF)
process module: REF TAG(root)
process module: STRING(,)
process module: REF TAG(s)
process module: STRING(,)
process module: REF TAG(adding)
process module: STRING(,)
process module: REF TAG(prefix)
process module: STRING())
process module: INT(FI)
process module: INT(ELIF)
process module: REF TAG(prefix)
process module: INT(THEN)
process module: INT(IF)
process module: INT(STRING)
process module: REF TAG(pref)
process module: STRING(=)
process module: STRING(()
process module: REF TAG(id)
process module: INT(OF)
process module: REF TAG(root)
process module: STRING())
process module: STRING([)
process module: STRING(:)
process module: INT(UPB)
process module: REF TAG(s)
process module: STRING(])
process module: STRING(;)
process module: REF TAG(s)
process module: STRING(=)
process module: REF TAG(pref)
process module: INT(THEN)
process module: INT(IF)
process module: STRING(()
process module: REF TAG(addmoduletag)
process module: STRING(()
process module: REF TAG(left)
process module: INT(OF)
process module: REF TAG(root)
process module: STRING(,)
process module: REF TAG(s)
process module: STRING(,)
process module: INT(NOT)
process module: REF MACRO(badd)
process module: INT(TRUE)
process module: STRING(,)
process module: REF TAG(prefix)
process module: STRING())
process module: INT(IS)
process module: REF TAG(nomod)
process module: STRING())
process module: INT(AND)
process module: STRING(()
process module: REF TAG(addmoduletag)
process module: STRING(()
process module: REF TAG(right)
process module: INT(OF)
process module: REF TAG(root)
process module: STRING(,)
process module: REF TAG(s)
process module: STRING(,)
process module: INT(NOT)
process module: REF MACRO(badd)
process module: INT(TRUE)
process module: STRING(,)
process module: REF TAG(prefix)
process module: STRING())
process module: INT(IS)
process module: REF TAG(nomod)
process module: STRING())
process module: INT(THEN)
process module: REF TAG(root)
process module: INT(ELSE)
process module: REF TAG(nomod)
process module: INT(FI)
process module: INT(ELIF)
process module: REF TAG(s)
process module: STRING(<)
process module: REF TAG(pref)
process module: INT(THEN)
process module: REF TAG(addmoduletag)
process module: STRING(()
process module: REF TAG(left)
process module: INT(OF)
process module: REF TAG(root)
process module: STRING(,)
process module: REF TAG(s)
process module: STRING(,)
process module: REF TAG(adding)
process module: STRING(,)
process module: REF TAG(prefix)
process module: STRING())
process module: INT(ELSE)
process module: REF TAG(addmoduletag)
process module: STRING(()
process module: REF TAG(right)
process module: INT(OF)
process module: REF TAG(root)
process module: STRING(,)
process module: REF TAG(s)
process module: STRING(,)
process module: REF TAG(adding)
process module: STRING(,)
process module: REF TAG(prefix)
process module: STRING())
process module: INT(FI)
process module: INT(ELIF)
process module: REF TAG(s)
process module: STRING(=)
process module: REF TAG(id)
process module: INT(OF)
process module: REF TAG(root)
process module: INT(THEN)
process module: REF TAG(root)
process module: INT(ELIF)
process module: REF TAG(s)
process module: STRING(<)
process module: REF TAG(id)
process module: INT(OF)
process module: REF TAG(root)
process module: INT(THEN)
process module: REF TAG(addmoduletag)
process module: STRING(()
process module: REF TAG(left)
process module: INT(OF)
process module: REF TAG(root)
process module: STRING(,)
process module: REF TAG(s)
process module: STRING(,)
process module: REF TAG(adding)
process module: STRING(,)
process module: REF TAG(prefix)
process module: STRING())
process module: INT(ELSE)
process module: REF TAG(addmoduletag)
process module: STRING(()
process module: REF TAG(right)
process module: INT(OF)
process module: REF TAG(root)
process module: STRING(,)
process module: REF TAG(s)
process module: STRING(,)
process module: REF TAG(adding)
process module: STRING(,)
process module: REF TAG(prefix)
process module: STRING())
process module: INT(FI)
process module: STRING(;)
process module: []INT(6.2.2.8)
process module: INT(PROC)
process module: REF TAG(addtag)
process module: STRING(=)
process module: STRING(()
process module: INT(REF)
process module: STRING([)
process module: STRING(])
process module: INT(REF)
process module: REF TAG(TAG)
process module: REF TAG(root)
process module: STRING(,)
process module: INT(REF)
process module: REF TAG(TAG)
process module: REF TAG(tag)
process module: STRING())
process module: INT(REF)
process module: REF TAG(TAG)
process module: STRING(:)
process module: INT(BEGIN)
process module: INT(OP)
process module: REF TAG(HASH)
process module: STRING(=)
process module: STRING(()
process module: INT(STRING)
process module: REF TAG(s)
process module: STRING())
process module: INT(INT)
process module: STRING(:)
process module: STRING(()
process module: INT(ABS)
process module: REF TAG(s)
process module: STRING([)
process module: INT(LWB)
process module: REF TAG(s)
process module: STRING(])
process module: STRING(+)
process module: STRING(2)
process module: STRING(*)
process module: INT(ABS)
process module: REF TAG(s)
process module: STRING([)
process module: INT(UPB)
process module: REF TAG(s)
process module: STRING(])
process module: STRING())
process module: INT(MOD)
process module: STRING(()
process module: STRING(1)
process module: STRING(+)
process module: INT(UPB)
process module: REF TAG(tagroot)
process module: STRING())
process module: STRING(;)
process module: INT(PROC)
process module: REF TAG(locaddtag)
process module: STRING(=)
process module: STRING(()
process module: INT(REF)
process module: INT(REF)
process module: REF TAG(TAG)
process module: REF TAG(r)
process module: STRING(,)
process module: INT(REF)
process module: REF TAG(TAG)
process module: REF TAG(t)
process module: STRING())
process module: INT(REF)
process module: REF TAG(TAG)
process module: STRING(:)
process module: INT(IF)
process module: REF TAG(r)
process module: INT(IS)
process module: REF TAG(notag)
process module: INT(THEN)
process module: REF TAG(r)
process module: STRING(:=)
process module: REF TAG(t)
process module: INT(ELIF)
process module: REF TAG(s)
process module: INT(OF)
process module: REF TAG(t)
process module: STRING(=)
process module: REF TAG(s)
process module: INT(OF)
process module: REF TAG(r)
process module: INT(THEN)
process module: REF TAG(r)
process module: INT(ELIF)
process module: REF TAG(s)
process module: INT(OF)
process module: REF TAG(t)
process module: STRING(<)
process module: REF TAG(s)
process module: INT(OF)
process module: REF TAG(r)
process module: INT(THEN)
process module: REF TAG(locaddtag)
process module: STRING(()
process module: REF TAG(left)
process module: INT(OF)
process module: REF TAG(r)
process module: STRING(,)
process module: REF TAG(t)
process module: STRING())
process module: INT(ELSE)
process module: REF TAG(locaddtag)
process module: STRING(()
process module: REF TAG(right)
process module: INT(OF)
process module: REF TAG(r)
process module: STRING(,)
process module: REF TAG(t)
process module: STRING())
process module: INT(FI)
process module: STRING(;)
process module: REF TAG(locaddtag)
process module: STRING(()
process module: REF TAG(root)
process module: STRING([)
process module: REF TAG(HASH)
process module: REF TAG(s)
process module: INT(OF)
process module: REF TAG(tag)
process module: STRING(])
process module: STRING(,)
process module: REF TAG(tag)
process module: STRING())
process module: INT(END)
process module: STRING(;)
process module: []INT(6.2.2.9)
process module: INT(PROC)
process module: REF TAG(addmacroid)
process module: STRING(=)
process module: STRING(()
process module: INT(REF)
process module: INT(REF)
process module: REF TAG(MACRO)
process module: REF TAG(root)
process module: STRING(,)
process module: INT(REF)
process module: REF TAG(TAG)
process module: REF TAG(tag)
process module: STRING(,)
process module: INT(BOOL)
process module: REF TAG(once)
process module: STRING())
process module: INT(REF)
process module: REF TAG(MACRO)
process module: STRING(:)
process module: INT(IF)
process module: REF TAG(root)
process module: INT(IS)
process module: REF TAG(nomac)
process module: INT(THEN)
process module: REF TAG(root)
process module: STRING(:=)
process module: INT(HEAP)
process module: REF TAG(MACRO)
process module: STRING(:=)
process module: STRING(()
process module: REF TAG(tag)
process module: STRING(,)
process module: INT(BIN)
process module: INT(ABS)
process module: REF TAG(once)
process module: STRING(,)
process module: REF TAG(nowparam)
process module: STRING(,)
process module: INT(HEAP)
process module: INT(REF)
process module: REF TAG(TEXT)
process module: STRING(:=)
process module: REF TAG(notext)
process module: STRING(,)
process module: INT(HEAP)
process module: INT(REF)
process module: REF TAG(TEXT)
process module: STRING(:=)
process module: REF TAG(notext)
process module: STRING(,)
process module: REF TAG(nomac)
process module: STRING(,)
process module: REF TAG(nomac)
process module: STRING())
process module: STRING(;)
process module: REF TAG(textend)
process module: INT(OF)
process module: REF TAG(root)
process module: STRING(:=)
process module: REF TAG(textbeg)
process module: INT(OF)
process module: REF TAG(root)
process module: STRING(;)
process module: REF TAG(root)
process module: INT(ELIF)
process module: REF TAG(s)
process module: INT(OF)
process module: REF TAG(tag)
process module: STRING(=)
process module: REF TAG(s)
process module: INT(OF)
process module: REF TAG(id)
process module: INT(OF)
process module: REF TAG(root)
process module: INT(THEN)
process module: REF TAG(nomac)
process module: INT(ELIF)
process module: REF TAG(s)
process module: INT(OF)
process module: REF TAG(tag)
process module: STRING(<)
process module: REF TAG(s)
process module: INT(OF)
process module: REF TAG(id)
process module: INT(OF)
process module: REF TAG(root)
process module: INT(THEN)
process module: REF TAG(addmacroid)
process module: STRING(()
process module: REF TAG(left)
process module: INT(OF)
process module: REF TAG(root)
process module: STRING(,)
process module: REF TAG(tag)
process module: STRING(,)
process module: REF TAG(once)
process module: STRING())
process module: INT(ELSE)
process module: REF TAG(addmacroid)
process module: STRING(()
process module: REF TAG(right)
process module: INT(OF)
process module: REF TAG(root)
process module: STRING(,)
process module: REF TAG(tag)
process module: STRING(,)
process module: REF TAG(once)
process module: STRING())
process module: INT(FI)
process module: STRING(;)
process module: []INT(6.2.2.11)
process module: INT(PROC)
process module: REF TAG(addmacropar)
process module: STRING(=)
process module: STRING(()
process module: INT(REF)
process module: REF TAG(MACRO)
process module: REF TAG(rm)
process module: STRING(,)
process module: INT(REF)
process module: REF TAG(TAG)
process module: REF TAG(par)
process module: STRING())
process module: INT(BOOL)
process module: STRING(:)
process module: INT(IF)
process module: REF TAG(param)
process module: INT(OF)
process module: REF TAG(rm)
process module: INT(IS)
process module: REF TAG(nowparam)
process module: INT(THEN)
process module: REF TAG(param)
process module: INT(OF)
process module: REF TAG(rm)
process module: STRING(:=)
process module: INT(HEAP)
process module: REF TAG(WPARAM)
process module: STRING(:=)
process module: STRING(()
process module: REF TAG(par)
process module: STRING(,)
process module: REF TAG(nowparam)
process module: STRING())
process module: STRING(;)
process module: INT(TRUE)
process module: INT(ELIF)
process module: INT(REF)
process module: INT(REF)
process module: REF TAG(WPARAM)
process module: REF TAG(locpar)
process module: STRING(:=)
process module: REF TAG(param)
process module: INT(OF)
process module: REF TAG(rm)
process module: STRING(;)
process module: INT(WHILE)
process module: INT(IF)
process module: REF TAG(locpar)
process module: INT(ISNT)
process module: REF TAG(nowparam)
process module: INT(THEN)
process module: REF TAG(s)
process module: INT(OF)
process module: REF TAG(par)
process module: STRING(/=)
process module: REF TAG(s)
process module: INT(OF)
process module: REF TAG(par)
process module: INT(OF)
process module: REF TAG(locpar)
process module: INT(ELSE)
process module: INT(FALSE)
process module: INT(FI)
process module: INT(DO)
process module: REF TAG(locpar)
process module: STRING(:=)
process module: REF TAG(next)
process module: INT(OF)
process module: REF TAG(locpar)
process module: INT(OD)
process module: STRING(;)
process module: REF TAG(locpar)
process module: INT(IS)
process module: REF TAG(nowparam)
process module: INT(THEN)
process module: INT(REF)
process module: INT(REF)
process module: REF TAG(WPARAM)
process module: STRING(()
process module: REF TAG(locpar)
process module: STRING())
process module: STRING(:=)
process module: INT(HEAP)
process module: REF TAG(WPARAM)
process module: STRING(:=)
process module: STRING(()
process module: REF TAG(par)
process module: STRING(,)
process module: REF TAG(nowparam)
process module: STRING())
process module: STRING(;)
process module: INT(TRUE)
process module: INT(ELSE)
process module: INT(FALSE)
process module: INT(FI)
process module: STRING(;)
process module: []INT(6.2.2.12)
process module: INT(PROC)
process module: REF TAG(addmactext)
process module: STRING(=)
process module: STRING(()
process module: INT(REF)
process module: REF TAG(MACRO)
process module: REF TAG(rmc)
process module: STRING(,)
process module: REF TAG(TEXT)
process module: REF TAG(t)
process module: STRING())
process module: INT(VOID)
process module: STRING(:)
process module: STRING(()
process module: INT(REF)
process module: INT(REF)
process module: REF TAG(TEXT)
process module: STRING(()
process module: REF TAG(textbeg)
process module: INT(OF)
process module: REF TAG(rmc)
process module: STRING(:=:)
process module: REF TAG(notext)
process module: STRING(|)
process module: REF TAG(textbeg)
process module: INT(OF)
process module: REF TAG(rmc)
process module: STRING(|)
process module: REF TAG(textend)
process module: INT(OF)
process module: REF TAG(rmc)
process module: STRING())
process module: STRING(:=)
process module: INT(HEAP)
process module: REF TAG(TEXT)
process module: STRING(:=)
process module: REF TAG(t)
process module: STRING(;)
process module: REF TAG(textend)
process module: INT(OF)
process module: REF TAG(rmc)
process module: STRING(:=)
process module: REF TAG(next)
process module: INT(OF)
process module: REF TAG(textend)
process module: INT(OF)
process module: REF TAG(rmc)
process module: STRING())
process module: STRING(;)
process module: []INT(6.2.2.13)
process module: INT(PROC)
process module: REF TAG(addmodtext)
process module: STRING(=)
process module: STRING(()
process module: INT(REF)
process module: REF TAG(MODULE)
process module: REF TAG(rmd)
process module: STRING(,)
process module: REF TAG(TEXT)
process module: REF TAG(t)
process module: STRING())
process module: INT(VOID)
process module: STRING(:)
process module: STRING(()
process module: INT(REF)
process module: INT(REF)
process module: REF TAG(TEXT)
process module: STRING(()
process module: REF TAG(textbeg)
process module: INT(OF)
process module: REF TAG(rmd)
process module: STRING(:=:)
process module: REF TAG(notext)
process module: STRING(|)
process module: REF TAG(textbeg)
process module: INT(OF)
process module: REF TAG(rmd)
process module: STRING(|)
process module: REF TAG(textend)
process module: INT(OF)
process module: REF TAG(rmd)
process module: STRING())
process module: STRING(:=)
process module: INT(HEAP)
process module: REF TAG(TEXT)
process module: STRING(:=)
process module: REF TAG(t)
process module: STRING(;)
process module: REF TAG(textend)
process module: INT(OF)
process module: REF TAG(rmd)
process module: STRING(:=)
process module: REF TAG(next)
process module: INT(OF)
process module: REF TAG(textend)
process module: INT(OF)
process module: REF TAG(rmd)
process module: STRING())
process module: STRING(;)
process module: []INT(7.2.1.8)
process module: INT(PROC)
process module: REF TAG(searchmacro)
process module: STRING(=)
process module: STRING(()
process module: INT(REF)
process module: INT(REF)
process module: REF TAG(MACRO)
process module: REF TAG(root)
process module: STRING(,)
process module: INT(REF)
process module: REF TAG(TAG)
process module: REF TAG(t)
process module: STRING())
process module: INT(REF)
process module: REF TAG(MACRO)
process module: STRING(:)
process module: INT(IF)
process module: REF TAG(root)
process module: INT(IS)
process module: REF TAG(nomac)
process module: INT(THEN)
process module: REF TAG(nomac)
process module: INT(ELIF)
process module: REF TAG(s)
process module: INT(OF)
process module: REF TAG(t)
process module: STRING(=)
process module: REF TAG(s)
process module: INT(OF)
process module: REF TAG(id)
process module: INT(OF)
process module: REF TAG(root)
process module: INT(THEN)
process module: REF TAG(root)
process module: INT(ELIF)
process module: REF TAG(s)
process module: INT(OF)
process module: REF TAG(t)
process module: STRING(<)
process module: REF TAG(s)
process module: INT(OF)
process module: REF TAG(id)
process module: INT(OF)
process module: REF TAG(root)
process module: INT(THEN)
process module: REF TAG(searchmacro)
process module: STRING(()
process module: REF TAG(left)
process module: INT(OF)
process module: REF TAG(root)
process module: STRING(,)
process module: REF TAG(t)
process module: STRING())
process module: INT(ELSE)
process module: REF TAG(searchmacro)
process module: STRING(()
process module: REF TAG(right)
process module: INT(OF)
process module: REF TAG(root)
process module: STRING(,)
process module: REF TAG(t)
process module: STRING())
process module: INT(FI)
process module: STRING(;)
process module: []INT(8.1.1.2)
process module: INT(PROC)
process module: REF TAG(putout)
process module: STRING(=)
process module: STRING(()
process module: INT(REF)
process module: REF TAG(STREAM)
process module: REF TAG(st)
process module: STRING(,)
process module: STRING([)
process module: STRING(])
process module: INT(UNION)
process module: STRING(()
process module: INT(CHAR)
process module: STRING(,)
process module: INT(STRING)
process module: STRING(,)
process module: INT(INT)
process module: STRING(,)
process module: STRING([)
process module: STRING(])
process module: INT(INT)
process module: STRING(,)
process module: INT(REF)
process module: REF TAG(TAG)
process module: STRING())
process module: REF TAG(p)
process module: STRING())
process module: INT(VOID)
process module: STRING(:)
process module: INT(BEGIN)
process module: INT(PROC)
process module: REF TAG(emptythebuffer)
process module: STRING(=)
process module: STRING(()
process module: INT(REF)
process module: REF TAG(STREAM)
process module: REF TAG(st)
process module: STRING())
process module: INT(VOID)
process module: STRING(:)
process module: STRING(()
process module: INT(IF)
process module: INT(CHAR)
process module: REF TAG(b1)
process module: STRING(=)
process module: STRING(()
process module: REF TAG(b)
process module: INT(OF)
process module: REF TAG(st)
process module: STRING())
process module: STRING([)
process module: STRING(1)
process module: STRING(])
process module: STRING(;)
process module: REF TAG(b1)
process module: STRING(=)
process module: STRING("*")
process module: INT(OR)
process module: REF TAG(b1)
process module: STRING(=)
process module: STRING("%")
process module: INT(THEN)
process module: REF TAG(put)
process module: STRING(()
process module: REF TAG(f)
process module: INT(OF)
process module: REF TAG(st)
process module: STRING(,)
process module: REF TAG(blank)
process module: STRING())
process module: INT(FI)
process module: STRING(;)
process module: REF TAG(put)
process module: STRING(()
process module: REF TAG(f)
process module: INT(OF)
process module: REF TAG(st)
process module: STRING(,)
process module: STRING(()
process module: STRING(()
process module: REF TAG(b)
process module: INT(OF)
process module: REF TAG(st)
process module: STRING())
process module: STRING([)
process module: STRING(:)
process module: REF TAG(upb)
process module: INT(OF)
process module: REF TAG(st)
process module: STRING(])
process module: STRING(,)
process module: REF TAG(newline)
process module: STRING())
process module: STRING())
process module: STRING(;)
process module: REF TAG(n)
process module: INT(OF)
process module: REF TAG(st)
process module: STRING(+:=)
process module: STRING(1)
process module: STRING(;)
process module: REF TAG(upb)
process module: INT(OF)
process module: REF TAG(st)
process module: STRING(:=)
process module: STRING(0)
process module: STRING())
process module: STRING(;)
process module: INT(FOR)
process module: REF TAG(i)
process module: INT(FROM)
process module: INT(LWB)
process module: REF TAG(p)
process module: INT(TO)
process module: INT(UPB)
process module: REF TAG(p)
process module: INT(DO)
process module: STRING([)
process module: STRING(])
process module: INT(CHAR)
process module: REF TAG(outs)
process module: STRING(=)
process module: INT(CASE)
process module: REF TAG(p)
process module: STRING([)
process module: REF TAG(i)
process module: STRING(])
process module: INT(IN)
process module: STRING(()
process module: INT(CHAR)
process module: REF TAG(ci)
process module: STRING())
process module: STRING(:)
process module: REF TAG(ci)
process module: STRING(,)
process module: STRING(()
process module: INT(STRING)
process module: REF TAG(si)
process module: STRING())
process module: STRING(:)
process module: INT(IF)
process module: INT(CHAR)
process module: REF TAG(sil)
process module: STRING(=)
process module: REF TAG(si)
process module: STRING([)
process module: INT(LWB)
process module: REF TAG(si)
process module: STRING(])
process module: STRING(;)
process module: REF TAG(tagoutput)
process module: STRING(&)
process module: REF MACRO(isdigit)
process module: STRING(()
process module: REF TAG(sil)
process module: STRING(>=)
process module: STRING("0")
process module: STRING(&)
process module: REF TAG(sil)
process module: STRING(<=)
process module: STRING("9")
process module: INT(OR)
process module: REF TAG(sil)
process module: STRING(=)
process module: STRING(".")
process module: STRING())
process module: INT(THEN)
process module: REF TAG(tagoutput)
process module: STRING(:=)
process module: INT(FALSE)
process module: STRING(;)
process module: REF TAG(blank)
process module: STRING(+)
process module: REF TAG(si)
process module: STRING(+)
process module: REF TAG(blank)
process module: INT(ELIF)
process module: REF MACRO(isdigit)
process module: STRING(()
process module: REF TAG(sil)
process module: STRING(>=)
process module: STRING("0")
process module: STRING(&)
process module: REF TAG(sil)
process module: STRING(<=)
process module: STRING("9")
process module: INT(OR)
process module: REF TAG(sil)
process module: STRING(=)
process module: STRING(".")
process module: STRING())
process module: INT(THEN)
process module: REF TAG(si)
process module: STRING(+)
process module: REF TAG(blank)
process module: INT(ELIF)
process module: REF TAG(tagoutput)
process module: STRING(:=)
process module: INT(FALSE)
process module: STRING(;)
process module: REF TAG(si)
process module: STRING(=)
process module: STRING("=")
process module: INT(THEN)
process module: REF TAG(blank)
process module: STRING(+)
process module: REF TAG(si)
process module: INT(ELSE)
process module: REF TAG(si)
process module: INT(FI)
process module: STRING(,)
process module: STRING(()
process module: INT(INT)
process module: REF TAG(ni)
process module: STRING())
process module: STRING(:)
process module: INT(CASE)
process module: STRING(2)
process module: STRING(+)
process module: INT(SIGN)
process module: REF TAG(ni)
process module: INT(IN)
process module: INT(IF)
process module: REF TAG(tagoutput)
process module: INT(THEN)
process module: REF TAG(blank)
process module: INT(ELSE)
process module: REF TAG(tagoutput)
process module: STRING(:=)
process module: INT(TRUE)
process module: STRING(;)
process module: STRING("")
process module: INT(FI)
process module: STRING(+)
process module: REF TAG(boldsym)
process module: STRING([)
process module: INT(ABS)
process module: REF TAG(ni)
process module: STRING(])
process module: STRING(,)
process module: STRING(()
process module: REF TAG(emptythebuffer)
process module: STRING(()
process module: REF TAG(st)
process module: STRING())
process module: STRING(;)
process module: REF TAG(tagoutput)
process module: STRING(:=)
process module: INT(FALSE)
process module: STRING(;)
process module: STRING("")
process module: STRING())
process module: STRING(,)
process module: STRING(()
process module: REF TAG(tagoutput)
process module: STRING(:=)
process module: INT(FALSE)
process module: STRING(;)
process module: REF TAG(whole)
process module: STRING(()
process module: REF TAG(ni)
process module: STRING(,)
process module: STRING(0)
process module: STRING())
process module: STRING())
process module: INT(ESAC)
process module: STRING(,)
process module: STRING(()
process module: STRING([)
process module: STRING(])
process module: INT(INT)
process module: REF TAG(ri)
process module: STRING())
process module: STRING(:)
process module: STRING(()
process module: REF TAG(tagoutput)
process module: STRING(:=)
process module: INT(FALSE)
process module: STRING(;)
process module: STRING(()
process module: REF TAG(ri)
process module: STRING([)
process module: STRING(1)
process module: STRING(])
process module: STRING(<)
process module: STRING(0)
process module: STRING(|)
process module: STRING("I")
process module: STRING(|)
process module: STRING("")
process module: STRING())
process module: STRING(+)
process module: REF TAG(whole)
process module: STRING(()
process module: INT(ABS)
process module: REF TAG(ri)
process module: STRING([)
process module: STRING(1)
process module: STRING(])
process module: STRING(,)
process module: STRING(0)
process module: STRING())
process module: STRING(+)
process module: STRING(".")
process module: STRING(+)
process module: REF TAG(whole)
process module: STRING(()
process module: REF TAG(ri)
process module: STRING([)
process module: STRING(2)
process module: STRING(])
process module: STRING(,)
process module: STRING(0)
process module: STRING())
process module: STRING(+)
process module: STRING(".")
process module: STRING(+)
process module: REF TAG(whole)
process module: STRING(()
process module: REF TAG(ri)
process module: STRING([)
process module: STRING(3)
process module: STRING(])
process module: STRING(,)
process module: STRING(0)
process module: STRING())
process module: STRING(+)
process module: STRING(".")
process module: STRING(+)
process module: REF TAG(whole)
process module: STRING(()
process module: REF TAG(ri)
process module: STRING([)
process module: STRING(4)
process module: STRING(])
process module: STRING(,)
process module: STRING(0)
process module: STRING())
process module: STRING())
process module: STRING(,)
process module: STRING(()
process module: INT(REF)
process module: REF TAG(TAG)
process module: REF TAG(ti)
process module: STRING())
process module: STRING(:)
process module: STRING(()
process module: REF TAG(tagoutput)
process module: STRING(|)
process module: REF TAG(blank)
process module: STRING(|)
process module: REF TAG(tagoutput)
process module: STRING(:=)
process module: INT(TRUE)
process module: STRING(;)
process module: STRING("")
process module: STRING())
process module: STRING(+)
process module: REF TAG(s)
process module: INT(OF)
process module: REF TAG(ti)
process module: INT(ESAC)
process module: STRING(;)
process module: INT(IF)
process module: REF TAG(upb)
process module: INT(OF)
process module: REF TAG(st)
process module: STRING(+)
process module: INT(UPB)
process module: REF TAG(outs)
process module: STRING(>)
process module: REF MACRO(maxoutputlineleng)
process module: STRING(80)
process module: INT(THEN)
process module: REF TAG(emptythebuffer)
process module: STRING(()
process module: REF TAG(st)
process module: STRING())
process module: INT(FI)
process module: STRING(;)
process module: STRING(()
process module: REF TAG(b)
process module: INT(OF)
process module: REF TAG(st)
process module: STRING())
process module: STRING([)
process module: REF TAG(upb)
process module: INT(OF)
process module: REF TAG(st)
process module: STRING(+)
process module: STRING(1)
process module: STRING(:)
process module: REF TAG(upb)
process module: INT(OF)
process module: REF TAG(st)
process module: STRING(+)
process module: INT(UPB)
process module: REF TAG(outs)
process module: STRING(])
process module: STRING(:=)
process module: REF TAG(outs)
process module: STRING(;)
process module: REF TAG(upb)
process module: INT(OF)
process module: REF TAG(st)
process module: STRING(+:=)
process module: INT(UPB)
process module: REF TAG(outs)
process module: INT(OD)
process module: INT(END)
process module: STRING(;)
process module: []INT(8.2.1.1)
process module: INT(PROC)
process module: REF TAG(expandmacro)
process module: STRING(=)
process module: STRING(()
process module: INT(REF)
process module: INT(REF)
process module: REF TAG(TEXT)
process module: REF TAG(txt)
process module: STRING(,)
process module: INT(REF)
process module: REF TAG(MACRO)
process module: REF TAG(mc)
process module: STRING())
process module: INT(BOOL)
process module: STRING(:)
process module: INT(IF)
process module: INT(REF)
process module: REF TAG(TEXT)
process module: REF TAG(newtext)
process module: STRING(:=)
process module: REF TAG(notext)
process module: STRING(,)
process module: REF TAG(locmactext)
process module: STRING(:=)
process module: REF TAG(textbeg)
process module: INT(OF)
process module: REF TAG(mc)
process module: STRING(;)
process module: INT(REF)
process module: INT(REF)
process module: REF TAG(TEXT)
process module: REF TAG(locnewtext)
process module: STRING(:=)
process module: REF TAG(newtext)
process module: STRING(;)
process module: REF TAG(param)
process module: INT(OF)
process module: REF TAG(mc)
process module: INT(IS)
process module: REF TAG(nowparam)
process module: INT(THEN)
process module: INT(WHILE)
process module: INT(IF)
process module: REF TAG(locmactext)
process module: INT(IS)
process module: REF TAG(notext)
process module: INT(THEN)
process module: INT(FALSE)
process module: INT(ELSE)
process module: INT(NOT)
process module: REF MACRO(voidtoken)
process module: STRING(()
process module: REF TAG(text)
process module: INT(OF)
process module: REF TAG(locmactext)
process module: STRING(|)
process module: STRING(()
process module: INT(VOID)
process module: STRING())
process module: STRING(:)
process module: INT(TRUE)
process module: STRING(|)
process module: INT(FALSE)
process module: STRING())
process module: INT(FI)
process module: INT(DO)
process module: INT(REF)
process module: INT(REF)
process module: REF TAG(TEXT)
process module: STRING(()
process module: REF TAG(locnewtext)
process module: STRING())
process module: STRING(:=)
process module: INT(HEAP)
process module: REF TAG(TEXT)
process module: STRING(:=)
process module: STRING(()
process module: REF TAG(text)
process module: INT(OF)
process module: REF TAG(locmactext)
process module: STRING(,)
process module: REF TAG(notext)
process module: STRING())
process module: STRING(;)
process module: REF TAG(locnewtext)
process module: STRING(:=)
process module: REF TAG(next)
process module: INT(OF)
process module: REF TAG(locnewtext)
process module: STRING(;)
process module: REF TAG(locmactext)
process module: STRING(:=)
process module: REF TAG(next)
process module: INT(OF)
process module: REF TAG(locmactext)
process module: INT(OD)
process module: STRING(;)
process module: INT(REF)
process module: INT(REF)
process module: REF TAG(TEXT)
process module: STRING(()
process module: REF TAG(locnewtext)
process module: STRING())
process module: STRING(:=)
process module: REF TAG(next)
process module: INT(OF)
process module: REF TAG(txt)
process module: STRING(;)
process module: REF TAG(txt)
process module: STRING(:=)
process module: REF TAG(newtext)
process module: STRING(;)
process module: INT(FALSE)
process module: INT(ELSE)
process module: REF MODULE(Expand macro replacing formal parameters with actual parameters)
process module: INT(MODE)
process module: REF TAG(ACTUAL)
process module: STRING(=)
process module: INT(STRUCT)
process module: STRING(()
process module: INT(REF)
process module: REF TAG(TEXT)
process module: REF TAG(actual)
process module: STRING(,)
process module: INT(REF)
process module: REF TAG(ACTUAL)
process module: REF TAG(next)
process module: STRING())
process module: STRING(;)
process module: INT(REF)
process module: REF TAG(ACTUAL)
process module: REF TAG(noactual)
process module: STRING(=)
process module: INT(NIL)
process module: STRING(;)
process module: INT(REF)
process module: REF TAG(ACTUAL)
process module: REF TAG(actualparam)
process module: STRING(:=)
process module: REF TAG(noactual)
process module: STRING(;)
process module: []INT(8.2.1.3)
process module: INT(REF)
process module: INT(REF)
process module: REF TAG(WPARAM)
process module: REF TAG(locformalparam)
process module: STRING(:=)
process module: REF TAG(param)
process module: INT(OF)
process module: REF TAG(mc)
process module: STRING(;)
process module: INT(REF)
process module: INT(REF)
process module: REF TAG(ACTUAL)
process module: REF TAG(locactualparam)
process module: STRING(:=)
process module: REF TAG(actualparam)
process module: STRING(;)
process module: INT(WHILE)
process module: REF TAG(locformalparam)
process module: INT(ISNT)
process module: REF TAG(nowparam)
process module: INT(DO)
process module: INT(REF)
process module: INT(REF)
process module: REF TAG(ACTUAL)
process module: STRING(()
process module: REF TAG(locactualparam)
process module: STRING())
process module: STRING(:=)
process module: INT(HEAP)
process module: REF TAG(ACTUAL)
process module: STRING(:=)
process module: STRING(()
process module: REF TAG(notext)
process module: STRING(,)
process module: REF TAG(noactual)
process module: STRING())
process module: STRING(;)
process module: REF TAG(locactualparam)
process module: STRING(:=)
process module: REF TAG(next)
process module: INT(OF)
process module: REF TAG(locactualparam)
process module: STRING(;)
process module: REF TAG(locformalparam)
process module: STRING(:=)
process module: REF TAG(next)
process module: INT(OF)
process module: REF TAG(locformalparam)
process module: INT(OD)
process module: STRING(;)
process module: []INT(8.2.1.4)
process module: INT(IF)
process module: REF MACRO(texttostring)
process module: STRING(()
process module: REF TAG(text)
process module: INT(OF)
process module: REF TAG(next)
process module: INT(OF)
process module: REF TAG(txt)
process module: STRING(|)
process module: STRING(()
process module: INT(STRING)
process module: REF TAG(s)
process module: STRING())
process module: STRING(:)
process module: REF TAG(s)
process module: STRING(|)
process module: STRING("")
process module: STRING())
process module: STRING(/=)
process module: INT(STRING)
process module: STRING(()
process module: STRING("(")
process module: STRING())
process module: INT(THEN)
process module: REF MACRO(errprint)
process module: STRING(()
process module: REF MACRO(printnl)
process module: REF TAG(print)
process module: STRING(()
process module: REF TAG(newline)
process module: STRING())
process module: STRING(;)
process module: REF TAG(consolepos)
process module: STRING(:=)
process module: STRING(0)
process module: STRING(;)
process module: REF TAG(printout)
process module: STRING(()
process module: STRING(()
process module: STRING("! Error: ")
process module: STRING(,)
process module: STRING("call of macro ")
process module: STRING(+)
process module: REF TAG(s)
process module: INT(OF)
process module: REF TAG(id)
process module: INT(OF)
process module: REF TAG(mc)
process module: STRING(+)
process module: STRING(" not followed by ""(""")
process module: STRING(+)
process module: STRING(", macro call ignored")
process module: STRING())
process module: STRING())
process module: STRING(;)
process module: REF TAG(error)
process module: STRING(()
process module: REF MACRO(errors)
process module: STRING(2)
process module: STRING())
process module: STRING())
process module: STRING(;)
process module: INT(TRUE)
process module: INT(ELSE)
process module: []INT(8.2.1.5)
process module: INT(REF)
process module: INT(REF)
process module: REF TAG(TEXT)
process module: REF TAG(loctext)
process module: STRING(:=)
process module: REF TAG(next)
process module: INT(OF)
process module: REF TAG(next)
process module: INT(OF)
process module: REF TAG(txt)
process module: STRING(;)
process module: []INT(8.2.1.6)
process module: REF TAG(locactualparam)
process module: STRING(:=)
process module: REF TAG(actualparam)
process module: STRING(;)
process module: INT(WHILE)
process module: INT(IF)
process module: REF TAG(locactualparam)
process module: INT(IS)
process module: REF TAG(noactual)
process module: INT(THEN)
process module: INT(FALSE)
process module: INT(ELSE)
process module: INT(NOT)
process module: REF MACRO(voidtoken)
process module: STRING(()
process module: REF TAG(text)
process module: INT(OF)
process module: REF TAG(loctext)
process module: STRING(|)
process module: STRING(()
process module: INT(VOID)
process module: STRING())
process module: STRING(:)
process module: INT(TRUE)
process module: STRING(|)
process module: INT(FALSE)
process module: STRING())
process module: INT(FI)
process module: INT(DO)
process module: INT(INT)
process module: REF TAG(level)
process module: STRING(:=)
process module: STRING(0)
process module: STRING(;)
process module: REF TAG(actual)
process module: INT(OF)
process module: REF TAG(locactualparam)
process module: STRING(:=)
process module: REF TAG(loctext)
process module: STRING(;)
process module: INT(WHILE)
process module: INT(STRING)
process module: REF TAG(curtxt)
process module: STRING(=)
process module: REF MACRO(texttostring)
process module: STRING(()
process module: REF TAG(text)
process module: INT(OF)
process module: REF TAG(loctext)
process module: STRING(|)
process module: STRING(()
process module: INT(STRING)
process module: REF TAG(s)
process module: STRING())
process module: STRING(:)
process module: REF TAG(s)
process module: STRING(|)
process module: STRING("")
process module: STRING())
process module: STRING(;)
process module: INT(NOT)
process module: STRING(()
process module: REF MACRO(voidtoken)
process module: STRING(()
process module: REF TAG(text)
process module: INT(OF)
process module: REF TAG(loctext)
process module: STRING(|)
process module: STRING(()
process module: INT(VOID)
process module: STRING())
process module: STRING(:)
process module: INT(TRUE)
process module: STRING(|)
process module: INT(FALSE)
process module: STRING())
process module: INT(OR)
process module: REF TAG(level)
process module: STRING(=)
process module: STRING(0)
process module: INT(AND)
process module: STRING(()
process module: REF TAG(curtxt)
process module: STRING(=)
process module: STRING(")")
process module: INT(OR)
process module: REF TAG(curtxt)
process module: STRING(=)
process module: STRING(",")
process module: STRING())
process module: STRING())
process module: INT(DO)
process module: INT(IF)
process module: REF TAG(curtxt)
process module: STRING(=)
process module: STRING("(")
process module: INT(THEN)
process module: REF TAG(level)
process module: STRING(+:=)
process module: STRING(1)
process module: INT(ELIF)
process module: REF TAG(curtxt)
process module: STRING(=)
process module: STRING(")")
process module: INT(THEN)
process module: REF TAG(level)
process module: STRING(-:=)
process module: STRING(1)
process module: INT(FI)
process module: STRING(;)
process module: REF TAG(loctext)
process module: STRING(:=)
process module: REF TAG(next)
process module: INT(OF)
process module: REF TAG(loctext)
process module: INT(OD)
process module: STRING(;)
process module: INT(IF)
process module: REF MACRO(voidtoken)
process module: STRING(()
process module: REF TAG(text)
process module: INT(OF)
process module: REF TAG(loctext)
process module: STRING(|)
process module: STRING(()
process module: INT(VOID)
process module: STRING())
process module: STRING(:)
process module: INT(TRUE)
process module: STRING(|)
process module: INT(FALSE)
process module: STRING())
process module: INT(THEN)
process module: REF MACRO(errprint)
process module: STRING(()
process module: REF MACRO(printnl)
process module: REF TAG(print)
process module: STRING(()
process module: REF TAG(newline)
process module: STRING())
process module: STRING(;)
process module: REF TAG(consolepos)
process module: STRING(:=)
process module: STRING(0)
process module: STRING(;)
process module: REF TAG(printout)
process module: STRING(()
process module: STRING(()
process module: STRING("! Error: ")
process module: STRING(,)
process module: STRING("unexpected end of text")
process module: STRING())
process module: STRING())
process module: STRING(;)
process module: REF TAG(error)
process module: STRING(()
process module: REF MACRO(errors)
process module: STRING(2)
process module: STRING())
process module: STRING())
process module: INT(ELIF)
process module: REF MACRO(texttostring)
process module: STRING(()
process module: REF TAG(text)
process module: INT(OF)
process module: REF TAG(loctext)
process module: STRING(|)
process module: STRING(()
process module: INT(STRING)
process module: REF TAG(s)
process module: STRING())
process module: STRING(:)
process module: REF TAG(s)
process module: STRING(|)
process module: STRING("")
process module: STRING())
process module: STRING(=)
process module: INT(STRING)
process module: STRING(()
process module: STRING(")")
process module: STRING())
process module: STRING(&)
process module: STRING(()
process module: REF TAG(next)
process module: INT(OF)
process module: REF TAG(locactualparam)
process module: INT(ISNT)
process module: REF TAG(noactual)
process module: STRING())
process module: INT(THEN)
process module: REF MACRO(fatalerror)
process module: STRING(()
process module: REF TAG(printout)
process module: STRING(()
process module: STRING(()
process module: INT(EMPTY)
process module: STRING(,)
process module: STRING("! Fatal error: insufficient parameters in a macro call")
process module: STRING())
process module: STRING())
process module: STRING(;)
process module: REF TAG(error)
process module: STRING(()
process module: REF MACRO(errors)
process module: STRING(2)
process module: STRING())
process module: STRING(;)
process module: REF TAG(close)
process module: STRING(()
process module: REF TAG(f)
process module: INT(OF)
process module: REF TAG(output)
process module: STRING())
process module: STRING(;)
process module: REF TAG(exit)
process module: STRING(()
process module: STRING(-)
process module: STRING(1)
process module: STRING())
process module: STRING())
process module: INT(ELIF)
process module: REF MACRO(texttostring)
process module: STRING(()
process module: REF TAG(text)
process module: INT(OF)
process module: REF TAG(loctext)
process module: STRING(|)
process module: STRING(()
process module: INT(STRING)
process module: REF TAG(s)
process module: STRING())
process module: STRING(:)
process module: REF TAG(s)
process module: STRING(|)
process module: STRING("")
process module: STRING())
process module: STRING(=)
process module: INT(STRING)
process module: STRING(()
process module: STRING(",")
process module: STRING())
process module: STRING(&)
process module: STRING(()
process module: REF TAG(next)
process module: INT(OF)
process module: REF TAG(locactualparam)
process module: INT(IS)
process module: REF TAG(noactual)
process module: STRING())
process module: INT(THEN)
process module: REF MACRO(fatalerror)
process module: STRING(()
process module: REF TAG(printout)
process module: STRING(()
process module: STRING(()
process module: INT(EMPTY)
process module: STRING(,)
process module: STRING("! Fatal error: too many parameters in a macro call")
process module: STRING())
process module: STRING())
process module: STRING(;)
process module: REF TAG(error)
process module: STRING(()
process module: REF MACRO(errors)
process module: STRING(2)
process module: STRING())
process module: STRING(;)
process module: REF TAG(close)
process module: STRING(()
process module: REF TAG(f)
process module: INT(OF)
process module: REF TAG(output)
process module: STRING())
process module: STRING(;)
process module: REF TAG(exit)
process module: STRING(()
process module: STRING(-)
process module: STRING(1)
process module: STRING())
process module: STRING())
process module: INT(ELSE)
process module: INT(REF)
process module: INT(REF)
process module: REF TAG(TEXT)
process module: REF TAG(tmptext)
process module: STRING(=)
process module: REF TAG(loctext)
process module: STRING(;)
process module: REF TAG(loctext)
process module: STRING(:=)
process module: REF TAG(next)
process module: INT(OF)
process module: REF TAG(loctext)
process module: STRING(;)
process module: REF TAG(tmptext)
process module: STRING(:=)
process module: REF TAG(notext)
process module: STRING(;)
process module: REF TAG(locactualparam)
process module: STRING(:=)
process module: REF TAG(next)
process module: INT(OF)
process module: REF TAG(locactualparam)
process module: INT(FI)
process module: INT(OD)
process module: STRING(;)
process module: []INT(8.2.1.7)
process module: INT(WHILE)
process module: REF TAG(locmactext)
process module: INT(ISNT)
process module: REF TAG(notext)
process module: INT(DO)
process module: INT(CASE)
process module: REF TAG(text)
process module: INT(OF)
process module: REF TAG(locmactext)
process module: INT(IN)
process module: STRING(()
process module: INT(REF)
process module: REF TAG(TAG)
process module: REF TAG(tag)
process module: STRING())
process module: STRING(:)
process module: INT(IF)
process module: REF MODULE(!tag! is not a formal parameter)
process module: REF TAG(locformalparam)
process module: STRING(:=)
process module: REF TAG(param)
process module: INT(OF)
process module: REF TAG(mc)
process module: STRING(;)
process module: REF TAG(locactualparam)
process module: STRING(:=)
process module: REF TAG(actualparam)
process module: STRING(;)
process module: INT(WHILE)
process module: INT(IF)
process module: REF TAG(locformalparam)
process module: INT(IS)
process module: REF TAG(nowparam)
process module: INT(THEN)
process module: INT(FALSE)
process module: INT(ELSE)
process module: REF TAG(tag)
process module: INT(ISNT)
process module: REF TAG(par)
process module: INT(OF)
process module: REF TAG(locformalparam)
process module: INT(FI)
process module: INT(DO)
process module: REF TAG(locformalparam)
process module: STRING(:=)
process module: REF TAG(next)
process module: INT(OF)
process module: REF TAG(locformalparam)
process module: STRING(;)
process module: REF TAG(locactualparam)
process module: STRING(:=)
process module: REF TAG(next)
process module: INT(OF)
process module: REF TAG(locactualparam)
process module: INT(OD)
process module: STRING(;)
process module: REF TAG(locformalparam)
process module: INT(IS)
process module: REF TAG(nowparam)
process module: INT(THEN)
process module: INT(REF)
process module: INT(REF)
process module: REF TAG(TEXT)
process module: STRING(()
process module: REF TAG(locnewtext)
process module: STRING())
process module: STRING(:=)
process module: INT(HEAP)
process module: REF TAG(TEXT)
process module: STRING(:=)
process module: STRING(()
process module: REF TAG(text)
process module: INT(OF)
process module: REF TAG(locmactext)
process module: STRING(,)
process module: REF TAG(notext)
process module: STRING())
process module: STRING(;)
process module: REF TAG(locnewtext)
process module: STRING(:=)
process module: REF TAG(next)
process module: INT(OF)
process module: REF TAG(locnewtext)
process module: INT(ELSE)
process module: INT(REF)
process module: INT(REF)
process module: REF TAG(TEXT)
process module: REF TAG(locactualparamtext)
process module: STRING(:=)
process module: REF TAG(actual)
process module: INT(OF)
process module: REF TAG(locactualparam)
process module: STRING(;)
process module: INT(WHILE)
process module: REF TAG(locactualparamtext)
process module: INT(ISNT)
process module: REF TAG(notext)
process module: INT(DO)
process module: INT(REF)
process module: INT(REF)
process module: REF TAG(TEXT)
process module: STRING(()
process module: REF TAG(locnewtext)
process module: STRING())
process module: STRING(:=)
process module: INT(HEAP)
process module: REF TAG(TEXT)
process module: STRING(:=)
process module: REF TAG(locactualparamtext)
process module: STRING(;)
process module: REF TAG(locnewtext)
process module: STRING(:=)
process module: REF TAG(next)
process module: INT(OF)
process module: REF TAG(locnewtext)
process module: STRING(;)
process module: REF TAG(locactualparamtext)
process module: STRING(:=)
process module: REF TAG(next)
process module: INT(OF)
process module: REF TAG(locactualparamtext)
process module: INT(OD)
process module: INT(FI)
process module: INT(OUT)
process module: INT(REF)
process module: INT(REF)
process module: REF TAG(TEXT)
process module: STRING(()
process module: REF TAG(locnewtext)
process module: STRING())
process module: STRING(:=)
process module: INT(HEAP)
process module: REF TAG(TEXT)
process module: STRING(:=)
process module: STRING(()
process module: REF TAG(text)
process module: INT(OF)
process module: REF TAG(locmactext)
process module: STRING(,)
process module: REF TAG(notext)
process module: STRING())
process module: STRING(;)
process module: REF TAG(locnewtext)
process module: STRING(:=)
process module: REF TAG(next)
process module: INT(OF)
process module: REF TAG(locnewtext)
process module: INT(ESAC)
process module: STRING(;)
process module: REF TAG(locmactext)
process module: STRING(:=)
process module: REF TAG(next)
process module: INT(OF)
process module: REF TAG(locmactext)
process module: INT(OD)
process module: STRING(;)
process module: REF MODULE(Insert the expanded text into the text chain at !txt!)
process module: INT(REF)
process module: INT(REF)
process module: REF TAG(TEXT)
process module: STRING(()
process module: REF TAG(locnewtext)
process module: STRING())
process module: STRING(:=)
process module: REF TAG(loctext)
process module: STRING(;)
process module: REF TAG(txt)
process module: STRING(:=)
process module: REF TAG(newtext)
process module: STRING(;)
process module: INT(FALSE)
process module: INT(FI)
process module: INT(FI)
process module: STRING(;)
process module: []INT(8.3.1.2)
process module: INT(PROC)
process module: REF TAG(processmodule)
process module: STRING(=)
process module: STRING(()
process module: INT(REF)
process module: REF TAG(STREAM)
process module: REF TAG(st)
process module: STRING(,)
process module: INT(REF)
process module: REF TAG(MODULE)
process module: REF TAG(mod)
process module: STRING(,)
process module: INT(REF)
process module: STRING([)
process module: STRING(])
process module: INT(INT)
process module: REF TAG(cursec)
process module: STRING())
process module: INT(VOID)
process module: STRING(:)
process module: INT(IF)
process module: REF TAG(textbeg)
process module: INT(OF)
process module: REF TAG(mod)
process module: STRING(:=:)
process module: REF TAG(notext)
process module: INT(THEN)
process module: REF MACRO(warnprint)
process module: STRING(()
process module: REF MACRO(printnl)
process module: REF TAG(print)
process module: STRING(()
process module: REF TAG(newline)
process module: STRING())
process module: STRING(;)
process module: REF TAG(consolepos)
process module: STRING(:=)
process module: STRING(0)
process module: STRING(;)
process module: REF TAG(printout)
process module: STRING(()
process module: STRING(()
process module: STRING("Module """)
process module: STRING(,)
process module: REF TAG(id)
process module: INT(OF)
process module: REF TAG(mod)
process module: STRING(,)
process module: STRING(""" has no text!")
process module: STRING(,)
process module: INT(EMPTY)
process module: STRING())
process module: STRING())
process module: STRING(;)
process module: REF TAG(error)
process module: STRING(()
process module: REF MACRO(warnings)
process module: STRING(1)
process module: STRING())
process module: STRING())
process module: INT(ELSE)
process module: REF TAG(cursec)
process module: STRING(:=)
process module: STRING(()
process module: REF TAG(text)
process module: INT(OF)
process module: REF TAG(textbeg)
process module: INT(OF)
process module: REF TAG(mod)
process module: STRING(|)
process module: STRING(()
process module: STRING([)
process module: STRING(])
process module: INT(INT)
process module: REF TAG(n)
process module: STRING())
process module: STRING(:)
process module: REF TAG(n)
process module: STRING(|)
process module: STRING(()
process module: STRING(0)
process module: STRING(,)
process module: STRING(0)
process module: STRING(,)
process module: STRING(0)
process module: STRING(,)
process module: STRING(0)
process module: STRING())
process module: STRING())
process module: STRING(;)
process module: REF TAG(putout)
process module: STRING(()
process module: REF TAG(st)
process module: STRING(,)
process module: STRING(()
process module: STRING("#")
process module: STRING(,)
process module: REF TAG(cursec)
process module: STRING(,)
process module: STRING(":# ")
process module: STRING())
process module: STRING())
process module: STRING(;)
process module: INT(REF)
process module: INT(REF)
process module: REF TAG(TEXT)
process module: REF TAG(loctxt)
process module: STRING(:=)
process module: REF TAG(next)
process module: INT(OF)
process module: REF TAG(textbeg)
process module: INT(OF)
process module: REF TAG(mod)
process module: STRING(;)
process module: INT(WHILE)
process module: REF TAG(loctxt)
process module: INT(ISNT)
process module: REF TAG(notext)
process module: INT(DO)
process module: REF TAG(debugprinttext)
process module: STRING(()
process module: STRING("process module: ")
process module: STRING(,)
process module: REF TAG(loctxt)
process module: STRING())
process module: STRING(;)
process module: INT(IF)
process module: REF MODULE(!CASE! all the modes of a text item)
process module: INT(CASE)
process module: REF TAG(text)
process module: INT(OF)
process module: REF TAG(loctxt)
process module: INT(IN)
process module: STRING(()
process module: INT(INT)
process module: REF TAG(n)
process module: STRING())
process module: STRING(:)
process module: STRING(()
process module: REF TAG(putout)
process module: STRING(()
process module: REF TAG(st)
process module: STRING(,)
process module: REF TAG(n)
process module: STRING())
process module: STRING(;)
process module: INT(TRUE)
process module: STRING())
process module: STRING(,)
process module: STRING(()
process module: STRING([)
process module: STRING(])
process module: INT(INT)
process module: REF TAG(r)
process module: STRING())
process module: STRING(:)
process module: STRING(()
process module: REF TAG(putout)
process module: STRING(()
process module: REF TAG(st)
process module: STRING(,)
process module: STRING(()
process module: STRING("#:")
process module: STRING(,)
process module: REF TAG(cursec)
process module: STRING(,)
process module: REF TAG(blank)
process module: STRING())
process module: STRING())
process module: STRING(;)
process module: REF TAG(putout)
process module: STRING(()
process module: REF TAG(st)
process module: STRING(,)
process module: STRING(()
process module: REF TAG(cursec)
process module: STRING(:=)
process module: REF TAG(r)
process module: STRING(,)
process module: STRING(":# ")
process module: STRING())
process module: STRING())
process module: STRING(;)
process module: INT(TRUE)
process module: STRING())
process module: STRING(,)
process module: STRING(()
process module: INT(STRING)
process module: REF TAG(s)
process module: STRING())
process module: STRING(:)
process module: STRING(()
process module: STRING(()
process module: REF TAG(s)
process module: STRING([)
process module: INT(LWB)
process module: REF TAG(s)
process module: STRING(])
process module: STRING(=)
process module: STRING("""")
process module: STRING(|)
process module: REF TAG(putout)
process module: STRING(()
process module: REF TAG(st)
process module: STRING(,)
process module: REF TAG(blank)
process module: STRING())
process module: STRING())
process module: STRING(;)
process module: REF TAG(putout)
process module: STRING(()
process module: REF TAG(st)
process module: STRING(,)
process module: REF TAG(s)
process module: STRING())
process module: STRING(;)
process module: INT(TRUE)
process module: STRING())
process module: STRING(,)
process module: STRING(()
process module: INT(REF)
process module: REF TAG(TAG)
process module: REF TAG(t)
process module: STRING())
process module: STRING(:)
process module: STRING(()
process module: REF TAG(putout)
process module: STRING(()
process module: REF TAG(st)
process module: STRING(,)
process module: REF TAG(t)
process module: STRING())
process module: STRING(;)
process module: INT(TRUE)
process module: STRING())
process module: STRING(,)
process module: STRING(()
process module: INT(REF)
process module: REF TAG(MACRO)
process module: REF TAG(mc)
process module: STRING())
process module: STRING(:)
process module: REF MODULE(Check for a one-off macro)
process module: INT(IF)
process module: STRING(32)
process module: INT(ELEM)
process module: REF TAG(flags)
process module: INT(OF)
process module: REF TAG(mc)
process module: INT(THEN)
process module: INT(IF)
process module: INT(NOT)
process module: STRING(()
process module: STRING(31)
process module: INT(ELEM)
process module: REF TAG(flags)
process module: INT(OF)
process module: REF TAG(mc)
process module: STRING())
process module: INT(THEN)
process module: REF TAG(flags)
process module: INT(OF)
process module: REF TAG(mc)
process module: STRING(:=)
process module: REF TAG(flags)
process module: INT(OF)
process module: REF TAG(mc)
process module: INT(OR)
process module: INT(ELEM)
process module: STRING(31)
process module: STRING(;)
process module: REF TAG(expandmacro)
process module: STRING(()
process module: REF TAG(loctxt)
process module: STRING(,)
process module: REF TAG(mc)
process module: STRING())
process module: INT(ELSE)
process module: REF TAG(putout)
process module: STRING(()
process module: REF TAG(st)
process module: STRING(,)
process module: STRING(" SKIP")
process module: STRING())
process module: STRING(;)
process module: INT(TRUE)
process module: INT(FI)
process module: INT(ELSE)
process module: REF TAG(expandmacro)
process module: STRING(()
process module: REF TAG(loctxt)
process module: STRING(,)
process module: REF TAG(mc)
process module: STRING())
process module: INT(FI)
process module: STRING(,)
process module: STRING(()
process module: INT(REF)
process module: REF TAG(MODULE)
process module: REF TAG(md)
process module: STRING())
process module: STRING(:)
process module: STRING(()
process module: REF TAG(processmodule)
process module: STRING(()
process module: REF TAG(st)
process module: STRING(,)
process module: REF TAG(md)
process module: STRING(,)
process module: INT(HEAP)
process module: STRING([)
process module: STRING(4)
process module: STRING(])
process module: INT(INT)
process module: STRING())
process module: STRING(;)
process module: INT(TRUE)
process module: STRING())
process module: STRING(,)
process module: STRING(()
process module: INT(VOID)
process module: STRING())
process module: STRING(:)
process module: INT(TRUE)
process module: STRING(,)
process module: STRING(()
process module: REF TAG(CONTROL)
process module: REF TAG(c)
process module: STRING())
process module: STRING(:)
process module: INT(BEGIN)
process module: REF MACRO(errprint)
process module: STRING(()
process module: REF MACRO(printnl)
process module: REF TAG(print)
process module: STRING(()
process module: REF TAG(newline)
process module: STRING())
process module: STRING(;)
process module: REF TAG(consolepos)
process module: STRING(:=)
process module: STRING(0)
process module: STRING(;)
process module: REF TAG(printout)
process module: STRING(()
process module: STRING(()
process module: STRING("! Error: ")
process module: STRING(,)
process module: STRING("unexpected control sequence(")
process module: STRING(+)
process module: REF TAG(cs)
process module: INT(OF)
process module: REF TAG(c)
process module: STRING(+)
process module: STRING(") in module """)
process module: STRING(+)
process module: REF TAG(id)
process module: INT(OF)
process module: REF TAG(mod)
process module: STRING(+)
process module: STRING("""")
process module: STRING())
process module: STRING())
process module: STRING(;)
process module: REF TAG(error)
process module: STRING(()
process module: REF MACRO(errors)
process module: STRING(2)
process module: STRING())
process module: STRING())
process module: STRING(;)
process module: INT(TRUE)
process module: INT(END)
process module: INT(ESAC)
process module: INT(THEN)
process module: REF TAG(loctxt)
process module: STRING(:=)
process module: REF TAG(next)
process module: INT(OF)
process module: REF TAG(loctxt)
process module: INT(FI)
process module: INT(OD)
process module: STRING(;)
process module: REF TAG(putout)
process module: STRING(()
process module: REF TAG(st)
process module: STRING(,)
process module: STRING(()
process module: STRING("#:")
process module: STRING(,)
process module: REF TAG(cursec)
process module: STRING(,)
process module: STRING("# ")
process module: STRING())
process module: STRING())
process module: INT(FI)
process module: STRING(;)
process module: REF MODULE(Input procedures in the outer reach)
process module: INT(PROC)
process module: REF TAG(addfiletotree)
process module: STRING(=)
process module: STRING(()
process module: INT(REF)
process module: INT(REF)
process module: REF TAG(INCLUDED)
process module: REF TAG(tr)
process module: STRING(,)
process module: INT(STRING)
process module: REF TAG(fn)
process module: STRING())
process module: INT(VOID)
process module: STRING(:)
process module: INT(IF)
process module: REF TAG(tr)
process module: INT(IS)
process module: REF TAG(noinc)
process module: INT(THEN)
process module: REF TAG(tr)
process module: STRING(:=)
process module: INT(HEAP)
process module: REF TAG(INCLUDED)
process module: STRING(:=)
process module: STRING(()
process module: REF TAG(fn)
process module: STRING(,)
process module: REF TAG(noinc)
process module: STRING(,)
process module: REF TAG(noinc)
process module: STRING())
process module: INT(ELIF)
process module: REF TAG(fn)
process module: STRING(<)
process module: REF TAG(s)
process module: INT(OF)
process module: REF TAG(tr)
process module: INT(THEN)
process module: REF TAG(addfiletotree)
process module: STRING(()
process module: REF TAG(left)
process module: INT(OF)
process module: REF TAG(tr)
process module: STRING(,)
process module: REF TAG(fn)
process module: STRING())
process module: INT(ELIF)
process module: REF TAG(fn)
process module: STRING(>)
process module: REF TAG(s)
process module: INT(OF)
process module: REF TAG(tr)
process module: INT(THEN)
process module: REF TAG(addfiletotree)
process module: STRING(()
process module: REF TAG(right)
process module: INT(OF)
process module: REF TAG(tr)
process module: STRING(,)
process module: REF TAG(fn)
process module: STRING())
process module: INT(ELSE)
process module: REF MACRO(warnprint)
process module: STRING(()
process module: REF MACRO(printnl)
process module: REF TAG(print)
process module: STRING(()
process module: REF TAG(newline)
process module: STRING())
process module: STRING(;)
process module: REF TAG(consolepos)
process module: STRING(:=)
process module: STRING(0)
process module: STRING(;)
process module: REF TAG(printout)
process module: STRING(()
process module: STRING("file ")
process module: STRING(+)
process module: REF TAG(fn)
process module: STRING(+)
process module: STRING(" has already been read")
process module: STRING())
process module: STRING(;)
process module: REF TAG(error)
process module: STRING(()
process module: REF MACRO(warnings)
process module: STRING(1)
process module: STRING())
process module: STRING())
process module: INT(FI)
process module: STRING(;)
process module: []INT(5.1.1.4)
process module: INT(PROC)
process module: REF TAG(addincludefile)
process module: STRING(=)
process module: STRING(()
process module: INT(REF)
process module: INT(REF)
process module: REF TAG(STREAM)
process module: REF TAG(web)
process module: STRING(,)
process module: INT(STRING)
process module: REF TAG(incfn)
process module: STRING())
process module: INT(BOOL)
process module: STRING(:)
process module: INT(IF)
process module: INT(HEAP)
process module: INT(FILE)
process module: REF TAG(incf)
process module: STRING(;)
process module: REF TAG(open)
process module: STRING(()
process module: REF TAG(incf)
process module: STRING(,)
process module: REF TAG(incfn)
process module: STRING(,)
process module: REF TAG(standinchannel)
process module: STRING())
process module: STRING(=)
process module: STRING(0)
process module: INT(THEN)
process module: REF TAG(filenumber)
process module: STRING(+:=)
process module: STRING(1)
process module: STRING(;)
process module: REF MODULE(Assign !HEAP STREAM! to web)
process module: REF TAG(web)
process module: STRING(:=)
process module: INT(HEAP)
process module: REF TAG(STREAM)
process module: STRING(:=)
process module: STRING(()
process module: REF TAG(incf)
process module: STRING(,)
process module: INT(FALSE)
process module: STRING(,)
process module: REF TAG(filenumber)
process module: STRING(,)
process module: STRING(0)
process module: STRING(,)
process module: STRING(0)
process module: STRING(,)
process module: STRING(0)
process module: STRING(,)
process module: STRING(()
process module: REF TAG(filenumber)
process module: STRING(,)
process module: STRING(0)
process module: STRING(,)
process module: STRING(0)
process module: STRING(,)
process module: STRING(0)
process module: STRING())
process module: STRING(,)
process module: REF MACRO(strbuffsz)
process module: STRING(256)
process module: STRING(*)
process module: REF TAG(blank)
process module: STRING(,)
process module: REF TAG(web)
process module: STRING())
process module: STRING(;)
process module: REF TAG(addfiletotree)
process module: STRING(()
process module: REF TAG(inctree)
process module: STRING(,)
process module: REF TAG(incfn)
process module: STRING())
process module: STRING(;)
process module: INT(TRUE)
process module: INT(ELSE)
process module: REF MODULE(Look for the file on the include pathlist)
process module: INT(FILE)
process module: REF TAG(pf)
process module: STRING(;)
process module: INT(STRING)
process module: REF TAG(path)
process module: STRING(;)
process module: REF TAG(open)
process module: STRING(()
process module: REF TAG(pf)
process module: STRING(,)
process module: REF TAG(MAKERVC)
process module: REF TAG(includepaths)
process module: STRING(,)
process module: REF TAG(memchannel)
process module: STRING())
process module: STRING(;)
process module: REF TAG(maketerm)
process module: STRING(()
process module: REF TAG(pf)
process module: STRING(,)
process module: STRING(":")
process module: STRING())
process module: STRING(;)
process module: REF TAG(onlogicalfileend)
process module: STRING(()
process module: REF TAG(pf)
process module: STRING(,)
process module: STRING(()
process module: INT(REF)
process module: INT(FILE)
process module: REF TAG(f)
process module: STRING())
process module: INT(BOOL)
process module: STRING(:)
process module: STRING(()
process module: REF TAG(close)
process module: STRING(()
process module: REF TAG(f)
process module: STRING())
process module: STRING(;)
process module: INT(GOTO)
process module: REF TAG(eof)
process module: STRING(;)
process module: INT(SKIP)
process module: STRING())
process module: STRING())
process module: STRING(;)
process module: INT(DO)
process module: REF TAG(get)
process module: STRING(()
process module: REF TAG(pf)
process module: STRING(,)
process module: STRING(()
process module: REF TAG(skipterminators)
process module: STRING(,)
process module: REF TAG(path)
process module: STRING())
process module: STRING())
process module: STRING(;)
process module: INT(IF)
process module: REF TAG(path)
process module: STRING([)
process module: INT(UPB)
process module: REF TAG(path)
process module: STRING(])
process module: STRING(/=)
process module: STRING("/")
process module: INT(THEN)
process module: REF TAG(path)
process module: STRING(+:=)
process module: STRING("/")
process module: INT(FI)
process module: STRING(;)
process module: INT(IF)
process module: REF TAG(open)
process module: STRING(()
process module: REF TAG(incf)
process module: STRING(,)
process module: REF TAG(path)
process module: STRING(+)
process module: REF TAG(incfn)
process module: STRING(,)
process module: REF TAG(standinchannel)
process module: STRING())
process module: STRING(=)
process module: STRING(0)
process module: INT(THEN)
process module: REF TAG(filenumber)
process module: STRING(+:=)
process module: STRING(1)
process module: STRING(;)
process module: REF MODULE(Assign !HEAP STREAM! to web)
process module: REF TAG(web)
process module: STRING(:=)
process module: INT(HEAP)
process module: REF TAG(STREAM)
process module: STRING(:=)
process module: STRING(()
process module: REF TAG(incf)
process module: STRING(,)
process module: INT(FALSE)
process module: STRING(,)
process module: REF TAG(filenumber)
process module: STRING(,)
process module: STRING(0)
process module: STRING(,)
process module: STRING(0)
process module: STRING(,)
process module: STRING(0)
process module: STRING(,)
process module: STRING(()
process module: REF TAG(filenumber)
process module: STRING(,)
process module: STRING(0)
process module: STRING(,)
process module: STRING(0)
process module: STRING(,)
process module: STRING(0)
process module: STRING())
process module: STRING(,)
process module: STRING(256)
process module: STRING(*)
process module: REF TAG(blank)
process module: STRING(,)
process module: REF TAG(web)
process module: STRING())
process module: STRING(;)
process module: REF TAG(close)
process module: STRING(()
process module: REF TAG(pf)
process module: STRING())
process module: STRING(;)
process module: REF TAG(addfiletotree)
process module: STRING(()
process module: REF TAG(inctree)
process module: STRING(,)
process module: REF TAG(incfn)
process module: STRING())
process module: STRING(;)
process module: INT(GOTO)
process module: REF TAG(found)
process module: INT(ELSE)
process module: REF TAG(debugprintstring)
process module: STRING(()
process module: STRING("looking for include file ")
process module: STRING(,)
process module: REF TAG(path)
process module: STRING(+)
process module: REF TAG(incfn)
process module: STRING())
process module: INT(FI)
process module: INT(OD)
process module: STRING(;)
process module: REF TAG(eof)
process module: STRING(:)
process module: INT(FALSE)
process module: INT(EXIT)
process module: REF TAG(found)
process module: STRING(:)
process module: INT(TRUE)
process module: INT(FI)
process module: STRING(;)
process module: []INT(7.1.1.1)
process module: INT(PROC)
process module: REF TAG(inputln)
process module: STRING(=)
process module: STRING(()
process module: INT(REF)
process module: REF TAG(STREAM)
process module: REF TAG(inp)
process module: STRING())
process module: INT(BOOL)
process module: STRING(:)
process module: INT(BEGIN)
process module: INT(CHAR)
process module: REF TAG(ch)
process module: STRING(;)
process module: REF TAG(upb)
process module: INT(OF)
process module: REF TAG(inp)
process module: STRING(:=)
process module: STRING(0)
process module: STRING(;)
process module: REF TAG(loc)
process module: INT(OF)
process module: REF TAG(inp)
process module: STRING(:=)
process module: STRING(0)
process module: STRING(;)
process module: REF TAG(onlogicalfileend)
process module: STRING(()
process module: REF TAG(f)
process module: INT(OF)
process module: REF TAG(inp)
process module: STRING(,)
process module: STRING(()
process module: INT(REF)
process module: INT(FILE)
process module: REF TAG(f)
process module: STRING())
process module: INT(BOOL)
process module: STRING(:)
process module: STRING(()
process module: REF TAG(ended)
process module: INT(OF)
process module: REF TAG(inp)
process module: STRING(:=)
process module: INT(TRUE)
process module: STRING(;)
process module: INT(GOTO)
process module: REF TAG(lab1)
process module: STRING(;)
process module: INT(SKIP)
process module: STRING())
process module: STRING())
process module: STRING(;)
process module: INT(WHILE)
process module: REF TAG(getbin)
process module: STRING(()
process module: REF TAG(f)
process module: INT(OF)
process module: REF TAG(inp)
process module: STRING(,)
process module: REF TAG(ch)
process module: STRING())
process module: STRING(;)
process module: REF TAG(ch)
process module: STRING(/=)
process module: REF TAG(lf)
process module: INT(DO)
process module: STRING(()
process module: REF TAG(b)
process module: INT(OF)
process module: REF TAG(inp)
process module: STRING())
process module: STRING([)
process module: REF TAG(upb)
process module: INT(OF)
process module: REF TAG(inp)
process module: STRING(+:=)
process module: STRING(1)
process module: STRING(])
process module: STRING(:=)
process module: REF TAG(ch)
process module: INT(OD)
process module: STRING(;)
process module: INT(IF)
process module: REF TAG(upb)
process module: INT(OF)
process module: REF TAG(inp)
process module: STRING(>)
process module: STRING(0)
process module: INT(THEN)
process module: STRING([)
process module: STRING(])
process module: INT(CHAR)
process module: REF TAG(trimmedb)
process module: STRING(=)
process module: STRING(()
process module: REF TAG(TRIM)
process module: STRING(()
process module: REF TAG(b)
process module: INT(OF)
process module: REF TAG(inp)
process module: STRING())
process module: STRING([)
process module: STRING(:)
process module: REF TAG(upb)
process module: INT(OF)
process module: REF TAG(inp)
process module: STRING(])
process module: STRING())
process module: STRING([)
process module: STRING(@)
process module: STRING(1)
process module: STRING(])
process module: STRING(;)
process module: REF TAG(upb)
process module: INT(OF)
process module: REF TAG(inp)
process module: STRING(:=)
process module: INT(UPB)
process module: REF TAG(trimmedb)
process module: STRING(;)
process module: STRING(()
process module: REF TAG(b)
process module: INT(OF)
process module: REF TAG(inp)
process module: STRING())
process module: STRING([)
process module: STRING(:)
process module: REF TAG(upb)
process module: INT(OF)
process module: REF TAG(inp)
process module: STRING(])
process module: STRING(:=)
process module: REF TAG(trimmedb)
process module: INT(FI)
process module: STRING(;)
process module: REF TAG(n)
process module: INT(OF)
process module: REF TAG(inp)
process module: STRING(+:=)
process module: STRING(1)
process module: STRING(;)
process module: INT(TRUE)
process module: INT(EXIT)
process module: REF TAG(lab1)
process module: STRING(:)
process module: INT(FALSE)
process module: INT(END)
process module: STRING(;)
process module: []INT(7.1.1.5)
process module: INT(PROC)
process module: REF TAG(nextchar)
process module: STRING(=)
process module: INT(CHAR)
process module: STRING(:)
process module: INT(IF)
process module: REF MACRO(inputended)
process module: REF TAG(ended)
process module: INT(OF)
process module: REF TAG(web)
process module: INT(THEN)
process module: REF MODULE(Check if included file)
process module: INT(IF)
process module: REF TAG(next)
process module: INT(OF)
process module: REF TAG(web)
process module: INT(ISNT)
process module: REF TAG(nostream)
process module: INT(THEN)
process module: REF TAG(close)
process module: STRING(()
process module: REF TAG(f)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING())
process module: STRING(;)
process module: REF TAG(web)
process module: STRING(:=)
process module: REF TAG(next)
process module: INT(OF)
process module: REF TAG(web)
process module: INT(FI)
process module: STRING(;)
process module: REF TAG(blank)
process module: INT(ELIF)
process module: REF TAG(loc)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING(<)
process module: REF TAG(upb)
process module: INT(OF)
process module: REF TAG(web)
process module: INT(THEN)
process module: STRING(()
process module: REF TAG(b)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING())
process module: STRING([)
process module: REF TAG(loc)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING(+:=)
process module: STRING(1)
process module: STRING(])
process module: INT(ELSE)
process module: INT(WHILE)
process module: REF TAG(inputln)
process module: STRING(()
process module: REF TAG(web)
process module: STRING())
process module: STRING(&)
process module: REF TAG(upb)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING(=)
process module: STRING(0)
process module: INT(DO)
process module: INT(SKIP)
process module: INT(OD)
process module: STRING(;)
process module: INT(IF)
process module: REF MACRO(inputended)
process module: REF TAG(ended)
process module: INT(OF)
process module: REF TAG(web)
process module: INT(THEN)
process module: REF MODULE(Check if included file)
process module: INT(IF)
process module: REF TAG(next)
process module: INT(OF)
process module: REF TAG(web)
process module: INT(ISNT)
process module: REF TAG(nostream)
process module: INT(THEN)
process module: REF TAG(close)
process module: STRING(()
process module: REF TAG(f)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING())
process module: STRING(;)
process module: REF TAG(web)
process module: STRING(:=)
process module: REF TAG(next)
process module: INT(OF)
process module: REF TAG(web)
process module: INT(FI)
process module: INT(FI)
process module: STRING(;)
process module: REF TAG(blank)
process module: INT(FI)
process module: STRING(;)
process module: []INT(7.1.1.7)
process module: INT(PROC)
process module: REF TAG(gathertochar)
process module: STRING(=)
process module: STRING(()
process module: INT(REF)
process module: INT(STRING)
process module: REF TAG(s)
process module: STRING(,)
process module: INT(CHAR)
process module: REF TAG(c)
process module: STRING())
process module: INT(VOID)
process module: STRING(:)
process module: INT(IF)
process module: INT(CHAR)
process module: REF TAG(ch)
process module: STRING(;)
process module: INT(WHILE)
process module: REF TAG(ch)
process module: STRING(:=)
process module: REF TAG(nextchar)
process module: STRING(;)
process module: INT(NOT)
process module: REF MACRO(inputended)
process module: REF TAG(ended)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING(&)
process module: REF TAG(ch)
process module: STRING(/=)
process module: REF TAG(c)
process module: INT(DO)
process module: REF TAG(s)
process module: STRING(+:=)
process module: REF TAG(ch)
process module: INT(OD)
process module: STRING(;)
process module: REF MACRO(inputended)
process module: REF TAG(ended)
process module: INT(OF)
process module: REF TAG(web)
process module: INT(THEN)
process module: REF MACRO(errprint)
process module: STRING(()
process module: REF MACRO(printnl)
process module: REF TAG(print)
process module: STRING(()
process module: REF TAG(newline)
process module: STRING())
process module: STRING(;)
process module: REF TAG(consolepos)
process module: STRING(:=)
process module: STRING(0)
process module: STRING(;)
process module: REF TAG(printout)
process module: STRING(()
process module: STRING(()
process module: STRING("! Error: ")
process module: STRING(,)
process module: STRING("input ended while gathering to ")
process module: STRING(+)
process module: REF TAG(c)
process module: STRING())
process module: STRING())
process module: STRING(;)
process module: REF TAG(error)
process module: STRING(()
process module: REF MACRO(errors)
process module: STRING(2)
process module: STRING())
process module: STRING())
process module: INT(ELSE)
process module: REF TAG(s)
process module: STRING(+:=)
process module: REF TAG(ch)
process module: INT(FI)
process module: STRING(;)
process module: []INT(7.1.1.8)
process module: INT(PROC)
process module: REF TAG(skiptochar)
process module: STRING(=)
process module: STRING(()
process module: INT(CHAR)
process module: REF TAG(c)
process module: STRING())
process module: INT(VOID)
process module: STRING(:)
process module: INT(BEGIN)
process module: INT(CHAR)
process module: REF TAG(ch)
process module: STRING(;)
process module: INT(WHILE)
process module: REF TAG(ch)
process module: STRING(:=)
process module: REF TAG(nextchar)
process module: STRING(;)
process module: INT(NOT)
process module: REF MACRO(inputended)
process module: REF TAG(ended)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING(&)
process module: REF TAG(ch)
process module: STRING(/=)
process module: REF TAG(c)
process module: INT(DO)
process module: INT(SKIP)
process module: INT(OD)
process module: STRING(;)
process module: INT(IF)
process module: REF MACRO(inputended)
process module: REF TAG(ended)
process module: INT(OF)
process module: REF TAG(web)
process module: INT(THEN)
process module: REF MACRO(errprint)
process module: STRING(()
process module: REF MACRO(printnl)
process module: REF TAG(print)
process module: STRING(()
process module: REF TAG(newline)
process module: STRING())
process module: STRING(;)
process module: REF TAG(consolepos)
process module: STRING(:=)
process module: STRING(0)
process module: STRING(;)
process module: REF TAG(printout)
process module: STRING(()
process module: STRING(()
process module: STRING("! Error: ")
process module: STRING(,)
process module: STRING("input ended while skipping to ")
process module: STRING(+)
process module: REF TAG(c)
process module: STRING())
process module: STRING())
process module: STRING(;)
process module: REF TAG(error)
process module: STRING(()
process module: REF MACRO(errors)
process module: STRING(2)
process module: STRING())
process module: STRING())
process module: INT(FI)
process module: INT(END)
process module: STRING(;)
process module: []INT(7.1.1.9)
process module: INT(PROC)
process module: REF TAG(skiptobang)
process module: STRING(=)
process module: INT(BOOL)
process module: STRING(:)
process module: INT(BEGIN)
process module: INT(CHAR)
process module: REF TAG(ch)
process module: STRING(;)
process module: INT(WHILE)
process module: INT(WHILE)
process module: REF TAG(ch)
process module: STRING(:=)
process module: REF TAG(nextchar)
process module: STRING(;)
process module: INT(NOT)
process module: REF MACRO(inputended)
process module: REF TAG(ended)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING(&)
process module: REF TAG(ch)
process module: STRING(/=)
process module: STRING("!")
process module: STRING(&)
process module: REF TAG(ch)
process module: STRING(/=)
process module: STRING("@")
process module: INT(DO)
process module: INT(SKIP)
process module: INT(OD)
process module: STRING(;)
process module: INT(IF)
process module: REF MACRO(inputended)
process module: REF TAG(ended)
process module: INT(OF)
process module: REF TAG(web)
process module: INT(OR)
process module: REF TAG(ch)
process module: STRING(=)
process module: STRING("!")
process module: INT(THEN)
process module: INT(FALSE)
process module: INT(ELIF)
process module: STRING(()
process module: REF TAG(ch)
process module: STRING(:=)
process module: REF TAG(nextchar)
process module: STRING())
process module: STRING(/=)
process module: STRING("@")
process module: INT(THEN)
process module: REF MACRO(errprint)
process module: STRING(()
process module: REF MACRO(printnl)
process module: REF TAG(print)
process module: STRING(()
process module: REF TAG(newline)
process module: STRING())
process module: STRING(;)
process module: REF TAG(consolepos)
process module: STRING(:=)
process module: STRING(0)
process module: STRING(;)
process module: REF TAG(printout)
process module: STRING(()
process module: STRING(()
process module: STRING("! Error: ")
process module: STRING(,)
process module: STRING("control sequence inside !...!")
process module: STRING())
process module: STRING())
process module: STRING(;)
process module: REF TAG(error)
process module: STRING(()
process module: REF MACRO(errors)
process module: STRING(2)
process module: STRING())
process module: STRING())
process module: STRING(;)
process module: REF MACRO(backspaceinput)
process module: STRING(()
process module: REF TAG(loc)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING(>=)
process module: INT(LWB)
process module: REF TAG(b)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING(|)
process module: REF TAG(loc)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING(-:=)
process module: STRING(1)
process module: STRING())
process module: STRING(;)
process module: REF MACRO(backspaceinput)
process module: STRING(()
process module: REF TAG(loc)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING(>=)
process module: INT(LWB)
process module: REF TAG(b)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING(|)
process module: REF TAG(loc)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING(-:=)
process module: STRING(1)
process module: STRING())
process module: STRING(;)
process module: INT(GOTO)
process module: REF TAG(err)
process module: INT(ELSE)
process module: INT(TRUE)
process module: INT(FI)
process module: INT(DO)
process module: INT(SKIP)
process module: INT(OD)
process module: STRING(;)
process module: INT(TRUE)
process module: INT(EXIT)
process module: REF TAG(err)
process module: STRING(:)
process module: INT(FALSE)
process module: INT(END)
process module: STRING(;)
process module: []INT(7.1.1.10)
process module: INT(PROC)
process module: REF TAG(skiptocs)
process module: STRING(=)
process module: STRING(()
process module: STRING([)
process module: STRING(])
process module: INT(CHAR)
process module: REF TAG(cset)
process module: STRING())
process module: INT(VOID)
process module: STRING(:)
process module: INT(WHILE)
process module: INT(IF)
process module: REF MACRO(inputended)
process module: REF TAG(ended)
process module: INT(OF)
process module: REF TAG(web)
process module: INT(THEN)
process module: INT(FALSE)
process module: INT(ELSE)
process module: INT(CHAR)
process module: REF TAG(ch)
process module: STRING(:=)
process module: REF TAG(nextchar)
process module: STRING(;)
process module: INT(CASE)
process module: REF TAG(ch)
process module: INT(FIND)
process module: STRING("""!{%@")
process module: INT(IN)
process module: STRING(()
process module: REF TAG(skiptochar)
process module: STRING(()
process module: REF TAG(ch)
process module: STRING())
process module: STRING(;)
process module: INT(TRUE)
process module: STRING())
process module: STRING(,)
process module: REF TAG(skiptobang)
process module: STRING(,)
process module: STRING(()
process module: REF MODULE(Search for a closing brace)
process module: INT(INT)
process module: REF TAG(bal)
process module: STRING(:=)
process module: STRING(1)
process module: STRING(;)
process module: INT(WHILE)
process module: REF TAG(ch)
process module: STRING(:=)
process module: REF TAG(nextchar)
process module: STRING(;)
process module: INT(NOT)
process module: STRING(()
process module: REF TAG(ch)
process module: STRING(=)
process module: STRING("}")
process module: STRING(&)
process module: REF TAG(bal)
process module: STRING(=)
process module: STRING(1)
process module: STRING())
process module: INT(DO)
process module: INT(IF)
process module: REF TAG(ch)
process module: STRING(=)
process module: STRING("{")
process module: INT(THEN)
process module: REF TAG(bal)
process module: STRING(+:=)
process module: STRING(1)
process module: INT(ELIF)
process module: REF TAG(ch)
process module: STRING(=)
process module: STRING("}")
process module: INT(THEN)
process module: REF TAG(bal)
process module: STRING(-:=)
process module: STRING(1)
process module: INT(FI)
process module: INT(OD)
process module: STRING(;)
process module: INT(TRUE)
process module: STRING())
process module: STRING(,)
process module: STRING(()
process module: REF TAG(loc)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING(:=)
process module: REF TAG(upb)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING(;)
process module: INT(TRUE)
process module: STRING())
process module: STRING(,)
process module: INT(NOT)
process module: REF TAG(charinstring)
process module: STRING(()
process module: REF TAG(UC)
process module: REF TAG(nextchar)
process module: STRING(,)
process module: INT(LOC)
process module: INT(INT)
process module: STRING(,)
process module: REF TAG(cset)
process module: STRING())
process module: INT(OUT)
process module: INT(TRUE)
process module: INT(ESAC)
process module: INT(FI)
process module: INT(DO)
process module: INT(SKIP)
process module: INT(OD)
process module: STRING(;)
process module: []INT(7.1.1.13)
process module: INT(PROC)
process module: REF TAG(gettok)
process module: STRING(=)
process module: REF TAG(TOKEN)
process module: STRING(:)
process module: INT(BEGIN)
process module: REF TAG(TOKEN)
process module: REF TAG(t)
process module: STRING(;)
process module: INT(STRING)
process module: REF TAG(s)
process module: STRING(;)
process module: INT(BOOL)
process module: REF TAG(valid)
process module: STRING(:=)
process module: INT(TRUE)
process module: STRING(;)
process module: INT(WHILE)
process module: INT(CHAR)
process module: REF TAG(ch)
process module: STRING(:=)
process module: REF TAG(nextchar)
process module: STRING(;)
process module: INT(IF)
process module: REF MACRO(inputended)
process module: REF TAG(ended)
process module: INT(OF)
process module: REF TAG(web)
process module: INT(THEN)
process module: REF TAG(t)
process module: STRING(:=)
process module: INT(EMPTY)
process module: STRING(;)
process module: INT(FALSE)
process module: INT(ELIF)
process module: REF TAG(ch)
process module: STRING(=)
process module: REF TAG(blank)
process module: INT(OR)
process module: REF TAG(ch)
process module: STRING(=)
process module: REF TAG(tabch)
process module: INT(THEN)
process module: INT(TRUE)
process module: INT(ELIF)
process module: REF MACRO(isupper)
process module: STRING(()
process module: REF TAG(ch)
process module: STRING(>=)
process module: STRING("A")
process module: STRING(&)
process module: REF TAG(ch)
process module: STRING(<=)
process module: STRING("Z")
process module: STRING())
process module: INT(THEN)
process module: REF MODULE(Get bold tag)
process module: REF TAG(s)
process module: STRING(:=)
process module: REF TAG(ch)
process module: STRING(;)
process module: INT(WHILE)
process module: INT(IF)
process module: REF TAG(loc)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING(=)
process module: REF TAG(upb)
process module: INT(OF)
process module: REF TAG(web)
process module: INT(THEN)
process module: INT(FALSE)
process module: INT(ELSE)
process module: REF TAG(valid)
process module: STRING(:=)
process module: STRING(()
process module: REF TAG(ch)
process module: STRING(:=)
process module: REF TAG(nextchar)
process module: STRING())
process module: REF TAG(CHOP)
process module: REF TAG(boldrange)
process module: STRING(>=)
process module: INT(LWB)
process module: REF TAG(boldrange)
process module: INT(FI)
process module: INT(DO)
process module: REF TAG(s)
process module: STRING(+:=)
process module: REF TAG(ch)
process module: INT(OD)
process module: STRING(;)
process module: INT(IF)
process module: INT(NOT)
process module: REF TAG(valid)
process module: INT(THEN)
process module: REF MACRO(backspaceinput)
process module: STRING(()
process module: REF TAG(loc)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING(>=)
process module: INT(LWB)
process module: REF TAG(b)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING(|)
process module: REF TAG(loc)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING(-:=)
process module: STRING(1)
process module: STRING())
process module: INT(FI)
process module: STRING(;)
process module: []INT(7.1.1.15)
process module: INT(IF)
process module: INT(INT)
process module: REF TAG(bs)
process module: STRING(=)
process module: REF TAG(LOOKUP)
process module: REF TAG(s)
process module: STRING(;)
process module: REF TAG(bs)
process module: STRING(=)
process module: STRING(0)
process module: INT(THEN)
process module: REF TAG(t)
process module: STRING(:=)
process module: INT(HEAP)
process module: REF TAG(TAG)
process module: STRING(:=)
process module: STRING(()
process module: REF TAG(s)
process module: STRING(,)
process module: REF TAG(notag)
process module: STRING(,)
process module: REF TAG(notag)
process module: STRING())
process module: STRING(;)
process module: INT(FALSE)
process module: INT(ELIF)
process module: REF TAG(bs)
process module: STRING(/=)
process module: REF MACRO(briefcommentsymbol)
process module: STRING(192)
process module: STRING(&)
process module: REF TAG(bs)
process module: STRING(/=)
process module: REF MACRO(commentsymbol)
process module: STRING(127)
process module: INT(THEN)
process module: REF TAG(t)
process module: STRING(:=-)
process module: REF TAG(bs)
process module: STRING(;)
process module: INT(FALSE)
process module: INT(ELIF)
process module: REF TAG(incomment)
process module: STRING(/=)
process module: STRING(0)
process module: INT(THEN)
process module: REF TAG(t)
process module: STRING(:=-)
process module: REF TAG(bs)
process module: STRING(;)
process module: INT(FALSE)
process module: INT(ELIF)
process module: REF MODULE(Skip input upto the comment closer)
process module: REF TAG(incomment)
process module: STRING(:=-)
process module: REF TAG(bs)
process module: STRING(;)
process module: INT(WHILE)
process module: INT(CASE)
process module: REF TAG(gettok)
process module: INT(IN)
process module: STRING(()
process module: INT(INT)
process module: REF TAG(n)
process module: STRING())
process module: STRING(:)
process module: REF TAG(n)
process module: STRING(/=)
process module: REF TAG(incomment)
process module: STRING(,)
process module: STRING(()
process module: INT(VOID)
process module: STRING())
process module: STRING(:)
process module: INT(FALSE)
process module: INT(OUT)
process module: INT(TRUE)
process module: INT(ESAC)
process module: INT(DO)
process module: INT(SKIP)
process module: INT(OD)
process module: STRING(;)
process module: REF TAG(incomment)
process module: STRING(:=)
process module: STRING(0)
process module: STRING(;)
process module: REF MACRO(inputended)
process module: REF TAG(ended)
process module: INT(OF)
process module: REF TAG(web)
process module: INT(THEN)
process module: REF MACRO(errprint)
process module: STRING(()
process module: REF MACRO(printnl)
process module: REF TAG(print)
process module: STRING(()
process module: REF TAG(newline)
process module: STRING())
process module: STRING(;)
process module: REF TAG(consolepos)
process module: STRING(:=)
process module: STRING(0)
process module: STRING(;)
process module: REF TAG(printout)
process module: STRING(()
process module: STRING(()
process module: STRING("! Error: ")
process module: STRING(,)
process module: STRING("input ended while searching for ")
process module: STRING(+)
process module: STRING(()
process module: REF TAG(incomment)
process module: STRING(=)
process module: REF MACRO(commentsymbol)
process module: STRING(127)
process module: STRING(|)
process module: STRING("COMMENT")
process module: STRING(|)
process module: STRING("CO")
process module: STRING())
process module: STRING())
process module: STRING())
process module: STRING(;)
process module: REF TAG(error)
process module: STRING(()
process module: REF MACRO(errors)
process module: STRING(2)
process module: STRING())
process module: STRING())
process module: STRING(;)
process module: REF TAG(t)
process module: STRING(:=)
process module: INT(EMPTY)
process module: STRING(;)
process module: INT(FALSE)
process module: INT(ELSE)
process module: INT(TRUE)
process module: INT(FI)
process module: INT(ELIF)
process module: REF MACRO(islower)
process module: STRING(()
process module: REF TAG(ch)
process module: STRING(>=)
process module: STRING("a")
process module: STRING(&)
process module: REF TAG(ch)
process module: STRING(<=)
process module: STRING("z")
process module: INT(OR)
process module: REF TAG(ch)
process module: STRING(=)
process module: STRING("_")
process module: STRING())
process module: INT(THEN)
process module: REF MODULE(Get identifier tag)
process module: REF TAG(s)
process module: STRING(:=)
process module: REF TAG(ch)
process module: STRING(;)
process module: INT(WHILE)
process module: INT(IF)
process module: REF MACRO(inputended)
process module: REF TAG(ended)
process module: INT(OF)
process module: REF TAG(web)
process module: INT(THEN)
process module: INT(FALSE)
process module: INT(ELSE)
process module: REF TAG(valid)
process module: STRING(:=)
process module: STRING(()
process module: REF TAG(ch)
process module: STRING(:=)
process module: REF TAG(nextchar)
process module: STRING())
process module: REF TAG(CHOP)
process module: REF TAG(idrange)
process module: STRING(>=)
process module: INT(LWB)
process module: REF TAG(idrange)
process module: INT(FI)
process module: INT(DO)
process module: REF TAG(s)
process module: STRING(+:=)
process module: REF TAG(ch)
process module: INT(OD)
process module: STRING(;)
process module: INT(IF)
process module: INT(NOT)
process module: REF TAG(valid)
process module: INT(THEN)
process module: REF MACRO(backspaceinput)
process module: STRING(()
process module: REF TAG(loc)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING(>=)
process module: INT(LWB)
process module: REF TAG(b)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING(|)
process module: REF TAG(loc)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING(-:=)
process module: STRING(1)
process module: STRING())
process module: INT(FI)
process module: STRING(;)
process module: REF TAG(t)
process module: STRING(:=)
process module: INT(HEAP)
process module: REF TAG(TAG)
process module: STRING(:=)
process module: STRING(()
process module: REF TAG(COMPACT)
process module: REF TAG(s)
process module: STRING(,)
process module: REF TAG(notag)
process module: STRING(,)
process module: REF TAG(notag)
process module: STRING())
process module: STRING(;)
process module: INT(FALSE)
process module: INT(ELIF)
process module: REF MACRO(isdigit)
process module: STRING(()
process module: REF TAG(ch)
process module: STRING(>=)
process module: STRING("0")
process module: STRING(&)
process module: REF TAG(ch)
process module: STRING(<=)
process module: STRING("9")
process module: INT(OR)
process module: REF TAG(ch)
process module: STRING(=)
process module: STRING(".")
process module: STRING())
process module: INT(THEN)
process module: REF MODULE(Get number)
process module: REF TAG(s)
process module: STRING(:=)
process module: REF TAG(ch)
process module: STRING(;)
process module: INT(WHILE)
process module: INT(IF)
process module: REF TAG(ch)
process module: STRING(:=)
process module: REF TAG(nextchar)
process module: STRING(;)
process module: REF MACRO(inputended)
process module: REF TAG(ended)
process module: INT(OF)
process module: REF TAG(web)
process module: INT(THEN)
process module: INT(FALSE)
process module: INT(ELSE)
process module: REF TAG(ch)
process module: STRING(>=)
process module: STRING("0")
process module: STRING(&)
process module: REF TAG(ch)
process module: STRING(<=)
process module: STRING("9")
process module: INT(OR)
process module: REF TAG(ch)
process module: REF TAG(CHOP)
process module: STRING(" .abcdefr")
process module: STRING(>)
process module: STRING(0)
process module: INT(FI)
process module: INT(DO)
process module: REF TAG(s)
process module: STRING(+:=)
process module: REF TAG(ch)
process module: INT(OD)
process module: STRING(;)
process module: REF MACRO(backspaceinput)
process module: STRING(()
process module: REF TAG(loc)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING(>=)
process module: INT(LWB)
process module: REF TAG(b)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING(|)
process module: REF TAG(loc)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING(-:=)
process module: STRING(1)
process module: STRING())
process module: STRING(;)
process module: REF TAG(t)
process module: STRING(:=)
process module: REF TAG(COMPACT)
process module: INT(STRING)
process module: STRING(()
process module: REF TAG(s)
process module: STRING())
process module: STRING(;)
process module: INT(FALSE)
process module: INT(ELIF)
process module: REF TAG(ch)
process module: STRING(=)
process module: STRING("@")
process module: INT(THEN)
process module: REF MODULE(Get control sequence)
process module: REF TAG(t)
process module: STRING(:=)
process module: INT(IF)
process module: REF TAG(ch)
process module: STRING(:=)
process module: REF TAG(nextchar)
process module: STRING(;)
process module: REF MACRO(inputended)
process module: REF TAG(ended)
process module: INT(OF)
process module: REF TAG(web)
process module: INT(THEN)
process module: INT(EMPTY)
process module: INT(ELSE)
process module: INT(HEAP)
process module: REF TAG(CONTROL)
process module: REF TAG(h)
process module: STRING(;)
process module: REF TAG(cs)
process module: INT(OF)
process module: REF TAG(h)
process module: STRING(:=)
process module: REF TAG(ch)
process module: STRING(;)
process module: REF TAG(h)
process module: INT(FI)
process module: STRING(;)
process module: INT(FALSE)
process module: INT(ELSE)
process module: REF MODULE(Get miscellaneous characters)
process module: INT(IF)
process module: REF TAG(ch)
process module: STRING(=)
process module: STRING("""")
process module: INT(THEN)
process module: REF MODULE(Get a string denotation)
process module: REF TAG(s)
process module: STRING(:=)
process module: REF TAG(ch)
process module: STRING(;)
process module: INT(WHILE)
process module: REF TAG(gathertochar)
process module: STRING(()
process module: REF TAG(s)
process module: STRING(,)
process module: REF TAG(ch)
process module: STRING())
process module: STRING(;)
process module: STRING(()
process module: REF TAG(ch)
process module: STRING(:=)
process module: REF TAG(nextchar)
process module: STRING())
process module: STRING(=)
process module: STRING("""")
process module: INT(DO)
process module: REF TAG(s)
process module: STRING(+:=)
process module: REF TAG(ch)
process module: INT(OD)
process module: STRING(;)
process module: REF MACRO(backspaceinput)
process module: STRING(()
process module: REF TAG(loc)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING(>=)
process module: INT(LWB)
process module: REF TAG(b)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING(|)
process module: REF TAG(loc)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING(-:=)
process module: STRING(1)
process module: STRING())
process module: STRING(;)
process module: REF MODULE(Convert @@@@to @@)
process module: INT(INT)
process module: REF TAG(nat)
process module: STRING(:=)
process module: STRING(0)
process module: STRING(;)
process module: INT(BOOL)
process module: REF TAG(err)
process module: STRING(:=)
process module: INT(FALSE)
process module: STRING(;)
process module: INT(FOR)
process module: REF TAG(i)
process module: INT(FROM)
process module: INT(LWB)
process module: REF TAG(s)
process module: INT(TO)
process module: INT(UPB)
process module: REF TAG(s)
process module: INT(DO)
process module: REF TAG(nat)
process module: STRING(+:=)
process module: INT(ABS)
process module: STRING(()
process module: REF TAG(s)
process module: STRING([)
process module: REF TAG(i)
process module: STRING(])
process module: STRING(=)
process module: STRING("@")
process module: STRING())
process module: INT(OD)
process module: STRING(;)
process module: INT(IF)
process module: INT(ODD)
process module: REF TAG(nat)
process module: INT(THEN)
process module: REF MACRO(errprint)
process module: STRING(()
process module: REF MACRO(printnl)
process module: REF TAG(print)
process module: STRING(()
process module: REF TAG(newline)
process module: STRING())
process module: STRING(;)
process module: REF TAG(consolepos)
process module: STRING(:=)
process module: STRING(0)
process module: STRING(;)
process module: REF TAG(printout)
process module: STRING(()
process module: STRING(()
process module: STRING("! Error: ")
process module: STRING(,)
process module: STRING("odd number of @-symbols in a string")
process module: STRING())
process module: STRING())
process module: STRING(;)
process module: REF TAG(error)
process module: STRING(()
process module: REF MACRO(errors)
process module: STRING(2)
process module: STRING())
process module: STRING())
process module: INT(ELIF)
process module: REF TAG(nat)
process module: STRING(>)
process module: STRING(0)
process module: INT(THEN)
process module: STRING([)
process module: INT(LWB)
process module: REF TAG(s)
process module: STRING(:)
process module: INT(UPB)
process module: REF TAG(s)
process module: STRING(-)
process module: REF TAG(nat)
process module: STRING(%)
process module: STRING(2)
process module: STRING(])
process module: INT(CHAR)
process module: REF TAG(ss)
process module: STRING(;)
process module: INT(INT)
process module: REF TAG(pss)
process module: STRING(:=)
process module: INT(LWB)
process module: REF TAG(ss)
process module: STRING(-)
process module: STRING(1)
process module: STRING(;)
process module: INT(BOOL)
process module: REF TAG(atread)
process module: STRING(:=)
process module: INT(FALSE)
process module: STRING(;)
process module: INT(FOR)
process module: REF TAG(i)
process module: INT(FROM)
process module: INT(LWB)
process module: REF TAG(s)
process module: INT(TO)
process module: INT(UPB)
process module: REF TAG(s)
process module: INT(WHILE)
process module: INT(NOT)
process module: REF TAG(err)
process module: INT(DO)
process module: INT(CHAR)
process module: REF TAG(si)
process module: STRING(=)
process module: REF TAG(s)
process module: STRING([)
process module: REF TAG(i)
process module: STRING(])
process module: STRING(;)
process module: INT(IF)
process module: REF TAG(si)
process module: STRING(=)
process module: STRING("@")
process module: INT(THEN)
process module: INT(IF)
process module: REF TAG(atread)
process module: INT(THEN)
process module: REF TAG(ss)
process module: STRING([)
process module: REF TAG(pss)
process module: STRING(+:=)
process module: STRING(1)
process module: STRING(])
process module: STRING(:=)
process module: REF TAG(si)
process module: STRING(;)
process module: REF TAG(atread)
process module: STRING(:=)
process module: INT(FALSE)
process module: INT(ELSE)
process module: REF TAG(atread)
process module: STRING(:=)
process module: INT(TRUE)
process module: INT(FI)
process module: INT(ELIF)
process module: REF TAG(atread)
process module: INT(THEN)
process module: REF MACRO(errprint)
process module: STRING(()
process module: REF MACRO(printnl)
process module: REF TAG(print)
process module: STRING(()
process module: REF TAG(newline)
process module: STRING())
process module: STRING(;)
process module: REF TAG(consolepos)
process module: STRING(:=)
process module: STRING(0)
process module: STRING(;)
process module: REF TAG(printout)
process module: STRING(()
process module: STRING(()
process module: STRING("! Error: ")
process module: STRING(,)
process module: STRING("single @-symbol in a string")
process module: STRING())
process module: STRING())
process module: STRING(;)
process module: REF TAG(error)
process module: STRING(()
process module: REF MACRO(errors)
process module: STRING(2)
process module: STRING())
process module: STRING())
process module: STRING(;)
process module: REF TAG(atread)
process module: STRING(:=)
process module: INT(FALSE)
process module: STRING(;)
process module: REF TAG(err)
process module: STRING(:=)
process module: INT(TRUE)
process module: INT(ELSE)
process module: REF TAG(ss)
process module: STRING([)
process module: REF TAG(pss)
process module: STRING(+:=)
process module: STRING(1)
process module: STRING(])
process module: STRING(:=)
process module: REF TAG(si)
process module: INT(FI)
process module: INT(OD)
process module: STRING(;)
process module: REF TAG(s)
process module: STRING(:=)
process module: STRING(()
process module: REF TAG(err)
process module: STRING(|)
process module: STRING("")
process module: STRING(|)
process module: REF TAG(ss)
process module: STRING())
process module: INT(FI)
process module: STRING(;)
process module: STRING(()
process module: REF TAG(err)
process module: STRING(|)
process module: INT(TRUE)
process module: STRING(|)
process module: REF TAG(t)
process module: STRING(:=)
process module: REF TAG(s)
process module: STRING(;)
process module: INT(FALSE)
process module: STRING())
process module: INT(ELIF)
process module: REF TAG(ch)
process module: STRING(=)
process module: STRING("#")
process module: INT(THEN)
process module: REF TAG(skiptochar)
process module: STRING(()
process module: REF TAG(ch)
process module: STRING())
process module: STRING(;)
process module: INT(TRUE)
process module: INT(ELIF)
process module: REF TAG(ch)
process module: REF TAG(CHOP)
process module: REF MACRO(miscchars)
process module: STRING("$(),;=?[\]{|}")
process module: STRING(>)
process module: STRING(0)
process module: INT(THEN)
process module: REF TAG(t)
process module: STRING(:=)
process module: INT(STRING)
process module: STRING(()
process module: REF TAG(ch)
process module: STRING())
process module: STRING(;)
process module: INT(FALSE)
process module: INT(ELIF)
process module: REF TAG(ch)
process module: STRING(=)
process module: STRING(":")
process module: INT(THEN)
process module: REF TAG(s)
process module: STRING(:=)
process module: REF TAG(ch)
process module: STRING(;)
process module: INT(WHILE)
process module: REF TAG(charinstring)
process module: STRING(()
process module: REF TAG(ch)
process module: STRING(:=)
process module: REF TAG(nextchar)
process module: STRING(,)
process module: INT(LOC)
process module: INT(INT)
process module: STRING(,)
process module: REF MACRO(opchars)
process module: STRING("%&*+-/:<=>^")
process module: STRING())
process module: INT(DO)
process module: REF TAG(s)
process module: STRING(+:=)
process module: REF TAG(ch)
process module: INT(OD)
process module: STRING(;)
process module: REF MACRO(backspaceinput)
process module: STRING(()
process module: REF TAG(loc)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING(>=)
process module: INT(LWB)
process module: REF TAG(b)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING(|)
process module: REF TAG(loc)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING(-:=)
process module: STRING(1)
process module: STRING())
process module: STRING(;)
process module: REF TAG(t)
process module: STRING(:=)
process module: REF TAG(s)
process module: STRING(;)
process module: INT(FALSE)
process module: INT(ELIF)
process module: REF TAG(ch)
process module: REF TAG(CHOP)
process module: REF MACRO(opchars)
process module: STRING("%&*+-/:<=>^")
process module: STRING(=)
process module: STRING(0)
process module: INT(THEN)
process module: REF TAG(t)
process module: STRING(:=)
process module: INT(STRING)
process module: STRING(()
process module: REF TAG(ch)
process module: STRING())
process module: STRING(;)
process module: INT(FALSE)
process module: INT(ELSE)
process module: INT(WHILE)
process module: REF TAG(s)
process module: STRING(+:=)
process module: REF TAG(ch)
process module: STRING(;)
process module: REF TAG(ch)
process module: STRING(:=)
process module: REF TAG(nextchar)
process module: STRING(;)
process module: REF TAG(ch)
process module: REF TAG(CHOP)
process module: REF MACRO(opchars)
process module: STRING("%&*+-/:<=>^")
process module: STRING(>)
process module: STRING(0)
process module: INT(DO)
process module: INT(SKIP)
process module: INT(OD)
process module: STRING(;)
process module: REF MACRO(backspaceinput)
process module: STRING(()
process module: REF TAG(loc)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING(>=)
process module: INT(LWB)
process module: REF TAG(b)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING(|)
process module: REF TAG(loc)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING(-:=)
process module: STRING(1)
process module: STRING())
process module: STRING(;)
process module: REF TAG(t)
process module: STRING(:=)
process module: INT(STRING)
process module: STRING(()
process module: REF TAG(s)
process module: STRING())
process module: STRING(;)
process module: INT(FALSE)
process module: INT(FI)
process module: INT(FI)
process module: INT(DO)
process module: INT(SKIP)
process module: INT(OD)
process module: STRING(;)
process module: REF TAG(debugprinttoken)
process module: STRING(()
process module: STRING("(l.")
process module: STRING(+)
process module: REF TAG(whole)
process module: STRING(()
process module: REF TAG(n)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING(,)
process module: STRING(0)
process module: STRING())
process module: STRING(+)
process module: STRING(",c.")
process module: STRING(+)
process module: REF TAG(whole)
process module: STRING(()
process module: REF TAG(loc)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING(,)
process module: STRING(0)
process module: STRING())
process module: STRING(+)
process module: STRING(") get tok: ")
process module: STRING(,)
process module: REF TAG(t)
process module: STRING())
process module: STRING(;)
process module: REF TAG(t)
process module: INT(END)
process module: STRING(;)
process module: []INT(7.2.1.2)
process module: INT(PROC)
process module: REF TAG(gathertocs)
process module: STRING(=)
process module: STRING(()
process module: INT(CHAR)
process module: REF TAG(c)
process module: STRING())
process module: INT(STRING)
process module: STRING(:)
process module: INT(BEGIN)
process module: INT(STRING)
process module: REF TAG(s)
process module: STRING(;)
process module: INT(CHAR)
process module: REF TAG(ch)
process module: STRING(;)
process module: INT(BOOL)
process module: REF TAG(sp)
process module: STRING(:=)
process module: INT(FALSE)
process module: STRING(;)
process module: INT(WHILE)
process module: INT(IF)
process module: REF TAG(ch)
process module: STRING(:=)
process module: REF TAG(nextchar)
process module: STRING(;)
process module: REF MACRO(inputended)
process module: REF TAG(ended)
process module: INT(OF)
process module: REF TAG(web)
process module: INT(THEN)
process module: REF MACRO(errprint)
process module: STRING(()
process module: REF MACRO(printnl)
process module: REF TAG(print)
process module: STRING(()
process module: REF TAG(newline)
process module: STRING())
process module: STRING(;)
process module: REF TAG(consolepos)
process module: STRING(:=)
process module: STRING(0)
process module: STRING(;)
process module: REF TAG(printout)
process module: STRING(()
process module: STRING(()
process module: STRING("! Error: ")
process module: STRING(,)
process module: STRING("EOF while gathering to @")
process module: STRING(+)
process module: REF TAG(c)
process module: STRING())
process module: STRING())
process module: STRING(;)
process module: REF TAG(error)
process module: STRING(()
process module: REF MACRO(errors)
process module: STRING(2)
process module: STRING())
process module: STRING())
process module: STRING(;)
process module: INT(FALSE)
process module: INT(ELIF)
process module: REF TAG(ch)
process module: STRING(=)
process module: STRING("@")
process module: INT(THEN)
process module: INT(IF)
process module: STRING(()
process module: REF TAG(ch)
process module: STRING(:=)
process module: REF TAG(nextchar)
process module: STRING())
process module: STRING(=)
process module: REF TAG(c)
process module: INT(THEN)
process module: INT(FALSE)
process module: INT(ELSE)
process module: REF TAG(s)
process module: STRING(+:=)
process module: STRING("@")
process module: STRING(+)
process module: REF TAG(ch)
process module: STRING(;)
process module: INT(TRUE)
process module: INT(FI)
process module: INT(ELIF)
process module: REF TAG(ch)
process module: STRING(=)
process module: REF TAG(blank)
process module: INT(OR)
process module: REF TAG(ch)
process module: STRING(=)
process module: REF TAG(tabch)
process module: INT(THEN)
process module: INT(IF)
process module: INT(NOT)
process module: REF TAG(sp)
process module: INT(THEN)
process module: REF TAG(s)
process module: STRING(+:=)
process module: REF TAG(ch)
process module: STRING(;)
process module: REF TAG(sp)
process module: STRING(:=)
process module: INT(TRUE)
process module: INT(ELSE)
process module: INT(TRUE)
process module: INT(FI)
process module: INT(ELSE)
process module: REF TAG(s)
process module: STRING(+:=)
process module: REF TAG(ch)
process module: STRING(;)
process module: INT(NOT)
process module: STRING(()
process module: REF TAG(sp)
process module: STRING(:=)
process module: INT(FALSE)
process module: STRING())
process module: INT(FI)
process module: INT(DO)
process module: INT(SKIP)
process module: INT(OD)
process module: STRING(;)
process module: REF TAG(s)
process module: INT(END)
process module: STRING(;)
process module: []INT(5.2.1.3)
process module: REF MODULE(Args: get the HOME directory)
process module: INT(IF)
process module: INT(FILE)
process module: REF TAG(hf)
process module: STRING(;)
process module: REF TAG(open)
process module: STRING(()
process module: REF TAG(hf)
process module: STRING(,)
process module: STRING("HOME")
process module: STRING(,)
process module: REF TAG(envchannel)
process module: STRING())
process module: STRING(/=)
process module: STRING(0)
process module: INT(THEN)
process module: REF TAG(simpleerror)
process module: STRING(()
process module: STRING("HOME undefined")
process module: STRING(,)
process module: REF MACRO(errorstatus)
process module: STRING(5)
process module: STRING())
process module: INT(ELSE)
process module: REF TAG(get)
process module: STRING(()
process module: REF TAG(hf)
process module: STRING(,)
process module: REF TAG(homedir)
process module: STRING())
process module: STRING(;)
process module: REF TAG(close)
process module: STRING(()
process module: REF TAG(hf)
process module: STRING())
process module: INT(FI)
process module: STRING(;)
process module: REF MODULE(Args: access the program arguments)
process module: INT(IF)
process module: REF TAG(open)
process module: STRING(()
process module: REF TAG(argf)
process module: STRING(,)
process module: STRING("")
process module: STRING(,)
process module: REF TAG(argchannel)
process module: STRING())
process module: STRING(/=)
process module: STRING(0)
process module: INT(THEN)
process module: REF TAG(simpleerror)
process module: STRING(()
process module: STRING("program's arguments inaccessible")
process module: STRING(,)
process module: REF MACRO(errorstatus)
process module: STRING(5)
process module: STRING())
process module: INT(ELSE)
process module: REF TAG(onlogicalfileend)
process module: STRING(()
process module: REF TAG(argf)
process module: STRING(,)
process module: STRING(()
process module: INT(REF)
process module: INT(FILE)
process module: REF TAG(f)
process module: STRING())
process module: INT(BOOL)
process module: STRING(:)
process module: STRING(()
process module: REF TAG(close)
process module: STRING(()
process module: REF TAG(f)
process module: STRING())
process module: STRING(;)
process module: REF TAG(usage)
process module: STRING(;)
process module: INT(TRUE)
process module: STRING())
process module: STRING())
process module: INT(FI)
process module: STRING(;)
process module: REF MODULE(Args: process program options)
process module: INT(CASE)
process module: REF TAG(getparam)
process module: STRING(()
process module: REF TAG(argf)
process module: STRING())
process module: INT(IN)
process module: STRING(()
process module: INT(REF)
process module: REF TAG(PARAM)
process module: REF TAG(rp)
process module: STRING())
process module: STRING(:)
process module: INT(IF)
process module: INT(IF)
process module: REF TAG(rp)
process module: INT(IS)
process module: REF TAG(noparam)
process module: INT(THEN)
process module: INT(TRUE)
process module: INT(ELSE)
process module: INT(UPB)
process module: REF TAG(val)
process module: INT(OF)
process module: REF TAG(rp)
process module: STRING(=)
process module: STRING(0)
process module: INT(FI)
process module: INT(THEN)
process module: REF TAG(usage)
process module: INT(ELSE)
process module: REF MODULE(Args: process the program arguments)
process module: INT(FOR)
process module: REF TAG(i)
process module: INT(FROM)
process module: INT(LWB)
process module: REF TAG(val)
process module: INT(OF)
process module: REF TAG(rp)
process module: INT(TO)
process module: INT(UPB)
process module: REF TAG(val)
process module: INT(OF)
process module: REF TAG(rp)
process module: INT(DO)
process module: INT(CASE)
process module: STRING(()
process module: REF TAG(val)
process module: INT(OF)
process module: REF TAG(rp)
process module: STRING())
process module: STRING([)
process module: REF TAG(i)
process module: STRING(])
process module: INT(IN)
process module: STRING(()
process module: INT(REF)
process module: REF TAG(PARAM)
process module: REF TAG(rp1)
process module: STRING())
process module: STRING(:)
process module: INT(IF)
process module: INT(IF)
process module: REF TAG(rp1)
process module: INT(IS)
process module: REF TAG(noparam)
process module: INT(THEN)
process module: INT(TRUE)
process module: INT(ELSE)
process module: REF TAG(prog)
process module: INT(OF)
process module: REF TAG(rp1)
process module: STRING(=)
process module: STRING("")
process module: INT(FI)
process module: INT(THEN)
process module: REF TAG(simpleerror)
process module: STRING(()
process module: STRING("missing parameter")
process module: STRING(,)
process module: REF MACRO(errorstatus)
process module: STRING(5)
process module: STRING())
process module: INT(ELIF)
process module: INT(INT)
process module: REF TAG(p)
process module: STRING(;)
process module: REF TAG(charinstring)
process module: STRING(()
process module: STRING(()
process module: REF TAG(prog)
process module: INT(OF)
process module: REF TAG(rp1)
process module: STRING())
process module: STRING([)
process module: INT(LWB)
process module: REF TAG(prog)
process module: INT(OF)
process module: REF TAG(rp1)
process module: STRING(])
process module: STRING(,)
process module: REF TAG(p)
process module: STRING(,)
process module: STRING("dfhvw")
process module: STRING())
process module: INT(THEN)
process module: INT(CASE)
process module: REF TAG(p)
process module: INT(IN)
process module: REF TAG(debug)
process module: STRING(:=)
process module: INT(TRUE)
process module: STRING(,)
process module: REF MODULE(Args: process a file name pack)
process module: INT(IF)
process module: INT(UPB)
process module: REF TAG(val)
process module: INT(OF)
process module: REF TAG(rp1)
process module: STRING(/=)
process module: STRING(1)
process module: INT(THEN)
process module: REF TAG(simpleerror)
process module: STRING(()
process module: STRING("wrong number of filenames")
process module: STRING(,)
process module: REF MACRO(errorstatus)
process module: STRING(5)
process module: STRING())
process module: INT(ELSE)
process module: INT(CASE)
process module: STRING(()
process module: REF TAG(val)
process module: INT(OF)
process module: REF TAG(rp1)
process module: STRING())
process module: STRING([)
process module: INT(LWB)
process module: REF TAG(val)
process module: INT(OF)
process module: REF TAG(rp1)
process module: STRING(])
process module: INT(IN)
process module: STRING(()
process module: INT(REF)
process module: REF TAG(PARAM)
process module: REF TAG(rp2)
process module: STRING())
process module: STRING(:)
process module: INT(IF)
process module: INT(IF)
process module: REF TAG(rp2)
process module: INT(IS)
process module: REF TAG(noparam)
process module: INT(THEN)
process module: INT(TRUE)
process module: INT(ELSE)
process module: REF TAG(prog)
process module: INT(OF)
process module: REF TAG(rp2)
process module: STRING(=)
process module: STRING("")
process module: INT(FI)
process module: INT(THEN)
process module: REF TAG(simpleerror)
process module: STRING(()
process module: STRING("missing filename")
process module: STRING(,)
process module: REF MACRO(errorstatus)
process module: STRING(5)
process module: STRING())
process module: INT(ELSE)
process module: REF TAG(tangfn)
process module: STRING(:=)
process module: REF TAG(prog)
process module: INT(OF)
process module: REF TAG(rp2)
process module: INT(FI)
process module: STRING(,)
process module: STRING(()
process module: INT(STRING)
process module: REF TAG(fn)
process module: STRING())
process module: STRING(:)
process module: REF TAG(tangfn)
process module: STRING(:=)
process module: REF TAG(fn)
process module: INT(OUT)
process module: REF TAG(simpleerror)
process module: STRING(()
process module: STRING("unknown parameter format")
process module: STRING(,)
process module: REF MACRO(errorstatus)
process module: STRING(5)
process module: STRING())
process module: INT(ESAC)
process module: INT(FI)
process module: STRING(,)
process module: REF TAG(usage)
process module: STRING(,)
process module: STRING(()
process module: INT(INT)
process module: REF TAG(vpos)
process module: STRING(=)
process module: STRING("v")
process module: INT(FIND)
process module: REF TAG(cvstang)
process module: STRING(;)
process module: REF TAG(put)
process module: STRING(()
process module: REF TAG(standerror)
process module: STRING(,)
process module: STRING(()
process module: STRING("This is tang, version ")
process module: STRING(,)
process module: STRING(()
process module: REF TAG(cvstang)
process module: STRING([)
process module: REF TAG(vpos)
process module: STRING(+)
process module: STRING(2)
process module: STRING(:)
process module: STRING(])
process module: STRING())
process module: REF TAG(UPTO)
process module: REF TAG(blank)
process module: STRING(,)
process module: STRING(" (C) BP64,65,66,67 Phoenix Engineering")
process module: STRING(,)
process module: REF TAG(newline)
process module: STRING())
process module: STRING())
process module: STRING(;)
process module: REF TAG(exit)
process module: STRING(()
process module: REF MACRO(helpstatus)
process module: STRING(1)
process module: STRING())
process module: STRING())
process module: STRING(,)
process module: REF MODULE(Args: process nested include file paths)
process module: INT(IF)
process module: INT(UPB)
process module: REF TAG(val)
process module: INT(OF)
process module: REF TAG(rp1)
process module: STRING(=)
process module: STRING(0)
process module: INT(THEN)
process module: REF TAG(simpleerror)
process module: STRING(()
process module: STRING("missing path")
process module: STRING(,)
process module: REF MACRO(errorstatus)
process module: STRING(5)
process module: STRING())
process module: INT(ELSE)
process module: INT(FOR)
process module: REF TAG(j)
process module: INT(FROM)
process module: INT(LWB)
process module: REF TAG(val)
process module: INT(OF)
process module: REF TAG(rp1)
process module: INT(TO)
process module: INT(UPB)
process module: REF TAG(val)
process module: INT(OF)
process module: REF TAG(rp1)
process module: INT(DO)
process module: INT(CASE)
process module: STRING(()
process module: REF TAG(val)
process module: INT(OF)
process module: REF TAG(rp1)
process module: STRING())
process module: STRING([)
process module: REF TAG(j)
process module: STRING(])
process module: INT(IN)
process module: STRING(()
process module: INT(REF)
process module: REF TAG(PARAM)
process module: REF TAG(rp2)
process module: STRING())
process module: STRING(:)
process module: INT(IF)
process module: INT(IF)
process module: REF TAG(rp2)
process module: INT(IS)
process module: REF TAG(noparam)
process module: INT(THEN)
process module: INT(TRUE)
process module: INT(ELSE)
process module: REF TAG(prog)
process module: INT(OF)
process module: REF TAG(rp2)
process module: STRING(=)
process module: STRING("")
process module: INT(FI)
process module: INT(THEN)
process module: REF TAG(simpleerror)
process module: STRING(()
process module: STRING("missing path")
process module: STRING(,)
process module: REF MACRO(errorstatus)
process module: STRING(5)
process module: STRING())
process module: INT(ELSE)
process module: INT(STRING)
process module: REF TAG(path)
process module: STRING(:=)
process module: REF TAG(prog)
process module: INT(OF)
process module: REF TAG(rp2)
process module: STRING(;)
process module: REF MODULE(Args: check for a tilde and expand it)
process module: INT(WHILE)
process module: INT(INT)
process module: REF TAG(pos)
process module: STRING(;)
process module: REF TAG(charinstring)
process module: STRING(()
process module: STRING("~")
process module: STRING(,)
process module: REF TAG(pos)
process module: STRING(,)
process module: REF TAG(path)
process module: STRING())
process module: INT(DO)
process module: REF TAG(path)
process module: STRING(:=)
process module: REF TAG(path)
process module: STRING([)
process module: STRING(:)
process module: REF TAG(pos)
process module: STRING(-)
process module: STRING(1)
process module: STRING(])
process module: STRING(+)
process module: REF TAG(homedir)
process module: STRING(+)
process module: REF TAG(path)
process module: STRING([)
process module: REF TAG(pos)
process module: STRING(+)
process module: STRING(1)
process module: STRING(:)
process module: STRING(])
process module: INT(OD)
process module: STRING(;)
process module: REF MODULE(Args: add the directory to !include paths!)
process module: STRING(()
process module: REF TAG(path)
process module: STRING(+)
process module: STRING(":")
process module: STRING())
process module: INT(PLUSTO)
process module: REF TAG(includepaths)
process module: INT(FI)
process module: STRING(,)
process module: STRING(()
process module: INT(STRING)
process module: REF TAG(dir)
process module: STRING())
process module: STRING(:)
process module: INT(BEGIN)
process module: INT(STRING)
process module: REF TAG(path)
process module: STRING(;)
process module: REF MODULE(Args: check for a tilde and expand it)
process module: INT(WHILE)
process module: INT(INT)
process module: REF TAG(pos)
process module: STRING(;)
process module: REF TAG(charinstring)
process module: STRING(()
process module: STRING("~")
process module: STRING(,)
process module: REF TAG(pos)
process module: STRING(,)
process module: REF TAG(path)
process module: STRING())
process module: INT(DO)
process module: REF TAG(path)
process module: STRING(:=)
process module: REF TAG(path)
process module: STRING([)
process module: STRING(:)
process module: REF TAG(pos)
process module: STRING(-)
process module: STRING(1)
process module: STRING(])
process module: STRING(+)
process module: REF TAG(homedir)
process module: STRING(+)
process module: REF TAG(path)
process module: STRING([)
process module: REF TAG(pos)
process module: STRING(+)
process module: STRING(1)
process module: STRING(:)
process module: STRING(])
process module: INT(OD)
process module: STRING(;)
process module: REF MODULE(Args: add the directory to !include paths!)
process module: STRING(()
process module: REF TAG(path)
process module: STRING(+)
process module: STRING(":")
process module: STRING())
process module: INT(PLUSTO)
process module: REF TAG(includepaths)
process module: INT(END)
process module: INT(OUT)
process module: REF TAG(simpleerror)
process module: STRING(()
process module: STRING("unknown parameter format")
process module: STRING(,)
process module: REF MACRO(errorstatus)
process module: STRING(5)
process module: STRING())
process module: INT(ESAC)
process module: INT(OD)
process module: INT(FI)
process module: INT(ESAC)
process module: INT(ELSE)
process module: REF TAG(simpleerror)
process module: STRING(()
process module: STRING("unknown parameter")
process module: STRING(,)
process module: REF MACRO(errorstatus)
process module: STRING(5)
process module: STRING())
process module: INT(FI)
process module: STRING(,)
process module: STRING(()
process module: INT(STRING)
process module: REF TAG(s)
process module: STRING())
process module: STRING(:)
process module: INT(IF)
process module: REF TAG(s)
process module: STRING(=)
process module: STRING("")
process module: INT(THEN)
process module: REF TAG(simpleerror)
process module: STRING(()
process module: STRING("missing filename")
process module: STRING(,)
process module: REF MACRO(errorstatus)
process module: STRING(5)
process module: STRING())
process module: INT(ELSE)
process module: REF TAG(tangfn)
process module: STRING(:=)
process module: REF TAG(s)
process module: INT(FI)
process module: INT(OUT)
process module: REF TAG(simpleerror)
process module: STRING(()
process module: STRING("unknown parameter format")
process module: STRING(,)
process module: REF MACRO(errorstatus)
process module: STRING(5)
process module: STRING())
process module: INT(ESAC)
process module: INT(OD)
process module: INT(FI)
process module: INT(OUT)
process module: REF TAG(simpleerror)
process module: STRING(()
process module: STRING("unknown parameter format")
process module: STRING(,)
process module: REF MACRO(errorstatus)
process module: STRING(5)
process module: STRING())
process module: INT(ESAC)
process module: STRING(;)
process module: []INT(5.3.1.2)
process module: INT(IF)
process module: INT(IF)
process module: INT(UPB)
process module: REF TAG(tangfn)
process module: STRING(>=)
process module: STRING(5)
process module: INT(THEN)
process module: INT(IF)
process module: REF TAG(tangfn)
process module: STRING([)
process module: INT(UPB)
process module: REF TAG(tangfn)
process module: STRING(-)
process module: INT(UPB)
process module: REF TAG(webext)
process module: STRING(+)
process module: STRING(1)
process module: STRING(:)
process module: STRING(])
process module: STRING(/=)
process module: REF TAG(webext)
process module: INT(THEN)
process module: REF TAG(tangfn)
process module: STRING(+:=)
process module: REF TAG(webext)
process module: INT(FI)
process module: INT(ELSE)
process module: REF TAG(tangfn)
process module: STRING(+:=)
process module: REF TAG(webext)
process module: INT(FI)
process module: STRING(;)
process module: REF TAG(open)
process module: STRING(()
process module: REF TAG(f)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING(,)
process module: REF TAG(tangfn)
process module: STRING(,)
process module: REF TAG(standinchannel)
process module: STRING())
process module: STRING(/=)
process module: STRING(0)
process module: INT(THEN)
process module: REF TAG(simpleerror)
process module: STRING(()
process module: STRING("cannot open web 68 file ")
process module: STRING(+)
process module: REF TAG(tangfn)
process module: STRING(,)
process module: REF MACRO(nowebfilestatus)
process module: STRING(2)
process module: STRING())
process module: INT(FI)
process module: STRING(;)
process module: []INT(5.3.1.3)
process module: REF TAG(arg)
process module: STRING(:=)
process module: STRING(()
process module: REF TAG(tangfn)
process module: REF TAG(UPTO)
process module: STRING(".")
process module: STRING())
process module: STRING(+)
process module: REF TAG(outext)
process module: STRING(;)
process module: INT(IF)
process module: REF TAG(establish)
process module: STRING(()
process module: REF TAG(f)
process module: INT(OF)
process module: REF TAG(output)
process module: STRING(,)
process module: REF TAG(arg)
process module: STRING(,)
process module: REF TAG(standoutchannel)
process module: STRING(,)
process module: STRING(0)
process module: STRING(,)
process module: STRING(0)
process module: STRING(,)
process module: STRING(0)
process module: STRING())
process module: STRING(/=)
process module: STRING(0)
process module: INT(THEN)
process module: REF TAG(simpleerror)
process module: STRING(()
process module: STRING("cannot establish the output file ")
process module: STRING(+)
process module: REF TAG(arg)
process module: STRING(,)
process module: REF MACRO(nooutputfilestatus)
process module: STRING(3)
process module: STRING())
process module: INT(ELSE)
process module: REF TAG(onphysicalfileend)
process module: STRING(()
process module: REF TAG(f)
process module: INT(OF)
process module: REF TAG(output)
process module: STRING(,)
process module: STRING(()
process module: INT(REF)
process module: INT(FILE)
process module: REF TAG(f)
process module: STRING())
process module: INT(BOOL)
process module: STRING(:)
process module: STRING(()
process module: REF MACRO(errprint)
process module: STRING(()
process module: REF MACRO(printnl)
process module: REF TAG(print)
process module: STRING(()
process module: REF TAG(newline)
process module: STRING())
process module: STRING(;)
process module: REF TAG(consolepos)
process module: STRING(:=)
process module: STRING(0)
process module: STRING(;)
process module: REF TAG(printout)
process module: STRING(()
process module: STRING(()
process module: STRING("! Error: ")
process module: STRING(,)
process module: STRING("output medium full")
process module: STRING())
process module: STRING())
process module: STRING(;)
process module: REF TAG(error)
process module: STRING(()
process module: REF MACRO(errors)
process module: STRING(2)
process module: STRING())
process module: STRING())
process module: STRING(;)
process module: REF TAG(exit)
process module: STRING(()
process module: STRING(-)
process module: STRING(1)
process module: STRING())
process module: STRING(;)
process module: INT(TRUE)
process module: STRING())
process module: STRING())
process module: STRING(;)
process module: REF TAG(n)
process module: INT(OF)
process module: REF TAG(output)
process module: STRING(:=)
process module: STRING(1)
process module: STRING(;)
process module: REF TAG(loc)
process module: INT(OF)
process module: REF TAG(output)
process module: STRING(:=)
process module: STRING(0)
process module: INT(FI)
process module: STRING(;)
process module: []INT(5.3.1.5)
process module: INT(IF)
process module: REF TAG(debug)
process module: INT(THEN)
process module: REF TAG(startmonitor)
process module: STRING(()
process module: STRING("tang.dbg")
process module: STRING())
process module: STRING(;)
process module: REF TAG(debugprinttoken)
process module: STRING(:=)
process module: REF TAG(monitorprinttoken)
process module: STRING(;)
process module: REF TAG(debugprinttext)
process module: STRING(:=)
process module: REF TAG(monitorprinttext)
process module: STRING(;)
process module: REF TAG(debugprintstring)
process module: STRING(:=)
process module: REF TAG(monitorprintstring)
process module: INT(FI)
process module: STRING(;)
process module: []INT(6.1.1.2)
process module: REF MODULE(Scan the limbo text)
process module: INT(WHILE)
process module: REF TAG(skiptocs)
process module: STRING(()
process module: STRING("=\ *123")
process module: STRING())
process module: STRING(;)
process module: REF MACRO(backspaceinput)
process module: STRING(()
process module: REF TAG(loc)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING(>=)
process module: INT(LWB)
process module: REF TAG(b)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING(|)
process module: REF TAG(loc)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING(-:=)
process module: STRING(1)
process module: STRING())
process module: STRING(;)
process module: INT(CHAR)
process module: REF TAG(ch)
process module: STRING(=)
process module: REF TAG(nextchar)
process module: STRING(;)
process module: INT(NOT)
process module: REF TAG(charinstring)
process module: STRING(()
process module: REF TAG(ch)
process module: STRING(,)
process module: INT(LOC)
process module: INT(INT)
process module: STRING(,)
process module: STRING(" *123")
process module: STRING())
process module: INT(DO)
process module: INT(IF)
process module: REF TAG(ch)
process module: STRING(=)
process module: STRING("\")
process module: INT(THEN)
process module: REF TAG(putout)
process module: STRING(()
process module: REF TAG(output)
process module: STRING(,)
process module: STRING(0)
process module: STRING())
process module: INT(ELIF)
process module: INT(STRING)
process module: REF TAG(s)
process module: STRING(;)
process module: REF TAG(gathertochar)
process module: STRING(()
process module: REF TAG(s)
process module: STRING(,)
process module: STRING("@")
process module: STRING())
process module: STRING(;)
process module: REF TAG(nextchar)
process module: STRING(/=)
process module: STRING(">")
process module: INT(THEN)
process module: REF MACRO(errprint)
process module: STRING(()
process module: REF MACRO(printnl)
process module: REF TAG(print)
process module: STRING(()
process module: REF TAG(newline)
process module: STRING())
process module: STRING(;)
process module: REF TAG(consolepos)
process module: STRING(:=)
process module: STRING(0)
process module: STRING(;)
process module: REF TAG(printout)
process module: STRING(()
process module: STRING(()
process module: STRING("! Error: ")
process module: STRING(,)
process module: STRING("no control sequences allowed in @=...@>")
process module: STRING())
process module: STRING())
process module: STRING(;)
process module: REF TAG(error)
process module: STRING(()
process module: REF MACRO(errors)
process module: STRING(2)
process module: STRING())
process module: STRING())
process module: INT(ELSE)
process module: REF TAG(putout)
process module: STRING(()
process module: REF TAG(output)
process module: STRING(,)
process module: REF TAG(s)
process module: STRING([)
process module: STRING(:)
process module: INT(UPB)
process module: REF TAG(s)
process module: STRING(-)
process module: STRING(1)
process module: STRING(])
process module: STRING())
process module: INT(FI)
process module: INT(OD)
process module: STRING(;)
process module: REF MACRO(bksp2)
process module: STRING(()
process module: INT(NOT)
process module: REF MACRO(inputended)
process module: REF TAG(ended)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING(|)
process module: INT(TO)
process module: STRING(2)
process module: INT(DO)
process module: REF MACRO(backspaceinput)
process module: STRING(()
process module: REF TAG(loc)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING(>=)
process module: INT(LWB)
process module: REF TAG(b)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING(|)
process module: REF TAG(loc)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING(-:=)
process module: STRING(1)
process module: STRING())
process module: INT(OD)
process module: STRING())
process module: STRING(;)
process module: REF TAG(curmood)
process module: STRING(:=)
process module: REF MACRO(htmlmood)
process module: STRING(1)
process module: STRING(;)
process module: REF MACRO(bksp2)
process module: STRING(()
process module: INT(NOT)
process module: REF MACRO(inputended)
process module: REF TAG(ended)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING(|)
process module: INT(TO)
process module: STRING(2)
process module: INT(DO)
process module: REF MACRO(backspaceinput)
process module: STRING(()
process module: REF TAG(loc)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING(>=)
process module: INT(LWB)
process module: REF TAG(b)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING(|)
process module: REF TAG(loc)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING(-:=)
process module: STRING(1)
process module: STRING())
process module: INT(OD)
process module: STRING())
process module: STRING(;)
process module: INT(DO)
process module: INT(IF)
process module: REF TAG(curmood)
process module: STRING(=)
process module: REF MACRO(htmlmood)
process module: STRING(1)
process module: INT(THEN)
process module: REF TAG(skiptocs)
process module: STRING(()
process module: STRING(" 123<ADFIM")
process module: STRING())
process module: STRING(;)
process module: REF MACRO(bksp2)
process module: STRING(()
process module: INT(NOT)
process module: REF MACRO(inputended)
process module: REF TAG(ended)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING(|)
process module: INT(TO)
process module: STRING(2)
process module: INT(DO)
process module: REF MACRO(backspaceinput)
process module: STRING(()
process module: REF TAG(loc)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING(>=)
process module: INT(LWB)
process module: REF TAG(b)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING(|)
process module: REF TAG(loc)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING(-:=)
process module: STRING(1)
process module: STRING())
process module: INT(OD)
process module: STRING())
process module: INT(FI)
process module: STRING(;)
process module: INT(HEAP)
process module: REF TAG(TOKEN)
process module: REF TAG(curtok)
process module: STRING(:=)
process module: REF TAG(gettok)
process module: STRING(;)
process module: REF MODULE(The big !CASE! handling tokens and moods)
process module: INT(CASE)
process module: REF TAG(curtok)
process module: INT(IN)
process module: STRING(()
process module: INT(INT)
process module: REF TAG(bs)
process module: STRING())
process module: STRING(:)
process module: REF MODULE(Process a predefined bold symbol according to the current mood)
process module: INT(CASE)
process module: REF TAG(curmood)
process module: INT(IN)
process module: INT(SKIP)
process module: STRING(,)
process module: INT(BEGIN)
process module: REF MACRO(errprint)
process module: STRING(()
process module: REF MACRO(printnl)
process module: REF TAG(print)
process module: STRING(()
process module: REF TAG(newline)
process module: STRING())
process module: STRING(;)
process module: REF TAG(consolepos)
process module: STRING(:=)
process module: STRING(0)
process module: STRING(;)
process module: REF TAG(printout)
process module: STRING(()
process module: STRING(()
process module: STRING("! Error: ")
process module: STRING(,)
process module: STRING("a macro identifier cannot be a recognised bold tag")
process module: STRING())
process module: STRING())
process module: STRING(;)
process module: REF TAG(error)
process module: STRING(()
process module: REF MACRO(errors)
process module: STRING(2)
process module: STRING())
process module: STRING())
process module: STRING(;)
process module: REF TAG(curmood)
process module: STRING(:=)
process module: REF MACRO(htmlmood)
process module: STRING(1)
process module: INT(END)
process module: STRING(,)
process module: INT(BEGIN)
process module: REF MACRO(errprint)
process module: STRING(()
process module: REF MACRO(printnl)
process module: REF TAG(print)
process module: STRING(()
process module: REF TAG(newline)
process module: STRING())
process module: STRING(;)
process module: REF TAG(consolepos)
process module: STRING(:=)
process module: STRING(0)
process module: STRING(;)
process module: REF TAG(printout)
process module: STRING(()
process module: STRING(()
process module: STRING("! Error: ")
process module: STRING(,)
process module: STRING("a macro formal parameter must be an identifier")
process module: STRING())
process module: STRING())
process module: STRING(;)
process module: REF TAG(error)
process module: STRING(()
process module: REF MACRO(errors)
process module: STRING(2)
process module: STRING())
process module: STRING())
process module: STRING(;)
process module: REF TAG(curmood)
process module: STRING(:=)
process module: REF MACRO(htmlmood)
process module: STRING(1)
process module: INT(END)
process module: STRING(,)
process module: REF TAG(addmactext)
process module: STRING(()
process module: REF TAG(curmac)
process module: STRING(,)
process module: REF TAG(TEXT)
process module: STRING(()
process module: REF TAG(curtok)
process module: STRING(,)
process module: REF TAG(notext)
process module: STRING())
process module: STRING())
process module: STRING(,)
process module: REF TAG(addmodtext)
process module: STRING(()
process module: REF TAG(curmod)
process module: STRING(,)
process module: REF TAG(TEXT)
process module: STRING(()
process module: REF TAG(curtok)
process module: STRING(,)
process module: REF TAG(notext)
process module: STRING())
process module: STRING())
process module: INT(ESAC)
process module: STRING(,)
process module: STRING(()
process module: REF TAG(CONTROL)
process module: REF TAG(co)
process module: STRING())
process module: STRING(:)
process module: REF MODULE(Process a control sequence and possibly change the mood)
process module: INT(CASE)
process module: REF TAG(UC)
process module: REF TAG(cs)
process module: INT(OF)
process module: REF TAG(co)
process module: REF TAG(MULTICASE)
process module: STRING([)
process module: STRING(])
process module: INT(STRING)
process module: STRING(()
process module: STRING("!#&+,-/;?{|}")
process module: STRING(,)
process module: STRING(".:H^")
process module: STRING(,)
process module: REF TAG(tabch)
process module: STRING(+)
process module: REF TAG(blank)
process module: STRING(,)
process module: STRING("=")
process module: STRING())
process module: INT(IN)
process module: INT(SKIP)
process module: STRING(,)
process module: REF TAG(skiptocs)
process module: STRING(()
process module: STRING(">")
process module: STRING())
process module: STRING(,)
process module: STRING(()
process module: REF TAG(inccursec)
process module: STRING(()
process module: STRING(4)
process module: STRING())
process module: STRING(;)
process module: REF TAG(curmood)
process module: STRING(:=)
process module: REF MACRO(htmlmood)
process module: STRING(1)
process module: STRING())
process module: STRING(,)
process module: INT(IF)
process module: REF TAG(curmood)
process module: STRING(=)
process module: REF MACRO(macrobodymood)
process module: STRING(4)
process module: INT(THEN)
process module: REF TAG(addmactext)
process module: STRING(()
process module: REF TAG(curmac)
process module: STRING(,)
process module: REF TAG(TEXT)
process module: STRING(()
process module: REF TAG(gathertocs)
process module: STRING(()
process module: STRING(">")
process module: STRING())
process module: STRING(,)
process module: REF TAG(notext)
process module: STRING())
process module: STRING())
process module: INT(ELIF)
process module: REF TAG(curmood)
process module: STRING(=)
process module: REF MACRO(modulebodymood)
process module: STRING(5)
process module: INT(THEN)
process module: REF TAG(addmodtext)
process module: STRING(()
process module: REF TAG(curmod)
process module: STRING(,)
process module: REF TAG(TEXT)
process module: STRING(()
process module: REF TAG(gathertocs)
process module: STRING(()
process module: STRING(">")
process module: STRING())
process module: STRING(,)
process module: REF TAG(notext)
process module: STRING())
process module: STRING())
process module: INT(ELSE)
process module: REF MACRO(errprint)
process module: STRING(()
process module: REF MACRO(printnl)
process module: REF TAG(print)
process module: STRING(()
process module: REF TAG(newline)
process module: STRING())
process module: STRING(;)
process module: REF TAG(consolepos)
process module: STRING(:=)
process module: STRING(0)
process module: STRING(;)
process module: REF TAG(printout)
process module: STRING(()
process module: STRING(()
process module: STRING("! Error: ")
process module: STRING(,)
process module: STRING("@= not in macro/module body")
process module: STRING())
process module: STRING())
process module: STRING(;)
process module: REF TAG(error)
process module: STRING(()
process module: REF MACRO(errors)
process module: STRING(2)
process module: STRING())
process module: STRING())
process module: STRING(;)
process module: REF TAG(skiptocs)
process module: STRING(()
process module: STRING(">")
process module: STRING())
process module: INT(FI)
process module: INT(OUSE)
process module: REF TAG(UC)
process module: REF TAG(cs)
process module: INT(OF)
process module: REF TAG(co)
process module: REF TAG(CHOP)
process module: STRING("123<@ADFIM\")
process module: INT(IN)
process module: REF MODULE(Process section or sub-section control sequences)
process module: INT(IF)
process module: REF TAG(next)
process module: INT(OF)
process module: REF TAG(web)
process module: INT(ISNT)
process module: REF TAG(nostream)
process module: INT(THEN)
process module: REF MACRO(errprint)
process module: STRING(()
process module: REF MACRO(printnl)
process module: REF TAG(print)
process module: STRING(()
process module: REF TAG(newline)
process module: STRING())
process module: STRING(;)
process module: REF TAG(consolepos)
process module: STRING(:=)
process module: STRING(0)
process module: STRING(;)
process module: REF TAG(printout)
process module: STRING(()
process module: STRING(()
process module: STRING("! Error: ")
process module: STRING(,)
process module: STRING("level-1 sections are disallowed in included files")
process module: STRING())
process module: STRING())
process module: STRING(;)
process module: REF TAG(error)
process module: STRING(()
process module: REF MACRO(errors)
process module: STRING(2)
process module: STRING())
process module: STRING())
process module: INT(ELSE)
process module: REF TAG(inccursec)
process module: STRING(()
process module: STRING(1)
process module: STRING())
process module: STRING(;)
process module: REF TAG(printcursec)
process module: STRING(;)
process module: REF TAG(curmood)
process module: STRING(:=)
process module: REF MACRO(htmlmood)
process module: STRING(1)
process module: INT(FI)
process module: STRING(,)
process module: STRING(()
process module: REF TAG(inccursec)
process module: STRING(()
process module: STRING(2)
process module: STRING())
process module: STRING(;)
process module: REF TAG(printcursec)
process module: STRING(;)
process module: REF TAG(curmood)
process module: STRING(:=)
process module: REF MACRO(htmlmood)
process module: STRING(1)
process module: STRING())
process module: STRING(,)
process module: STRING(()
process module: REF TAG(inccursec)
process module: STRING(()
process module: STRING(3)
process module: STRING())
process module: STRING(;)
process module: REF TAG(printcursec)
process module: STRING(;)
process module: REF TAG(curmood)
process module: STRING(:=)
process module: REF MACRO(htmlmood)
process module: STRING(1)
process module: STRING())
process module: STRING(,)
process module: REF MODULE(Process a module tag)
process module: INT(CASE)
process module: INT(STRING)
process module: REF TAG(mtag)
process module: STRING(:=)
process module: REF TAG(TRIM)
process module: REF TAG(gathertocs)
process module: STRING(()
process module: STRING(">")
process module: STRING())
process module: STRING(;)
process module: INT(CHAR)
process module: REF TAG(ch)
process module: STRING(=)
process module: REF TAG(nextchar)
process module: STRING(;)
process module: REF TAG(curmood)
process module: INT(IN)
process module: INT(IF)
process module: REF TAG(ch)
process module: STRING(=)
process module: STRING("=")
process module: INT(THEN)
process module: REF MODULE(Switch to !module body mood! and process a module tag)
process module: INT(IF)
process module: INT(UPB)
process module: REF TAG(mtag)
process module: STRING(>)
process module: STRING(3)
process module: INT(THEN)
process module: INT(IF)
process module: REF TAG(mtag)
process module: STRING([)
process module: INT(UPB)
process module: REF TAG(mtag)
process module: STRING(-)
process module: STRING(2)
process module: STRING(:)
process module: STRING(])
process module: STRING(=)
process module: STRING("...")
process module: INT(THEN)
process module: INT(IF)
process module: INT(REF)
process module: REF TAG(MODULE)
process module: REF TAG(rm)
process module: STRING(=)
process module: REF TAG(addmoduletag)
process module: STRING(()
process module: REF TAG(moduleroot)
process module: STRING(,)
process module: REF TAG(mtag)
process module: STRING([)
process module: STRING(:)
process module: INT(UPB)
process module: REF TAG(mtag)
process module: STRING(-)
process module: STRING(3)
process module: STRING(])
process module: STRING(,)
process module: INT(NOT)
process module: REF MACRO(badd)
process module: INT(TRUE)
process module: STRING(,)
process module: REF MACRO(bprefix)
process module: INT(TRUE)
process module: STRING())
process module: STRING(;)
process module: REF TAG(rm)
process module: INT(IS)
process module: REF TAG(nomod)
process module: INT(THEN)
process module: REF MACRO(errprint)
process module: STRING(()
process module: REF MACRO(printnl)
process module: REF TAG(print)
process module: STRING(()
process module: REF TAG(newline)
process module: STRING())
process module: STRING(;)
process module: REF TAG(consolepos)
process module: STRING(:=)
process module: STRING(0)
process module: STRING(;)
process module: REF TAG(printout)
process module: STRING(()
process module: STRING(()
process module: STRING("! Error: ")
process module: STRING(,)
process module: STRING("unknown or duplicate module prefix")
process module: STRING())
process module: STRING())
process module: STRING(;)
process module: REF TAG(error)
process module: STRING(()
process module: REF MACRO(errors)
process module: STRING(2)
process module: STRING())
process module: STRING())
process module: INT(ELSE)
process module: REF TAG(curmood)
process module: STRING(:=)
process module: REF MACRO(modulebodymood)
process module: STRING(5)
process module: STRING(;)
process module: REF TAG(addmodtext)
process module: STRING(()
process module: REF TAG(curmod)
process module: STRING(:=)
process module: REF TAG(rm)
process module: STRING(,)
process module: REF TAG(maketext)
process module: STRING(()
process module: STRING(()
process module: REF TAG(sec)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING())
process module: STRING())
process module: STRING())
process module: INT(FI)
process module: INT(ELSE)
process module: REF MODULE(Add the section number to the current module)
process module: REF TAG(curmood)
process module: STRING(:=)
process module: REF MACRO(modulebodymood)
process module: STRING(5)
process module: STRING(;)
process module: REF TAG(addmodtext)
process module: STRING(()
process module: REF TAG(curmod)
process module: STRING(:=)
process module: REF TAG(addmoduletag)
process module: STRING(()
process module: REF TAG(moduleroot)
process module: STRING(,)
process module: REF TAG(mtag)
process module: STRING(,)
process module: REF MACRO(badd)
process module: INT(TRUE)
process module: STRING(,)
process module: INT(NOT)
process module: REF MACRO(bprefix)
process module: INT(TRUE)
process module: STRING())
process module: STRING(,)
process module: REF TAG(maketext)
process module: STRING(()
process module: STRING(()
process module: REF TAG(sec)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING())
process module: STRING())
process module: STRING())
process module: INT(FI)
process module: INT(ELSE)
process module: REF MODULE(Add the section number to the current module)
process module: REF TAG(curmood)
process module: STRING(:=)
process module: STRING(5)
process module: STRING(;)
process module: REF TAG(addmodtext)
process module: STRING(()
process module: REF TAG(curmod)
process module: STRING(:=)
process module: REF TAG(addmoduletag)
process module: STRING(()
process module: REF TAG(moduleroot)
process module: STRING(,)
process module: REF TAG(mtag)
process module: STRING(,)
process module: INT(TRUE)
process module: STRING(,)
process module: INT(NOT)
process module: INT(TRUE)
process module: STRING())
process module: STRING(,)
process module: REF TAG(maketext)
process module: STRING(()
process module: STRING(()
process module: REF TAG(sec)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING())
process module: STRING())
process module: STRING())
process module: INT(FI)
process module: INT(ELSE)
process module: REF MACRO(backspaceinput)
process module: STRING(()
process module: REF TAG(loc)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING(>=)
process module: INT(LWB)
process module: REF TAG(b)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING(|)
process module: REF TAG(loc)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING(-:=)
process module: STRING(1)
process module: STRING())
process module: INT(FI)
process module: STRING(,)
process module: STRING(()
process module: INT(IF)
process module: REF TAG(ch)
process module: STRING(/=)
process module: STRING("=")
process module: INT(THEN)
process module: REF MACRO(backspaceinput)
process module: STRING(()
process module: REF TAG(loc)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING(>=)
process module: INT(LWB)
process module: REF TAG(b)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING(|)
process module: REF TAG(loc)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING(-:=)
process module: STRING(1)
process module: STRING())
process module: INT(FI)
process module: STRING(;)
process module: REF MACRO(errprint)
process module: STRING(()
process module: REF MACRO(printnl)
process module: REF TAG(print)
process module: STRING(()
process module: REF TAG(newline)
process module: STRING())
process module: STRING(;)
process module: REF TAG(consolepos)
process module: STRING(:=)
process module: STRING(0)
process module: STRING(;)
process module: REF TAG(printout)
process module: STRING(()
process module: STRING(()
process module: STRING("! Error: ")
process module: STRING(,)
process module: STRING("unexpected module tag after a macro identifier")
process module: STRING())
process module: STRING())
process module: STRING(;)
process module: REF TAG(error)
process module: STRING(()
process module: REF MACRO(errors)
process module: STRING(2)
process module: STRING())
process module: STRING())
process module: STRING())
process module: STRING(,)
process module: STRING(()
process module: INT(IF)
process module: REF TAG(ch)
process module: STRING(/=)
process module: STRING("=")
process module: INT(THEN)
process module: REF MACRO(backspaceinput)
process module: STRING(()
process module: REF TAG(loc)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING(>=)
process module: INT(LWB)
process module: REF TAG(b)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING(|)
process module: REF TAG(loc)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING(-:=)
process module: STRING(1)
process module: STRING())
process module: INT(FI)
process module: STRING(;)
process module: REF MACRO(errprint)
process module: STRING(()
process module: REF MACRO(printnl)
process module: REF TAG(print)
process module: STRING(()
process module: REF TAG(newline)
process module: STRING())
process module: STRING(;)
process module: REF TAG(consolepos)
process module: STRING(:=)
process module: STRING(0)
process module: STRING(;)
process module: REF TAG(printout)
process module: STRING(()
process module: STRING(()
process module: STRING("! Error: ")
process module: STRING(,)
process module: STRING("unexpected module tag in a macro header")
process module: STRING())
process module: STRING())
process module: STRING(;)
process module: REF TAG(error)
process module: STRING(()
process module: REF MACRO(errors)
process module: STRING(2)
process module: STRING())
process module: STRING())
process module: STRING())
process module: STRING(,)
process module: INT(IF)
process module: REF TAG(ch)
process module: STRING(=)
process module: STRING("=")
process module: INT(THEN)
process module: REF MODULE(Switch to !module body mood! and process a module tag)
process module: INT(IF)
process module: INT(UPB)
process module: REF TAG(mtag)
process module: STRING(>)
process module: STRING(3)
process module: INT(THEN)
process module: INT(IF)
process module: REF TAG(mtag)
process module: STRING([)
process module: INT(UPB)
process module: REF TAG(mtag)
process module: STRING(-)
process module: STRING(2)
process module: STRING(:)
process module: STRING(])
process module: STRING(=)
process module: STRING("...")
process module: INT(THEN)
process module: INT(IF)
process module: INT(REF)
process module: REF TAG(MODULE)
process module: REF TAG(rm)
process module: STRING(=)
process module: REF TAG(addmoduletag)
process module: STRING(()
process module: REF TAG(moduleroot)
process module: STRING(,)
process module: REF TAG(mtag)
process module: STRING([)
process module: STRING(:)
process module: INT(UPB)
process module: REF TAG(mtag)
process module: STRING(-)
process module: STRING(3)
process module: STRING(])
process module: STRING(,)
process module: INT(NOT)
process module: INT(TRUE)
process module: STRING(,)
process module: INT(TRUE)
process module: STRING())
process module: STRING(;)
process module: REF TAG(rm)
process module: INT(IS)
process module: REF TAG(nomod)
process module: INT(THEN)
process module: STRING(()
process module: REF TAG(print)
process module: STRING(()
process module: REF TAG(newline)
process module: STRING())
process module: STRING(;)
process module: REF TAG(consolepos)
process module: STRING(:=)
process module: STRING(0)
process module: STRING(;)
process module: REF TAG(printout)
process module: STRING(()
process module: STRING(()
process module: STRING("! Error: ")
process module: STRING(,)
process module: STRING("unknown or duplicate module prefix")
process module: STRING())
process module: STRING())
process module: STRING(;)
process module: REF TAG(error)
process module: STRING(()
process module: STRING(2)
process module: STRING())
process module: STRING())
process module: INT(ELSE)
process module: REF TAG(curmood)
process module: STRING(:=)
process module: STRING(5)
process module: STRING(;)
process module: REF TAG(addmodtext)
process module: STRING(()
process module: REF TAG(curmod)
process module: STRING(:=)
process module: REF TAG(rm)
process module: STRING(,)
process module: REF TAG(maketext)
process module: STRING(()
process module: STRING(()
process module: REF TAG(sec)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING())
process module: STRING())
process module: STRING())
process module: INT(FI)
process module: INT(ELSE)
process module: REF MODULE(Add the section number to the current module)
process module: REF TAG(curmood)
process module: STRING(:=)
process module: STRING(5)
process module: STRING(;)
process module: REF TAG(addmodtext)
process module: STRING(()
process module: REF TAG(curmod)
process module: STRING(:=)
process module: REF TAG(addmoduletag)
process module: STRING(()
process module: REF TAG(moduleroot)
process module: STRING(,)
process module: REF TAG(mtag)
process module: STRING(,)
process module: INT(TRUE)
process module: STRING(,)
process module: INT(NOT)
process module: INT(TRUE)
process module: STRING())
process module: STRING(,)
process module: REF TAG(maketext)
process module: STRING(()
process module: STRING(()
process module: REF TAG(sec)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING())
process module: STRING())
process module: STRING())
process module: INT(FI)
process module: INT(ELSE)
process module: REF MODULE(Add the section number to the current module)
process module: REF TAG(curmood)
process module: STRING(:=)
process module: STRING(5)
process module: STRING(;)
process module: REF TAG(addmodtext)
process module: STRING(()
process module: REF TAG(curmod)
process module: STRING(:=)
process module: REF TAG(addmoduletag)
process module: STRING(()
process module: REF TAG(moduleroot)
process module: STRING(,)
process module: REF TAG(mtag)
process module: STRING(,)
process module: INT(TRUE)
process module: STRING(,)
process module: INT(NOT)
process module: INT(TRUE)
process module: STRING())
process module: STRING(,)
process module: REF TAG(maketext)
process module: STRING(()
process module: STRING(()
process module: REF TAG(sec)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING())
process module: STRING())
process module: STRING())
process module: INT(FI)
process module: INT(ELIF)
process module: REF MACRO(backspaceinput)
process module: STRING(()
process module: REF TAG(loc)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING(>=)
process module: INT(LWB)
process module: REF TAG(b)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING(|)
process module: REF TAG(loc)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING(-:=)
process module: STRING(1)
process module: STRING())
process module: STRING(;)
process module: REF MODULE(Process a reference to a module)
process module: INT(UPB)
process module: REF TAG(mtag)
process module: STRING(>)
process module: STRING(3)
process module: INT(THEN)
process module: INT(IF)
process module: REF TAG(mtag)
process module: STRING([)
process module: INT(UPB)
process module: REF TAG(mtag)
process module: STRING(-)
process module: STRING(2)
process module: STRING(:)
process module: STRING(])
process module: STRING(=)
process module: STRING("...")
process module: INT(THEN)
process module: INT(IF)
process module: INT(REF)
process module: REF TAG(MODULE)
process module: REF TAG(rm)
process module: STRING(=)
process module: REF TAG(addmoduletag)
process module: STRING(()
process module: REF TAG(moduleroot)
process module: STRING(,)
process module: REF TAG(mtag)
process module: STRING([)
process module: STRING(:)
process module: INT(UPB)
process module: REF TAG(mtag)
process module: STRING(-)
process module: STRING(3)
process module: STRING(])
process module: STRING(,)
process module: INT(NOT)
process module: REF MACRO(badd)
process module: INT(TRUE)
process module: STRING(,)
process module: REF MACRO(bprefix)
process module: INT(TRUE)
process module: STRING())
process module: STRING(;)
process module: REF TAG(rm)
process module: INT(IS)
process module: REF TAG(nomod)
process module: INT(THEN)
process module: REF MACRO(errprint)
process module: STRING(()
process module: REF MACRO(printnl)
process module: REF TAG(print)
process module: STRING(()
process module: REF TAG(newline)
process module: STRING())
process module: STRING(;)
process module: REF TAG(consolepos)
process module: STRING(:=)
process module: STRING(0)
process module: STRING(;)
process module: REF TAG(printout)
process module: STRING(()
process module: STRING(()
process module: STRING("! Error: ")
process module: STRING(,)
process module: STRING("unknown or duplicate module prefix")
process module: STRING())
process module: STRING())
process module: STRING(;)
process module: REF TAG(error)
process module: STRING(()
process module: REF MACRO(errors)
process module: STRING(2)
process module: STRING())
process module: STRING())
process module: INT(ELSE)
process module: REF TAG(addmodtext)
process module: STRING(()
process module: REF TAG(curmod)
process module: STRING(,)
process module: REF TAG(TEXT)
process module: STRING(()
process module: REF TAG(rm)
process module: STRING(,)
process module: REF TAG(notext)
process module: STRING())
process module: STRING())
process module: INT(FI)
process module: INT(ELIF)
process module: REF MODULE(Check the current mood and add the module tag appropriately)
process module: REF TAG(curmood)
process module: STRING(=)
process module: REF MACRO(modulebodymood)
process module: STRING(5)
process module: INT(THEN)
process module: REF TAG(addmodtext)
process module: STRING(()
process module: REF TAG(curmod)
process module: STRING(,)
process module: REF TAG(TEXT)
process module: STRING(()
process module: REF TAG(addmoduletag)
process module: STRING(()
process module: REF TAG(moduleroot)
process module: STRING(,)
process module: REF TAG(mtag)
process module: STRING(,)
process module: REF MACRO(badd)
process module: INT(TRUE)
process module: STRING(,)
process module: INT(NOT)
process module: REF MACRO(bprefix)
process module: INT(TRUE)
process module: STRING())
process module: STRING(,)
process module: REF TAG(notext)
process module: STRING())
process module: STRING())
process module: INT(ELIF)
process module: REF TAG(curmood)
process module: STRING(=)
process module: REF MACRO(macrobodymood)
process module: STRING(4)
process module: INT(THEN)
process module: REF TAG(addmactext)
process module: STRING(()
process module: REF TAG(curmac)
process module: STRING(,)
process module: REF TAG(TEXT)
process module: STRING(()
process module: REF TAG(addmoduletag)
process module: STRING(()
process module: REF TAG(moduleroot)
process module: STRING(,)
process module: REF TAG(mtag)
process module: STRING(,)
process module: REF MACRO(badd)
process module: INT(TRUE)
process module: STRING(,)
process module: INT(NOT)
process module: REF MACRO(bprefix)
process module: INT(TRUE)
process module: STRING())
process module: STRING(,)
process module: REF TAG(notext)
process module: STRING())
process module: STRING())
process module: INT(ELSE)
process module: REF MACRO(errprint)
process module: STRING(()
process module: REF MACRO(printnl)
process module: REF TAG(print)
process module: STRING(()
process module: REF TAG(newline)
process module: STRING())
process module: STRING(;)
process module: REF TAG(consolepos)
process module: STRING(:=)
process module: STRING(0)
process module: STRING(;)
process module: REF TAG(printout)
process module: STRING(()
process module: STRING(()
process module: STRING("! Error: ")
process module: STRING(,)
process module: STRING("module tag occurs in mood ")
process module: STRING(+)
process module: REF TAG(whole)
process module: STRING(()
process module: REF TAG(curmood)
process module: STRING(,)
process module: STRING(0)
process module: STRING())
process module: STRING())
process module: STRING())
process module: STRING(;)
process module: REF TAG(error)
process module: STRING(()
process module: REF MACRO(errors)
process module: STRING(2)
process module: STRING())
process module: STRING())
process module: INT(FI)
process module: INT(ELIF)
process module: REF MODULE(Check the current mood and add the module tag appropriately)
process module: REF TAG(curmood)
process module: STRING(=)
process module: STRING(5)
process module: INT(THEN)
process module: REF TAG(addmodtext)
process module: STRING(()
process module: REF TAG(curmod)
process module: STRING(,)
process module: REF TAG(TEXT)
process module: STRING(()
process module: REF TAG(addmoduletag)
process module: STRING(()
process module: REF TAG(moduleroot)
process module: STRING(,)
process module: REF TAG(mtag)
process module: STRING(,)
process module: INT(TRUE)
process module: STRING(,)
process module: INT(NOT)
process module: INT(TRUE)
process module: STRING())
process module: STRING(,)
process module: REF TAG(notext)
process module: STRING())
process module: STRING())
process module: INT(ELIF)
process module: REF TAG(curmood)
process module: STRING(=)
process module: STRING(4)
process module: INT(THEN)
process module: REF TAG(addmactext)
process module: STRING(()
process module: REF TAG(curmac)
process module: STRING(,)
process module: REF TAG(TEXT)
process module: STRING(()
process module: REF TAG(addmoduletag)
process module: STRING(()
process module: REF TAG(moduleroot)
process module: STRING(,)
process module: REF TAG(mtag)
process module: STRING(,)
process module: INT(TRUE)
process module: STRING(,)
process module: INT(NOT)
process module: INT(TRUE)
process module: STRING())
process module: STRING(,)
process module: REF TAG(notext)
process module: STRING())
process module: STRING())
process module: INT(ELSE)
process module: STRING(()
process module: REF TAG(print)
process module: STRING(()
process module: REF TAG(newline)
process module: STRING())
process module: STRING(;)
process module: REF TAG(consolepos)
process module: STRING(:=)
process module: STRING(0)
process module: STRING(;)
process module: REF TAG(printout)
process module: STRING(()
process module: STRING(()
process module: STRING("! Error: ")
process module: STRING(,)
process module: STRING("module tag occurs in mood ")
process module: STRING(+)
process module: REF TAG(whole)
process module: STRING(()
process module: REF TAG(curmood)
process module: STRING(,)
process module: STRING(0)
process module: STRING())
process module: STRING())
process module: STRING())
process module: STRING(;)
process module: REF TAG(error)
process module: STRING(()
process module: STRING(2)
process module: STRING())
process module: STRING())
process module: INT(FI)
process module: STRING(,)
process module: INT(IF)
process module: REF TAG(ch)
process module: STRING(=)
process module: STRING("=")
process module: INT(THEN)
process module: REF MACRO(errprint)
process module: STRING(()
process module: REF MACRO(printnl)
process module: REF TAG(print)
process module: STRING(()
process module: REF TAG(newline)
process module: STRING())
process module: STRING(;)
process module: REF TAG(consolepos)
process module: STRING(:=)
process module: STRING(0)
process module: STRING(;)
process module: REF TAG(printout)
process module: STRING(()
process module: STRING(()
process module: STRING("! Error: ")
process module: STRING(,)
process module: STRING("unexpected module tag in a module body")
process module: STRING())
process module: STRING())
process module: STRING(;)
process module: REF TAG(error)
process module: STRING(()
process module: REF MACRO(errors)
process module: STRING(2)
process module: STRING())
process module: STRING())
process module: INT(ELIF)
process module: REF MACRO(backspaceinput)
process module: STRING(()
process module: REF TAG(loc)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING(>=)
process module: INT(LWB)
process module: REF TAG(b)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING(|)
process module: REF TAG(loc)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING(-:=)
process module: STRING(1)
process module: STRING())
process module: STRING(;)
process module: REF MODULE(Process a reference to a module)
process module: INT(UPB)
process module: REF TAG(mtag)
process module: STRING(>)
process module: STRING(3)
process module: INT(THEN)
process module: INT(IF)
process module: REF TAG(mtag)
process module: STRING([)
process module: INT(UPB)
process module: REF TAG(mtag)
process module: STRING(-)
process module: STRING(2)
process module: STRING(:)
process module: STRING(])
process module: STRING(=)
process module: STRING("...")
process module: INT(THEN)
process module: INT(IF)
process module: INT(REF)
process module: REF TAG(MODULE)
process module: REF TAG(rm)
process module: STRING(=)
process module: REF TAG(addmoduletag)
process module: STRING(()
process module: REF TAG(moduleroot)
process module: STRING(,)
process module: REF TAG(mtag)
process module: STRING([)
process module: STRING(:)
process module: INT(UPB)
process module: REF TAG(mtag)
process module: STRING(-)
process module: STRING(3)
process module: STRING(])
process module: STRING(,)
process module: INT(NOT)
process module: INT(TRUE)
process module: STRING(,)
process module: INT(TRUE)
process module: STRING())
process module: STRING(;)
process module: REF TAG(rm)
process module: INT(IS)
process module: REF TAG(nomod)
process module: INT(THEN)
process module: STRING(()
process module: REF TAG(print)
process module: STRING(()
process module: REF TAG(newline)
process module: STRING())
process module: STRING(;)
process module: REF TAG(consolepos)
process module: STRING(:=)
process module: STRING(0)
process module: STRING(;)
process module: REF TAG(printout)
process module: STRING(()
process module: STRING(()
process module: STRING("! Error: ")
process module: STRING(,)
process module: STRING("unknown or duplicate module prefix")
process module: STRING())
process module: STRING())
process module: STRING(;)
process module: REF TAG(error)
process module: STRING(()
process module: STRING(2)
process module: STRING())
process module: STRING())
process module: INT(ELSE)
process module: REF TAG(addmodtext)
process module: STRING(()
process module: REF TAG(curmod)
process module: STRING(,)
process module: REF TAG(TEXT)
process module: STRING(()
process module: REF TAG(rm)
process module: STRING(,)
process module: REF TAG(notext)
process module: STRING())
process module: STRING())
process module: INT(FI)
process module: INT(ELIF)
process module: REF MODULE(Check the current mood and add the module tag appropriately)
process module: REF TAG(curmood)
process module: STRING(=)
process module: STRING(5)
process module: INT(THEN)
process module: REF TAG(addmodtext)
process module: STRING(()
process module: REF TAG(curmod)
process module: STRING(,)
process module: REF TAG(TEXT)
process module: STRING(()
process module: REF TAG(addmoduletag)
process module: STRING(()
process module: REF TAG(moduleroot)
process module: STRING(,)
process module: REF TAG(mtag)
process module: STRING(,)
process module: INT(TRUE)
process module: STRING(,)
process module: INT(NOT)
process module: INT(TRUE)
process module: STRING())
process module: STRING(,)
process module: REF TAG(notext)
process module: STRING())
process module: STRING())
process module: INT(ELIF)
process module: REF TAG(curmood)
process module: STRING(=)
process module: STRING(4)
process module: INT(THEN)
process module: REF TAG(addmactext)
process module: STRING(()
process module: REF TAG(curmac)
process module: STRING(,)
process module: REF TAG(TEXT)
process module: STRING(()
process module: REF TAG(addmoduletag)
process module: STRING(()
process module: REF TAG(moduleroot)
process module: STRING(,)
process module: REF TAG(mtag)
process module: STRING(,)
process module: INT(TRUE)
process module: STRING(,)
process module: INT(NOT)
process module: INT(TRUE)
process module: STRING())
process module: STRING(,)
process module: REF TAG(notext)
process module: STRING())
process module: STRING())
process module: INT(ELSE)
process module: STRING(()
process module: REF TAG(print)
process module: STRING(()
process module: REF TAG(newline)
process module: STRING())
process module: STRING(;)
process module: REF TAG(consolepos)
process module: STRING(:=)
process module: STRING(0)
process module: STRING(;)
process module: REF TAG(printout)
process module: STRING(()
process module: STRING(()
process module: STRING("! Error: ")
process module: STRING(,)
process module: STRING("module tag occurs in mood ")
process module: STRING(+)
process module: REF TAG(whole)
process module: STRING(()
process module: REF TAG(curmood)
process module: STRING(,)
process module: STRING(0)
process module: STRING())
process module: STRING())
process module: STRING())
process module: STRING(;)
process module: REF TAG(error)
process module: STRING(()
process module: STRING(2)
process module: STRING())
process module: STRING())
process module: INT(FI)
process module: INT(ELIF)
process module: REF MODULE(Check the current mood and add the module tag appropriately)
process module: REF TAG(curmood)
process module: STRING(=)
process module: STRING(5)
process module: INT(THEN)
process module: REF TAG(addmodtext)
process module: STRING(()
process module: REF TAG(curmod)
process module: STRING(,)
process module: REF TAG(TEXT)
process module: STRING(()
process module: REF TAG(addmoduletag)
process module: STRING(()
process module: REF TAG(moduleroot)
process module: STRING(,)
process module: REF TAG(mtag)
process module: STRING(,)
process module: INT(TRUE)
process module: STRING(,)
process module: INT(NOT)
process module: INT(TRUE)
process module: STRING())
process module: STRING(,)
process module: REF TAG(notext)
process module: STRING())
process module: STRING())
process module: INT(ELIF)
process module: REF TAG(curmood)
process module: STRING(=)
process module: STRING(4)
process module: INT(THEN)
process module: REF TAG(addmactext)
process module: STRING(()
process module: REF TAG(curmac)
process module: STRING(,)
process module: REF TAG(TEXT)
process module: STRING(()
process module: REF TAG(addmoduletag)
process module: STRING(()
process module: REF TAG(moduleroot)
process module: STRING(,)
process module: REF TAG(mtag)
process module: STRING(,)
process module: INT(TRUE)
process module: STRING(,)
process module: INT(NOT)
process module: INT(TRUE)
process module: STRING())
process module: STRING(,)
process module: REF TAG(notext)
process module: STRING())
process module: STRING())
process module: INT(ELSE)
process module: STRING(()
process module: REF TAG(print)
process module: STRING(()
process module: REF TAG(newline)
process module: STRING())
process module: STRING(;)
process module: REF TAG(consolepos)
process module: STRING(:=)
process module: STRING(0)
process module: STRING(;)
process module: REF TAG(printout)
process module: STRING(()
process module: STRING(()
process module: STRING("! Error: ")
process module: STRING(,)
process module: STRING("module tag occurs in mood ")
process module: STRING(+)
process module: REF TAG(whole)
process module: STRING(()
process module: REF TAG(curmood)
process module: STRING(,)
process module: STRING(0)
process module: STRING())
process module: STRING())
process module: STRING())
process module: STRING(;)
process module: REF TAG(error)
process module: STRING(()
process module: STRING(2)
process module: STRING())
process module: STRING())
process module: INT(FI)
process module: INT(ESAC)
process module: STRING(,)
process module: REF MODULE(Add the symbol as a string)
process module: INT(IF)
process module: REF TAG(curmood)
process module: STRING(=)
process module: REF MACRO(macrobodymood)
process module: STRING(4)
process module: INT(THEN)
process module: REF TAG(addmactext)
process module: STRING(()
process module: REF TAG(curmac)
process module: STRING(,)
process module: REF TAG(TEXT)
process module: STRING(()
process module: INT(STRING)
process module: STRING(()
process module: STRING("@")
process module: STRING())
process module: STRING(,)
process module: REF TAG(notext)
process module: STRING())
process module: STRING())
process module: INT(ELIF)
process module: REF TAG(curmood)
process module: STRING(=)
process module: REF MACRO(modulebodymood)
process module: STRING(5)
process module: INT(THEN)
process module: REF TAG(addmodtext)
process module: STRING(()
process module: REF TAG(curmod)
process module: STRING(,)
process module: REF TAG(TEXT)
process module: STRING(()
process module: INT(STRING)
process module: STRING(()
process module: STRING("@")
process module: STRING())
process module: STRING(,)
process module: REF TAG(notext)
process module: STRING())
process module: STRING())
process module: INT(FI)
process module: STRING(,)
process module: INT(BEGIN)
process module: REF TAG(curmod)
process module: STRING(:=)
process module: REF TAG(unnamedmodule)
process module: STRING(;)
process module: REF TAG(curmood)
process module: STRING(:=)
process module: REF MACRO(modulebodymood)
process module: STRING(5)
process module: STRING(;)
process module: REF TAG(addmodtext)
process module: STRING(()
process module: REF TAG(curmod)
process module: STRING(,)
process module: REF TAG(maketext)
process module: STRING(()
process module: STRING(()
process module: REF TAG(sec)
process module: INT(OF)
process module: REF TAG(web)
process module: STRING())
process module: STRING())
process module: STRING())
process module: INT(END)
process module: STRING(,)
process module: INT(BEGIN)
process module: REF TAG(curmac)
process module: STRING(:=)
process module: REF TAG(nomac)
process module: STRING(;)
process module: REF TAG(oneoffmacro)
process module: STRING(:=)
process module: INT(TRUE)
process module: STRING(;)
process module: REF TAG(curmood)
process module: STRING(:=)
process module: REF MACRO(macroidmood)
process module: STRING(2)
process module: INT(END)
process module: STRING(,)
process module: INT(IF)
process module: REF TAG(curmood)
process module: STRING(/=)
process module: REF MACRO(htmlmood)
process module: STRING(1)
process module: STRING(&)
process module: REF TAG(curmood)
process module: STRING(/=)
process module: REF MACRO(macrobodymood)
process module: STRING(4)
process module: INT(THEN)
process module: REF MACRO(errprint)
process module: STRING(()
process module: REF MACRO(printnl)
process module: REF TAG(print)
process module: STRING(()
process module: REF TAG(newline)
process module: STRING())
process module: STRING(;)
process module: REF TAG(consolepos)
process module: STRING(:=)
process module: STRING(0)
process module: STRING(;)
process module: REF TAG(printout)
process module: STRING(()
process module: STRING(()
process module: STRING("! Error: ")
process module: STRING(,)
process module: STRING("unexpected control sequence")
process module: STRING())
process module: STRING())
process module: STRING(;)
process module: REF TAG(error)
process module: STRING(()
process module: REF MACRO(errors)
process module: STRING(2)
process module: STRING())
process module: STRING())
process module: STRING(;)
process module: REF TAG(curmood)
process module: STRING(:=)
process module: REF MACRO(htmlmood)
process module: STRING(1)
process module: INT(ELSE)
process module: REF TAG(curmac)
process module: STRING(:=)
process module: REF TAG(nomac)
process module: STRING(;)
process module: REF TAG(curmood)
process module: STRING(:=)
process module: REF MACRO(htmlmood)
process module: STRING(1)
process module: INT(FI)
process module: STRING(,)
process module: REF MODULE(Process included filename)
process module: INT(IF)
process module: INT(STRING)
process module: REF TAG(incfn)
process module: STRING(=)
process module: REF TAG(gathertocs)
process module: STRING(()
process module: STRING(">")
process module: STRING())
process module: STRING(;)
process module: REF TAG(scanincludedtree)
process module: STRING(()
process module: REF TAG(inctree)
process module: STRING(,)
process module: REF TAG(incfn)
process module: STRING())
process module: INT(THEN)
process module: REF MACRO(warnprint)
process module: STRING(()
process module: REF MACRO(printnl)
process module: REF TAG(print)
process module: STRING(()
process module: REF TAG(newline)
process module: STRING())
process module: STRING(;)
process module: REF TAG(consolepos)
process module: STRING(:=)
process module: STRING(0)
process module: STRING(;)
process module: REF TAG(printout)
process module: STRING(()
process module: STRING("! Warning: included file ")
process module: STRING(+)
process module: REF TAG(incfn)
process module: STRING(+)
process module: STRING(" already included")
process module: STRING())
process module: STRING(;)
process module: REF TAG(error)
process module: STRING(()
process module: REF MACRO(warnings)
process module: STRING(1)
process module: STRING())
process module: STRING())
process module: INT(ELIF)
process module: INT(NOT)
process module: REF TAG(addincludefile)
process module: STRING(()
process module: REF TAG(web)
process module: STRING(,)
process module: REF TAG(incfn)
process module: STRING())
process module: INT(THEN)
process module: REF MACRO(errprint)
process module: STRING(()
process module: REF MACRO(printnl)
process module: REF TAG(print)
process module: STRING(()
process module: REF TAG(newline)
process module: STRING())
process module: STRING(;)
process module: REF TAG(consolepos)
process module: STRING(:=)
process module: STRING(0)
process module: STRING(;)
process module: REF TAG(printout)
process module: STRING(()
process module: STRING(()
process module: STRING("! Error: ")
process module: STRING(,)
process module: STRING("cannot find the included file ")
process module: STRING(+)
process module: REF TAG(incfn)
process module: STRING())
process module: STRING())
process module: STRING(;)
process module: REF TAG(error)
process module: STRING(()
process module: REF MACRO(errors)
process module: STRING(2)
process module: STRING())
process module: STRING())
process module: INT(FI)
process module: STRING(,)
process module: INT(BEGIN)
process module: REF TAG(curmac)
process module: STRING(:=)
process module: REF TAG(nomac)
process module: STRING(;)
process module: REF TAG(oneoffmacro)
process module: STRING(:=)
process module: INT(FALSE)
process module: STRING(;)
process module: REF TAG(curmood)
process module: STRING(:=)
process module: REF MACRO(macroidmood)
process module: STRING(2)
process module: INT(END)
process module: STRING(,)
process module: INT(IF)
process module: REF TAG(curmood)
process module: STRING(=)
process module: REF MACRO(macrobodymood)
process module: STRING(4)
process module: INT(THEN)
process module: REF TAG(addmactext)
process module: STRING(()
process module: REF TAG(curmac)
process module: STRING(,)
process module: REF TAG(TEXT)
process module: STRING(()
process module: REF MACRO(forcenewline)
process module: STRING(0)
process module: STRING(,)
process module: REF TAG(notext)
process module: STRING())
process module: STRING())
process module: INT(ELIF)
process module: REF TAG(curmood)
process module: STRING(=)
process module: REF MACRO(modulebodymood)
process module: STRING(5)
process module: INT(THEN)
process module: REF TAG(addmodtext)
process module: STRING(()
process module: REF TAG(curmod)
process module: STRING(,)
process module: REF TAG(TEXT)
process module: STRING(()
process module: REF MACRO(forcenewline)
process module: STRING(0)
process module: STRING(,)
process module: REF TAG(notext)
process module: STRING())
process module: STRING())
process module: INT(FI)
process module: INT(OUT)
process module: REF MACRO(errprint)
process module: STRING(()
process module: REF MACRO(printnl)
process module: REF TAG(print)
process module: STRING(()
process module: REF TAG(newline)
process module: STRING())
process module: STRING(;)
process module: REF TAG(consolepos)
process module: STRING(:=)
process module: STRING(0)
process module: STRING(;)
process module: REF TAG(printout)
process module: STRING(()
process module: STRING(()
process module: STRING("! Error: ")
process module: STRING(,)
process module: STRING("unknown control sequence")
process module: STRING())
process module: STRING())
process module: STRING(;)
process module: REF TAG(error)
process module: STRING(()
process module: REF MACRO(errors)
process module: STRING(2)
process module: STRING())
process module: STRING())
process module: STRING(;)
process module: REF TAG(curmood)
process module: STRING(:=)
process module: REF MACRO(htmlmood)
process module: STRING(1)
process module: INT(ESAC)
process module: STRING(,)
process module: STRING(()
process module: INT(STRING)
process module: REF TAG(s)
process module: STRING())
process module: STRING(:)
process module: REF MODULE(Process a miscellaneous string according to the current mood)
process module: INT(CASE)
process module: REF TAG(curmood)
process module: INT(IN)
process module: INT(SKIP)
process module: STRING(,)
process module: INT(IF)
process module: REF TAG(s)
process module: STRING(=)
process module: STRING("(")
process module: INT(THEN)
process module: REF MODULE(Macro id delimiter for a macro with parameters)
process module: INT(IF)
process module: INT(IF)
process module: REF TAG(curmac)
process module: INT(IS)
process module: REF TAG(nomac)
process module: INT(THEN)
process module: INT(TRUE)
process module: INT(ELIF)
process module: REF TAG(param)
process module: INT(OF)
process module: REF TAG(curmac)
process module: INT(ISNT)
process module: REF TAG(nowparam)
process module: INT(THEN)
process module: INT(TRUE)
process module: INT(ELSE)
process module: REF TAG(curmood)
process module: STRING(:=)
process module: REF MACRO(macroheadermood)
process module: STRING(3)
process module: STRING(;)
process module: INT(FALSE)
process module: INT(FI)
process module: INT(THEN)
process module: REF MACRO(errprint)
process module: STRING(()
process module: REF MACRO(printnl)
process module: REF TAG(print)
process module: STRING(()
process module: REF TAG(newline)
process module: STRING())
process module: STRING(;)
process module: REF TAG(consolepos)
process module: STRING(:=)
process module: STRING(0)
process module: STRING(;)
process module: REF TAG(printout)
process module: STRING(()
process module: STRING(()
process module: STRING("! Error: ")
process module: STRING(,)
process module: STRING("macro id. delimiter unexpected")
process module: STRING())
process module: STRING())
process module: STRING(;)
process module: REF TAG(error)
process module: STRING(()
process module: REF MACRO(errors)
process module: STRING(2)
process module: STRING())
process module: STRING())
process module: STRING(;)
process module: REF TAG(curmood)
process module: STRING(:=)
process module: REF MACRO(htmlmood)
process module: STRING(1)
process module: INT(FI)
process module: INT(ELIF)
process module: REF TAG(s)
process module: STRING(=)
process module: STRING("=")
process module: INT(THEN)
process module: REF MODULE(Macro id delimiter for a parameterless macro)
process module: INT(IF)
process module: REF TAG(curmac)
process module: INT(IS)
process module: REF TAG(nomac)
process module: INT(THEN)
process module: REF MACRO(errprint)
process module: STRING(()
process module: REF MACRO(printnl)
process module: REF TAG(print)
process module: STRING(()
process module: REF TAG(newline)
process module: STRING())
process module: STRING(;)
process module: REF TAG(consolepos)
process module: STRING(:=)
process module: STRING(0)
process module: STRING(;)
process module: REF TAG(printout)
process module: STRING(()
process module: STRING(()
process module: STRING("! Error: ")
process module: STRING(,)
process module: STRING("missing macro id")
process module: STRING())
process module: STRING())
process module: STRING(;)
process module: REF TAG(error)
process module: STRING(()
process module: REF MACRO(errors)
process module: STRING(2)
process module: STRING())
process module: STRING())
process module: STRING(;)
process module: REF TAG(curmood)
process module: STRING(:=)
process module: REF MACRO(htmlmood)
process module: STRING(1)
process module: INT(ELSE)
process module: REF TAG(curmood)
process module: STRING(:=)
process module: REF MACRO(macrobodymood)
process module: STRING(4)
process module: INT(FI)
process module: INT(ELSE)
process module: REF MACRO(errprint)
process module: STRING(()
process module: REF MACRO(printnl)
process module: REF TAG(print)
process module: STRING(()
process module: REF TAG(newline)
process module: STRING())
process module: STRING(;)
process module: REF TAG(consolepos)
process module: STRING(:=)
process module: STRING(0)
process module: STRING(;)
process module: REF TAG(printout)
process module: STRING(()
process module: STRING(()
process module: STRING("! Error: ")
process module: STRING(,)
process module: STRING("unexpected string in macro id")
process module: STRING())
process module: STRING())
process module: STRING(;)
process module: REF TAG(error)
process module: STRING(()
process module: REF MACRO(errors)
process module: STRING(2)
process module: STRING())
process module: STRING())
process module: STRING(;)
process module: REF TAG(curmood)
process module: STRING(:=)
process module: REF MACRO(htmlmood)
process module: STRING(1)
process module: INT(FI)
process module: STRING(,)
process module: INT(IF)
process module: REF TAG(s)
process module: STRING(=)
process module: STRING(",")
process module: INT(OR)
process module: REF TAG(s)
process module: STRING(=)
process module: STRING(")")
process module: INT(THEN)
process module: INT(SKIP)
process module: INT(ELIF)
process module: REF TAG(s)
process module: STRING(=)
process module: STRING("=")
process module: INT(THEN)
process module: REF TAG(curmood)
process module: STRING(:=)
process module: REF MACRO(macrobodymood)
process module: STRING(4)
process module: INT(ELSE)
process module: REF MACRO(errprint)
process module: STRING(()
process module: REF MACRO(printnl)
process module: REF TAG(print)
process module: STRING(()
process module: REF TAG(newline)
process module: STRING())
process module: STRING(;)
process module: REF TAG(consolepos)
process module: STRING(:=)
process module: STRING(0)
process module: STRING(;)
process module: REF TAG(printout)
process module: STRING(()
process module: STRING(()
process module: STRING("! Error: ")
process module: STRING(,)
process module: STRING("unexpected string in macro header")
process module: STRING())
process module: STRING())
process module: STRING(;)
process module: REF TAG(error)
process module: STRING(()
process module: REF MACRO(errors)
process module: STRING(2)
process module: STRING())
process module: STRING())
process module: STRING(;)
process module: REF TAG(curmood)
process module: STRING(:=)
process module: REF MACRO(htmlmood)
process module: STRING(1)
process module: INT(FI)
process module: STRING(,)
process module: REF TAG(addmactext)
process module: STRING(()
process module: REF TAG(curmac)
process module: STRING(,)
process module: REF TAG(TEXT)
process module: STRING(()
process module: REF TAG(curtok)
process module: STRING(,)
process module: REF TAG(notext)
process module: STRING())
process module: STRING())
process module: STRING(,)
process module: REF TAG(addmodtext)
process module: STRING(()
process module: REF TAG(curmod)
process module: STRING(,)
process module: REF TAG(TEXT)
process module: STRING(()
process module: REF TAG(curtok)
process module: STRING(,)
process module: REF TAG(notext)
process module: STRING())
process module: STRING())
process module: INT(ESAC)
process module: STRING(,)
process module: STRING(()
process module: INT(REF)
process module: REF TAG(TAG)
process module: REF TAG(tag)
process module: STRING())
process module: STRING(:)
process module: REF MODULE(Process a tag according to the current mood)
process module: INT(CASE)
process module: REF TAG(curmood)
process module: INT(IN)
process module: INT(SKIP)
process module: STRING(,)
process module: INT(IF)
process module: REF TAG(curmac)
process module: INT(IS)
process module: REF TAG(nomac)
process module: INT(THEN)
process module: INT(IF)
process module: STRING(()
process module: REF TAG(curmac)
process module: STRING(:=)
process module: REF TAG(addmacroid)
process module: STRING(()
process module: REF TAG(macroroot)
process module: STRING(,)
process module: REF TAG(addtag)
process module: STRING(()
process module: REF TAG(tagroot)
process module: STRING(,)
process module: REF TAG(tag)
process module: STRING())
process module: STRING(,)
process module: REF TAG(oneoffmacro)
process module: STRING())
process module: STRING())
process module: INT(IS)
process module: REF TAG(nomac)
process module: INT(THEN)
process module: REF MACRO(errprint)
process module: STRING(()
process module: REF MACRO(printnl)
process module: REF TAG(print)
process module: STRING(()
process module: REF TAG(newline)
process module: STRING())
process module: STRING(;)
process module: REF TAG(consolepos)
process module: STRING(:=)
process module: STRING(0)
process module: STRING(;)
process module: REF TAG(printout)
process module: STRING(()
process module: STRING(()
process module: STRING("! Error: ")
process module: STRING(,)
process module: STRING("macro id. already defined")
process module: STRING())
process module: STRING())
process module: STRING(;)
process module: REF TAG(error)
process module: STRING(()
process module: REF MACRO(errors)
process module: STRING(2)
process module: STRING())
process module: STRING())
process module: STRING(;)
process module: REF TAG(curmood)
process module: STRING(:=)
process module: REF MACRO(htmlmood)
process module: STRING(1)
process module: INT(FI)
process module: INT(ELSE)
process module: REF MACRO(errprint)
process module: STRING(()
process module: REF MACRO(printnl)
process module: REF TAG(print)
process module: STRING(()
process module: REF TAG(newline)
process module: STRING())
process module: STRING(;)
process module: REF TAG(consolepos)
process module: STRING(:=)
process module: STRING(0)
process module: STRING(;)
process module: REF TAG(printout)
process module: STRING(()
process module: STRING(()
process module: STRING("! Error: ")
process module: STRING(,)
process module: STRING("macro id. already read")
process module: STRING())
process module: STRING())
process module: STRING(;)
process module: REF TAG(error)
process module: STRING(()
process module: REF MACRO(errors)
process module: STRING(2)
process module: STRING())
process module: STRING())
process module: STRING(;)
process module: REF TAG(curmood)
process module: STRING(:=)
process module: REF MACRO(htmlmood)
process module: STRING(1)
process module: INT(FI)
process module: STRING(,)
process module: INT(IF)
process module: INT(NOT)
process module: REF TAG(addmacropar)
process module: STRING(()
process module: REF TAG(curmac)
process module: STRING(,)
process module: REF TAG(addtag)
process module: STRING(()
process module: REF TAG(tagroot)
process module: STRING(,)
process module: REF TAG(tag)
process module: STRING())
process module: STRING())
process module: INT(THEN)
process module: REF MACRO(errprint)
process module: STRING(()
process module: REF MACRO(printnl)
process module: REF TAG(print)
process module: STRING(()
process module: REF TAG(newline)
process module: STRING())
process module: STRING(;)
process module: REF TAG(consolepos)
process module: STRING(:=)
process module: STRING(0)
process module: STRING(;)
process module: REF TAG(printout)
process module: STRING(()
process module: STRING(()
process module: STRING("! Error: ")
process module: STRING(,)
process module: STRING("duplicate macro formal parameter")
process module: STRING())
process module: STRING())
process module: STRING(;)
process module: REF TAG(error)
process module: STRING(()
process module: REF MACRO(errors)
process module: STRING(2)
process module: STRING())
process module: STRING())
process module: STRING(;)
process module: REF TAG(curmood)
process module: STRING(:=)
process module: REF MACRO(htmlmood)
process module: STRING(1)
process module: INT(FI)
process module: STRING(,)
process module: INT(BEGIN)
process module: INT(REF)
process module: REF TAG(TAG)
process module: REF TAG(storedtag)
process module: STRING(=)
process module: REF TAG(addtag)
process module: STRING(()
process module: REF TAG(tagroot)
process module: STRING(,)
process module: REF TAG(tag)
process module: STRING())
process module: STRING(;)
process module: INT(REF)
process module: REF TAG(MACRO)
process module: REF TAG(rm)
process module: STRING(=)
process module: REF TAG(searchmacro)
process module: STRING(()
process module: REF TAG(macroroot)
process module: STRING(,)
process module: REF TAG(storedtag)
process module: STRING())
process module: STRING(;)
process module: REF TAG(addmactext)
process module: STRING(()
process module: REF TAG(curmac)
process module: STRING(,)
process module: REF TAG(TEXT)
process module: STRING(()
process module: STRING(()
process module: REF TAG(rm)
process module: STRING(:=:)
process module: REF TAG(nomac)
process module: STRING(|)
process module: REF TAG(storedtag)
process module: STRING(|)
process module: REF TAG(rm)
process module: STRING())
process module: STRING(,)
process module: REF TAG(notext)
process module: STRING())
process module: STRING())
process module: INT(END)
process module: STRING(,)
process module: INT(BEGIN)
process module: INT(REF)
process module: REF TAG(TAG)
process module: REF TAG(storedtag)
process module: STRING(=)
process module: REF TAG(addtag)
process module: STRING(()
process module: REF TAG(tagroot)
process module: STRING(,)
process module: REF TAG(tag)
process module: STRING())
process module: STRING(;)
process module: INT(REF)
process module: REF TAG(MACRO)
process module: REF TAG(rm)
process module: STRING(=)
process module: REF TAG(searchmacro)
process module: STRING(()
process module: REF TAG(macroroot)
process module: STRING(,)
process module: REF TAG(storedtag)
process module: STRING())
process module: STRING(;)
process module: REF TAG(addmodtext)
process module: STRING(()
process module: REF TAG(curmod)
process module: STRING(,)
process module: REF TAG(TEXT)
process module: STRING(()
process module: STRING(()
process module: REF TAG(rm)
process module: STRING(:=:)
process module: REF TAG(nomac)
process module: STRING(|)
process module: REF TAG(storedtag)
process module: STRING(|)
process module: REF TAG(rm)
process module: STRING())
process module: STRING(,)
process module: REF TAG(notext)
process module: STRING())
process module: STRING())
process module: INT(END)
process module: INT(ESAC)
process module: INT(OUT)
process module: REF TAG(addmodtext)
process module: STRING(()
process module: REF TAG(unnamedmodule)
process module: STRING(,)
process module: REF TAG(TEXT)
process module: STRING(()
process module: REF TAG(curtok)
process module: STRING(,)
process module: REF TAG(notext)
process module: STRING())
process module: STRING())
process module: STRING(;)
process module: REF MODULE(Phase II processing)
process module: INT(IF)
process module: REF TAG(history)
process module: STRING(>)
process module: REF MACRO(warnings)
process module: STRING(1)
process module: INT(THEN)
process module: REF TAG(print)
process module: STRING(()
process module: STRING(()
process module: REF TAG(newline)
process module: STRING(,)
process module: STRING("! Did we find something wrong?")
process module: STRING(,)
process module: REF TAG(newline)
process module: STRING())
process module: STRING())
process module: STRING(;)
process module: REF MODULE(Close the output file)
process module: INT(IF)
process module: REF TAG(upb)
process module: INT(OF)
process module: REF TAG(output)
process module: STRING(>)
process module: STRING(0)
process module: INT(THEN)
process module: REF TAG(put)
process module: STRING(()
process module: REF TAG(f)
process module: INT(OF)
process module: REF TAG(output)
process module: STRING(,)
process module: STRING(()
process module: STRING(()
process module: REF TAG(b)
process module: INT(OF)
process module: REF TAG(output)
process module: STRING())
process module: STRING([)
process module: STRING(:)
process module: REF TAG(upb)
process module: INT(OF)
process module: REF TAG(output)
process module: STRING(])
process module: STRING(,)
process module: REF TAG(newline)
process module: STRING())
process module: STRING())
process module: INT(FI)
process module: STRING(;)
process module: REF TAG(close)
process module: STRING(()
process module: REF TAG(f)
process module: INT(OF)
process module: REF TAG(output)
process module: STRING())
process module: STRING(;)
process module: REF TAG(exit)
process module: STRING(()
process module: REF MACRO(errorstatus)
process module: STRING(5)
process module: STRING())
process module: INT(ELSE)
process module: REF TAG(print)
process module: STRING(()
process module: REF TAG(newline)
process module: STRING())
process module: INT(FI)
process module: STRING(;)
process module: REF TAG(phaseone)
process module: STRING(:=)
process module: INT(FALSE)
process module: STRING(;)
process module: REF MODULE(tangle the parsed text)
process module: REF TAG(processmodule)
process module: STRING(()
process module: REF TAG(output)
process module: STRING(,)
process module: REF TAG(unnamedmodule)
process module: STRING(,)
process module: INT(HEAP)
process module: STRING([)
process module: STRING(4)
process module: STRING(])
process module: INT(INT)
process module: STRING())
process module: STRING(;)
process module: REF MODULE(Close the output file)
process module: INT(IF)
process module: REF TAG(upb)
process module: INT(OF)
process module: REF TAG(output)
process module: STRING(>)
process module: STRING(0)
process module: INT(THEN)
process module: REF TAG(put)
process module: STRING(()
process module: REF TAG(f)
process module: INT(OF)
process module: REF TAG(output)
process module: STRING(,)
process module: STRING(()
process module: STRING(()
process module: REF TAG(b)
process module: INT(OF)
process module: REF TAG(output)
process module: STRING())
process module: STRING([)
process module: STRING(:)
process module: REF TAG(upb)
process module: INT(OF)
process module: REF TAG(output)
process module: STRING(])
process module: STRING(,)
process module: REF TAG(newline)
process module: STRING())
process module: STRING())
process module: INT(FI)
process module: STRING(;)
process module: REF TAG(close)
process module: STRING(()
process module: REF TAG(f)
process module: INT(OF)
process module: REF TAG(output)
process module: STRING())
process module: STRING(;)
process module: REF TAG(exit)
process module: STRING(()
process module: STRING(0)
process module: STRING())
process module: INT(ESAC)
process module: INT(OD)
process module: INT(END)
process module: REF MODULE(Compiler postlude)
process module: INT(FINISH)
process module: VOID
